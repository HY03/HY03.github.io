<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator><link href="https://bluesplatter.com/feed.xml" rel="self" type="application/atom+xml" /><link href="https://bluesplatter.com/" rel="alternate" type="text/html" /><updated>2021-12-20T17:56:29+09:00</updated><id>https://bluesplatter.com/feed.xml</id><title type="html">Bluesplatter</title><subtitle>전문적이지 않은 정보들, 감상, 즉흥적인 내용들</subtitle><author><name>HY03</name><email>hyunik03@gmail.com</email></author><entry><title type="html">정보보안 - 위험관리</title><link href="https://bluesplatter.com/is_certification/IS-Management-Risk_Management/" rel="alternate" type="text/html" title="정보보안 - 위험관리" /><published>2021-12-10T09:00:00+09:00</published><updated>2021-12-10T09:00:00+09:00</updated><id>https://bluesplatter.com/is_certification/IS-Management-Risk_Management</id><content type="html" xml:base="https://bluesplatter.com/is_certification/IS-Management-Risk_Management/">&lt;h1 id=&quot;위험-관리risk-management&quot;&gt;위험 관리(Risk Management)&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;위험 관리는 프로젝트 추진 과정에서 예상되는 각종 돌발 상황(위험) 을 미리 예상하고 이에 대한 적절한 대책을 수립하는 일련의 활동이다.
    &lt;ul&gt;
      &lt;li&gt;위험은 불확실성과 손실을 내재하고 있는데, 위험 관리는 이러한 위험의 불확실성을 감소시키고 손실에 대비하는 작업이다.&lt;/li&gt;
      &lt;li&gt;위험을 식별한 후 발생 확률을 산정하고, 그 영향을 추산하여 해당 위험에 대비하는 비상 계획을 마련한다.
        &lt;ul&gt;
          &lt;li&gt;조직의 자산에 대한 식별을 통해 자산가치를 판별하고, 가치에 따라 보안대책을 수립&lt;/li&gt;
          &lt;li&gt;조직의 자산에 대한 위험감수수준
            &lt;ul&gt;
              &lt;li&gt;예:자산 가치 3억에 5억의 비용을 들여 보호하는 것은 넌센스다.&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;주기적, 반복적으로 위험 관리를 하여야 함.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;세부과정
    &lt;ul&gt;
      &lt;li&gt;전략/계획 수립&lt;/li&gt;
      &lt;li&gt;위험 요소 분석&lt;/li&gt;
      &lt;li&gt;위험평가 : 위험에 대한 규모를 규정&lt;/li&gt;
      &lt;li&gt;정보보호대책 선정 : 위험완화&lt;/li&gt;
      &lt;li&gt;대응책 구현
        &lt;ul&gt;
          &lt;li&gt;위험관리에 위험분석이 80% 비율, 위험관리, 위험분석, 위험평가를 비슷한 의미로 사용하기도 함&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;위험 관리는 프로젝트 추진 과정에서 예상되는 각종 돌발 상황(위험) 을 미리 예상하고 이에 대한 적절한 대책(위험 완화)을 수립하는 일련의 활동
    &lt;ul&gt;
      &lt;li&gt;위험은 불확실성과 손실을 내재하고 있는데, 위험 관리는 이러한 위험의 불확실성을 감소시키고 손실에 대비하는 작업&lt;/li&gt;
      &lt;li&gt;위험을 식별(위험 요소 분석)한 후 발생 확률을 산정(위험평가)하고, 그 영향을 추산(위험평가-위험의 규모를 결정)하여 해당 위험에 대비하는 비상 계획을 마련함
        &lt;ul&gt;
          &lt;li&gt;위험분석 없이 보호대책을 수립하는 경우
            &lt;ul&gt;
              &lt;li&gt;취약점이 너무 많아짐&lt;/li&gt;
              &lt;li&gt;위협에 대한 우선순위가 설정되지 않음 : 과도한 투자가 이루어질 수 있음&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;위험-분석&quot;&gt;위험 분석&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;위험 관리의 핵심 (80% 이상)&lt;/li&gt;
  &lt;li&gt;정보시스템과 조직의 위험을 측정하고 허용여부의 판단근거를 마련하는 과정&lt;/li&gt;
  &lt;li&gt;위험 분석 방법 : &lt;strong&gt;기준 접근법(베이스라인 접근법), 세부위험분석(상세위험분석), 복합접근법, 비정형접근법&lt;/strong&gt; (ISO/IEC 13335-1)&lt;/li&gt;
  &lt;li&gt;위험 (Risk) : 원하지 않는 사건이 발생하여 손실이나 부정적 영향을 미칠 가능성
    &lt;ul&gt;
      &lt;li&gt;위험 : 발생가능성 x 손실&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;위험의 구성요소
    &lt;ul&gt;
      &lt;li&gt;자산 (Assets) : 조직이 보호해야 할 대상 (무형자산도 포함)
        &lt;ul&gt;
          &lt;li&gt;정보, H/W, S/W, 시설, 인력, 기업이미지, 평판, 직원들의 사기&lt;/li&gt;
          &lt;li&gt;자산 유형에 따라 취약성이 분류됨 (예: 문서는 해킹에 대한 취약점이 없음)
            &lt;ul&gt;
              &lt;li&gt;자산의 분류 및 파악이 위험을 평가하는데 중요함
                &lt;ul&gt;
                  &lt;li&gt;보안사고 발생시 손실 (loss) 에 대한 파악이 되어야 함&lt;/li&gt;
                  &lt;li&gt;양적으로 손실 측정이 가능 -&amp;gt; 보호대책의 비용과 보안사고시 손실간 균형을 맞추는데 활용&lt;/li&gt;
                  &lt;li&gt;자산평가(가치) 의 필요성 : 구체적인 금액, 자산 손상시 미치는 피해의 정도
                    &lt;ul&gt;
                      &lt;li&gt;취약성 파악의 필요성&lt;/li&gt;
                      &lt;li&gt;자산 관련 비용 (구회비용, 기회비용, 복구비용, 침해시 보상비용 포함)&lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;위협 (Threat) :  자산의 손실을 초래할 수 있는 윈치 않는(돌발적인) 사건의 잠재적 원인, 잠재적 행위자
        &lt;ul&gt;
          &lt;li&gt;위협의 원천
            &lt;ul&gt;
              &lt;li&gt;환경적 요인
                &lt;ul&gt;
                  &lt;li&gt;장비고장, 자연재해&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;인간에 의한 요인
                &lt;ul&gt;
                  &lt;li&gt;의도적 위협, 우연한 위협&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;위협 발생이 반드시 피해가 발생함을 의미하는 것은 아님
            &lt;ul&gt;
              &lt;li&gt;자산의 취약성을 이용하는 것이 위협 (원치 않는 사건의 원인)
                &lt;ul&gt;
                  &lt;li&gt;자산의 취약성에 대한 보호대책이 있으면 위협의 결과(피해) 가 달라짐&lt;/li&gt;
                  &lt;li&gt;위협 발생 가능성 : 해킹시도&lt;/li&gt;
                  &lt;li&gt;위협 성공 가능성 : 해킹성공&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;취약성 (Vulnerability)
        &lt;ul&gt;
          &lt;li&gt;자산의 잠재적 속성&lt;/li&gt;
          &lt;li&gt;자산과 위협 사이의 관계를 맺어주는 특성&lt;/li&gt;
          &lt;li&gt;위협의 이용 대상&lt;/li&gt;
          &lt;li&gt;정보보호대책의 미비&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;정보보호대책 (대응책) (Safeguard, Countermeasure)
        &lt;ul&gt;
          &lt;li&gt;위협에 대응하여 자산을 보호하기 위한 관리적, 기술적 대책&lt;/li&gt;
          &lt;li&gt;관리적 대책 : 절차, 정책, 교육&lt;/li&gt;
          &lt;li&gt;기술적 대책 : IDS, Firewall&lt;/li&gt;
          &lt;li&gt;보호대책의 효과를 파악하여 보호대책을 선정해야 함
            &lt;ul&gt;
              &lt;li&gt;모든 위험을 완전히 제거할 수 없음&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;위험 = f(자산, 위협, 취약점)&lt;/li&gt;
      &lt;li&gt;전체위험(Total Risk) = 자산 * 위협 * 취약성&lt;/li&gt;
      &lt;li&gt;잔여위험(Residual Risk) = (위협 * 자산 * 취약점) * 통제격차 (Controls Gap)
        &lt;ul&gt;
          &lt;li&gt;통제격차 : 비용효율성, 조직에 대한 안전장치의 가치 (대응책 시행 전에 잔여위험을 파악하기 위함)&lt;/li&gt;
          &lt;li&gt;잔여위험 : 전체위험 - 대응책&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;위험 분석의 절차&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;위험관리
        &lt;ul&gt;
          &lt;li&gt;범위결정&lt;/li&gt;
          &lt;li&gt;위험분석 (80% 이상 차지)
            &lt;ul&gt;
              &lt;li&gt;자산식별&lt;/li&gt;
              &lt;li&gt;자산가치평가 / 위협평가 / 기존 보안대책 평가 / 취약성 평가&lt;/li&gt;
              &lt;li&gt;위험평가&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;대책선택 (제약조건을 고려)&lt;/li&gt;
          &lt;li&gt;위험수용여부 결정
            &lt;ul&gt;
              &lt;li&gt;Yes : 보안정책 -&amp;gt; 보안계획수립&lt;/li&gt;
              &lt;li&gt;No : 대책선택으로 회귀 (다른 대책을 선택)&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;IT 시스템 보안정책 수립&lt;/li&gt;
          &lt;li&gt;IT 보안계획 수립&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;기준선접근법 (Baseline-approach)
    &lt;ul&gt;
      &lt;li&gt;체크리스트 (모든 시스템에 대한 표준화된 보안대책의 Set) 를 이용&lt;/li&gt;
      &lt;li&gt;BS7799 ISO-17799 를 사용한 Gap 분석&lt;/li&gt;
      &lt;li&gt;분석 비용, 시간을 매우 절약할 수 있음&lt;/li&gt;
      &lt;li&gt;과보호 또는 과부족 보호가 될 가능성이 존재
        &lt;ul&gt;
          &lt;li&gt;조직에 적합한 체크리스트여야 함&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;소규모 조직에 사용되도록 권고&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;비정형 접근법 (Informal approach)
    &lt;ul&gt;
      &lt;li&gt;구조화된 (정형화된) 방법론 (20:08)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>HY03</name><email>hyunik03@gmail.com</email></author><category term="IS_Certification" /><category term="정보보안기사" /><category term="위험 관리" /><summary type="html">위험 관리(Risk Management) 위험 관리는 프로젝트 추진 과정에서 예상되는 각종 돌발 상황(위험) 을 미리 예상하고 이에 대한 적절한 대책을 수립하는 일련의 활동이다. 위험은 불확실성과 손실을 내재하고 있는데, 위험 관리는 이러한 위험의 불확실성을 감소시키고 손실에 대비하는 작업이다. 위험을 식별한 후 발생 확률을 산정하고, 그 영향을 추산하여 해당 위험에 대비하는 비상 계획을 마련한다. 조직의 자산에 대한 식별을 통해 자산가치를 판별하고, 가치에 따라 보안대책을 수립 조직의 자산에 대한 위험감수수준 예:자산 가치 3억에 5억의 비용을 들여 보호하는 것은 넌센스다. 주기적, 반복적으로 위험 관리를 하여야 함. 세부과정 전략/계획 수립 위험 요소 분석 위험평가 : 위험에 대한 규모를 규정 정보보호대책 선정 : 위험완화 대응책 구현 위험관리에 위험분석이 80% 비율, 위험관리, 위험분석, 위험평가를 비슷한 의미로 사용하기도 함 위험 관리는 프로젝트 추진 과정에서 예상되는 각종 돌발 상황(위험) 을 미리 예상하고 이에 대한 적절한 대책(위험 완화)을 수립하는 일련의 활동 위험은 불확실성과 손실을 내재하고 있는데, 위험 관리는 이러한 위험의 불확실성을 감소시키고 손실에 대비하는 작업 위험을 식별(위험 요소 분석)한 후 발생 확률을 산정(위험평가)하고, 그 영향을 추산(위험평가-위험의 규모를 결정)하여 해당 위험에 대비하는 비상 계획을 마련함 위험분석 없이 보호대책을 수립하는 경우 취약점이 너무 많아짐 위협에 대한 우선순위가 설정되지 않음 : 과도한 투자가 이루어질 수 있음</summary></entry><entry><title type="html">정보보안 - 정보보호 정책 및 조직</title><link href="https://bluesplatter.com/is_certification/IS-Management-Security_Policy_and_Organization/" rel="alternate" type="text/html" title="정보보안 - 정보보호 정책 및 조직" /><published>2021-12-08T09:00:00+09:00</published><updated>2021-12-08T09:00:00+09:00</updated><id>https://bluesplatter.com/is_certification/IS-Management-Security_Policy_and_Organization</id><content type="html" xml:base="https://bluesplatter.com/is_certification/IS-Management-Security_Policy_and_Organization/">&lt;h1 id=&quot;정보보호-정책-및-조직&quot;&gt;정보보호 정책 및 조직&lt;/h1&gt;
&lt;h2 id=&quot;정보보호-정책&quot;&gt;정보보호 정책&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;정보보호 정책 수립의 중요성
    &lt;ul&gt;
      &lt;li&gt;정보화 사회, 지식기반사회 : 기업의 업무처리 정보 및 경영전략, 재무정보, 기밀자료등이 전자화된 형태로 정보시스템을 통해 처리&lt;/li&gt;
      &lt;li&gt;핵심 정보의 변조, 누출, 파괴로 인한 주요 업무의 중단, 대외 신뢰성의 훼손, 법적 금전적 손실의 위험&lt;/li&gt;
      &lt;li&gt;국방, 통신, 금융, 의료, 에너지, 정부행정 등 국가 주요정보통신기반시설에 대한 침해사고 발생 가능성
        &lt;ul&gt;
          &lt;li&gt;정보통신기반보호법, 정보통신 기반시설에 대한 취약성 분석을 의무적으로 실시&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;정보보호의 중요성 인식, 정보보호 투자도 증가하였으나 정보보호 수립, 관리하기 위한 방법에 대한 이해는 부족한 실정임
        &lt;ul&gt;
          &lt;li&gt;정보보호를 기술적인 측면만으로 이해, 보안시스템 도입만으로 정보보호 문제를 해결할 수 있다고 믿음&lt;/li&gt;
          &lt;li&gt;정보보호 책임을 전산실의 실무자에게 일임하는 것&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;정보보호는 기술적인 문제 뿌만 아니라 사람과 정보에 관한 경영상의 문제
        &lt;ul&gt;
          &lt;li&gt;경영진이 책임을 지고 방향을 제시, 지속적으로 달성목표를 관리&lt;/li&gt;
          &lt;li&gt;경영진이 정보관리 실무자에게 정보보호에 대한 책임만을 지우고, 어떻게 보호할 것인지 방침을 제시하지 않고 정보보호를 위한 인적, 물적 자원의 지원없이 방침의 실행 여부를 정기적으로 검토하지 않음 &amp;gt; 정보보호 목표 달성 불가&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;경영진이 정보보호 정책의 수립에 참여해야 함
        &lt;ul&gt;
          &lt;li&gt;경영진은 전반적인 목표와 방침을 모든 직원들에게 제시해야 함 &amp;gt; 정보보호 정책&lt;/li&gt;
          &lt;li&gt;정보보호 정책을 달성하기 위해 무엇을 어떻게 해야 할지 계획하고 구현하는 것은 실무자의 책임&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;정보보호 정책이란?
    &lt;ul&gt;
      &lt;li&gt;경영진의 정보보호에 관한 목표와 방향을 제시&lt;/li&gt;
      &lt;li&gt;기업 또는 조직의 정보보호에 대한 방향, 전략 그리고 주요 내용들을 문서화시켜 놓은 것&lt;/li&gt;
      &lt;li&gt;정보보호관리를 위해 가장 먼저하는 정책수립에 해당하는 결과물&lt;/li&gt;
      &lt;li&gt;포함되어야 할 사항들
        &lt;ul&gt;
          &lt;li&gt;정책의 범위와 목적, 법적/규정적 의무사항과의 관계&lt;/li&gt;
          &lt;li&gt;자산의 분류&lt;/li&gt;
          &lt;li&gt;비인가자의 접근 원칙&lt;/li&gt;
          &lt;li&gt;기밀성, 무결성, 가용성, 책임추적성 보장&lt;/li&gt;
          &lt;li&gt;법 준거성&lt;/li&gt;
          &lt;li&gt;개발 및 유지방법&lt;/li&gt;
          &lt;li&gt;비상대책 계획 수립 : 연속성 및 업무연속성계획(BCP)&lt;/li&gt;
          &lt;li&gt;교육 및 훈련 / 징계와 처벌&lt;/li&gt;
          &lt;li&gt;보안사고 보고 및 조사&lt;/li&gt;
          &lt;li&gt;기타 관련 정책&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;정책의 역할
        &lt;ul&gt;
          &lt;li&gt;임직원 책임 할당 / 책임 추적성 제공&lt;/li&gt;
          &lt;li&gt;임직원 가치판단의 기준&lt;/li&gt;
          &lt;li&gt;모든 직원에게 경영진의 목표 공유&lt;/li&gt;
          &lt;li&gt;기업의 비밀, 지적재산권 보호&lt;/li&gt;
          &lt;li&gt;기업의 컴퓨팅 자원 낭비 방지&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;정보보호 정책의 구분, 정의 및 특성
        &lt;ul&gt;
          &lt;li&gt;정책 (Policy)
            &lt;ul&gt;
              &lt;li&gt;정보보호에 대한 상위 수준의 목표 및 방향을 제시&lt;/li&gt;
              &lt;li&gt;조직의 경영목표를 반영하고 정보보호 관련 상위 정책과 일관성을 유지&lt;/li&gt;
              &lt;li&gt;정보보호를 위해 관련된 모든 사람이 반드시 지켜야 할 요구사항을 전반적이며 개략적으로 규정&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;표준 (Standard)
            &lt;ul&gt;
              &lt;li&gt;정보보호 정책과 마찬가지로 반드시 지켜야하는 요구사항에 대한 규정이지만, 정책의 만족을 위해 반드시 준수해야 할 구체적인 사항이나 양식을 규정&lt;/li&gt;
              &lt;li&gt;조직의 환경 또는 요구사항에 따라 관련된 모든 사용자들이 준수하도록 요구되는 규정&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;지침 (Guidelines)
            &lt;ul&gt;
              &lt;li&gt;반드시 지켜야 하는 것이 아니라 선택 가능하거나 권고적인 내용이며 융통성있게 적용할수 있는 사항을 설명&lt;/li&gt;
              &lt;li&gt;정보보호 정책에 따라 특정 시스템 또는 특정 분야별로 정보보호 활동에 필요하거나 도움이 되는 세부 정보를 설명&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;절차 (Procedures)
            &lt;ul&gt;
              &lt;li&gt;정책을 만족하기 위하여 수행하여야 하는 사항을 순서에 따라 단계적으로 설명&lt;/li&gt;
              &lt;li&gt;정보보호 활동의 구체적 적용을 위해 필요한 적용 절차 등의 구체적이고 세부적인 방법을 기술&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;정보보호 정책 개발의 원칙
        &lt;ul&gt;
          &lt;li&gt;개인적 측면 : 개인의 프라이버시가 침해되지 말아야 하며, 정보보호의 목적을 달성하기 위하여 IT부서 또는 정보보호 담당자의 편의 중심으로 개발되어서는 안된다.&lt;/li&gt;
          &lt;li&gt;사회적 측면 : 도덕적 판단기준, 사회적 측면에서 일반적이고 보편타당하여야 한다.&lt;/li&gt;
          &lt;li&gt;법률적인 측면 : 다른 사람의 법적인 권리를 보장할 수 있는 바탕에서 개발되어야 하며, 정보보호의 법률 및 규제 등의 요구사항이 반영되어야 한다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;정보보호 정책 요소
    &lt;ul&gt;
      &lt;li&gt;경영진의 참여와 지원&lt;/li&gt;
      &lt;li&gt;법적 요구사항 처리(관계 법령 고려)&lt;/li&gt;
      &lt;li&gt;상위 정책과의 일관성 유지&lt;/li&gt;
      &lt;li&gt;정보보호 구성 체계&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;정보보호 정책 개발 절차
    &lt;ul&gt;
      &lt;li&gt;준비
        &lt;ul&gt;
          &lt;li&gt;참조문서 수집 및 요구분석 : 관련 참조문서의 수집, 요구사항 수렴, 경영목표 관련 자료, 기존 정책서 등
            &lt;ul&gt;
              &lt;li&gt;경영목표정보 / 정보전략계획(ISP)&lt;/li&gt;
              &lt;li&gt;최근 위험평가자료&lt;/li&gt;
              &lt;li&gt;전체 조직구성도&lt;/li&gt;
              &lt;li&gt;정보시스템 아키텍처 문서&lt;/li&gt;
              &lt;li&gt;정보보안 아키텍처 문서&lt;/li&gt;
              &lt;li&gt;최근 침해사고 기록 및 장애 대응 정보&lt;/li&gt;
              &lt;li&gt;내부/외부 감사결과&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;정책의 구조 결정 : 정책의 내용, 서술방식, 우선순위 및 대상의 정의&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;작성 및 검토
        &lt;ul&gt;
          &lt;li&gt;정책 초안 작성 : 정보보호 정책서의 초안 작성&lt;/li&gt;
          &lt;li&gt;검토 및 조정 : 정책의 주요 적용 대상자를 대상으로 적합성 및 실행가능성 검토 및 조정&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;승인
        &lt;ul&gt;
          &lt;li&gt;경영진의 검토 및 승인 : 경영진의 검토 및 이행에 대한 지원을 약속
            &lt;ul&gt;
              &lt;li&gt;정보보호위원회에서 최종 검토 및 승인이 바람직함&lt;/li&gt;
              &lt;li&gt;임시적인 정책 개발 검토위원회 (경영진 참여) 를 구성해서 승인할 수도 있음&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;정보보호조직&quot;&gt;정보보호조직&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;정보보호조직 구성 시 고려사항
    &lt;ul&gt;
      &lt;li&gt;정보보호에 관련된 역할과 책임을 명확히 정의&lt;/li&gt;
      &lt;li&gt;정보보호 책임자를 지정
        &lt;ul&gt;
          &lt;li&gt;책임을 할당받은 경영진 또는 관리자들은 정보보호 업무를 위임할 수 있으나 최종책임은 여전히 그들에게 남아있음.&lt;/li&gt;
          &lt;li&gt;위임한 업무가 모두 올바르게 수행되었는지 확인해야함&lt;/li&gt;
          &lt;li&gt;대부분이 정보보호 관리자 및 실무자를 지정하여 실제 업무를 수행함&lt;/li&gt;
          &lt;li&gt;각 부서의 정보보호에 대한 책임은 각 부서의 관리자들에게 남아있음
            &lt;ul&gt;
              &lt;li&gt;각 자산에 대해 소유자를 지정하고 그 자산의 보호 책임을 지도록 해야 한다.&lt;/li&gt;
              &lt;li&gt;자산의 소유자는 정보보호 관리자와 협력하여 자산의 보호방법을 결정, 방법을 구현하기 위한 자원 조달을 해야 한다.&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;정보보호 조직체계 구성 시 고려해야 할 사항
    &lt;ul&gt;
      &lt;li&gt;조직의 규모(크기 및 인력), 조직 관리구조, 운영사이트의 수와 위치, 사이트간 상호 연결형태, 정보화 및 IT 예산, 시스템 운영환경 등을 고려&lt;/li&gt;
      &lt;li&gt;보호해야 할 정보자산의 유형, 규모 및 가치 등을 고려 (자산식별) 하여 이에 적합한 수준으로 인원과 예산을 배정해야 함&lt;/li&gt;
      &lt;li&gt;조직의 모든 부서에서 해당 업무 수행에 필요한 정보보호책임이 할당되어야 함.
        &lt;ul&gt;
          &lt;li&gt;정보보호 전담조직은 이를 기획, 조정, 통합하고 이행을 모니터링하며 정보보호 사고 등 위반에 대응하는 역할을 수행&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;정보보호 전담 인력이 아닌 일반 직원이라 하더라도 업무 수행 과정에서 정보를 보호할 책임이 있음&lt;/li&gt;
      &lt;li&gt;직무분리의 원칙을 적용해야 함.&lt;/li&gt;
      &lt;li&gt;적정 인력 확보가 어려운 경우 외부 전문업체에 위탁할 수 있으나, 책임을 져야 하는 정보보호책임자, 정보보호관리자는 내부인력으로 임명해야 함. 실무를 수행하는 정보보호담당자는 외부 인력을 활용할 수 있다.&lt;/li&gt;
      &lt;li&gt;외부 전문업체 인력 활용 시 해당인력의 책임 및 역할, 자격요건 등을 문서화하고 계약인력과 수행인력이 실제 일치하는지에 대해서도 확인 필요&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;정보보호 책임 할당
    &lt;ul&gt;
      &lt;li&gt;정보보호위원회 구성 : 전 조직에 걸친 정보보호 의사결정을 위해 모든 부서의 임원진 등 경영층이 참여&lt;/li&gt;
      &lt;li&gt;보안담당자 지정 : 각 부서별로 정보보호 활동 지원&lt;/li&gt;
      &lt;li&gt;정보보호 실무협의회 구성 : 정보보호 실무의 구체적인 사항을 협의&lt;/li&gt;
      &lt;li&gt;조직구성도
        &lt;ul&gt;
          &lt;li&gt;CEO - 정보보호책임자 - 정보보호관리자 / 각부서 팀장 - 정보보호담당자
            &lt;ul&gt;
              &lt;li&gt;(정보보호책임자 - 정보보호관리자 / 각부서 팀장) : 보안심의위원회&lt;/li&gt;
              &lt;li&gt;(정보보호관리자 - 정보보호담당자 / 각부서 담당자) : 보안실무위원회&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;정보보호위원회
    &lt;ul&gt;
      &lt;li&gt;정보보호관리체계의 효과적인 운영을 위해 정보보호 관련 사안에 대한 심의 책임을 갖는 기구(위원회)를 구성해야 함.&lt;/li&gt;
      &lt;li&gt;일반적으로 정보보호책임자를 위원장으로 함. 정보보호에 관련된 각 부서의 장을 위원으로 함. 정보보호 관리자가 간사 역할.&lt;/li&gt;
      &lt;li&gt;주요 정보보호 관련 사안에 대한 검토와 승인이 가능하다고 판단되는 인원을 포함&lt;/li&gt;
      &lt;li&gt;정보보호위원회 구성 및 정기 운영에 관한 사항을 별도 규정으로 수립하여 적용할 수 있음.&lt;/li&gt;
      &lt;li&gt;정보보호위원회에서는 아래와 같은 주요 정보보호 활동을 심의/의결할 수 있으며, 의사결정 기록을 남겨야 함.
        &lt;ul&gt;
          &lt;li&gt;정보보호정책의 심의 및 승인&lt;/li&gt;
          &lt;li&gt;정보보호 활동 계획의 심의 및 승인&lt;/li&gt;
          &lt;li&gt;정보보호 예산 심의 및 승인&lt;/li&gt;
          &lt;li&gt;보안사고의 심의, 위규자 징계, 우수자 포상 심의 및 승인&lt;/li&gt;
          &lt;li&gt;위험평가 결과 검토 및 승인&lt;/li&gt;
          &lt;li&gt;정보통신망 신. 증설에 따른 자체 보안성 검토&lt;/li&gt;
          &lt;li&gt;정보보호 관련 장비 및 프로그램 도입 검토&lt;/li&gt;
          &lt;li&gt;정보보호 정책 및 지침의 재/개정에 관한 사항&lt;/li&gt;
          &lt;li&gt;연간 정보보호계획 수립과 집행에 관한 사항&lt;/li&gt;
          &lt;li&gt;내부감사 실시 및 결과에 관한 사항&lt;/li&gt;
          &lt;li&gt;기타 의장 또는 정보보호책임자가 필요하다고 인정하는 사항&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;정보보호실무협의회
    &lt;ul&gt;
      &lt;li&gt;정보보호위원회 심의/의결사항에 대한 실무적인 검토, 세부 이행방안 수립, 원할한 정보보호 관리활동의 조정 등의 업무를 수행&lt;/li&gt;
      &lt;li&gt;정보보호실무협의회는 정보보호관리자가 주관하고, 정보보호담당자가 간사 역할을 수행, 다루는 사안에 따라 관련 부서의 정보보호담당자가 참여&lt;/li&gt;
      &lt;li&gt;정보보호에 관련하여 부서간 협의가 필요한 사항이 발생하는 경우 수시로 협의회를 소집할 수 있음&lt;/li&gt;
      &lt;li&gt;정보보호위원회의 의사결정을 지원하기 위하여 아래와 같은 구체적인 사항을 협의함
        &lt;ul&gt;
          &lt;li&gt;정보보호 정책 및 지침 안 작성 및 검토&lt;/li&gt;
          &lt;li&gt;정보보호 활동 계획안 수립&lt;/li&gt;
          &lt;li&gt;정보보호 예산안 수립&lt;/li&gt;
          &lt;li&gt;위험평가 수행, 위험평가 결과의 실무 검토 및 해결 방안 협의&lt;/li&gt;
          &lt;li&gt;정보통신망 신/증설에 따른 자체 보안 방안&lt;/li&gt;
          &lt;li&gt;분야별 정보보호대책의 수립과 집행에 관한 사항&lt;/li&gt;
          &lt;li&gt;자산에 대한 위험분석 평가에 관한 사항&lt;/li&gt;
          &lt;li&gt;내부감사 지원, 그 결과의 실무 검토 및 해결 방안 협의&lt;/li&gt;
          &lt;li&gt;기타 정보보호 관리자 및 부서별 정보보호 담당자가 요청하는 사항&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;정보보호 전담 조직
    &lt;ul&gt;
      &lt;li&gt;정보보호팀
        &lt;ul&gt;
          &lt;li&gt;정보보호 관련 업무를 기획하고 시행하기 위한 세부계획을 마련, 각종 보안통제 사항을 관리&lt;/li&gt;
          &lt;li&gt;자산에 대한 위협 및 위험분석, 주기적인 모니터링을 통해 평시 정보보호 관리를 이행&lt;/li&gt;
          &lt;li&gt;조직 임직원의 정보보호에 대한 인식 및 기술 수준을 제고하기 위해 교육 계획을 수립하고 시행&lt;/li&gt;
          &lt;li&gt;주요 시스템에 대한 침해사고 등 긴급 상황에 대처하기 위한 비상계획의 수립과 운영을 지원&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;침해사고대응팀 (CERT : Computer Emergency Response Team)
        &lt;ul&gt;
          &lt;li&gt;정보통신망의 침해사고 등 사이버 침해로부터의 예방, 대응, 분석 및 복구 등의 활동 수행&lt;/li&gt;
          &lt;li&gt;비상시 조직으로서 침해사고를 비롯한 정보보호 사고가 발생할 경우, 신속하고 효과적인 사고처리 및 복구를 위해 주요 정보보호담당자를 중심으로 침해사고 대응팀을 구성하여 운영한다.&lt;/li&gt;
          &lt;li&gt;정보보호책임자는 침해사고에 즉각적으로 대응하기 위하여 사전 조직 구성, 대응 절차 및 예방책 수립, 사고 대비 교육 및 훈련 등을 실시하여야 한다.&lt;/li&gt;
          &lt;li&gt;침해사고는 다양한 방식으로 발생할 수 있으므로 일반 직원이 침해사고를 인지하고 신고하기 위한 교육 훈련을 포함해야 한다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;개인정보보호팀
        &lt;ul&gt;
          &lt;li&gt;개인정보를 취급하는 조직에서는 관련 법에 따라 개인정보보호책임자(CPO:Chief Privacy Officer)를 임명해야 함
            &lt;ul&gt;
              &lt;li&gt;CPO 는 개인정보의 취급 및 보호에 관한 총괄책임을 진다.&lt;/li&gt;
              &lt;li&gt;필요한 실무 이행을 위해 개인정보관리자 또는 담당자를 지정하여 업무를 위임한다.&lt;/li&gt;
              &lt;li&gt;개인정보보호 책임자는 개인정보취급자 및 부서별 개인정보 보유현황 및 업무를 파악하고 개인정보의 전체 수명주기에 걸쳐 법적 요건을 만족하기 위한 취급방침 및 방침의 이행을 위한 프로세스를 수립하고 관리하여야 함.&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;개인정보보호책임자는 임원급 이상의 실무에 능통한 사람을 임명하는 것이 필요함.&lt;/li&gt;
          &lt;li&gt;실제 개인정보를 관리하는 부서의 장이 개인정보보호책임자를 맡고 전담하는 실무자 또는 전담 부서를 두는 것이 좋음&lt;/li&gt;
          &lt;li&gt;개인정보보호책임자의 업무
            &lt;ul&gt;
              &lt;li&gt;개인정보 보호 계획의 수립 및 시행&lt;/li&gt;
              &lt;li&gt;개인정보 처리 실태 및 관행의 정기적인 조사 및 개선&lt;/li&gt;
              &lt;li&gt;개인정보 처리와 관련한 불만의 처리 및 피해 구제&lt;/li&gt;
              &lt;li&gt;개인정보 유출 및 오/남용 방지를 위한 내부통제시스템의 구축&lt;/li&gt;
              &lt;li&gt;개인정보 보호 교육 계획의 수립 및 시행&lt;/li&gt;
              &lt;li&gt;개인정보파일의 보호 및 관리/감독&lt;/li&gt;
              &lt;li&gt;개인정보취급자에 대한 감독 및 정기적인 보안 교육&lt;/li&gt;
              &lt;li&gt;위탁업체의 개인정보 관리 상황에 대한 관리 감독&lt;/li&gt;
              &lt;li&gt;이용자의 불만사항 접수 및 처리&lt;/li&gt;
              &lt;li&gt;그 밖에 개인정보의 적절한 처리를 위하여 별도로 정한 사항&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;보안감사팀
        &lt;ul&gt;
          &lt;li&gt;정보보호방침 혹은 정책에 따라 보안활동이 적절히 이루어지고 있는지를 호가인&lt;/li&gt;
          &lt;li&gt;보안감사는 감사 주체에 따라 내부감사와 외부감사로 구분&lt;/li&gt;
          &lt;li&gt;감사시기에 따라 정기 보안감사와 수시 보안감사로 나뉨. 정기 보안감사는 연간 1회 이상 실시&lt;/li&gt;
          &lt;li&gt;보안감사 수행을 위한 정책과 적용 기준이 명확하게 수립되어야 함 (지나친 감사는 업무에 부담, 자원 낭비)&lt;/li&gt;
          &lt;li&gt;다음 사항을 포함하는 보안감사계획을 수립
            &lt;ul&gt;
              &lt;li&gt;감사대상 및 영역&lt;/li&gt;
              &lt;li&gt;감사목적&lt;/li&gt;
              &lt;li&gt;감사범위 및 중점감사항목&lt;/li&gt;
              &lt;li&gt;감사일정(기간)&lt;/li&gt;
              &lt;li&gt;참여 감사자&lt;/li&gt;
              &lt;li&gt;감사기법 및 감시기준&lt;/li&gt;
              &lt;li&gt;기타 필요사항 등&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;담당자의 역할
    &lt;ul&gt;
      &lt;li&gt;정보보호책임자
        &lt;ul&gt;
          &lt;li&gt;조직의 정보보호 총괄 책임자로서 정보보호의 필요성과 목표에 대한 명확한 인식을 가져야 함&lt;/li&gt;
          &lt;li&gt;효과적인 정보보호 업무 이행을 위해서 임원급에서 지정되어야 함&lt;/li&gt;
          &lt;li&gt;정보보호책임자는 조직의 전반적인 정보보호 관련 업무에 대한 총괄책임을 가지고 의사결정을 내리며 업무이행을 관장하고 준수여부를 감독함&lt;/li&gt;
          &lt;li&gt;정보보호책임자는 정보보호위원회의 의장 역할을 수행하며 주요 업무는 다음과 같음
            &lt;ul&gt;
              &lt;li&gt;정보보호정책의 수립 및 이행&lt;/li&gt;
              &lt;li&gt;정보보호조직의 구성 및 운영&lt;/li&gt;
              &lt;li&gt;정보보호 정책 및 지침의 승인/승인 획득&lt;/li&gt;
              &lt;li&gt;정보보호 활동 및 교육 지휘, 감독&lt;/li&gt;
              &lt;li&gt;정보보호 예산 편성 및 집행&lt;/li&gt;
              &lt;li&gt;정보보호 대책의 수립&lt;/li&gt;
              &lt;li&gt;침해사고대응팀 수립 및 운영&lt;/li&gt;
              &lt;li&gt;정보보호 관련 법, 규정 검토 준수&lt;/li&gt;
              &lt;li&gt;정보보호 현황을 최고경영진에게 정기적으로 보고&lt;/li&gt;
              &lt;li&gt;기타 정보보호 관련 업무 지휘 감독&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;정보보호관리자
        &lt;ul&gt;
          &lt;li&gt;정보보호관리자는 정보보호책임자의 임무를 위임받아 정보보호 업무를 수행하는 인력을 말함&lt;/li&gt;
          &lt;li&gt;정보보호 전담조직의 관리자로서 다음과 같은 업무를 수행함
            &lt;ul&gt;
              &lt;li&gt;정보보호 업무 기획 및 정보보호 활동 실무 조정&lt;/li&gt;
              &lt;li&gt;정보보호 정책 및 지침의 수립, 주기적인 검토 및 개정&lt;/li&gt;
              &lt;li&gt;정보보호 계획 수립&lt;/li&gt;
              &lt;li&gt;정보보호 정책 및 지침 준수에 대한 지원 및 관리 감독&lt;/li&gt;
              &lt;li&gt;조직 구성원에 대한 정보보호 교육 및 홍보&lt;/li&gt;
              &lt;li&gt;침해사고 대응체계 수립 및 대응&lt;/li&gt;
              &lt;li&gt;정보보호 감사 계획 수립 및 이행&lt;/li&gt;
              &lt;li&gt;정보보호시스템의 도입 계획 수립 및 운영관리&lt;/li&gt;
              &lt;li&gt;비상대책 및 재난대책 등을 포함한 정보보호 대책 수립&lt;/li&gt;
              &lt;li&gt;정보보호책임자를 보좌&lt;/li&gt;
              &lt;li&gt;정보보호 현황의 정기적인 모니터링&lt;/li&gt;
              &lt;li&gt;정보보호 현황을 정보보호책임자에게 정기적 또는 비정기적으로 보고&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;정보보호담당자
        &lt;ul&gt;
          &lt;li&gt;조직에서 정보보호 실무 운영을 담당하는 자&lt;/li&gt;
          &lt;li&gt;정보보호관리자의 지시에 따라 일반적으로 다음과 같은 역할 수행
            &lt;ul&gt;
              &lt;li&gt;정보보호시스템의 운용 및 유지관리&lt;/li&gt;
              &lt;li&gt;인프라, 응용프로그램, 데이터베이스 및 PC 의 보안관리&lt;/li&gt;
              &lt;li&gt;정보보호 점검 및 감사 수행&lt;/li&gt;
              &lt;li&gt;보안 모니터링&lt;/li&gt;
              &lt;li&gt;침해사고 등 비상상황시 대응&lt;/li&gt;
              &lt;li&gt;기타 정보보호관리자의 업무 보조&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;정보통신 분야별 담당자
        &lt;ul&gt;
          &lt;li&gt;서버, 네트워크, 응용시스템, 데이터베이스 등에 관련된 실무를 담당하는 인력&lt;/li&gt;
          &lt;li&gt;담당 정보자산의 보안을 관리하고 자체점검을 실시하며 보안사고 처리를 지원함&lt;/li&gt;
          &lt;li&gt;시스템(서버 운영)담당자, 네트워크 담당자, 보안시스템 담당자, 데이터베이스 담당자, 시스템 개발 담당자, 전산실 담당자가 포함되며 다음과 같은 정보보호 역할을 수행
            &lt;ul&gt;
              &lt;li&gt;서버 등 주요 시스템에 대한 정보보호 점검 및 통제&lt;/li&gt;
              &lt;li&gt;네트워크에 대한 정보보호 점검 및 통제&lt;/li&gt;
              &lt;li&gt;어플리케이션 등 주요 응용시스템에 대한 정보보호 점검 및 통제&lt;/li&gt;
              &lt;li&gt;데이터베이스관리시스템(DBMS)에 대한 정보보호 점검 및 통제&lt;/li&gt;
              &lt;li&gt;개인용컴퓨터(PC), 이동형 저장장치 등에 대한 정보보호 점검 및 통제&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;비정보통신 업무부서별 정보보호담당자
        &lt;ul&gt;
          &lt;li&gt;업무 부서 별 정보보호 책임은 해당 부서장에게 있음&lt;/li&gt;
          &lt;li&gt;업무별 정보보호담당자는 부서장의 지휘를 받아 해당 부서의 정보보호 실무를 이행함&lt;/li&gt;
          &lt;li&gt;조직의 정보보호 정책 준수를 위해 필요한 실무를 이행하며 해당 부서의 정보보호 관련 의견수렴 및 전달을 위한 채널로써 정보보호 전담조직과 협력하여 다음과 같은 업무를 수행함
            &lt;ul&gt;
              &lt;li&gt;부서 내 주요 정보보호 활동에 대한 기획 및 이행&lt;/li&gt;
              &lt;li&gt;부서 내 정보보호에 대한 의견 수렴 및 정보보호부서에 전달, 협의&lt;/li&gt;
              &lt;li&gt;부서 내 정보보호 현황 점검 및 보고&lt;/li&gt;
              &lt;li&gt;부서 내 보안사고 발생시 정보보호 전담조직(부서)와 협력하여 이를 처리&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>HY03</name><email>hyunik03@gmail.com</email></author><category term="IS_Certification" /><category term="정보보안기사" /><category term="정보보호 정책" /><category term="정보보호 조직" /><summary type="html">정보보호 정책 및 조직 정보보호 정책 정보보호 정책 수립의 중요성 정보화 사회, 지식기반사회 : 기업의 업무처리 정보 및 경영전략, 재무정보, 기밀자료등이 전자화된 형태로 정보시스템을 통해 처리 핵심 정보의 변조, 누출, 파괴로 인한 주요 업무의 중단, 대외 신뢰성의 훼손, 법적 금전적 손실의 위험 국방, 통신, 금융, 의료, 에너지, 정부행정 등 국가 주요정보통신기반시설에 대한 침해사고 발생 가능성 정보통신기반보호법, 정보통신 기반시설에 대한 취약성 분석을 의무적으로 실시 정보보호의 중요성 인식, 정보보호 투자도 증가하였으나 정보보호 수립, 관리하기 위한 방법에 대한 이해는 부족한 실정임 정보보호를 기술적인 측면만으로 이해, 보안시스템 도입만으로 정보보호 문제를 해결할 수 있다고 믿음 정보보호 책임을 전산실의 실무자에게 일임하는 것 정보보호는 기술적인 문제 뿌만 아니라 사람과 정보에 관한 경영상의 문제 경영진이 책임을 지고 방향을 제시, 지속적으로 달성목표를 관리 경영진이 정보관리 실무자에게 정보보호에 대한 책임만을 지우고, 어떻게 보호할 것인지 방침을 제시하지 않고 정보보호를 위한 인적, 물적 자원의 지원없이 방침의 실행 여부를 정기적으로 검토하지 않음 &amp;gt; 정보보호 목표 달성 불가 경영진이 정보보호 정책의 수립에 참여해야 함 경영진은 전반적인 목표와 방침을 모든 직원들에게 제시해야 함 &amp;gt; 정보보호 정책 정보보호 정책을 달성하기 위해 무엇을 어떻게 해야 할지 계획하고 구현하는 것은 실무자의 책임 정보보호 정책이란? 경영진의 정보보호에 관한 목표와 방향을 제시 기업 또는 조직의 정보보호에 대한 방향, 전략 그리고 주요 내용들을 문서화시켜 놓은 것 정보보호관리를 위해 가장 먼저하는 정책수립에 해당하는 결과물 포함되어야 할 사항들 정책의 범위와 목적, 법적/규정적 의무사항과의 관계 자산의 분류 비인가자의 접근 원칙 기밀성, 무결성, 가용성, 책임추적성 보장 법 준거성 개발 및 유지방법 비상대책 계획 수립 : 연속성 및 업무연속성계획(BCP) 교육 및 훈련 / 징계와 처벌 보안사고 보고 및 조사 기타 관련 정책 정책의 역할 임직원 책임 할당 / 책임 추적성 제공 임직원 가치판단의 기준 모든 직원에게 경영진의 목표 공유 기업의 비밀, 지적재산권 보호 기업의 컴퓨팅 자원 낭비 방지 정보보호 정책의 구분, 정의 및 특성 정책 (Policy) 정보보호에 대한 상위 수준의 목표 및 방향을 제시 조직의 경영목표를 반영하고 정보보호 관련 상위 정책과 일관성을 유지 정보보호를 위해 관련된 모든 사람이 반드시 지켜야 할 요구사항을 전반적이며 개략적으로 규정 표준 (Standard) 정보보호 정책과 마찬가지로 반드시 지켜야하는 요구사항에 대한 규정이지만, 정책의 만족을 위해 반드시 준수해야 할 구체적인 사항이나 양식을 규정 조직의 환경 또는 요구사항에 따라 관련된 모든 사용자들이 준수하도록 요구되는 규정 지침 (Guidelines) 반드시 지켜야 하는 것이 아니라 선택 가능하거나 권고적인 내용이며 융통성있게 적용할수 있는 사항을 설명 정보보호 정책에 따라 특정 시스템 또는 특정 분야별로 정보보호 활동에 필요하거나 도움이 되는 세부 정보를 설명 절차 (Procedures) 정책을 만족하기 위하여 수행하여야 하는 사항을 순서에 따라 단계적으로 설명 정보보호 활동의 구체적 적용을 위해 필요한 적용 절차 등의 구체적이고 세부적인 방법을 기술 정보보호 정책 개발의 원칙 개인적 측면 : 개인의 프라이버시가 침해되지 말아야 하며, 정보보호의 목적을 달성하기 위하여 IT부서 또는 정보보호 담당자의 편의 중심으로 개발되어서는 안된다. 사회적 측면 : 도덕적 판단기준, 사회적 측면에서 일반적이고 보편타당하여야 한다. 법률적인 측면 : 다른 사람의 법적인 권리를 보장할 수 있는 바탕에서 개발되어야 하며, 정보보호의 법률 및 규제 등의 요구사항이 반영되어야 한다. 정보보호 정책 요소 경영진의 참여와 지원 법적 요구사항 처리(관계 법령 고려) 상위 정책과의 일관성 유지 정보보호 구성 체계 정보보호 정책 개발 절차 준비 참조문서 수집 및 요구분석 : 관련 참조문서의 수집, 요구사항 수렴, 경영목표 관련 자료, 기존 정책서 등 경영목표정보 / 정보전략계획(ISP) 최근 위험평가자료 전체 조직구성도 정보시스템 아키텍처 문서 정보보안 아키텍처 문서 최근 침해사고 기록 및 장애 대응 정보 내부/외부 감사결과 정책의 구조 결정 : 정책의 내용, 서술방식, 우선순위 및 대상의 정의 작성 및 검토 정책 초안 작성 : 정보보호 정책서의 초안 작성 검토 및 조정 : 정책의 주요 적용 대상자를 대상으로 적합성 및 실행가능성 검토 및 조정 승인 경영진의 검토 및 승인 : 경영진의 검토 및 이행에 대한 지원을 약속 정보보호위원회에서 최종 검토 및 승인이 바람직함 임시적인 정책 개발 검토위원회 (경영진 참여) 를 구성해서 승인할 수도 있음 정보보호조직 정보보호조직 구성 시 고려사항 정보보호에 관련된 역할과 책임을 명확히 정의 정보보호 책임자를 지정 책임을 할당받은 경영진 또는 관리자들은 정보보호 업무를 위임할 수 있으나 최종책임은 여전히 그들에게 남아있음. 위임한 업무가 모두 올바르게 수행되었는지 확인해야함 대부분이 정보보호 관리자 및 실무자를 지정하여 실제 업무를 수행함 각 부서의 정보보호에 대한 책임은 각 부서의 관리자들에게 남아있음 각 자산에 대해 소유자를 지정하고 그 자산의 보호 책임을 지도록 해야 한다. 자산의 소유자는 정보보호 관리자와 협력하여 자산의 보호방법을 결정, 방법을 구현하기 위한 자원 조달을 해야 한다. 정보보호 조직체계 구성 시 고려해야 할 사항 조직의 규모(크기 및 인력), 조직 관리구조, 운영사이트의 수와 위치, 사이트간 상호 연결형태, 정보화 및 IT 예산, 시스템 운영환경 등을 고려 보호해야 할 정보자산의 유형, 규모 및 가치 등을 고려 (자산식별) 하여 이에 적합한 수준으로 인원과 예산을 배정해야 함 조직의 모든 부서에서 해당 업무 수행에 필요한 정보보호책임이 할당되어야 함. 정보보호 전담조직은 이를 기획, 조정, 통합하고 이행을 모니터링하며 정보보호 사고 등 위반에 대응하는 역할을 수행 정보보호 전담 인력이 아닌 일반 직원이라 하더라도 업무 수행 과정에서 정보를 보호할 책임이 있음 직무분리의 원칙을 적용해야 함. 적정 인력 확보가 어려운 경우 외부 전문업체에 위탁할 수 있으나, 책임을 져야 하는 정보보호책임자, 정보보호관리자는 내부인력으로 임명해야 함. 실무를 수행하는 정보보호담당자는 외부 인력을 활용할 수 있다. 외부 전문업체 인력 활용 시 해당인력의 책임 및 역할, 자격요건 등을 문서화하고 계약인력과 수행인력이 실제 일치하는지에 대해서도 확인 필요 정보보호 책임 할당 정보보호위원회 구성 : 전 조직에 걸친 정보보호 의사결정을 위해 모든 부서의 임원진 등 경영층이 참여 보안담당자 지정 : 각 부서별로 정보보호 활동 지원 정보보호 실무협의회 구성 : 정보보호 실무의 구체적인 사항을 협의 조직구성도 CEO - 정보보호책임자 - 정보보호관리자 / 각부서 팀장 - 정보보호담당자 (정보보호책임자 - 정보보호관리자 / 각부서 팀장) : 보안심의위원회 (정보보호관리자 - 정보보호담당자 / 각부서 담당자) : 보안실무위원회 정보보호위원회 정보보호관리체계의 효과적인 운영을 위해 정보보호 관련 사안에 대한 심의 책임을 갖는 기구(위원회)를 구성해야 함. 일반적으로 정보보호책임자를 위원장으로 함. 정보보호에 관련된 각 부서의 장을 위원으로 함. 정보보호 관리자가 간사 역할. 주요 정보보호 관련 사안에 대한 검토와 승인이 가능하다고 판단되는 인원을 포함 정보보호위원회 구성 및 정기 운영에 관한 사항을 별도 규정으로 수립하여 적용할 수 있음. 정보보호위원회에서는 아래와 같은 주요 정보보호 활동을 심의/의결할 수 있으며, 의사결정 기록을 남겨야 함. 정보보호정책의 심의 및 승인 정보보호 활동 계획의 심의 및 승인 정보보호 예산 심의 및 승인 보안사고의 심의, 위규자 징계, 우수자 포상 심의 및 승인 위험평가 결과 검토 및 승인 정보통신망 신. 증설에 따른 자체 보안성 검토 정보보호 관련 장비 및 프로그램 도입 검토 정보보호 정책 및 지침의 재/개정에 관한 사항 연간 정보보호계획 수립과 집행에 관한 사항 내부감사 실시 및 결과에 관한 사항 기타 의장 또는 정보보호책임자가 필요하다고 인정하는 사항 정보보호실무협의회 정보보호위원회 심의/의결사항에 대한 실무적인 검토, 세부 이행방안 수립, 원할한 정보보호 관리활동의 조정 등의 업무를 수행 정보보호실무협의회는 정보보호관리자가 주관하고, 정보보호담당자가 간사 역할을 수행, 다루는 사안에 따라 관련 부서의 정보보호담당자가 참여 정보보호에 관련하여 부서간 협의가 필요한 사항이 발생하는 경우 수시로 협의회를 소집할 수 있음 정보보호위원회의 의사결정을 지원하기 위하여 아래와 같은 구체적인 사항을 협의함 정보보호 정책 및 지침 안 작성 및 검토 정보보호 활동 계획안 수립 정보보호 예산안 수립 위험평가 수행, 위험평가 결과의 실무 검토 및 해결 방안 협의 정보통신망 신/증설에 따른 자체 보안 방안 분야별 정보보호대책의 수립과 집행에 관한 사항 자산에 대한 위험분석 평가에 관한 사항 내부감사 지원, 그 결과의 실무 검토 및 해결 방안 협의 기타 정보보호 관리자 및 부서별 정보보호 담당자가 요청하는 사항 정보보호 전담 조직 정보보호팀 정보보호 관련 업무를 기획하고 시행하기 위한 세부계획을 마련, 각종 보안통제 사항을 관리 자산에 대한 위협 및 위험분석, 주기적인 모니터링을 통해 평시 정보보호 관리를 이행 조직 임직원의 정보보호에 대한 인식 및 기술 수준을 제고하기 위해 교육 계획을 수립하고 시행 주요 시스템에 대한 침해사고 등 긴급 상황에 대처하기 위한 비상계획의 수립과 운영을 지원 침해사고대응팀 (CERT : Computer Emergency Response Team) 정보통신망의 침해사고 등 사이버 침해로부터의 예방, 대응, 분석 및 복구 등의 활동 수행 비상시 조직으로서 침해사고를 비롯한 정보보호 사고가 발생할 경우, 신속하고 효과적인 사고처리 및 복구를 위해 주요 정보보호담당자를 중심으로 침해사고 대응팀을 구성하여 운영한다. 정보보호책임자는 침해사고에 즉각적으로 대응하기 위하여 사전 조직 구성, 대응 절차 및 예방책 수립, 사고 대비 교육 및 훈련 등을 실시하여야 한다. 침해사고는 다양한 방식으로 발생할 수 있으므로 일반 직원이 침해사고를 인지하고 신고하기 위한 교육 훈련을 포함해야 한다. 개인정보보호팀 개인정보를 취급하는 조직에서는 관련 법에 따라 개인정보보호책임자(CPO:Chief Privacy Officer)를 임명해야 함 CPO 는 개인정보의 취급 및 보호에 관한 총괄책임을 진다. 필요한 실무 이행을 위해 개인정보관리자 또는 담당자를 지정하여 업무를 위임한다. 개인정보보호 책임자는 개인정보취급자 및 부서별 개인정보 보유현황 및 업무를 파악하고 개인정보의 전체 수명주기에 걸쳐 법적 요건을 만족하기 위한 취급방침 및 방침의 이행을 위한 프로세스를 수립하고 관리하여야 함. 개인정보보호책임자는 임원급 이상의 실무에 능통한 사람을 임명하는 것이 필요함. 실제 개인정보를 관리하는 부서의 장이 개인정보보호책임자를 맡고 전담하는 실무자 또는 전담 부서를 두는 것이 좋음 개인정보보호책임자의 업무 개인정보 보호 계획의 수립 및 시행 개인정보 처리 실태 및 관행의 정기적인 조사 및 개선 개인정보 처리와 관련한 불만의 처리 및 피해 구제 개인정보 유출 및 오/남용 방지를 위한 내부통제시스템의 구축 개인정보 보호 교육 계획의 수립 및 시행 개인정보파일의 보호 및 관리/감독 개인정보취급자에 대한 감독 및 정기적인 보안 교육 위탁업체의 개인정보 관리 상황에 대한 관리 감독 이용자의 불만사항 접수 및 처리 그 밖에 개인정보의 적절한 처리를 위하여 별도로 정한 사항 보안감사팀 정보보호방침 혹은 정책에 따라 보안활동이 적절히 이루어지고 있는지를 호가인 보안감사는 감사 주체에 따라 내부감사와 외부감사로 구분 감사시기에 따라 정기 보안감사와 수시 보안감사로 나뉨. 정기 보안감사는 연간 1회 이상 실시 보안감사 수행을 위한 정책과 적용 기준이 명확하게 수립되어야 함 (지나친 감사는 업무에 부담, 자원 낭비) 다음 사항을 포함하는 보안감사계획을 수립 감사대상 및 영역 감사목적 감사범위 및 중점감사항목 감사일정(기간) 참여 감사자 감사기법 및 감시기준 기타 필요사항 등 담당자의 역할 정보보호책임자 조직의 정보보호 총괄 책임자로서 정보보호의 필요성과 목표에 대한 명확한 인식을 가져야 함 효과적인 정보보호 업무 이행을 위해서 임원급에서 지정되어야 함 정보보호책임자는 조직의 전반적인 정보보호 관련 업무에 대한 총괄책임을 가지고 의사결정을 내리며 업무이행을 관장하고 준수여부를 감독함 정보보호책임자는 정보보호위원회의 의장 역할을 수행하며 주요 업무는 다음과 같음 정보보호정책의 수립 및 이행 정보보호조직의 구성 및 운영 정보보호 정책 및 지침의 승인/승인 획득 정보보호 활동 및 교육 지휘, 감독 정보보호 예산 편성 및 집행 정보보호 대책의 수립 침해사고대응팀 수립 및 운영 정보보호 관련 법, 규정 검토 준수 정보보호 현황을 최고경영진에게 정기적으로 보고 기타 정보보호 관련 업무 지휘 감독 정보보호관리자 정보보호관리자는 정보보호책임자의 임무를 위임받아 정보보호 업무를 수행하는 인력을 말함 정보보호 전담조직의 관리자로서 다음과 같은 업무를 수행함 정보보호 업무 기획 및 정보보호 활동 실무 조정 정보보호 정책 및 지침의 수립, 주기적인 검토 및 개정 정보보호 계획 수립 정보보호 정책 및 지침 준수에 대한 지원 및 관리 감독 조직 구성원에 대한 정보보호 교육 및 홍보 침해사고 대응체계 수립 및 대응 정보보호 감사 계획 수립 및 이행 정보보호시스템의 도입 계획 수립 및 운영관리 비상대책 및 재난대책 등을 포함한 정보보호 대책 수립 정보보호책임자를 보좌 정보보호 현황의 정기적인 모니터링 정보보호 현황을 정보보호책임자에게 정기적 또는 비정기적으로 보고 정보보호담당자 조직에서 정보보호 실무 운영을 담당하는 자 정보보호관리자의 지시에 따라 일반적으로 다음과 같은 역할 수행 정보보호시스템의 운용 및 유지관리 인프라, 응용프로그램, 데이터베이스 및 PC 의 보안관리 정보보호 점검 및 감사 수행 보안 모니터링 침해사고 등 비상상황시 대응 기타 정보보호관리자의 업무 보조 정보통신 분야별 담당자 서버, 네트워크, 응용시스템, 데이터베이스 등에 관련된 실무를 담당하는 인력 담당 정보자산의 보안을 관리하고 자체점검을 실시하며 보안사고 처리를 지원함 시스템(서버 운영)담당자, 네트워크 담당자, 보안시스템 담당자, 데이터베이스 담당자, 시스템 개발 담당자, 전산실 담당자가 포함되며 다음과 같은 정보보호 역할을 수행 서버 등 주요 시스템에 대한 정보보호 점검 및 통제 네트워크에 대한 정보보호 점검 및 통제 어플리케이션 등 주요 응용시스템에 대한 정보보호 점검 및 통제 데이터베이스관리시스템(DBMS)에 대한 정보보호 점검 및 통제 개인용컴퓨터(PC), 이동형 저장장치 등에 대한 정보보호 점검 및 통제 비정보통신 업무부서별 정보보호담당자 업무 부서 별 정보보호 책임은 해당 부서장에게 있음 업무별 정보보호담당자는 부서장의 지휘를 받아 해당 부서의 정보보호 실무를 이행함 조직의 정보보호 정책 준수를 위해 필요한 실무를 이행하며 해당 부서의 정보보호 관련 의견수렴 및 전달을 위한 채널로써 정보보호 전담조직과 협력하여 다음과 같은 업무를 수행함 부서 내 주요 정보보호 활동에 대한 기획 및 이행 부서 내 정보보호에 대한 의견 수렴 및 정보보호부서에 전달, 협의 부서 내 정보보호 현황 점검 및 보고 부서 내 보안사고 발생시 정보보호 전담조직(부서)와 협력하여 이를 처리</summary></entry><entry><title type="html">정보보안 - 접근통제 보안위협 및 대응책</title><link href="https://bluesplatter.com/is_certification/IS-Management-AccessControl_Threat/" rel="alternate" type="text/html" title="정보보안 - 접근통제 보안위협 및 대응책" /><published>2021-12-02T09:00:00+09:00</published><updated>2021-12-02T09:00:00+09:00</updated><id>https://bluesplatter.com/is_certification/IS-Management-AccessControl_Threat</id><content type="html" xml:base="https://bluesplatter.com/is_certification/IS-Management-AccessControl_Threat/">&lt;h1 id=&quot;접근통제-보안위협-및-대응책&quot;&gt;접근통제 보안위협 및 대응책&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;패스워드 크래커
    &lt;ul&gt;
      &lt;li&gt;개요
        &lt;ul&gt;
          &lt;li&gt;시스템에서는 사용자들의 패스워드를 특정한 방식으로 암호화하여 보관한다.&lt;/li&gt;
          &lt;li&gt;그 방식은 절대로 풀어낼 수 없는 일방향 함수 구조로 되어 있어 유닉스/리눅스 시스템에서 패스워드를 풀어내는 일은 쉽지 않다.&lt;/li&gt;
          &lt;li&gt;하지만 무차별 대입이나 사전 등을 이용하여 편법으로 패스워드를 풀어내는 경우가 있다.&lt;/li&gt;
          &lt;li&gt;이러한 일을 해주는 프로그램을 패스워드 크래커라고 한다.&lt;/li&gt;
          &lt;li&gt;패스워드를 알아내는 가장 효율적인 방법은 하이브리드 공격으로 사전공격+무차별 공격을 병행하는 것이다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;유형
        &lt;ul&gt;
          &lt;li&gt;사전공격 (Dictionary Attack)
            &lt;ul&gt;
              &lt;li&gt;패스워드 사전 파일을 이용하여 접속 계정을 알아내는 해킹 방법&lt;/li&gt;
              &lt;li&gt;공격자들은 패스워드의 해시된 값 혹은 패스워드 파일을 포착하며, 포착 후 소프트웨어 툴은 자체 내에 이미 포함된 단어와 포착된 패스워드가 일치할 때까지 비교작업을 수행한다.&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;무차별공격 (Brute-force Attack)
            &lt;ul&gt;
              &lt;li&gt;성공할 때까지 가능한 모든 조합의 경우의 수를 시도해 원하는 공격을 시도하는 방법&lt;/li&gt;
              &lt;li&gt;대표적인 예로 크랙 등 소프트웨어를 이용해서 로그인 이름에 대한 패스워드를 추측하는 방법이 있음&lt;/li&gt;
              &lt;li&gt;무차별 공격방법들은 워다이얼링(wardialing) 에도 사용됨.
                &lt;ul&gt;
                  &lt;li&gt;워다이얼링(wardialing) : 수천개의 전화번호에 자동으로 전화를 걸어 모뎀이 장착된 번호를 찾는 컴퓨터 해킹 기술&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;레인보우 테이블 공격
            &lt;ul&gt;
              &lt;li&gt;1980년도에 개발된 공격방법. 2000년대에 유명해짐.
                &lt;ul&gt;
                  &lt;li&gt;원도우 NT 버전 LM(Lan Manager) Hash 알고리즘이 깨지게 됨. -&amp;gt; Vista 버전 이후 사용하지 않음&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;패스워드 후보군을 만들어 Salt 와 결합하여 Hash 한 결과를 거대한 사전으로 만들어 공격&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;대응책
        &lt;ul&gt;
          &lt;li&gt;패스워드를 암호화하기 전에 부가적인 숫자(Salt)를 패스워드에 덧붙인 후 암호화하여 저장하는 방법 : 사전공격에 대한 내성 향상&lt;/li&gt;
          &lt;li&gt;패스워드가 평문으로 전송되지 않도록 하여 패스워드 패킷 스니핑을 방지&lt;/li&gt;
          &lt;li&gt;One-Time Password 사용. 패스워드 암호화. IDS/IPS 를 통해 반복적인 트래픽 감시&lt;/li&gt;
          &lt;li&gt;패스워드 입력횟수를 제한하는 임계치(Clipping Level) 을 적용하는 방법&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;사회공학
    &lt;ul&gt;
      &lt;li&gt;정의
        &lt;ul&gt;
          &lt;li&gt;일반적 정의 : 신뢰할 수 있는 사람/조직 으로 가장하여 다른 사람들로 하여금 자신의 목적을 위해 행동하게 하는 기술&lt;/li&gt;
          &lt;li&gt;컴퓨터 기반 정의 : 신뢰할 수 있는 컴퓨터프로그램, 이메일, 웹사이트 등으로 위장하여 공격자 의도대로 희생자의 개인정보, 신용정보를 탈취하기 위해 악성코드를 설치하는 공격방법&lt;/li&gt;
          &lt;li&gt;이메일 기반 정의 : 관심을 끌만한 이메일 제목, 내용 등을 통해 첨부된 악성코드 파일을 실행하게 하여 희생자의 개인정보, 신용정보를 탈취하는 공격방식&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;사회공학공격 분류
        &lt;ul&gt;
          &lt;li&gt;인간 기반의 사회공학 공격 (Human-based Social Engineering Attack)
            &lt;ul&gt;
              &lt;li&gt;종류
                &lt;ul&gt;
                  &lt;li&gt;어깨 넘어 훔쳐보기 (Shoulder Surfing) - 전통적인 스니핑 방법&lt;/li&gt;
                  &lt;li&gt;쓰레기통 뒤지기 (Dumpster Diving)&lt;/li&gt;
                  &lt;li&gt;협박메일 (Blackmail)
                    &lt;ul&gt;
                      &lt;li&gt;어떤 정보를 폭로하겠다고 협박하여 재물을 갈취하는 행위&lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                  &lt;li&gt;따라 들어가기 (Piggybacking, Tailgating)
                    &lt;ul&gt;
                      &lt;li&gt;출입증 소지자가 출입 시 함께 뒤따라 출입한다.&lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                  &lt;li&gt;내부자의 결탁으로 인한 정보유출, 내부자 부주의로 인한 외부에서의 정보 습득&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;절차
                &lt;ul&gt;
                  &lt;li&gt;정보수집
                    &lt;ul&gt;
                      &lt;li&gt;피해자의 전화번호를 무작위로 수집 (인터넷, 설문조사 등)&lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                  &lt;li&gt;관계 형성
                    &lt;ul&gt;
                      &lt;li&gt;전화를 이용하여 고위 공무원이나 금융담당자로 속여 마치 피해자나 피해자 주위 사람에게 문제가 생긴 것처럼 말하여 관심 유도&lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                  &lt;li&gt;공격
                    &lt;ul&gt;
                      &lt;li&gt;금전적인 문제를 해결하기 위해서라며 피해자가 계좌이체를 하도록 요구&lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                  &lt;li&gt;실행
                    &lt;ul&gt;
                      &lt;li&gt;피해자는 문제를 해결하기 위해 계좌이체를 하게되며 공격자는 목표 달성&lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;대응책
                &lt;ul&gt;
                  &lt;li&gt;전화통화의 음질 이상, 내용 이상 시 주의&lt;/li&gt;
                  &lt;li&gt;신원증명 요청시 주의&lt;/li&gt;
                  &lt;li&gt;이메일이나 팩스로 정보를 전송해달라고 요청하는 경우 주의&lt;/li&gt;
                  &lt;li&gt;문서세절기 이용하여 중요서류 파쇄&lt;/li&gt;
                  &lt;li&gt;임직원 보안 인식교육 주기적으로 실시&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;ICT 사회공학 공격 (Information and Communication Technology Social Engineering Attack)
            &lt;ul&gt;
              &lt;li&gt;종류
                &lt;ul&gt;
                  &lt;li&gt;&lt;strong&gt;피싱 (Phishing)&lt;/strong&gt;
                    &lt;ul&gt;
                      &lt;li&gt;개요
                        &lt;ul&gt;
                          &lt;li&gt;피싱은 개인정보(private data) 와 낚시(fishing) 의 합성어로 개인정보를 낚는다는 의미&lt;/li&gt;
                          &lt;li&gt;수신자에게 이메일을 발송하여 Pisher 들이 운영하는 위조된 사이트로 이동시킨 후 이들에게 사이트 개편 등의 이유로 고객정보(신용카드번호, 비밀번호 등) 을 요구한다.&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/li&gt;
                      &lt;li&gt;공격방법 및 대응방법
                        &lt;ul&gt;
                          &lt;li&gt;공격방법 : 유사한 이메일 주소 사용, 유사한 도메인 이름 사용, 이메일 주소 스푸핑, 주소창 위조, 팝업창 이용 등&lt;/li&gt;
                          &lt;li&gt;대응방법 : 사용자 주의, URL 필터링, 사용자 대상 홍보, 의심사이트에 대한 신고하기 등&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                  &lt;li&gt;&lt;strong&gt;파밍 (Pharming)&lt;/strong&gt;
                    &lt;ul&gt;
                      &lt;li&gt;개요
                        &lt;ul&gt;
                          &lt;li&gt;해커가 도메인 자체를 중간에서 탈취, 진짜 사이트 주소를 입력해도 가짜 사이트로 연결되도록 하는 것으로 피싱에서 더 나아간 형태 (피싱보다 피해가 큼)&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/li&gt;
                      &lt;li&gt;공격방법 및 대응방법
                        &lt;ul&gt;
                          &lt;li&gt;공격방법 : DNS 서버로 IP 요청 갈취 후 위조된 사이트로 Redirection 시킴&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                  &lt;li&gt;스미싱 (Smishing)
                    &lt;ul&gt;
                      &lt;li&gt;개요
                        &lt;ul&gt;
                          &lt;li&gt;SMS 와 Phishing 의 결합어로 휴대폰 문자메시지를 이용하여 피싱하는 방법&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/li&gt;
                      &lt;li&gt;공격방법 및 대응방법
                        &lt;ul&gt;
                          &lt;li&gt;공격방법 :
                            &lt;ul&gt;
                              &lt;li&gt;전형적인 유형으로 데이터 서비스 웹사이트로부터 온 휴대폰 메시지가 해당 웹사이트를 방문하여 서비스를 해지하지 않으면 일정금액의 요금이 청구된다고 메시지를 보내서 유인&lt;/li&gt;
                              &lt;li&gt;이를 통해 휴대폰 사용자로 하여금 특정 웹사이트로 유인한 후 사용자의 PC에 트로이목마 프로그램을 설치하고, 사용자의 금융정보나 비밀번호를 알아냄&lt;/li&gt;
                            &lt;/ul&gt;
                          &lt;/li&gt;
                          &lt;li&gt;대응방법 : URL 확인, 주기적인 교육/훈련&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                  &lt;li&gt;스피어 피싱 (Spear Phishing)
                    &lt;ul&gt;
                      &lt;li&gt;개요
                        &lt;ul&gt;
                          &lt;li&gt;조직 내에 신뢰할만한 사람으로 위장해 메일을 보내 ID/PW 를 탈취한다.&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/li&gt;
                      &lt;li&gt;공격방법 및 대응방법
                        &lt;ul&gt;
                          &lt;li&gt;위조된 사이트에 접속 유도 혹은 첨부파일 등을 이용한 악성코드 설치&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;백도어(back door) / 트랩도어 (Trap door)
    &lt;ul&gt;
      &lt;li&gt;개요
        &lt;ul&gt;
          &lt;li&gt;시스템의 보안이 제거된 비밀통로, 서비스 기술자나 유지보수 프로그래머들의 접근 편의를 위해 시스템 설게자가 고의적으로 만들어 놓은 통로&lt;/li&gt;
          &lt;li&gt;현장에서 서비스 기술자나 공급사의 유지보수 프로그래머가 업무 편의성을 향상시키기 위함&lt;/li&gt;
          &lt;li&gt;악의적인 목적으로 만들어 놓은 통로도 있는데, 백 오리피스 (Back orifice) 가 대표적임
            &lt;ul&gt;
              &lt;li&gt;이 프로그램은 해킹 프로그램의 일종으로 PC에 내장되어 사용자 몰래 사용자의 정보를 저장, 유출하기 위한 프로그램임&lt;/li&gt;
              &lt;li&gt;대표적인 트로이목마&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;웜 홀(Worm Hole), 트랩도어, Maintenance hook, Adminstrative hook 이라고도 함&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;백도어 종류
        &lt;ul&gt;
          &lt;li&gt;파일 시스템 백도어
            &lt;ul&gt;
              &lt;li&gt;ls, du, fsck 같은 명령어를 수정해서 특정 디렉터리나 파일을 숨김&lt;/li&gt;
              &lt;li&gt;숨기려는 부분을 배드섹터로 처리&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;프로세스 은닉 백도어
            &lt;ul&gt;
              &lt;li&gt;특정 프로세스를 숨겨서 합리적인 서비스를 가장함&lt;/li&gt;
              &lt;li&gt;라이브러리 루틴 수정으로 프로세스를 숨김&lt;/li&gt;
              &lt;li&gt;커널 수정으로 특정 프로세스를 숨김&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;네트워크 트래픽 백도어
            &lt;ul&gt;
              &lt;li&gt;네트워크 트래픽을 숨김&lt;/li&gt;
              &lt;li&gt;사용하지 않는 네트워크 포트를 사용하여 침입&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;TCP 셸 백도어
            &lt;ul&gt;
              &lt;li&gt;1024번 이상의 TCP 포트에 셸 제공 네트워크 서비스 설치&lt;/li&gt;
              &lt;li&gt;netstat 등을 통해 확인이 가능&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;UDP 셸 백도어
            &lt;ul&gt;
              &lt;li&gt;침입차단 시스템 우회가 가능 (DNS 서비스를 위해서 UDP 패킷을 허락)&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;login 백도어
            &lt;ul&gt;
              &lt;li&gt;login.c 프로그램을 수정함&lt;/li&gt;
              &lt;li&gt;특정 백도어 패스워드 입력 시 인증과정 없이 로그인 허용&lt;/li&gt;
              &lt;li&gt;utmp 나 wtmp 등과 같은 로그파일에 기록되지 않음
                &lt;ul&gt;
                  &lt;li&gt;&lt;strong&gt;utmp&lt;/strong&gt; : 현재시스템에 로그인한 사용자의 상태정보/w,who,finger&lt;/li&gt;
                  &lt;li&gt;&lt;strong&gt;wtmp&lt;/strong&gt; : 사용자의 성공한 로그인,로그아웃정보,시스템의 부팅/종료정보 히스토리/last&lt;/li&gt;
                  &lt;li&gt;&lt;strong&gt;lastlog&lt;/strong&gt; : 마지막 성공한 로그인 정보를 가지고 있는 로그파일&lt;/li&gt;
                  &lt;li&gt;&lt;strong&gt;btmp&lt;/strong&gt; : 실패한 로그인 시도에 대한 기록/lastb&lt;/li&gt;
                  &lt;li&gt;&lt;strong&gt;loginlog&lt;/strong&gt; : btmp 와 동일하나 text 파일이고, Unix 에서 사용&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;MD5 에 의한 무결성 점검이 권고됨&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;library 백도어
            &lt;ul&gt;
              &lt;li&gt;공유 라이브러리를 사용함&lt;/li&gt;
              &lt;li&gt;crypt.c 등을 수정해서 백도어를 삽입함&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;kernel 백도어
            &lt;ul&gt;
              &lt;li&gt;커널 자체를 수정함&lt;/li&gt;
              &lt;li&gt;가장 찾기 어려운 백도어로 MD5 체크썸으로도 진단이 불가능함.&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;리눅스/유닉스 백도어
            &lt;ul&gt;
              &lt;li&gt;httpd 시작프로그램을 이용해서 자동 실행
                &lt;ul&gt;
                  &lt;li&gt;root 권한으로 데몬 운영 : 보안상 매우 취약
                    &lt;ul&gt;
                      &lt;li&gt;클라이언트가 접속을 하게 되면 httpd 가 root 권한으로 실행됨 = 클라이언트 역시 root 권한&lt;/li&gt;
                      &lt;li&gt;클라이언트가 접속하면 httpd 를 nobody 로 실행되게 설정해야 함&lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;발생원인
        &lt;ul&gt;
          &lt;li&gt;제거하는 것을 잊어버린 경우&lt;/li&gt;
          &lt;li&gt;테스트를 위해 고의적으로 남겨두는 경우&lt;/li&gt;
          &lt;li&gt;완성된 프로그램의 유지보스를 위해 고의적으로 남겨두는 경우&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;대응책
        &lt;ul&gt;
          &lt;li&gt;인터넷 취약점을 이용하는 스니핑과 달리 백도어 프로그램은 사용자들이 조금만 주의를 기울이면 쉽게 예방할 수 있으며 방법 또한 바이러스 예방과 크게 다르지 않음&lt;/li&gt;
          &lt;li&gt;프로그램이 개발되어 실제의 작업환경에서 사용될 때 트랩도어로써 활용될 수 있는 루틴들의 제거 여부를 확인하여야 하며, 실제 프로그램에 대한 테스트를 하면서 중간에 이상한 출력이 나오는지 검토해 보아야 함&lt;/li&gt;
          &lt;li&gt;윈도우/유닉스의 정상적인 프로세스를 기억, 현재 실행중인 프로세스 확인
            &lt;ul&gt;
              &lt;li&gt;윈도우 : Ctrl+Alt+Del 후 Windows 작업관리자 확인&lt;/li&gt;
              &lt;li&gt;자주 사용하는 프로세스 (윈도우)
                &lt;ul&gt;
                  &lt;li&gt;csrss : Client/Server Runtime SubSystem
                    &lt;ul&gt;
                      &lt;li&gt;윈도우 콘솔 관리&lt;/li&gt;
                      &lt;li&gt;쓰레드의 생성, 삭제&lt;/li&gt;
                      &lt;li&gt;32비트의 가상 MS/DOS 지원&lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                  &lt;li&gt;svchost : Service Host - 30:44
                    &lt;ul&gt;
                      &lt;li&gt;dll (동적라이브러리) 파일로 실행되는 프로세스의 기본 프로세스&lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;백도어 탐지법
        &lt;ul&gt;
          &lt;li&gt;소스코드 리뷰&lt;/li&gt;
          &lt;li&gt;HIDS 설치
            &lt;ul&gt;
              &lt;li&gt;Host-based IDS (S/W)&lt;/li&gt;
              &lt;li&gt;백도어를 탐지하는 최선의 방법&lt;/li&gt;
              &lt;li&gt;백도어가 임의의 포트에 대기하고 있을 때 해당 포트를 탐지함&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;최초의 권한획득을 최소화 (허가 X)&lt;/li&gt;
          &lt;li&gt;지속적인 점검이 필요&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;루트킷 (rootkit)
    &lt;ul&gt;
      &lt;li&gt;개요
        &lt;ul&gt;
          &lt;li&gt;시스템 침입 후 침입 사실을 숨긴 채 차후의 침입을 위한 백도어
            &lt;ul&gt;
              &lt;li&gt;트로이목마 설치, 원격접근, 내부 사용 흔적 삭제, 관리자 권한 획득 등 주로 불법적인 해킹에 사용되는 프로그램 모음&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;루트킷이 설치되면 자신이 뚫고 들어온 모든 경로를 바꾸어 놓고, 명령어들을 은폐해 놓음
            &lt;ul&gt;
              &lt;li&gt;해커가 시스템을 원격으로 해킹하고 있어도 루트킷이 설치되어 있는지 사실조차 감지하기 어려움&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;침입자는 먼저 암호를 크래킹하거나 시스템 취약점을 찾아내어서 사용자용 접근 권한을 획득한 뒤, 컴퓨터에 루트킷을 설치함&lt;/li&gt;
          &lt;li&gt;루트의 권한을 쉽게 획득하게 돕는 도구, 자신을 은폐, 삭제할 수 없도록 함
            &lt;ul&gt;
              &lt;li&gt;유저모드
                &lt;ul&gt;
                  &lt;li&gt;Application (커널모드 함수호출 / 응답받기)&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;커널모드
                &lt;ul&gt;
                  &lt;li&gt;원본코드 / 원데이터&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;루트킷은 User 모드의 Application, 커널모드의 원본코드, 원데이터를 공격 (경로 변형-Hooking)&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;은닉채널
    &lt;ul&gt;
      &lt;li&gt;개요
        &lt;ul&gt;
          &lt;li&gt;은닉채널 (Covert Channel) : 정보 전송이 목적이 아닌 채널&lt;/li&gt;
          &lt;li&gt;통신 채널은 은닉 채널과 공개 채널(Overt Channel) 로 구분됨.&lt;/li&gt;
          &lt;li&gt;은닉 채널은 다계층 보안 시스템(Multi-level Security System) 이 존재하는 경우 계층 간의 보안 허점을 이용하여 공개 채널의 사용자에게는 노출되지 않는 통신 채널을 구성함. 이러한 성격 때문에 디지털 워터마크나 디지털 서명 등에 사용되고 있음&lt;/li&gt;
          &lt;li&gt;악성코드 간의 통신 등에도 사용되기 때문에 은닉 채널의 탐지가 주요 이슈가 되고 있음&lt;/li&gt;
          &lt;li&gt;유사한 용어로 스테가노그래피(Steganography), 잠재적인 채널(Subliminal Channel) 등이 있음&lt;/li&gt;
          &lt;li&gt;은닉 채널의 모델은 The Prisoners’ Problem 모델이 사실상의 표준 모델(De-facto Model) 이 되었음&lt;/li&gt;
          &lt;li&gt;색출이 어려움&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;컴퓨터 네트워크 프로토콜에서의 은닉 채널
        &lt;ul&gt;
          &lt;li&gt;개요
            &lt;ul&gt;
              &lt;li&gt;네트워크 트래픽에 대한 은닉 채널 형성 기법은 Open Systems Interconnection (OSI) 모델에서 데이터 링크 계층(4), 네트워크 계층과 전송 계층(5), 응용 계층(6)(7) 등 각 계층 별로 다양한 방법이 보고되고 있음. 컴퓨터 네트워크 프로토콜에서의 은닉 채널의 형성 기법을 분류하면 아래와 같음&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;사용하지 않는 헤더 비트
            &lt;ul&gt;
              &lt;li&gt;프로토콜 명세 상에서 특정 값을 사용하도록 명시하지 않음&lt;/li&gt;
              &lt;li&gt;수신자가 값을 확인하지 않음&lt;/li&gt;
              &lt;li&gt;추후 사용하기 위해 예약해둔(Reserved) 영역을 이용&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;확장 기능 및 패딩
            &lt;ul&gt;
              &lt;li&gt;많은 프로토콜들이 확장성을 고려해 헤더에 확장 기능(Extension Header) 을 정의하여 필요한 경우에 선택적으로 사용하고 있음&lt;/li&gt;
              &lt;li&gt;대부분의 헤더 확장 기능은 앞으로 추가될 기능을 충분히 고려하지 못하였기 때문에 보안에 잠재적인 위협이 될 수 있음&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;프로토콜 필드
            &lt;ul&gt;
              &lt;li&gt;프로토콜 명세에 정의된 필드를 임의의 값으로 수정, 패킷의 전송에 직접적으로 관련이 있는 필드인 경우 예상치 못한 에러를 가져올 수 있음&lt;/li&gt;
              &lt;li&gt;패킷 전송 타이밍 : 전송된 패킷의 시간 간격이나 유실을 이용한 낮은 속도의 은닉 채널을 구성할 수 있음&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;터널링
            &lt;ul&gt;
              &lt;li&gt;현 프로토콜(보통 IP프로토콜)을 다른 프로토콜로 전환하는 과정 중에 은닉 채널을 삽입할 수 있음. 이를 통해 방화벽 등의 보안 장비를 우회할 수 있음.&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;대응책
        &lt;ul&gt;
          &lt;li&gt;HIDS&lt;/li&gt;
          &lt;li&gt;통신대역폭에 대한 엄격한 제한&lt;/li&gt;
          &lt;li&gt;정기적인 감사&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>HY03</name><email>hyunik03@gmail.com</email></author><category term="IS_Certification" /><category term="정보보안기사" /><category term="접근통제 보안위협 및 대응책" /><summary type="html">접근통제 보안위협 및 대응책 패스워드 크래커 개요 시스템에서는 사용자들의 패스워드를 특정한 방식으로 암호화하여 보관한다. 그 방식은 절대로 풀어낼 수 없는 일방향 함수 구조로 되어 있어 유닉스/리눅스 시스템에서 패스워드를 풀어내는 일은 쉽지 않다. 하지만 무차별 대입이나 사전 등을 이용하여 편법으로 패스워드를 풀어내는 경우가 있다. 이러한 일을 해주는 프로그램을 패스워드 크래커라고 한다. 패스워드를 알아내는 가장 효율적인 방법은 하이브리드 공격으로 사전공격+무차별 공격을 병행하는 것이다. 유형 사전공격 (Dictionary Attack) 패스워드 사전 파일을 이용하여 접속 계정을 알아내는 해킹 방법 공격자들은 패스워드의 해시된 값 혹은 패스워드 파일을 포착하며, 포착 후 소프트웨어 툴은 자체 내에 이미 포함된 단어와 포착된 패스워드가 일치할 때까지 비교작업을 수행한다. 무차별공격 (Brute-force Attack) 성공할 때까지 가능한 모든 조합의 경우의 수를 시도해 원하는 공격을 시도하는 방법 대표적인 예로 크랙 등 소프트웨어를 이용해서 로그인 이름에 대한 패스워드를 추측하는 방법이 있음 무차별 공격방법들은 워다이얼링(wardialing) 에도 사용됨. 워다이얼링(wardialing) : 수천개의 전화번호에 자동으로 전화를 걸어 모뎀이 장착된 번호를 찾는 컴퓨터 해킹 기술 레인보우 테이블 공격 1980년도에 개발된 공격방법. 2000년대에 유명해짐. 원도우 NT 버전 LM(Lan Manager) Hash 알고리즘이 깨지게 됨. -&amp;gt; Vista 버전 이후 사용하지 않음 패스워드 후보군을 만들어 Salt 와 결합하여 Hash 한 결과를 거대한 사전으로 만들어 공격 대응책 패스워드를 암호화하기 전에 부가적인 숫자(Salt)를 패스워드에 덧붙인 후 암호화하여 저장하는 방법 : 사전공격에 대한 내성 향상 패스워드가 평문으로 전송되지 않도록 하여 패스워드 패킷 스니핑을 방지 One-Time Password 사용. 패스워드 암호화. IDS/IPS 를 통해 반복적인 트래픽 감시 패스워드 입력횟수를 제한하는 임계치(Clipping Level) 을 적용하는 방법 사회공학 정의 일반적 정의 : 신뢰할 수 있는 사람/조직 으로 가장하여 다른 사람들로 하여금 자신의 목적을 위해 행동하게 하는 기술 컴퓨터 기반 정의 : 신뢰할 수 있는 컴퓨터프로그램, 이메일, 웹사이트 등으로 위장하여 공격자 의도대로 희생자의 개인정보, 신용정보를 탈취하기 위해 악성코드를 설치하는 공격방법 이메일 기반 정의 : 관심을 끌만한 이메일 제목, 내용 등을 통해 첨부된 악성코드 파일을 실행하게 하여 희생자의 개인정보, 신용정보를 탈취하는 공격방식 사회공학공격 분류 인간 기반의 사회공학 공격 (Human-based Social Engineering Attack) 종류 어깨 넘어 훔쳐보기 (Shoulder Surfing) - 전통적인 스니핑 방법 쓰레기통 뒤지기 (Dumpster Diving) 협박메일 (Blackmail) 어떤 정보를 폭로하겠다고 협박하여 재물을 갈취하는 행위 따라 들어가기 (Piggybacking, Tailgating) 출입증 소지자가 출입 시 함께 뒤따라 출입한다. 내부자의 결탁으로 인한 정보유출, 내부자 부주의로 인한 외부에서의 정보 습득 절차 정보수집 피해자의 전화번호를 무작위로 수집 (인터넷, 설문조사 등) 관계 형성 전화를 이용하여 고위 공무원이나 금융담당자로 속여 마치 피해자나 피해자 주위 사람에게 문제가 생긴 것처럼 말하여 관심 유도 공격 금전적인 문제를 해결하기 위해서라며 피해자가 계좌이체를 하도록 요구 실행 피해자는 문제를 해결하기 위해 계좌이체를 하게되며 공격자는 목표 달성 대응책 전화통화의 음질 이상, 내용 이상 시 주의 신원증명 요청시 주의 이메일이나 팩스로 정보를 전송해달라고 요청하는 경우 주의 문서세절기 이용하여 중요서류 파쇄 임직원 보안 인식교육 주기적으로 실시 ICT 사회공학 공격 (Information and Communication Technology Social Engineering Attack) 종류 피싱 (Phishing) 개요 피싱은 개인정보(private data) 와 낚시(fishing) 의 합성어로 개인정보를 낚는다는 의미 수신자에게 이메일을 발송하여 Pisher 들이 운영하는 위조된 사이트로 이동시킨 후 이들에게 사이트 개편 등의 이유로 고객정보(신용카드번호, 비밀번호 등) 을 요구한다. 공격방법 및 대응방법 공격방법 : 유사한 이메일 주소 사용, 유사한 도메인 이름 사용, 이메일 주소 스푸핑, 주소창 위조, 팝업창 이용 등 대응방법 : 사용자 주의, URL 필터링, 사용자 대상 홍보, 의심사이트에 대한 신고하기 등 파밍 (Pharming) 개요 해커가 도메인 자체를 중간에서 탈취, 진짜 사이트 주소를 입력해도 가짜 사이트로 연결되도록 하는 것으로 피싱에서 더 나아간 형태 (피싱보다 피해가 큼) 공격방법 및 대응방법 공격방법 : DNS 서버로 IP 요청 갈취 후 위조된 사이트로 Redirection 시킴 스미싱 (Smishing) 개요 SMS 와 Phishing 의 결합어로 휴대폰 문자메시지를 이용하여 피싱하는 방법 공격방법 및 대응방법 공격방법 : 전형적인 유형으로 데이터 서비스 웹사이트로부터 온 휴대폰 메시지가 해당 웹사이트를 방문하여 서비스를 해지하지 않으면 일정금액의 요금이 청구된다고 메시지를 보내서 유인 이를 통해 휴대폰 사용자로 하여금 특정 웹사이트로 유인한 후 사용자의 PC에 트로이목마 프로그램을 설치하고, 사용자의 금융정보나 비밀번호를 알아냄 대응방법 : URL 확인, 주기적인 교육/훈련 스피어 피싱 (Spear Phishing) 개요 조직 내에 신뢰할만한 사람으로 위장해 메일을 보내 ID/PW 를 탈취한다. 공격방법 및 대응방법 위조된 사이트에 접속 유도 혹은 첨부파일 등을 이용한 악성코드 설치 백도어(back door) / 트랩도어 (Trap door) 개요 시스템의 보안이 제거된 비밀통로, 서비스 기술자나 유지보수 프로그래머들의 접근 편의를 위해 시스템 설게자가 고의적으로 만들어 놓은 통로 현장에서 서비스 기술자나 공급사의 유지보수 프로그래머가 업무 편의성을 향상시키기 위함 악의적인 목적으로 만들어 놓은 통로도 있는데, 백 오리피스 (Back orifice) 가 대표적임 이 프로그램은 해킹 프로그램의 일종으로 PC에 내장되어 사용자 몰래 사용자의 정보를 저장, 유출하기 위한 프로그램임 대표적인 트로이목마 웜 홀(Worm Hole), 트랩도어, Maintenance hook, Adminstrative hook 이라고도 함 백도어 종류 파일 시스템 백도어 ls, du, fsck 같은 명령어를 수정해서 특정 디렉터리나 파일을 숨김 숨기려는 부분을 배드섹터로 처리 프로세스 은닉 백도어 특정 프로세스를 숨겨서 합리적인 서비스를 가장함 라이브러리 루틴 수정으로 프로세스를 숨김 커널 수정으로 특정 프로세스를 숨김 네트워크 트래픽 백도어 네트워크 트래픽을 숨김 사용하지 않는 네트워크 포트를 사용하여 침입 TCP 셸 백도어 1024번 이상의 TCP 포트에 셸 제공 네트워크 서비스 설치 netstat 등을 통해 확인이 가능 UDP 셸 백도어 침입차단 시스템 우회가 가능 (DNS 서비스를 위해서 UDP 패킷을 허락) login 백도어 login.c 프로그램을 수정함 특정 백도어 패스워드 입력 시 인증과정 없이 로그인 허용 utmp 나 wtmp 등과 같은 로그파일에 기록되지 않음 utmp : 현재시스템에 로그인한 사용자의 상태정보/w,who,finger wtmp : 사용자의 성공한 로그인,로그아웃정보,시스템의 부팅/종료정보 히스토리/last lastlog : 마지막 성공한 로그인 정보를 가지고 있는 로그파일 btmp : 실패한 로그인 시도에 대한 기록/lastb loginlog : btmp 와 동일하나 text 파일이고, Unix 에서 사용 MD5 에 의한 무결성 점검이 권고됨 library 백도어 공유 라이브러리를 사용함 crypt.c 등을 수정해서 백도어를 삽입함 kernel 백도어 커널 자체를 수정함 가장 찾기 어려운 백도어로 MD5 체크썸으로도 진단이 불가능함. 리눅스/유닉스 백도어 httpd 시작프로그램을 이용해서 자동 실행 root 권한으로 데몬 운영 : 보안상 매우 취약 클라이언트가 접속을 하게 되면 httpd 가 root 권한으로 실행됨 = 클라이언트 역시 root 권한 클라이언트가 접속하면 httpd 를 nobody 로 실행되게 설정해야 함 발생원인 제거하는 것을 잊어버린 경우 테스트를 위해 고의적으로 남겨두는 경우 완성된 프로그램의 유지보스를 위해 고의적으로 남겨두는 경우 대응책 인터넷 취약점을 이용하는 스니핑과 달리 백도어 프로그램은 사용자들이 조금만 주의를 기울이면 쉽게 예방할 수 있으며 방법 또한 바이러스 예방과 크게 다르지 않음 프로그램이 개발되어 실제의 작업환경에서 사용될 때 트랩도어로써 활용될 수 있는 루틴들의 제거 여부를 확인하여야 하며, 실제 프로그램에 대한 테스트를 하면서 중간에 이상한 출력이 나오는지 검토해 보아야 함 윈도우/유닉스의 정상적인 프로세스를 기억, 현재 실행중인 프로세스 확인 윈도우 : Ctrl+Alt+Del 후 Windows 작업관리자 확인 자주 사용하는 프로세스 (윈도우) csrss : Client/Server Runtime SubSystem 윈도우 콘솔 관리 쓰레드의 생성, 삭제 32비트의 가상 MS/DOS 지원 svchost : Service Host - 30:44 dll (동적라이브러리) 파일로 실행되는 프로세스의 기본 프로세스 백도어 탐지법 소스코드 리뷰 HIDS 설치 Host-based IDS (S/W) 백도어를 탐지하는 최선의 방법 백도어가 임의의 포트에 대기하고 있을 때 해당 포트를 탐지함 최초의 권한획득을 최소화 (허가 X) 지속적인 점검이 필요 루트킷 (rootkit) 개요 시스템 침입 후 침입 사실을 숨긴 채 차후의 침입을 위한 백도어 트로이목마 설치, 원격접근, 내부 사용 흔적 삭제, 관리자 권한 획득 등 주로 불법적인 해킹에 사용되는 프로그램 모음 루트킷이 설치되면 자신이 뚫고 들어온 모든 경로를 바꾸어 놓고, 명령어들을 은폐해 놓음 해커가 시스템을 원격으로 해킹하고 있어도 루트킷이 설치되어 있는지 사실조차 감지하기 어려움 침입자는 먼저 암호를 크래킹하거나 시스템 취약점을 찾아내어서 사용자용 접근 권한을 획득한 뒤, 컴퓨터에 루트킷을 설치함 루트의 권한을 쉽게 획득하게 돕는 도구, 자신을 은폐, 삭제할 수 없도록 함 유저모드 Application (커널모드 함수호출 / 응답받기) 커널모드 원본코드 / 원데이터 루트킷은 User 모드의 Application, 커널모드의 원본코드, 원데이터를 공격 (경로 변형-Hooking) 은닉채널 개요 은닉채널 (Covert Channel) : 정보 전송이 목적이 아닌 채널 통신 채널은 은닉 채널과 공개 채널(Overt Channel) 로 구분됨. 은닉 채널은 다계층 보안 시스템(Multi-level Security System) 이 존재하는 경우 계층 간의 보안 허점을 이용하여 공개 채널의 사용자에게는 노출되지 않는 통신 채널을 구성함. 이러한 성격 때문에 디지털 워터마크나 디지털 서명 등에 사용되고 있음 악성코드 간의 통신 등에도 사용되기 때문에 은닉 채널의 탐지가 주요 이슈가 되고 있음 유사한 용어로 스테가노그래피(Steganography), 잠재적인 채널(Subliminal Channel) 등이 있음 은닉 채널의 모델은 The Prisoners’ Problem 모델이 사실상의 표준 모델(De-facto Model) 이 되었음 색출이 어려움 컴퓨터 네트워크 프로토콜에서의 은닉 채널 개요 네트워크 트래픽에 대한 은닉 채널 형성 기법은 Open Systems Interconnection (OSI) 모델에서 데이터 링크 계층(4), 네트워크 계층과 전송 계층(5), 응용 계층(6)(7) 등 각 계층 별로 다양한 방법이 보고되고 있음. 컴퓨터 네트워크 프로토콜에서의 은닉 채널의 형성 기법을 분류하면 아래와 같음 사용하지 않는 헤더 비트 프로토콜 명세 상에서 특정 값을 사용하도록 명시하지 않음 수신자가 값을 확인하지 않음 추후 사용하기 위해 예약해둔(Reserved) 영역을 이용 확장 기능 및 패딩 많은 프로토콜들이 확장성을 고려해 헤더에 확장 기능(Extension Header) 을 정의하여 필요한 경우에 선택적으로 사용하고 있음 대부분의 헤더 확장 기능은 앞으로 추가될 기능을 충분히 고려하지 못하였기 때문에 보안에 잠재적인 위협이 될 수 있음 프로토콜 필드 프로토콜 명세에 정의된 필드를 임의의 값으로 수정, 패킷의 전송에 직접적으로 관련이 있는 필드인 경우 예상치 못한 에러를 가져올 수 있음 패킷 전송 타이밍 : 전송된 패킷의 시간 간격이나 유실을 이용한 낮은 속도의 은닉 채널을 구성할 수 있음 터널링 현 프로토콜(보통 IP프로토콜)을 다른 프로토콜로 전환하는 과정 중에 은닉 채널을 삽입할 수 있음. 이를 통해 방화벽 등의 보안 장비를 우회할 수 있음. 대응책 HIDS 통신대역폭에 대한 엄격한 제한 정기적인 감사</summary></entry><entry><title type="html">정보보안 - 접근통제 보안모델</title><link href="https://bluesplatter.com/is_certification/IS-Management-AccessControlModel/" rel="alternate" type="text/html" title="정보보안 - 접근통제 보안모델" /><published>2021-12-02T09:00:00+09:00</published><updated>2021-12-02T09:00:00+09:00</updated><id>https://bluesplatter.com/is_certification/IS-Management-AccessControlModel</id><content type="html" xml:base="https://bluesplatter.com/is_certification/IS-Management-AccessControlModel/">&lt;h1 id=&quot;접근통제-보안모델&quot;&gt;접근통제 보안모델&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;접근통제의 모델
    &lt;ul&gt;
      &lt;li&gt;강제적 접근통제 (MAC) - Mandatory Access Control : 규칙기반(Rule Based)
        &lt;ul&gt;
          &lt;li&gt;자원 - 보안레벨 (Security Level)&lt;/li&gt;
          &lt;li&gt;사용자 - 보안 취급인가 (Security Clearance)&lt;/li&gt;
          &lt;li&gt;보안레벨과 보안 취급인가를 비교하여 접근통제&lt;/li&gt;
          &lt;li&gt;Linux/Unix 는 객체(파일) 을 소유하고 있는 주체가 다른 사용자에게 권한 부여하나 MAC 에서는 주체가 다른 사용자에게 권한을 줄 수가 없음 (정해진 규칙(보안관리자가 통제) 만을 따름) - 강제적 접근통제
            &lt;ul&gt;
              &lt;li&gt;관리자만이 정보자원을 분류, 설정, 변경&lt;/li&gt;
              &lt;li&gt;객체에 대한 접근 규칙 : &lt;strong&gt;규칙기반 접근통제&lt;/strong&gt; (중앙집중형 보안관리) - 사용자가 통제를 수정할 수 없다.
                &lt;ul&gt;
                  &lt;li&gt;보안전문가에 의해 생성&lt;/li&gt;
                  &lt;li&gt;운영자에 의해 설정&lt;/li&gt;
                  &lt;li&gt;운영시스템에 의해서 집행&lt;/li&gt;
                  &lt;li&gt;다른 보안기술에 의해 지원&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;단점
            &lt;ul&gt;
              &lt;li&gt;사용자의 기능이 매우 제한적&lt;/li&gt;
              &lt;li&gt;관리적 부담이 크다&lt;/li&gt;
              &lt;li&gt;비용이 많이 소요&lt;/li&gt;
              &lt;li&gt;성능저하가 발생할 수 있음&lt;/li&gt;
              &lt;li&gt;사용자 친화적이지 않음 : 상업적인 환경에 부적합&lt;/li&gt;
              &lt;li&gt;주로 군 시스템에서 사용&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;보안레이블 (민감성레이블 - Sensitivity Label) : 시스템에 있는 자원이 얼마나 민감한 자원인지 수치화 (자원민감도, 중요성)
            &lt;ul&gt;
              &lt;li&gt;모든 객체(자원)에 할당 : 파일, 디렉토리, 장비 등&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;보안허가증 : 주체가 특정 객체(특정자원) 에 접근할 수 있는지 표시&lt;/li&gt;
          &lt;li&gt;주체 S 는 객체 A 에 대한 보안허가증을 가지고 A에 접근 - 주체 S가 객체 A의 보안레이블 보다 보안허가가 높거나 같은 경우에 접근 가능&lt;/li&gt;
          &lt;li&gt;MLS (MultiLevel Security) policy : 다중 수준 보안&lt;/li&gt;
          &lt;li&gt;사용 예
            &lt;ul&gt;
              &lt;li&gt;BLP (벨라파둘라 모델) : 기밀성에 중점&lt;/li&gt;
              &lt;li&gt;Biba : 무결성에 중점&lt;/li&gt;
              &lt;li&gt;Clark-Willson Model : 무결성에 중점&lt;/li&gt;
              &lt;li&gt;Chinese Wall Model (만리장성 모델) : 무결성/기밀성&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;사용 예
            &lt;ul&gt;
              &lt;li&gt;NSA, SELinux, Trusted Solaris&lt;/li&gt;
              &lt;li&gt;DAC 모델로의 전환이 쉽지 않음 (보안레이블, 취급인가가 호환되지 않음)&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;임의적 접근통제 (DAC) - Discretionary Access Control : 신분에 근거
        &lt;ul&gt;
          &lt;li&gt;TCSEC 표준 중 하나
            &lt;ul&gt;
              &lt;li&gt;1985년 발행된 안전한 컴퓨터 시스템을 위한 평가지침서&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;신원기반 접근통제 / 사용자기반 접근통제 / 혼합방식 접근통제 : 주체가 속한 그룹의 신원에 근거하여 객체에 대한 접근을 제한&lt;/li&gt;
          &lt;li&gt;소유자의 임의성에 기반하여 접근통제&lt;/li&gt;
          &lt;li&gt;사용자에게 동적으로 접근권한을 부여 : 분산형 보안관리&lt;/li&gt;
          &lt;li&gt;유닉스/리눅스, Windows, Mac, DBMS 에서 이용&lt;/li&gt;
          &lt;li&gt;통제기법
            &lt;ul&gt;
              &lt;li&gt;접근제어행렬 (Access Control Matrix)
                &lt;ul&gt;
                  &lt;li&gt;주체(Row)(터미널/host/프로그램/개별사용자/그룹사용자…)&lt;/li&gt;
                  &lt;li&gt;객체(Column)&lt;/li&gt;
                  &lt;li&gt;접근권한(Cell) (소유/읽기/쓰기/실행..)&lt;/li&gt;
                  &lt;li&gt;관계를 표현 - 접근제어 정책을 관리&lt;/li&gt;
                  &lt;li&gt;주체와 객체가 많아진다면 행렬이 커지고(관리어려움), 빈 공간이 많아짐(비효율적)&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;자격목록 (CL - Capability List) : 한 주체가 갖는 자격(권한)들의 리스트
                &lt;ul&gt;
                  &lt;li&gt;권한 -&amp;gt; 주체가 객체에 대해 갖는 접근권한&lt;/li&gt;
                  &lt;li&gt;접근제어 행렬을 행(Row)단위로 관리하는 것&lt;/li&gt;
                  &lt;li&gt;Linked List 로 표현됨
                    &lt;ul&gt;
                      &lt;li&gt;
                        &lt;table&gt;
                          &lt;tbody&gt;
                            &lt;tr&gt;
                              &lt;td&gt;홍길동 -&amp;gt; 파일A(RWX)&lt;/td&gt;
                              &lt;td&gt;포인터 -&amp;gt; 파일C(RW)&lt;/td&gt;
                              &lt;td&gt;포인터 -&amp;gt; 파일D(R)&lt;/td&gt;
                            &lt;/tr&gt;
                          &lt;/tbody&gt;
                        &lt;/table&gt;
                      &lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;접근제어목록 (ACL - Access Control List)
                &lt;ul&gt;
                  &lt;li&gt;자격목록 : 주체 관점 / 접근제어목록 : 객체 관점&lt;/li&gt;
                  &lt;li&gt;객체의 관점에서 객체에 어떤 주체가 어떤 접근권한을 갖는지 명시&lt;/li&gt;
                  &lt;li&gt;접근제어 행렬을 열(Column)단위로 관리하는 것&lt;/li&gt;
                  &lt;li&gt;Linked List 로 표현됨
                    &lt;ul&gt;
                      &lt;li&gt;
                        &lt;table&gt;
                          &lt;tbody&gt;
                            &lt;tr&gt;
                              &lt;td&gt;파일 A -&amp;gt; 홍길동(RWX)&lt;/td&gt;
                              &lt;td&gt;포인터 -&amp;gt; 고길동(RW)&lt;/td&gt;
                              &lt;td&gt;포인터 -&amp;gt; 강길동(R)&lt;/td&gt;
                            &lt;/tr&gt;
                          &lt;/tbody&gt;
                        &lt;/table&gt;
                      &lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;장점
            &lt;ul&gt;
              &lt;li&gt;객체별 세분화된 접근제어가 가능&lt;/li&gt;
              &lt;li&gt;객체의 소유자가 다른 주체에게 임의적으로 접근권한 부여가 가능 -&amp;gt; 유연한 접근제어 서비스&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;단점
            &lt;ul&gt;
              &lt;li&gt;시스템 전체적으로 접근제어이 일관성이 부족&lt;/li&gt;
              &lt;li&gt;권한이 높은 주체가 다른 주체에게 임의로 자료에 대한 접근을 허용할 수 있음&lt;/li&gt;
              &lt;li&gt;주체의 신분에 따라 접근 통제가 이루어지므로 다른 주체의 신분을 사용해 불법적 접근을 할 수 있음&lt;/li&gt;
              &lt;li&gt;멀웨어 (웜, 루트킷, 트로이목마, 키로거 등 악성코드) 취약점이 존재
                &lt;ul&gt;
                  &lt;li&gt;트로이목마 예시
                    &lt;ul&gt;
                      &lt;li&gt;Data File 에 대해 user1 이 rw 권한을 가지고 있다.&lt;/li&gt;
                      &lt;li&gt;user1 은 프로그램을 이용해 Data File 에 접근한다.&lt;/li&gt;
                      &lt;li&gt;Attacker 는 프로그램 안에 트로이목마를 심고, 이 프로그램에 대응하는 Back-Pocket 파일을 생성 (Attacker 는 rw, user1 은 w 권한을 가짐)&lt;/li&gt;
                      &lt;li&gt;Attacker 는 프로그램에 user1의 권한을 부여, user1 은 트로이목마가 심어진 프로그램을 실행&lt;/li&gt;
                      &lt;li&gt;user1 은 프로그램을 이용해 Data File 을 읽고, 해당 내용을 Back-Pocket 파일에 쓴다.&lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;역할기반 접근통제 (RBAC) - Role Based Access Control : 역할에 기반
        &lt;ul&gt;
          &lt;li&gt;개요
            &lt;ul&gt;
              &lt;li&gt;역할에 기반 : 접근제어 관리가 단순&lt;/li&gt;
              &lt;li&gt;MAC과 DAC의 약점을 보완한 방식 - 권한을 역할에 연관시킴&lt;/li&gt;
              &lt;li&gt;그룹과 역할의 구분
                &lt;ul&gt;
                  &lt;li&gt;그룹 : 사용자들의 집합 (권한의 집합은 아님)&lt;/li&gt;
                  &lt;li&gt;역할 : 사용자들의 집합 &amp;amp; 권한의 집합&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;중앙에서 관리되는 통제의 모음을 사용
                &lt;ul&gt;
                  &lt;li&gt;관리자에 의해서 중앙집중적인 역할 (사용자집합 &amp;amp; 권한집합) 설정&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;장점
            &lt;ul&gt;
              &lt;li&gt;전체 시스템 관점에서 일관성 있는 접근제어가 가능&lt;/li&gt;
              &lt;li&gt;역할만 사용자에게 부여하면 됨
                &lt;ul&gt;
                  &lt;li&gt;정적이면서 동적인 접근통제
                    &lt;ul&gt;
                      &lt;li&gt;중앙에서 역할을 정의 (정적)
                        &lt;ul&gt;
                          &lt;li&gt;Role1 (File1)&lt;/li&gt;
                          &lt;li&gt;Role2 (File1, File2)&lt;/li&gt;
                          &lt;li&gt;Role3 (File1, File2, File3)&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/li&gt;
                      &lt;li&gt;사용자와 역할을 할당 (동적)
                        &lt;ul&gt;
                          &lt;li&gt;user1 -&amp;gt; Role1&lt;/li&gt;
                          &lt;li&gt;User2 -&amp;gt; Role1, Role2 (1:1일 필요 없음)&lt;/li&gt;
                          &lt;li&gt;user3 -&amp;gt; Role3 -&amp;gt; Role2&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;단점
            &lt;ul&gt;
              &lt;li&gt;역할수행에 반드시 필요한 접근권한만 부여해야 함 (최소권한부여원칙 준수-&amp;gt;직무분리원칙 충족용이)&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;접근통제-보안모델-1&quot;&gt;접근통제 보안모델&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;보안모델
    &lt;ul&gt;
      &lt;li&gt;BLP (Bell-Lapadula) 기밀성 모델
        &lt;ul&gt;
          &lt;li&gt;MAC 에 해당 (군용)&lt;/li&gt;
          &lt;li&gt;기밀성에 초점 (정보유출 차단)&lt;/li&gt;
          &lt;li&gt;정보흐름 모델
            &lt;ul&gt;
              &lt;li&gt;보안레벨이 높은 정보가 보안레벨이 낮은 개체로 이동하는 것을 차단&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;최초의 수학적 모델
            &lt;ul&gt;
              &lt;li&gt;MLS Policy (다중등급 보안정책 / 다중수준 보안시스템)
                &lt;ul&gt;
                  &lt;li&gt;주체
                    &lt;ul&gt;
                      &lt;li&gt;A 각각이 갖는 허가(Clearance) 가 다름&lt;/li&gt;
                      &lt;li&gt;B 각각이 갖는 허가(Clearance) 가 다름&lt;/li&gt;
                      &lt;li&gt;C 각각이 갖는 허가(Clearance) 가 다름&lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                  &lt;li&gt;객체
                    &lt;ul&gt;
                      &lt;li&gt;가 각각이 갖는 객체레벨-분류(Classification) 이 다름&lt;/li&gt;
                      &lt;li&gt;나 각각이 갖는 객체레벨-분류(Classification) 이 다름&lt;/li&gt;
                      &lt;li&gt;다 각각이 갖는 객체레벨-분류(Classification) 이 다름&lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;보안규칙
            &lt;ul&gt;
              &lt;li&gt;높은 수준의 주체는 낮은 수준의 주체에 정보전달을 할 수 없어야 함&lt;/li&gt;
              &lt;li&gt;다중수준 보안시스템의 준수사항
                &lt;ul&gt;
                  &lt;li&gt;&lt;strong&gt;No Read Up (단순보안속성:Simple Security Property) : 주체의 상향읽기금지, 하향읽기허용&lt;/strong&gt;
                    &lt;ul&gt;
                      &lt;li&gt;&lt;strong&gt;주체가 자신보다 높은 보안수준의 객체를 읽을 수 없다.&lt;/strong&gt;&lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                  &lt;li&gt;&lt;strong&gt;No Write Down (성형보안속성:Star Property) : 주체의 하향기록금지, 상향기록허용&lt;/strong&gt;
                    &lt;ul&gt;
                      &lt;li&gt;&lt;strong&gt;주체가 자신보다 낮은 보안수준의 객체에 쓸 수 없다.&lt;/strong&gt;&lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                  &lt;li&gt;(특수 성형 속성:Strong Star Property) : 주체는 동일한 레벨에서만 읽기/쓰기 가능&lt;/li&gt;
                  &lt;li&gt;(평정 속성:Tranquility Property) : 객체와 주체의 보안등급은 컴퓨터 수행처리과정에서 변경될수 없다.&lt;/li&gt;
                  &lt;li&gt;(참고) Dominate : 우위에 있다.
                    &lt;ul&gt;
                      &lt;li&gt;No Read Up : 주체의 접근클래스가 객체의 접근클래스보다 우위에 있을 때 읽기 수행이 가능하다.&lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;트로이 목마(Trojan Horse) 공격 방어 가능
                &lt;ul&gt;
                  &lt;li&gt;DAC 와 달리 read 는 가능 (No Read Up-SS Property) 하나 write 가 안됨. (No Write Down-* Property)&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;약점
            &lt;ul&gt;
              &lt;li&gt;지나친 기밀성 치중 (무결성, 가용성을 고려하지 않음)&lt;/li&gt;
              &lt;li&gt;은닉채널을 다루지 않음
                &lt;ul&gt;
                  &lt;li&gt;보안등급이 낮은 사용자가 보안등급이 높은 사용자의 네트워크 채널에 접근 가능
                    &lt;ul&gt;
                      &lt;li&gt;정보흐름모델에서는 은닉채널이 존재하지 않는다는 것을 보장해야 함
                        &lt;ul&gt;
                          &lt;li&gt;은닉채널 : 보안매커니즘에 의해 통제되지 않는 정보 흐름&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;파일공유, 서버시스템 이용에 대해서 다루지 않음
                &lt;ul&gt;
                  &lt;li&gt;높은 레벨의 주체와 낮은 레벨의 주체가 같은 파일(메모리) 사용시 기밀성 훼손&lt;/li&gt;
                  &lt;li&gt;네트워크에 대한 부분이 고려되지 않음&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;MLP (다중등급 보안정책) 에 치중 (다른정책은 고려하지 않음)&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Biba 무결성 모델
        &lt;ul&gt;
          &lt;li&gt;상업용 모델로 개발&lt;/li&gt;
          &lt;li&gt;최초의 수학적 무결성 모델 : 부적절한 변조 방지
            &lt;ul&gt;
              &lt;li&gt;무결성의 3가지 목표
                &lt;ul&gt;
                  &lt;li&gt;비인가자의 변조 방지 : Biba 모델의 중점적 목표 (1번만 취급)&lt;/li&gt;
                  &lt;li&gt;내/외부 일관성 유지 (정확한 트랜잭션)&lt;/li&gt;
                  &lt;li&gt;인가자에 의한 불법적인 변조를 방지 (직무분리)&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;정보흐름 모델
            &lt;ul&gt;
              &lt;li&gt;낮은 무결성 수준에서 높은 무결성 수준으로 정보가 이동하는 것을 차단
                &lt;ul&gt;
                  &lt;li&gt;신뢰성이 높은 정보를 신뢰성이 낮은 정보가 훼손하는 것을 차단&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;보안규칙
            &lt;ul&gt;
              &lt;li&gt;&lt;strong&gt;단순무결성 (Simple Integrity Property)&lt;/strong&gt;
                &lt;ul&gt;
                  &lt;li&gt;객체(Object)의 무결성 수준이 주체의 무결성(Subject) 수준보다 우세할 때 주체는 객체를 읽을 수 있음&lt;/li&gt;
                  &lt;li&gt;&lt;strong&gt;I(S) &amp;lt;= I(O), S는 O를 읽을 수 있다.&lt;/strong&gt;&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;&lt;strong&gt;무결성제한 (Star Integrity property)&lt;/strong&gt;
                &lt;ul&gt;
                  &lt;li&gt;&lt;strong&gt;I(S) &amp;gt;= I(O), S는 O를 변경할 수 있다.&lt;/strong&gt;&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;호출속성 (Invocation Property)
                &lt;ul&gt;
                  &lt;li&gt;주체는 자신보다 높은 무결성 수준의 주체를 호출할 수 없다. (서비스를 요청할 수 없다.)&lt;/li&gt;
                  &lt;li&gt;I(S1) &amp;gt;= I(S2), S1은 S2를 호출 가능&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Clark-Wilson 무결성 모델
        &lt;ul&gt;
          &lt;li&gt;Biba 모델보다 정교한 실제적 무결성 모델&lt;/li&gt;
          &lt;li&gt;상업용을 목표로 개발
            &lt;ul&gt;
              &lt;li&gt;무결성의 3가지 목표 (Clark-Wilson 은 모두 취급)
                &lt;ul&gt;
                  &lt;li&gt;비인가자의 변조 방지&lt;/li&gt;
                  &lt;li&gt;내/외부 일관성 유지 (정확한 트랜잭션)
                    &lt;ul&gt;
                      &lt;li&gt;예시
                        &lt;ul&gt;
                          &lt;li&gt;트랙잭션의 개념
                            &lt;ul&gt;
                              &lt;li&gt;A 가 B 에게 100만원을 송금하려고 할때, A 계좌에는 100만원 출금, B 계좌에는 100만원 입금이 되어야 함&lt;/li&gt;
                              &lt;li&gt;중간에 네트워크에서 문제가 발생하면 A 계좌에는 100만원 출금, B 계좌는 변동없음 &amp;gt; 트랙잭션 개념의 필요성&lt;/li&gt;
                            &lt;/ul&gt;
                          &lt;/li&gt;
                          &lt;li&gt;회계상 이중장부 처리시스템
                            &lt;ul&gt;
                              &lt;li&gt;중복처리로 자료의 무결성을 입증&lt;/li&gt;
                            &lt;/ul&gt;
                          &lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                  &lt;li&gt;인가자에 의한 불법적인 변조를 방지 (직무분리)&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;만리장성(Chinese Wall) 모델
        &lt;ul&gt;
          &lt;li&gt;Chinese Wall model = Brewer-Nash Model&lt;/li&gt;
          &lt;li&gt;&lt;strong&gt;MAC, DAC&lt;/strong&gt;
            &lt;ul&gt;
              &lt;li&gt;자유재량과 강제적 접근개념을 모두 이용&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;이해충돌과 관련이 있는 모델 (개인의 이익과 조직의 이익의 충돌)
            &lt;ul&gt;
              &lt;li&gt;예 : 국토개발부 공무원이 부동산을 매입&lt;/li&gt;
              &lt;li&gt;예 : A 지역 부동산을 가지고 있는 국토개발부 담당공무원이 A지역 재개발계획에 참여&lt;/li&gt;
              &lt;li&gt;예 : 기업 컨설팅 업체의 A 직원이 서로 경쟁관계인 C와 D 업체의 컨설팅을 모두 하고 있음&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;정보흐름 모델
            &lt;ul&gt;
              &lt;li&gt;&lt;strong&gt;주체와 객체 사이에서 이해충돌을 야기하는 정보의 흐름을 방지하기 위한 모델&lt;/strong&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Lattice 모델 (Denning 에 의해서 제안)
        &lt;ul&gt;
          &lt;li&gt;BLP 모델을 확장&lt;/li&gt;
          &lt;li&gt;수학적인 구조를 이용&lt;/li&gt;
          &lt;li&gt;정보에 대한 흐름을 제어하기 위한 모델
            &lt;ul&gt;
              &lt;li&gt;서로 다른 보안등급 사이에 정보가 흐르는 것을 통제&lt;/li&gt;
              &lt;li&gt;낮은 보안등급의 정보가 같거나 높은 보안등급으로만 정보가 흐르도록 통제&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>HY03</name><email>hyunik03@gmail.com</email></author><category term="IS_Certification" /><category term="정보보안기사" /><category term="접근통제 보안모델" /><category term="MAC" /><category term="DAC" /><category term="RBAC" /><summary type="html">접근통제 보안모델 접근통제의 모델 강제적 접근통제 (MAC) - Mandatory Access Control : 규칙기반(Rule Based) 자원 - 보안레벨 (Security Level) 사용자 - 보안 취급인가 (Security Clearance) 보안레벨과 보안 취급인가를 비교하여 접근통제 Linux/Unix 는 객체(파일) 을 소유하고 있는 주체가 다른 사용자에게 권한 부여하나 MAC 에서는 주체가 다른 사용자에게 권한을 줄 수가 없음 (정해진 규칙(보안관리자가 통제) 만을 따름) - 강제적 접근통제 관리자만이 정보자원을 분류, 설정, 변경 객체에 대한 접근 규칙 : 규칙기반 접근통제 (중앙집중형 보안관리) - 사용자가 통제를 수정할 수 없다. 보안전문가에 의해 생성 운영자에 의해 설정 운영시스템에 의해서 집행 다른 보안기술에 의해 지원 단점 사용자의 기능이 매우 제한적 관리적 부담이 크다 비용이 많이 소요 성능저하가 발생할 수 있음 사용자 친화적이지 않음 : 상업적인 환경에 부적합 주로 군 시스템에서 사용 보안레이블 (민감성레이블 - Sensitivity Label) : 시스템에 있는 자원이 얼마나 민감한 자원인지 수치화 (자원민감도, 중요성) 모든 객체(자원)에 할당 : 파일, 디렉토리, 장비 등 보안허가증 : 주체가 특정 객체(특정자원) 에 접근할 수 있는지 표시 주체 S 는 객체 A 에 대한 보안허가증을 가지고 A에 접근 - 주체 S가 객체 A의 보안레이블 보다 보안허가가 높거나 같은 경우에 접근 가능 MLS (MultiLevel Security) policy : 다중 수준 보안 사용 예 BLP (벨라파둘라 모델) : 기밀성에 중점 Biba : 무결성에 중점 Clark-Willson Model : 무결성에 중점 Chinese Wall Model (만리장성 모델) : 무결성/기밀성 사용 예 NSA, SELinux, Trusted Solaris DAC 모델로의 전환이 쉽지 않음 (보안레이블, 취급인가가 호환되지 않음) 임의적 접근통제 (DAC) - Discretionary Access Control : 신분에 근거 TCSEC 표준 중 하나 1985년 발행된 안전한 컴퓨터 시스템을 위한 평가지침서 신원기반 접근통제 / 사용자기반 접근통제 / 혼합방식 접근통제 : 주체가 속한 그룹의 신원에 근거하여 객체에 대한 접근을 제한 소유자의 임의성에 기반하여 접근통제 사용자에게 동적으로 접근권한을 부여 : 분산형 보안관리 유닉스/리눅스, Windows, Mac, DBMS 에서 이용 통제기법 접근제어행렬 (Access Control Matrix) 주체(Row)(터미널/host/프로그램/개별사용자/그룹사용자…) 객체(Column) 접근권한(Cell) (소유/읽기/쓰기/실행..) 관계를 표현 - 접근제어 정책을 관리 주체와 객체가 많아진다면 행렬이 커지고(관리어려움), 빈 공간이 많아짐(비효율적) 자격목록 (CL - Capability List) : 한 주체가 갖는 자격(권한)들의 리스트 권한 -&amp;gt; 주체가 객체에 대해 갖는 접근권한 접근제어 행렬을 행(Row)단위로 관리하는 것 Linked List 로 표현됨 홍길동 -&amp;gt; 파일A(RWX) 포인터 -&amp;gt; 파일C(RW) 포인터 -&amp;gt; 파일D(R) 접근제어목록 (ACL - Access Control List) 자격목록 : 주체 관점 / 접근제어목록 : 객체 관점 객체의 관점에서 객체에 어떤 주체가 어떤 접근권한을 갖는지 명시 접근제어 행렬을 열(Column)단위로 관리하는 것 Linked List 로 표현됨 파일 A -&amp;gt; 홍길동(RWX) 포인터 -&amp;gt; 고길동(RW) 포인터 -&amp;gt; 강길동(R) 장점 객체별 세분화된 접근제어가 가능 객체의 소유자가 다른 주체에게 임의적으로 접근권한 부여가 가능 -&amp;gt; 유연한 접근제어 서비스 단점 시스템 전체적으로 접근제어이 일관성이 부족 권한이 높은 주체가 다른 주체에게 임의로 자료에 대한 접근을 허용할 수 있음 주체의 신분에 따라 접근 통제가 이루어지므로 다른 주체의 신분을 사용해 불법적 접근을 할 수 있음 멀웨어 (웜, 루트킷, 트로이목마, 키로거 등 악성코드) 취약점이 존재 트로이목마 예시 Data File 에 대해 user1 이 rw 권한을 가지고 있다. user1 은 프로그램을 이용해 Data File 에 접근한다. Attacker 는 프로그램 안에 트로이목마를 심고, 이 프로그램에 대응하는 Back-Pocket 파일을 생성 (Attacker 는 rw, user1 은 w 권한을 가짐) Attacker 는 프로그램에 user1의 권한을 부여, user1 은 트로이목마가 심어진 프로그램을 실행 user1 은 프로그램을 이용해 Data File 을 읽고, 해당 내용을 Back-Pocket 파일에 쓴다. 역할기반 접근통제 (RBAC) - Role Based Access Control : 역할에 기반 개요 역할에 기반 : 접근제어 관리가 단순 MAC과 DAC의 약점을 보완한 방식 - 권한을 역할에 연관시킴 그룹과 역할의 구분 그룹 : 사용자들의 집합 (권한의 집합은 아님) 역할 : 사용자들의 집합 &amp;amp; 권한의 집합 중앙에서 관리되는 통제의 모음을 사용 관리자에 의해서 중앙집중적인 역할 (사용자집합 &amp;amp; 권한집합) 설정 장점 전체 시스템 관점에서 일관성 있는 접근제어가 가능 역할만 사용자에게 부여하면 됨 정적이면서 동적인 접근통제 중앙에서 역할을 정의 (정적) Role1 (File1) Role2 (File1, File2) Role3 (File1, File2, File3) 사용자와 역할을 할당 (동적) user1 -&amp;gt; Role1 User2 -&amp;gt; Role1, Role2 (1:1일 필요 없음) user3 -&amp;gt; Role3 -&amp;gt; Role2 단점 역할수행에 반드시 필요한 접근권한만 부여해야 함 (최소권한부여원칙 준수-&amp;gt;직무분리원칙 충족용이)</summary></entry><entry><title type="html">정보보안 - SSO(통합인증체계) / Kerberos</title><link href="https://bluesplatter.com/is_certification/IS-Management-SSO/" rel="alternate" type="text/html" title="정보보안 - SSO(통합인증체계) / Kerberos" /><published>2021-12-02T09:00:00+09:00</published><updated>2021-12-02T09:00:00+09:00</updated><id>https://bluesplatter.com/is_certification/IS-Management-SSO</id><content type="html" xml:base="https://bluesplatter.com/is_certification/IS-Management-SSO/">&lt;h1 id=&quot;통합인증-체계sso&quot;&gt;통합인증 체계(SSO)&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;SSO(Single Sign On) 의 기본개념
    &lt;ul&gt;
      &lt;li&gt;통합 인증 체계(SSO) 정의
        &lt;ul&gt;
          &lt;li&gt;한 번의 시스템 인증을 통하여 접근하고자 하는 다양한 정보시스템에 재인증 절차 없이 접근할 수 있도록 하는 통합 로그인 솔루션
            &lt;ul&gt;
              &lt;li&gt;통합 로그인 솔루션 : 대표적인 인증방법으로는 커버로스(Kerberos) 를 이용한 윈도우의 액티브 디렉터리(Active Directory) 가 있다.&lt;/li&gt;
              &lt;li&gt;사용 예
                &lt;ul&gt;
                  &lt;li&gt;Kerberos&lt;/li&gt;
                  &lt;li&gt;유럽식 보안 시스템 : SESAME (공개키 암호화 방식 사용, Needham Schroeder Protocol 사용)&lt;/li&gt;
                  &lt;li&gt;크립토나이트&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;통합신원관리 시스템의 중심적 개념은 SSO 를 사용하여 사용자가 한 번만 인증하면 네트워크의 모든 자원에 접속할 수 있게 하는 것&lt;/li&gt;
          &lt;li&gt;장점 : 사용자 편의성, 운영비용 감소, PKI 기반 보안기능 (보안성 강화)&lt;/li&gt;
          &lt;li&gt;단점 : 단일실패지점 (SPoF-SinglePointOfFailure)&lt;/li&gt;
          &lt;li&gt;EAM (Extranet Access Management) (권한관리 시스템) 은 SSO 기술 기반으로 나온 시스템 (SSO + 보안성)
            &lt;ul&gt;
              &lt;li&gt;접근권한부여 / 관리 - 통합인증 권한관리 솔루션&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;SSO 구성요소
        &lt;ul&gt;
          &lt;li&gt;사용자&lt;/li&gt;
          &lt;li&gt;인증서버&lt;/li&gt;
          &lt;li&gt;LDAP (Lightweight Directory Access Protocol) : X.500 을 근거로 한 디렉토리 DB에 접속하기 위한 프로토콜&lt;/li&gt;
          &lt;li&gt;SSO Agent : 각 정보시스템에 SSO 정보를 송수신&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;과정
        &lt;ul&gt;
          &lt;li&gt;User : User 가 Portal 에 접속&lt;/li&gt;
          &lt;li&gt;User : Portal 로그인 화면 (인증서버) 으로 Redirect&lt;/li&gt;
          &lt;li&gt;User : 인증서버에 사용자의 ID/PW (인증정보) 입력&lt;/li&gt;
          &lt;li&gt;인증서버 : LDAP (사용자 프로파일 DB) 를 이용해 사용자의 인증정보를 검증&lt;/li&gt;
          &lt;li&gt;인증서버 : Portal 에 로그인처리&lt;/li&gt;
          &lt;li&gt;User : Portal 의 각 서비스에 접근이 가능&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;커버로스-kerberos&quot;&gt;커버로스 (Kerberos)&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;개요
    &lt;ul&gt;
      &lt;li&gt;커버로스(Kerberos) 는 인증 프로토콜이며 동시에 KDC 이다.&lt;/li&gt;
      &lt;li&gt;이 이름은 문을 지키는 그리스 신화의 머리가 셋 달린 개의 이름에서 따온 것이다.&lt;/li&gt;
      &lt;li&gt;MIT 에서 설계를 했고 여러 버전으로 업데이트 되었다.&lt;/li&gt;
      &lt;li&gt;개방된 컴퓨터 네트워크 내에서 서비스 요구를 인증하기 위해 대칭키 암호기법에 바탕을 둔 티켓 기반 인증 프로토콜이다.&lt;/li&gt;
      &lt;li&gt;수년 동안 유닉스 시스템에서 사용되었고, 현재 윈도우 서버 운영체제에서 기본 인증기법으로 사용되고 있다.&lt;/li&gt;
      &lt;li&gt;분산 환경을 위한 SSO 의 한 예이며, 이종 네트워크를 위한 사실상의 표준&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;커버로스 구성요소
    &lt;ul&gt;
      &lt;li&gt;KDC(키분배센터) : AS(인증서버) + TGS(티켓발행서버)
        &lt;ul&gt;
          &lt;li&gt;AS (인증서버)
            &lt;ul&gt;
              &lt;li&gt;사용자에 대한 인증을 수행&lt;/li&gt;
              &lt;li&gt;중앙집중식 DB에 패스워드를 모두 저장&lt;/li&gt;
              &lt;li&gt;각 서버와 유일한 비밀키를 서로 공유하고 있음&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;TGS(티켓발행서버)
            &lt;ul&gt;
              &lt;li&gt;AS 에 인증받은 사용자에 티켓을 발행&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Ticket&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;과정
    &lt;ul&gt;
      &lt;li&gt;사용자 로그인 시
        &lt;ul&gt;
          &lt;li&gt;클라이언트 : 티켓-승인티켓을 요청 - 인증서버에 인증 시도&lt;/li&gt;
          &lt;li&gt;인증서버 : 티켓 + 세션키를 클라이언트에 전송&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;서비스 유형마다
        &lt;ul&gt;
          &lt;li&gt;클라이언트 : 서비스-승인티켓을 티켓발행서버에 요청&lt;/li&gt;
          &lt;li&gt;티켓발행서버 : 티켓 + 세션키를 클라이언트에 전송&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;서비스 요청
        &lt;ul&gt;
          &lt;li&gt;클라이언트 : 서버에 서비스 요청&lt;/li&gt;
          &lt;li&gt;서버 : 클라이언트에 액세스 권한 부여&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;취약점
    &lt;ul&gt;
      &lt;li&gt;KDC 는 SPoF (실패단일지점) 가 될 수 있음.&lt;/li&gt;
      &lt;li&gt;사용자에게 비밀키가 임시로 저장이 됨 -&amp;gt; 공격자가 세션키 획득 가능&lt;/li&gt;
      &lt;li&gt;SSO 공통으로 패스워드 추측 공격에 취약&lt;/li&gt;
      &lt;li&gt;위 취약점을 보완한 것이 SESAME&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>HY03</name><email>hyunik03@gmail.com</email></author><category term="IS_Certification" /><category term="정보보안기사" /><category term="SSO" /><category term="Single Sign On" /><category term="Kerberos" /><summary type="html">통합인증 체계(SSO) SSO(Single Sign On) 의 기본개념 통합 인증 체계(SSO) 정의 한 번의 시스템 인증을 통하여 접근하고자 하는 다양한 정보시스템에 재인증 절차 없이 접근할 수 있도록 하는 통합 로그인 솔루션 통합 로그인 솔루션 : 대표적인 인증방법으로는 커버로스(Kerberos) 를 이용한 윈도우의 액티브 디렉터리(Active Directory) 가 있다. 사용 예 Kerberos 유럽식 보안 시스템 : SESAME (공개키 암호화 방식 사용, Needham Schroeder Protocol 사용) 크립토나이트 통합신원관리 시스템의 중심적 개념은 SSO 를 사용하여 사용자가 한 번만 인증하면 네트워크의 모든 자원에 접속할 수 있게 하는 것 장점 : 사용자 편의성, 운영비용 감소, PKI 기반 보안기능 (보안성 강화) 단점 : 단일실패지점 (SPoF-SinglePointOfFailure) EAM (Extranet Access Management) (권한관리 시스템) 은 SSO 기술 기반으로 나온 시스템 (SSO + 보안성) 접근권한부여 / 관리 - 통합인증 권한관리 솔루션 SSO 구성요소 사용자 인증서버 LDAP (Lightweight Directory Access Protocol) : X.500 을 근거로 한 디렉토리 DB에 접속하기 위한 프로토콜 SSO Agent : 각 정보시스템에 SSO 정보를 송수신 과정 User : User 가 Portal 에 접속 User : Portal 로그인 화면 (인증서버) 으로 Redirect User : 인증서버에 사용자의 ID/PW (인증정보) 입력 인증서버 : LDAP (사용자 프로파일 DB) 를 이용해 사용자의 인증정보를 검증 인증서버 : Portal 에 로그인처리 User : Portal 의 각 서비스에 접근이 가능</summary></entry><entry><title type="html">정보보안 - 접근통제와 사용자 인증</title><link href="https://bluesplatter.com/is_certification/IS-Management-AccessControl/" rel="alternate" type="text/html" title="정보보안 - 접근통제와 사용자 인증" /><published>2021-12-01T09:00:00+09:00</published><updated>2021-12-01T09:00:00+09:00</updated><id>https://bluesplatter.com/is_certification/IS-Management-AccessControl</id><content type="html" xml:base="https://bluesplatter.com/is_certification/IS-Management-AccessControl/">&lt;h1 id=&quot;접근통제&quot;&gt;접근통제&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;접근통제 개요
    &lt;ul&gt;
      &lt;li&gt;접근통제(접근제어, Access Control) 기본 개념
        &lt;ul&gt;
          &lt;li&gt;컴퓨터 보안의 주된 목적
            &lt;ul&gt;
              &lt;li&gt;허가되지 않은 사용자 (비인가자)에 의한 정보자원 접근 제한&lt;/li&gt;
              &lt;li&gt;정당한 사용자 (인가자)가 허가되지 않은 방법으로(비인가된 방식) 정보자원에 접근하는 것을 제한&lt;/li&gt;
              &lt;li&gt;정당한 사용자가 허가된 방식으로만 자원에 접근하도록 하는 것&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;주체(외부에서 접근하는 사람)가 객체(시스템 등 접근 대상)에 접근(Access) 할 때 보안상의 위협, 변조 등과 같은 위험으로부터 객체와 제반 환경을 보호하기 위한 보안 대책&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;접근통제 절차
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;식별&lt;/strong&gt;(Identification) : 인증 시스템에 본인이 누구인지 스스로를 밝히기 위해 정보를 제공 (ID, 계정번호 등) 하는 주체활동&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;인증&lt;/strong&gt;(Authentication) : 주체의 신원을 검증하기 위한 사용 증명 활동 (패스워드, PIN, 토큰 등)&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;인가&lt;/strong&gt;(Authorization) : 인증된 주체에게 권한을 부여하는 것&lt;/li&gt;
      &lt;li&gt;책임추적성(Accountability) : 시스템에 접근한 주체가 시스템에 어떤 행위를 하고 있는지 기록
        &lt;ul&gt;
          &lt;li&gt;해명책임성으로도 해석됨&lt;/li&gt;
          &lt;li&gt;사용자의 이용을 추적하고 그의 행동에 대해 기록하고 추적하는 활동&lt;/li&gt;
          &lt;li&gt;사전 침입 의도를 감소시킴&lt;/li&gt;
          &lt;li&gt;관여하지 않은 사람에게 책임을 물어 불이익을 당하지 않도록 함&lt;/li&gt;
          &lt;li&gt;식별, 인증, 권한부여, 접근통제, 감사 개념을 기반으로 수립됨&lt;/li&gt;
          &lt;li&gt;책임추적이 가장 어려운 경우 : 하나의 계정을 여러 명이 공유할 경우&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;접근통제 기본 원칙
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;직무 분리&lt;/strong&gt;
        &lt;ul&gt;
          &lt;li&gt;한 개인이 전체 업무에 접근 -&amp;gt; 전체 업무를 파괴할 가능성이 있음&lt;/li&gt;
          &lt;li&gt;시스템 단계별로 나누어서 직무를 부여 -&amp;gt; 전체 업무를 파괴하는 사고를 방지&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;최소 권한 부여&lt;/strong&gt;
        &lt;ul&gt;
          &lt;li&gt;사용자가 작업을 하는데 있어서 필요한 최소한의 접근권한 / 자원을 부여&lt;/li&gt;
          &lt;li&gt;사용자의 실수나 의도적인 방법으로 인한 손상을 최소화&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;입력의 신뢰성
        &lt;ul&gt;
          &lt;li&gt;충분한 사용자 인증 기능이 요구됨&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;개방적 정책과 폐쇄적 정책&lt;/li&gt;
      &lt;li&gt;정책 결합과 충돌해결&lt;/li&gt;
      &lt;li&gt;관리정책&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;사용자 인증과 메시지 인증
    &lt;ul&gt;
      &lt;li&gt;사용자 인증
        &lt;ul&gt;
          &lt;li&gt;사용자 A가 C에 접속을 시도할 때 C와 협조하여 자신이 A임을 증명할 수 있어야 하나, B가 A를 가장할 수 없어야 함&lt;/li&gt;
          &lt;li&gt;실시간 처리&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;메시지 인증 (MAC)
        &lt;ul&gt;
          &lt;li&gt;실시간 처리 안됨&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;사용자 인증 유형
    &lt;ul&gt;
      &lt;li&gt;지식 (Something you know) - 패스워드, PIN&lt;/li&gt;
      &lt;li&gt;소유 (Something you have) - 토큰, 스마트카드&lt;/li&gt;
      &lt;li&gt;존재 (Something you are) - 지문&lt;/li&gt;
      &lt;li&gt;행위 (Something you do) - 서명, 움직임&lt;/li&gt;
      &lt;li&gt;Two Factor - 위 타입 중 2가지 매커니즘을 결합한 것 (예:토큰 + PIN)
        &lt;ul&gt;
          &lt;li&gt;ATM : PIN + 카드&lt;/li&gt;
          &lt;li&gt;신용카드 : 카드 + 서명&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Multi Factor - 위 타입 중 3가지 이상을 결합한 것 (예:토큰 + PIN + 지문)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;인증 기법
    &lt;ul&gt;
      &lt;li&gt;지식에 기반을 둔 인증 (What you know)
        &lt;ul&gt;
          &lt;li&gt;장점
            &lt;ul&gt;
              &lt;li&gt;다양한 분야에서 사용 가능&lt;/li&gt;
              &lt;li&gt;검증 방법이 확실 (모호성이 없음)&lt;/li&gt;
              &lt;li&gt;관리비용 저렴&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;단점
            &lt;ul&gt;
              &lt;li&gt;소유자가 지식을 망각했을 경우&lt;/li&gt;
              &lt;li&gt;공격자에 의해서 추측이 가능&lt;/li&gt;
              &lt;li&gt;사회공학적 공격에 매우 취약&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;소유에 기반을 둔 인증 (What you have)
        &lt;ul&gt;
          &lt;li&gt;장점
            &lt;ul&gt;
              &lt;li&gt;다양한 매체를 통해 인증 가능 (학생증, 신분증, 열쇠, OTP)&lt;/li&gt;
              &lt;li&gt;경제적&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;단점
            &lt;ul&gt;
              &lt;li&gt;소유물이 반드시 있어야 함&lt;/li&gt;
              &lt;li&gt;복제가 가능&lt;/li&gt;
              &lt;li&gt;손실이나 도난 시 관리기능이 필요&lt;/li&gt;
              &lt;li&gt;타인이 쉽게 도용 가능 : 단독으로 사용하지 않음&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;개체 특성에 기반을 둔 인증 (What you are)
        &lt;ul&gt;
          &lt;li&gt;장점
            &lt;ul&gt;
              &lt;li&gt;지문, 홍채, 음성, 얼굴인식 등 무언가를 소유할 필요가 없음&lt;/li&gt;
              &lt;li&gt;도난의 염려가 없음&lt;/li&gt;
              &lt;li&gt;위조가 어려움&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;단점
            &lt;ul&gt;
              &lt;li&gt;판단에 대한 모호성이 존재&lt;/li&gt;
              &lt;li&gt;관리의 어려움&lt;/li&gt;
              &lt;li&gt;관리비용 발생&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>HY03</name><email>hyunik03@gmail.com</email></author><category term="IS_Certification" /><category term="정보보안기사" /><category term="접근통제" /><category term="사용자 인증" /><summary type="html">접근통제 접근통제 개요 접근통제(접근제어, Access Control) 기본 개념 컴퓨터 보안의 주된 목적 허가되지 않은 사용자 (비인가자)에 의한 정보자원 접근 제한 정당한 사용자 (인가자)가 허가되지 않은 방법으로(비인가된 방식) 정보자원에 접근하는 것을 제한 정당한 사용자가 허가된 방식으로만 자원에 접근하도록 하는 것 주체(외부에서 접근하는 사람)가 객체(시스템 등 접근 대상)에 접근(Access) 할 때 보안상의 위협, 변조 등과 같은 위험으로부터 객체와 제반 환경을 보호하기 위한 보안 대책 접근통제 절차 식별(Identification) : 인증 시스템에 본인이 누구인지 스스로를 밝히기 위해 정보를 제공 (ID, 계정번호 등) 하는 주체활동 인증(Authentication) : 주체의 신원을 검증하기 위한 사용 증명 활동 (패스워드, PIN, 토큰 등) 인가(Authorization) : 인증된 주체에게 권한을 부여하는 것 책임추적성(Accountability) : 시스템에 접근한 주체가 시스템에 어떤 행위를 하고 있는지 기록 해명책임성으로도 해석됨 사용자의 이용을 추적하고 그의 행동에 대해 기록하고 추적하는 활동 사전 침입 의도를 감소시킴 관여하지 않은 사람에게 책임을 물어 불이익을 당하지 않도록 함 식별, 인증, 권한부여, 접근통제, 감사 개념을 기반으로 수립됨 책임추적이 가장 어려운 경우 : 하나의 계정을 여러 명이 공유할 경우 접근통제 기본 원칙 직무 분리 한 개인이 전체 업무에 접근 -&amp;gt; 전체 업무를 파괴할 가능성이 있음 시스템 단계별로 나누어서 직무를 부여 -&amp;gt; 전체 업무를 파괴하는 사고를 방지 최소 권한 부여 사용자가 작업을 하는데 있어서 필요한 최소한의 접근권한 / 자원을 부여 사용자의 실수나 의도적인 방법으로 인한 손상을 최소화 입력의 신뢰성 충분한 사용자 인증 기능이 요구됨 개방적 정책과 폐쇄적 정책 정책 결합과 충돌해결 관리정책 사용자 인증과 메시지 인증 사용자 인증 사용자 A가 C에 접속을 시도할 때 C와 협조하여 자신이 A임을 증명할 수 있어야 하나, B가 A를 가장할 수 없어야 함 실시간 처리 메시지 인증 (MAC) 실시간 처리 안됨 사용자 인증 유형 지식 (Something you know) - 패스워드, PIN 소유 (Something you have) - 토큰, 스마트카드 존재 (Something you are) - 지문 행위 (Something you do) - 서명, 움직임 Two Factor - 위 타입 중 2가지 매커니즘을 결합한 것 (예:토큰 + PIN) ATM : PIN + 카드 신용카드 : 카드 + 서명 Multi Factor - 위 타입 중 3가지 이상을 결합한 것 (예:토큰 + PIN + 지문) 인증 기법 지식에 기반을 둔 인증 (What you know) 장점 다양한 분야에서 사용 가능 검증 방법이 확실 (모호성이 없음) 관리비용 저렴 단점 소유자가 지식을 망각했을 경우 공격자에 의해서 추측이 가능 사회공학적 공격에 매우 취약 소유에 기반을 둔 인증 (What you have) 장점 다양한 매체를 통해 인증 가능 (학생증, 신분증, 열쇠, OTP) 경제적 단점 소유물이 반드시 있어야 함 복제가 가능 손실이나 도난 시 관리기능이 필요 타인이 쉽게 도용 가능 : 단독으로 사용하지 않음 개체 특성에 기반을 둔 인증 (What you are) 장점 지문, 홍채, 음성, 얼굴인식 등 무언가를 소유할 필요가 없음 도난의 염려가 없음 위조가 어려움 단점 판단에 대한 모호성이 존재 관리의 어려움 관리비용 발생</summary></entry><entry><title type="html">정보보안 - PKI / X.509</title><link href="https://bluesplatter.com/is_certification/IS-Management-X509/" rel="alternate" type="text/html" title="정보보안 - PKI / X.509" /><published>2021-11-30T09:00:00+09:00</published><updated>2021-11-30T09:00:00+09:00</updated><id>https://bluesplatter.com/is_certification/IS-Management-X509</id><content type="html" xml:base="https://bluesplatter.com/is_certification/IS-Management-X509/">&lt;h1 id=&quot;pki&quot;&gt;PKI&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;PKI(공개키 기반 구조)
    &lt;ul&gt;
      &lt;li&gt;PKI(Public-Key Infrastructure) 의 개요
        &lt;ul&gt;
          &lt;li&gt;기본 개념
            &lt;ul&gt;
              &lt;li&gt;공개키 알고리즘을 위한 키 관리 구조&lt;/li&gt;
              &lt;li&gt;RFC 2822 는 공개키 기반구조(PKI) 를 비대칭키 암호시스템에 기초하여 디지털 인증서를 생성, 관리, 저장, 분배하고 취소하는 데 필요한 하드웨어, 소프트웨어, 사람, 정책 및 절차라고 정의함&lt;/li&gt;
              &lt;li&gt;PKI는 사용자 공개키와 사용자 ID 를 안전하게 전달하는 방법과 공개키를 신뢰성있게 관리하기 위한 수단을 제공. 암호화된 메일, 지불 프로토콜 등 다양한 인터넷 보안응용을 가능케 하기 위한 바탕을 제공함.&lt;/li&gt;
              &lt;li&gt;인증서의 발급, 사용 및 취소와 관련 서비스를 통하여 기밀성, 무결성, 접근제어, 인증, 부인방지의 보안 서비스 제공, 인증기관, 등록기관 디렉터리 서비스, 사용자 등의 요소로 구성됨.&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;PKI의 주요 구성요소
        &lt;ul&gt;
          &lt;li&gt;구성요소
            &lt;ul&gt;
              &lt;li&gt;인증기관
                &lt;ul&gt;
                  &lt;li&gt;PAA, PCA, CA&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;검증기관 (VA - Validation Authority)
                &lt;ul&gt;
                  &lt;li&gt;인증서 유효성 확인&lt;/li&gt;
                  &lt;li&gt;인증기관 (CA) 과 통합되는 경우가 대부분임&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;사용자
                &lt;ul&gt;
                  &lt;li&gt;개체, 최종개체 라고도 함 (subjects, end entities)&lt;/li&gt;
                  &lt;li&gt;사람, 시스템 모두를 의미&lt;/li&gt;
                  &lt;li&gt;자신의 비밀키/공개키 쌍을 생성&lt;/li&gt;
                  &lt;li&gt;공개키 인증서 요청/획득 이 가능&lt;/li&gt;
                  &lt;li&gt;전자서명 생성/검증 가능&lt;/li&gt;
                  &lt;li&gt;인증서 폐지 요청 가능 : 비밀키를 분실, 훼손. 자신의 정보가 변경.&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;등록기관
                &lt;ul&gt;
                  &lt;li&gt;RA&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;저장소
                &lt;ul&gt;
                  &lt;li&gt;디렉토리
                    &lt;ul&gt;
                      &lt;li&gt;X.500&lt;/li&gt;
                      &lt;li&gt;LDAP&lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;과정
            &lt;ul&gt;
              &lt;li&gt;사용자 Bob 이 공개키를 인증기관을 통해 등록하려고 함.&lt;/li&gt;
              &lt;li&gt;인증기관은 저장소에 Bob의 공개키를 인증기관의 서명을 포함시켜서 (인증서) 보관함&lt;/li&gt;
              &lt;li&gt;사용자 Alice 가 Bob의 공개키가 필요할 경우 저장소에서 Bob 의 인증서 (Bob의 공개키 + 인증기관서명)를 다운로드 받음&lt;/li&gt;
              &lt;li&gt;사용자 Alice 는 Bob 의 공개키를 이용
                &lt;ul&gt;
                  &lt;li&gt;사용자와 인증기관이 너무 먼 경우 인증기관 (CA) 대신 등록기관 (RA) 을 이용할 수도 있음&lt;/li&gt;
                  &lt;li&gt;RA는 대신 인증서를 생성하여 CA 에 전달&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;인증기관 (CA, Certification Authority)
            &lt;ul&gt;
              &lt;li&gt;개요
                &lt;ul&gt;
                  &lt;li&gt;인증정책을 수립, 인증서 및 인증서 효력정지 및 폐기목록 (&lt;strong&gt;CRL&lt;/strong&gt;) 관리, 다른 CA와의 상호인증을 제공&lt;/li&gt;
                  &lt;li&gt;인증기관이 하는 일 가운데 “공개키의 등록과 본인에 대한 인증” 을 등록기관이나 사람(개체)에 분담시키는 경우도 있음.&lt;/li&gt;
                  &lt;li&gt;우리나라는 행정자치부 산하에 5개 민간 최상위 인증기관과 정부 최상위 인증기관을 두고 있음.
                    &lt;ul&gt;
                      &lt;li&gt;최상위 인증기관 : 전자서명인증관리센터(KISA)&lt;/li&gt;
                      &lt;li&gt;공인인증기관 : 한국정보인증, 코스콤, 금융결제원, 한국전자인증, 한국무역정보통신&lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;인증기관의 주요 역할
            &lt;ul&gt;
              &lt;li&gt;키쌍의 작성
                &lt;ul&gt;
                  &lt;li&gt;이용자가 키쌍을 작성할 때는 PKI 의 이용자가 행하는 경우와 인증기관이 행하는 경우 두 가지가 있다.&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;인증서 등록
                &lt;ul&gt;
                  &lt;li&gt;인증기관은 인증 업무준칙 (CPS, Certification Practice Statement) 에 근거해서 이용자를 인증하고 인증서를 작성&lt;/li&gt;
                  &lt;li&gt;인증서를 작성할 때에는 인증기관의 개인키를 사용해서 전자서명을 함&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;인증서 폐지
                &lt;ul&gt;
                  &lt;li&gt;이용자가 개인키를 분실했거나 도난당했을 경우, 인증기관은 인증서를 폐지(revoke) 해서 무효로 할 필요가 있음.&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;등록기관 (RA, Registration Authority)
            &lt;ul&gt;
              &lt;li&gt;개요
                &lt;ul&gt;
                  &lt;li&gt;CA와 사용자가 원거리일 경우, 중간위치에서 사용자의 인증서 요구를 받고 인증서 발급 요청에 인증서를 전달하는 역할&lt;/li&gt;
                  &lt;li&gt;인증기관을 대신해 사용자의 신분을 확인, 발급된 인증서 및 해당 CA 상위기관의 공개키를 사용자에게 전달&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;디렉터리 서비스 (Directory Service)
            &lt;ul&gt;
              &lt;li&gt;개요
                &lt;ul&gt;
                  &lt;li&gt;PKI 관련 정보인 인증서와 사용자 관련 정보, 상호인증서 쌍, 인증서 효력정지 및 폐기목록 등을 저장 및 검색하는 장소로서, 응용분야에 따라 이를 위한 서버를 설치하거나 인증기관에서 관리&lt;/li&gt;
                  &lt;li&gt;현재 디렉터리 표준형식으로는 ITU-T 에서 정의한 X.500 표준형식과 이것을 간략화한 LDAP 이 있다.&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;PKI 의 주요 관리 대상
        &lt;ul&gt;
          &lt;li&gt;인증서 (PKC, Public-Key Certificate)
            &lt;ul&gt;
              &lt;li&gt;개요
                &lt;ul&gt;
                  &lt;li&gt;한 쌍의 공개키/개인키와 특정 사람/기관을 연결시켜 주는, 즉 해당키가 특정인의 것이라는 것을 보증해주는 것&lt;/li&gt;
                  &lt;li&gt;전자서명에 사용된 개인키와 상응하는 공개키를 제공하여 그 공개키가 특정인의 것이라는 것을 확신할 수 있는 증거&lt;/li&gt;
                  &lt;li&gt;인증서는 믿을 수 있는 제3자(인증기관)가 발행. PKI의 근간을 이룸.&lt;/li&gt;
                  &lt;li&gt;공개키 인증서에는 이름이나 소속, 메일 주소 등의 개인정보 및 그 사람의 공개키가 기재.&lt;/li&gt;
                  &lt;li&gt;인증기관(CA) 의 개인키로 전자서명 되어 있음.&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;인증서 표준 규격 X.509
                &lt;ul&gt;
                  &lt;li&gt;인증서는 인증기관에서 발행, 이용자가 검증 -&amp;gt; 인증서의 형식이 서로 다르면 매우 불편, 따라서 표준을 정함&lt;/li&gt;
                  &lt;li&gt;ITU 나 ISO 에서 정하는 X.509가 가장 널리 사용
                    &lt;ul&gt;
                      &lt;li&gt;IP 보안, SSL, SET, S/MIME 등 네트워크 보안에서 널리 사용됨.&lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                  &lt;li&gt;구조
                    &lt;ul&gt;
                      &lt;li&gt;V1
                        &lt;ul&gt;
                          &lt;li&gt;버전 (V1/V2/V3)&lt;/li&gt;
                          &lt;li&gt;인증서 일련번호 : CA에서 발행한 유일한 발행번호 - 발행자이름+일련번호&lt;/li&gt;
                          &lt;li&gt;서명알고리즘 식별자 : DSA(DSS), RSA - 알고리즘과 매개변수가 들어감 (활용도 낮음-서명부때문)&lt;/li&gt;
                          &lt;li&gt;발행자 이름 (Issuer Name) : 인증기관명 (국가명, 조직명, 부서명, 개인이름 등)&lt;/li&gt;
                          &lt;li&gt;유효기간 : 시작일자 00.00.00 이후 (not before) / 종료일자 00.00.00 이전 (not after)&lt;/li&gt;
                          &lt;li&gt;주체이름 : 인증서의 사용자(=피발급자, Subject) 이름
                            &lt;ul&gt;
                              &lt;li&gt;상위인증기관에 하위인증기관이 인증서 발급을 요청하는 경우 주체이름은 하위인증기관(CA) 이 될 수 있음.&lt;/li&gt;
                            &lt;/ul&gt;
                          &lt;/li&gt;
                          &lt;li&gt;주체 공개키정보 : 인증서의 핵심부분. 사용자(주체)의 공개키, 관련 알고리즘정보, 매개변수 등&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/li&gt;
                      &lt;li&gt;V2(추가-선택사항)
                        &lt;ul&gt;
                          &lt;li&gt;발행자 유일식별자 : 발급자의 이름이 중복되는 경우 이를 구분하기 위함&lt;/li&gt;
                          &lt;li&gt;주체 유일식별자&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/li&gt;
                      &lt;li&gt;V3(추가-선택사항)
                        &lt;ul&gt;
                          &lt;li&gt;확장영역
                            &lt;ul&gt;
                              &lt;li&gt;키와 정책정보 / 인증서주체와 발행자속성 / 인증경로 제약조건 중 1&lt;/li&gt;
                            &lt;/ul&gt;
                          &lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/li&gt;
                      &lt;li&gt;공통
                        &lt;ul&gt;
                          &lt;li&gt;서명 : CA의 개인키로 암호화. 다른 필드 전체 (필수영역과 선택영역) 의 해시코드를 포함함.
                            &lt;ul&gt;
                              &lt;li&gt;필수영역과 선택영역을 해시 알고리즘을 통한 Digest 값을, CA의 개인키를 이용한 서명알고리즘을 통해 서명 Digest 값을 구함.&lt;/li&gt;
                              &lt;li&gt;해시 알고리즘 ID 와 암호(Cipher) ID, 파라미터값을 포함&lt;/li&gt;
                            &lt;/ul&gt;
                          &lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;인증서 확장
                &lt;ul&gt;
                  &lt;li&gt;X.509 버전 3에서는 버전 2형식에 추가될 수 있는 선택사항으로 많은 확장을 포함&lt;/li&gt;
                  &lt;li&gt;확장은 세 가지 부류 중의 하나로 속함 (세가지 중 하나를 포함할 수 있다.)
                    &lt;ul&gt;
                      &lt;li&gt;키와 정책 정보
                        &lt;ul&gt;
                          &lt;li&gt;기관키 식별자 (Authority Key Identifier) : 인증서를 서명하기 위해 사용되는 개인키에 대응하는 공개키를 구분할 수 있는 수단&lt;/li&gt;
                          &lt;li&gt;사용자키 식별자 (Subject Key Identifier) : 최종개체(사용자) 가 여러 인증서를 획득한 경우, 특정 공개키를 포함하는 인증서의 집합을 빠르게 구분하기 위함&lt;/li&gt;
                          &lt;li&gt;키의 용도 (Key usage) : 암호화 / 전자서명 / 인증서서명 중 어떤 것에 사용된 것인지?&lt;/li&gt;
                          &lt;li&gt;인증서 정책 : 인증기관의 경우 자신이 발행한 인증서에 정책을 명기할 수 있음&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/li&gt;
                      &lt;li&gt;인증서 주체와 발행자 속성
                        &lt;ul&gt;
                          &lt;li&gt;인증서 주체가 어떤 특정인, 특정개체라는 것을 인증서 사용자가 확신하도록 인증서 주체에 대한 추가적 정보를 이 필드에 나타냄 (사용자대체이름, 우편주소, DNS, IP주소, URI, 발급자대체이름, 기관 내의 직위 혹은 사진)&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/li&gt;
                      &lt;li&gt;인증 경로 제약 조건
                        &lt;ul&gt;
                          &lt;li&gt;다른 CA에 의해 CA에게 발행된 인증서 안에 제약조건을 포함할 수 있게 함
                            &lt;ul&gt;
                              &lt;li&gt;기본 제한 (basic constraints)&lt;/li&gt;
                              &lt;li&gt;이름 제한 (name constraints) : 사용자 이름(DN-Distinguished Name)/대체이름에 대한 제한&lt;/li&gt;
                              &lt;li&gt;정책 제한 (policy constraints)&lt;/li&gt;
                            &lt;/ul&gt;
                          &lt;/li&gt;
                          &lt;li&gt;제약조건은 주체 CA에 의해 발행될 수 있는 인증서의 유형에 제약을 가할 수 있음&lt;/li&gt;
                          &lt;li&gt;인증 체인에서 연속적으로 발생하는 인증서의 유형에 제약을 가할 수도 있음&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;인증서 갱신
                &lt;ul&gt;
                  &lt;li&gt;모든 인증서에는 유효기간이 존재&lt;/li&gt;
                  &lt;li&gt;문제가 없다면 사용 중인 인증서의 기간이 끝나기 전에 새로운 인증서를 발급&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;인증서 폐지
                &lt;ul&gt;
                  &lt;li&gt;유효기간이 끝나면 폐지해야 함&lt;/li&gt;
                  &lt;li&gt;사용자(주체)의 개인키가 침해 당했을 경우.&lt;/li&gt;
                  &lt;li&gt;CA 가 사용자들을 더 이상 인증하지 않을 때&lt;/li&gt;
                  &lt;li&gt;인증서를 검증하는데 필요한 CA의 개인키가 침해를 받았을 경우&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;CRL (Certificate Revocation List) - 인증서 취소/폐지/폐기 목록
            &lt;ul&gt;
              &lt;li&gt;CRL은 인증기관이 폐지한 인증서 목록임.&lt;/li&gt;
              &lt;li&gt;폐지된 인증서의 일련번호목록에 인증기관이 전자서명을 붙인 것
                &lt;ul&gt;
                  &lt;li&gt;인증서의 일련번호 : 인증기관이 발행한 인증서에 붙여진 순서번호로 인증서 속에 반드시 기재됨&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;PK 이용자는 인증기관으로부터 최신의 CRL을 입수해서 자신이 검증하려는 공개키의 인증서가 폐지되어 있지 않은지 조사할 필요가 있음
                &lt;ul&gt;
                  &lt;li&gt;CRL 주소에 접속하여 CRL을 다운로드&lt;/li&gt;
                  &lt;li&gt;CRL 의 유효기간이 유효한 것이면 사용&lt;/li&gt;
                  &lt;li&gt;CRL 목록과 인증서 비교 - Yes 면 Error, No 면 Ok&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;구조
                &lt;ul&gt;
                  &lt;li&gt;서명 알고리즘 식별자&lt;/li&gt;
                  &lt;li&gt;발행자 이름&lt;/li&gt;
                  &lt;li&gt;이번 업데이트 일시&lt;/li&gt;
                  &lt;li&gt;다음 업데이트 일시&lt;/li&gt;
                  &lt;li&gt;취소된 인증서들… (용량이 매우 큼)
                    &lt;ul&gt;
                      &lt;li&gt;사용자 인증서 일련번호&lt;/li&gt;
                      &lt;li&gt;취소일시&lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                  &lt;li&gt;서명
                    &lt;ul&gt;
                      &lt;li&gt;알고리즘, 매개변수, 암호화&lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;HTTP 나 LDAP 이용 하여 CRL 을 요청 -&amp;gt; 다운로드 -&amp;gt; 브라우저 파싱을 통해 비교&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;&lt;strong&gt;온라인 인증서 상태확인 프로토콜 (OCSP)&lt;/strong&gt;
            &lt;ul&gt;
              &lt;li&gt;정의
                &lt;ul&gt;
                  &lt;li&gt;OCSP(Online Certificate Status Protocol)&lt;/li&gt;
                  &lt;li&gt;RFC2560&lt;/li&gt;
                  &lt;li&gt;인증서를 검증하는 신뢰 당사자가 CRL 전체를 다운로드 받지 않고, 필요한 인증서만을 네트워크를 통해 실시간으로 확인
                    &lt;ul&gt;
                      &lt;li&gt;인증서의 상태를 실시간으로 체크&lt;/li&gt;
                      &lt;li&gt;Client : OCSP 서버에게 인증서 상태 확인 요청&lt;/li&gt;
                      &lt;li&gt;OCSP 서버 : 각 CA인증서버들로부터 받아온 정보로부터 인증서 상태 확인응답값 제공&lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;동작절차
                &lt;ul&gt;
                  &lt;li&gt;응용 프로그램이 OCSP 서버에게 인증서의 상태를 물음&lt;/li&gt;
                  &lt;li&gt;OCSP 서버는 good, revoked, unknown 의 내용을 담은 응답 메시지를 전자서명해서 보내줌.&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;OCSP Stapling
                &lt;ul&gt;
                  &lt;li&gt;OCSP 서버는 클라이언트의 모든 인증서 질의 요청을 (HTTP) 모두 처리해야 함 (부하가 큼)&lt;/li&gt;
                  &lt;li&gt;OCSP 서버(Responder) 와 클라이언트 사이에 중계 서버를 두어 쿼리 질의 수를 줄임&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;PKI 의 형태
        &lt;ul&gt;
          &lt;li&gt;PKI 형태에는 계층구조, 네트워크구조, 혼합형구조가 있음&lt;/li&gt;
          &lt;li&gt;계층 구조
            &lt;ul&gt;
              &lt;li&gt;최상위의 루트 CA가 존재. 그 아래에 하위의 CA가 계층적으로 존재 (트리형태)&lt;/li&gt;
              &lt;li&gt;상위 인증기관이 하위 인증기관에 CA 인증서를 발행하며 하위 인증기관은 상위 인증기관의 인증정책에 영향을 받음&lt;/li&gt;
              &lt;li&gt;최상위 인증기관 간의 상호인증은 허용하지만 하위 인증기관 간의 상호인증은 원칙적으로 배제함
                &lt;ul&gt;
                  &lt;li&gt;루트 CA 간의 상호인증을 통해 국제 간 상호동작을 원할하게 하는 장점&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;Chain of trust
                &lt;ul&gt;
                  &lt;li&gt;모든 인증을 한 인증기관에서 받기 어렵다.&lt;/li&gt;
                  &lt;li&gt;End-entity Certificate
                    &lt;ul&gt;
                      &lt;li&gt;소유자 이름&lt;/li&gt;
                      &lt;li&gt;소유자 공개키&lt;/li&gt;
                      &lt;li&gt;발행자 이름 - Intermediate Certificate 소유자 이름&lt;/li&gt;
                      &lt;li&gt;발행자 서명 - Intermediate Certificate 소유자 공개키&lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                  &lt;li&gt;Intermediate Certificate
                    &lt;ul&gt;
                      &lt;li&gt;소유자 이름&lt;/li&gt;
                      &lt;li&gt;소유자 공개키&lt;/li&gt;
                      &lt;li&gt;발행자 이름 - Root 이름&lt;/li&gt;
                      &lt;li&gt;발행자 서명 - Root 공개키를 이용해 서명&lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                  &lt;li&gt;Root Certificate
                    &lt;ul&gt;
                      &lt;li&gt;Root 이름&lt;/li&gt;
                      &lt;li&gt;Root 공개키&lt;/li&gt;
                      &lt;li&gt;Root 서명 - Self Sign&lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;장점
                &lt;ul&gt;
                  &lt;li&gt;정부와 같은 관료조직에 적합&lt;/li&gt;
                  &lt;li&gt;인증경로 탐색이 용이&lt;/li&gt;
                  &lt;li&gt;모든 사용자가 최상위 CA의 공개키를 알고 있으므로 인증서 검증 용이&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;단점
                &lt;ul&gt;
                  &lt;li&gt;최상위 CA에 집중되는 오버헤드 발생&lt;/li&gt;
                  &lt;li&gt;협동업무 관계에는 부적합&lt;/li&gt;
                  &lt;li&gt;최상위 CA의 비밀키 노출 시 피해 규모 막대&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;네트워크 구조
            &lt;ul&gt;
              &lt;li&gt;상위 인증기관의 영향 없이 인증기관 각각이 자신의 인증정책에 따라 독립적으로 존재하는 형태&lt;/li&gt;
              &lt;li&gt;CA 간에 인증을 위해 상호인증서를 발행하여 인증서비스를 함.&lt;/li&gt;
              &lt;li&gt;모든 상호인증이 허용되면 상호인증의 수가 대폭 증가하는 단점.&lt;/li&gt;
              &lt;li&gt;장점
                &lt;ul&gt;
                  &lt;li&gt;유연하며 실질적인 업무관계에 적합&lt;/li&gt;
                  &lt;li&gt;CA 상호인증이 직접 이루어지므로 인증경로 단순&lt;/li&gt;
                  &lt;li&gt;CA의 비밀키 노출 시 국소적 피해&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;단점
                &lt;ul&gt;
                  &lt;li&gt;인증경로 탐색이 복잡함&lt;/li&gt;
                  &lt;li&gt;인증정책 수립 및 적용 어려움&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;혼합형 구조
            &lt;ul&gt;
              &lt;li&gt;계층구조 와 네트워크 구조의 장점을 차용&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>HY03</name><email>hyunik03@gmail.com</email></author><category term="IS_Certification" /><category term="정보보안기사" /><category term="PKI" /><category term="X.509" /><summary type="html">PKI PKI(공개키 기반 구조) PKI(Public-Key Infrastructure) 의 개요 기본 개념 공개키 알고리즘을 위한 키 관리 구조 RFC 2822 는 공개키 기반구조(PKI) 를 비대칭키 암호시스템에 기초하여 디지털 인증서를 생성, 관리, 저장, 분배하고 취소하는 데 필요한 하드웨어, 소프트웨어, 사람, 정책 및 절차라고 정의함 PKI는 사용자 공개키와 사용자 ID 를 안전하게 전달하는 방법과 공개키를 신뢰성있게 관리하기 위한 수단을 제공. 암호화된 메일, 지불 프로토콜 등 다양한 인터넷 보안응용을 가능케 하기 위한 바탕을 제공함. 인증서의 발급, 사용 및 취소와 관련 서비스를 통하여 기밀성, 무결성, 접근제어, 인증, 부인방지의 보안 서비스 제공, 인증기관, 등록기관 디렉터리 서비스, 사용자 등의 요소로 구성됨. PKI의 주요 구성요소 구성요소 인증기관 PAA, PCA, CA 검증기관 (VA - Validation Authority) 인증서 유효성 확인 인증기관 (CA) 과 통합되는 경우가 대부분임 사용자 개체, 최종개체 라고도 함 (subjects, end entities) 사람, 시스템 모두를 의미 자신의 비밀키/공개키 쌍을 생성 공개키 인증서 요청/획득 이 가능 전자서명 생성/검증 가능 인증서 폐지 요청 가능 : 비밀키를 분실, 훼손. 자신의 정보가 변경. 등록기관 RA 저장소 디렉토리 X.500 LDAP 과정 사용자 Bob 이 공개키를 인증기관을 통해 등록하려고 함. 인증기관은 저장소에 Bob의 공개키를 인증기관의 서명을 포함시켜서 (인증서) 보관함 사용자 Alice 가 Bob의 공개키가 필요할 경우 저장소에서 Bob 의 인증서 (Bob의 공개키 + 인증기관서명)를 다운로드 받음 사용자 Alice 는 Bob 의 공개키를 이용 사용자와 인증기관이 너무 먼 경우 인증기관 (CA) 대신 등록기관 (RA) 을 이용할 수도 있음 RA는 대신 인증서를 생성하여 CA 에 전달 인증기관 (CA, Certification Authority) 개요 인증정책을 수립, 인증서 및 인증서 효력정지 및 폐기목록 (CRL) 관리, 다른 CA와의 상호인증을 제공 인증기관이 하는 일 가운데 “공개키의 등록과 본인에 대한 인증” 을 등록기관이나 사람(개체)에 분담시키는 경우도 있음. 우리나라는 행정자치부 산하에 5개 민간 최상위 인증기관과 정부 최상위 인증기관을 두고 있음. 최상위 인증기관 : 전자서명인증관리센터(KISA) 공인인증기관 : 한국정보인증, 코스콤, 금융결제원, 한국전자인증, 한국무역정보통신 인증기관의 주요 역할 키쌍의 작성 이용자가 키쌍을 작성할 때는 PKI 의 이용자가 행하는 경우와 인증기관이 행하는 경우 두 가지가 있다. 인증서 등록 인증기관은 인증 업무준칙 (CPS, Certification Practice Statement) 에 근거해서 이용자를 인증하고 인증서를 작성 인증서를 작성할 때에는 인증기관의 개인키를 사용해서 전자서명을 함 인증서 폐지 이용자가 개인키를 분실했거나 도난당했을 경우, 인증기관은 인증서를 폐지(revoke) 해서 무효로 할 필요가 있음. 등록기관 (RA, Registration Authority) 개요 CA와 사용자가 원거리일 경우, 중간위치에서 사용자의 인증서 요구를 받고 인증서 발급 요청에 인증서를 전달하는 역할 인증기관을 대신해 사용자의 신분을 확인, 발급된 인증서 및 해당 CA 상위기관의 공개키를 사용자에게 전달 디렉터리 서비스 (Directory Service) 개요 PKI 관련 정보인 인증서와 사용자 관련 정보, 상호인증서 쌍, 인증서 효력정지 및 폐기목록 등을 저장 및 검색하는 장소로서, 응용분야에 따라 이를 위한 서버를 설치하거나 인증기관에서 관리 현재 디렉터리 표준형식으로는 ITU-T 에서 정의한 X.500 표준형식과 이것을 간략화한 LDAP 이 있다. PKI 의 주요 관리 대상 인증서 (PKC, Public-Key Certificate) 개요 한 쌍의 공개키/개인키와 특정 사람/기관을 연결시켜 주는, 즉 해당키가 특정인의 것이라는 것을 보증해주는 것 전자서명에 사용된 개인키와 상응하는 공개키를 제공하여 그 공개키가 특정인의 것이라는 것을 확신할 수 있는 증거 인증서는 믿을 수 있는 제3자(인증기관)가 발행. PKI의 근간을 이룸. 공개키 인증서에는 이름이나 소속, 메일 주소 등의 개인정보 및 그 사람의 공개키가 기재. 인증기관(CA) 의 개인키로 전자서명 되어 있음. 인증서 표준 규격 X.509 인증서는 인증기관에서 발행, 이용자가 검증 -&amp;gt; 인증서의 형식이 서로 다르면 매우 불편, 따라서 표준을 정함 ITU 나 ISO 에서 정하는 X.509가 가장 널리 사용 IP 보안, SSL, SET, S/MIME 등 네트워크 보안에서 널리 사용됨. 구조 V1 버전 (V1/V2/V3) 인증서 일련번호 : CA에서 발행한 유일한 발행번호 - 발행자이름+일련번호 서명알고리즘 식별자 : DSA(DSS), RSA - 알고리즘과 매개변수가 들어감 (활용도 낮음-서명부때문) 발행자 이름 (Issuer Name) : 인증기관명 (국가명, 조직명, 부서명, 개인이름 등) 유효기간 : 시작일자 00.00.00 이후 (not before) / 종료일자 00.00.00 이전 (not after) 주체이름 : 인증서의 사용자(=피발급자, Subject) 이름 상위인증기관에 하위인증기관이 인증서 발급을 요청하는 경우 주체이름은 하위인증기관(CA) 이 될 수 있음. 주체 공개키정보 : 인증서의 핵심부분. 사용자(주체)의 공개키, 관련 알고리즘정보, 매개변수 등 V2(추가-선택사항) 발행자 유일식별자 : 발급자의 이름이 중복되는 경우 이를 구분하기 위함 주체 유일식별자 V3(추가-선택사항) 확장영역 키와 정책정보 / 인증서주체와 발행자속성 / 인증경로 제약조건 중 1 공통 서명 : CA의 개인키로 암호화. 다른 필드 전체 (필수영역과 선택영역) 의 해시코드를 포함함. 필수영역과 선택영역을 해시 알고리즘을 통한 Digest 값을, CA의 개인키를 이용한 서명알고리즘을 통해 서명 Digest 값을 구함. 해시 알고리즘 ID 와 암호(Cipher) ID, 파라미터값을 포함 인증서 확장 X.509 버전 3에서는 버전 2형식에 추가될 수 있는 선택사항으로 많은 확장을 포함 확장은 세 가지 부류 중의 하나로 속함 (세가지 중 하나를 포함할 수 있다.) 키와 정책 정보 기관키 식별자 (Authority Key Identifier) : 인증서를 서명하기 위해 사용되는 개인키에 대응하는 공개키를 구분할 수 있는 수단 사용자키 식별자 (Subject Key Identifier) : 최종개체(사용자) 가 여러 인증서를 획득한 경우, 특정 공개키를 포함하는 인증서의 집합을 빠르게 구분하기 위함 키의 용도 (Key usage) : 암호화 / 전자서명 / 인증서서명 중 어떤 것에 사용된 것인지? 인증서 정책 : 인증기관의 경우 자신이 발행한 인증서에 정책을 명기할 수 있음 인증서 주체와 발행자 속성 인증서 주체가 어떤 특정인, 특정개체라는 것을 인증서 사용자가 확신하도록 인증서 주체에 대한 추가적 정보를 이 필드에 나타냄 (사용자대체이름, 우편주소, DNS, IP주소, URI, 발급자대체이름, 기관 내의 직위 혹은 사진) 인증 경로 제약 조건 다른 CA에 의해 CA에게 발행된 인증서 안에 제약조건을 포함할 수 있게 함 기본 제한 (basic constraints) 이름 제한 (name constraints) : 사용자 이름(DN-Distinguished Name)/대체이름에 대한 제한 정책 제한 (policy constraints) 제약조건은 주체 CA에 의해 발행될 수 있는 인증서의 유형에 제약을 가할 수 있음 인증 체인에서 연속적으로 발생하는 인증서의 유형에 제약을 가할 수도 있음 인증서 갱신 모든 인증서에는 유효기간이 존재 문제가 없다면 사용 중인 인증서의 기간이 끝나기 전에 새로운 인증서를 발급 인증서 폐지 유효기간이 끝나면 폐지해야 함 사용자(주체)의 개인키가 침해 당했을 경우. CA 가 사용자들을 더 이상 인증하지 않을 때 인증서를 검증하는데 필요한 CA의 개인키가 침해를 받았을 경우 CRL (Certificate Revocation List) - 인증서 취소/폐지/폐기 목록 CRL은 인증기관이 폐지한 인증서 목록임. 폐지된 인증서의 일련번호목록에 인증기관이 전자서명을 붙인 것 인증서의 일련번호 : 인증기관이 발행한 인증서에 붙여진 순서번호로 인증서 속에 반드시 기재됨 PK 이용자는 인증기관으로부터 최신의 CRL을 입수해서 자신이 검증하려는 공개키의 인증서가 폐지되어 있지 않은지 조사할 필요가 있음 CRL 주소에 접속하여 CRL을 다운로드 CRL 의 유효기간이 유효한 것이면 사용 CRL 목록과 인증서 비교 - Yes 면 Error, No 면 Ok 구조 서명 알고리즘 식별자 발행자 이름 이번 업데이트 일시 다음 업데이트 일시 취소된 인증서들… (용량이 매우 큼) 사용자 인증서 일련번호 취소일시 서명 알고리즘, 매개변수, 암호화 HTTP 나 LDAP 이용 하여 CRL 을 요청 -&amp;gt; 다운로드 -&amp;gt; 브라우저 파싱을 통해 비교 온라인 인증서 상태확인 프로토콜 (OCSP) 정의 OCSP(Online Certificate Status Protocol) RFC2560 인증서를 검증하는 신뢰 당사자가 CRL 전체를 다운로드 받지 않고, 필요한 인증서만을 네트워크를 통해 실시간으로 확인 인증서의 상태를 실시간으로 체크 Client : OCSP 서버에게 인증서 상태 확인 요청 OCSP 서버 : 각 CA인증서버들로부터 받아온 정보로부터 인증서 상태 확인응답값 제공 동작절차 응용 프로그램이 OCSP 서버에게 인증서의 상태를 물음 OCSP 서버는 good, revoked, unknown 의 내용을 담은 응답 메시지를 전자서명해서 보내줌. OCSP Stapling OCSP 서버는 클라이언트의 모든 인증서 질의 요청을 (HTTP) 모두 처리해야 함 (부하가 큼) OCSP 서버(Responder) 와 클라이언트 사이에 중계 서버를 두어 쿼리 질의 수를 줄임 PKI 의 형태 PKI 형태에는 계층구조, 네트워크구조, 혼합형구조가 있음 계층 구조 최상위의 루트 CA가 존재. 그 아래에 하위의 CA가 계층적으로 존재 (트리형태) 상위 인증기관이 하위 인증기관에 CA 인증서를 발행하며 하위 인증기관은 상위 인증기관의 인증정책에 영향을 받음 최상위 인증기관 간의 상호인증은 허용하지만 하위 인증기관 간의 상호인증은 원칙적으로 배제함 루트 CA 간의 상호인증을 통해 국제 간 상호동작을 원할하게 하는 장점 Chain of trust 모든 인증을 한 인증기관에서 받기 어렵다. End-entity Certificate 소유자 이름 소유자 공개키 발행자 이름 - Intermediate Certificate 소유자 이름 발행자 서명 - Intermediate Certificate 소유자 공개키 Intermediate Certificate 소유자 이름 소유자 공개키 발행자 이름 - Root 이름 발행자 서명 - Root 공개키를 이용해 서명 Root Certificate Root 이름 Root 공개키 Root 서명 - Self Sign 장점 정부와 같은 관료조직에 적합 인증경로 탐색이 용이 모든 사용자가 최상위 CA의 공개키를 알고 있으므로 인증서 검증 용이 단점 최상위 CA에 집중되는 오버헤드 발생 협동업무 관계에는 부적합 최상위 CA의 비밀키 노출 시 피해 규모 막대 네트워크 구조 상위 인증기관의 영향 없이 인증기관 각각이 자신의 인증정책에 따라 독립적으로 존재하는 형태 CA 간에 인증을 위해 상호인증서를 발행하여 인증서비스를 함. 모든 상호인증이 허용되면 상호인증의 수가 대폭 증가하는 단점. 장점 유연하며 실질적인 업무관계에 적합 CA 상호인증이 직접 이루어지므로 인증경로 단순 CA의 비밀키 노출 시 국소적 피해 단점 인증경로 탐색이 복잡함 인증정책 수립 및 적용 어려움 혼합형 구조 계층구조 와 네트워크 구조의 장점을 차용</summary></entry><entry><title type="html">정보보안 - 전자서명</title><link href="https://bluesplatter.com/is_certification/IS-Management-DigitalSignature/" rel="alternate" type="text/html" title="정보보안 - 전자서명" /><published>2021-11-24T09:00:00+09:00</published><updated>2021-11-24T09:00:00+09:00</updated><id>https://bluesplatter.com/is_certification/IS-Management-DigitalSignature</id><content type="html" xml:base="https://bluesplatter.com/is_certification/IS-Management-DigitalSignature/">&lt;h1 id=&quot;전자서명&quot;&gt;전자서명&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;전자서명의 개요
    &lt;ul&gt;
      &lt;li&gt;암호화 방식에 따라 두 종류로 나뉨
        &lt;ul&gt;
          &lt;li&gt;공개키 서명 방식 (공개키 암호화 방식)
            &lt;ul&gt;
              &lt;li&gt;서명자의 검증 정보를 공개하여 누구나 검증할 수 있는 방식 (간편)&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;중재 서명 방식 (관용 암호방식)
            &lt;ul&gt;
              &lt;li&gt;서명 생성과 검증을 제 3자가 중재 (불편)&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;전자서명 과정
        &lt;ul&gt;
          &lt;li&gt;기본 개념
            &lt;ul&gt;
              &lt;li&gt;송신자는 서명 알고리즘(signing algorithm)을 이용해서 메시지에 서명을 함&lt;/li&gt;
              &lt;li&gt;메시지와 서명은 수신자에게 전송됨&lt;/li&gt;
              &lt;li&gt;수신자는 메시지와 서명을 받고 이들에 검증 알고리즘(verifying algorithm)을 적용&lt;/li&gt;
              &lt;li&gt;참이면 메시지가 받아들여짐&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;디지털서명 (digital signature) - 전자서명의 한 종류, 공개키 암호화 방식을 사용
            &lt;ul&gt;
              &lt;li&gt;Alice 가 Bob 에게 메시지를 보낼 때 Bob 은 송신자에 대한 확실성을 점검할 필요가 있음.&lt;/li&gt;
              &lt;li&gt;Bob 은 이 메시지가 Alice 에게서 온 것인지 Eve 에게서 온 것인지 확인하고 싶음.&lt;/li&gt;
              &lt;li&gt;Bob 은 Alice 에게 메시지에 전자서명을 해달라고 요청할 수 있고, Alice 는 이에 전자서명을 해줌.&lt;/li&gt;
              &lt;li&gt;디지털서명에서는 공개키 시스템이 필요. 서명자는 자신의 개인키로 서명, 검증자는 서명자의 공개키로 서명을 검증&lt;/li&gt;
              &lt;li&gt;암호화 시스템에서는 수신자의 개인키와 공개키가 활용됨. 디지털서명에서는 송신자의 개인키와 공개키가 사용됨.&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;전자서명 서비스
        &lt;ul&gt;
          &lt;li&gt;메시지 인증
            &lt;ul&gt;
              &lt;li&gt;안전한 디지털서명 구조는 메시지 인증 (데이터 근원 인증) 을 보장&lt;/li&gt;
              &lt;li&gt;Alice 에게서 받은 서명이 정말 Alice 의 서명인지를 보장&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;메시지 무결성
            &lt;ul&gt;
              &lt;li&gt;전체 메시지에 서명을 할 경우에 보장, 메시지 변경 시 서명도 달라지기 때문&lt;/li&gt;
              &lt;li&gt;해시함수를 사용하여 검증 알고리즘을 만듦. 무결성 보장&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;부인방지 (신뢰받는 센터 활용)
            &lt;ul&gt;
              &lt;li&gt;Alice 가 메시지를 보낸 사실을 부인하면 센터는 저장하고 있는 메시지를 제시할 수 있다.&lt;/li&gt;
              &lt;li&gt;Bob의 메시지가 센터가 보관하고 있는 메시지의 복사본과 같다면 Alice 는 법정에서 패하게 될 것이다.
                &lt;ul&gt;
                  &lt;li&gt;Alice : 전송할 Msg 를 정해진 서명 알고리즘을 이용해 Alice 의 Private Key 를 이용해 서명한다.&lt;/li&gt;
                  &lt;li&gt;Alice : 서명된 메시지를 Trusted Center 에 보낸다.&lt;/li&gt;
                  &lt;li&gt;Trusted Center : Alice 의 Public Key 로 서명된 메시지를 검증 (검증알고리즘) 한다. (Msg)&lt;/li&gt;
                  &lt;li&gt;Trusted Center : Alice 가 보낸 서명된 알고리즘을 Bob에게 전달한다.&lt;/li&gt;
                  &lt;li&gt;Bob : Alice 의 Public Key로 검증 알고리즘을 이용해서 메시지를 얻어낸다. (Msg)&lt;/li&gt;
                  &lt;li&gt;Trusted Center 의 Msg 와 Bob 의 Msg 가 같다면 Alice 는 부인할 수 없게 된다.&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;기밀성
            &lt;ul&gt;
              &lt;li&gt;디지털서명을 하더라도 기밀성이 보장되는 통신을 할 수는 없다. (전자서명이 기밀성을 보장하진 않음.)
                &lt;ul&gt;
                  &lt;li&gt;전자서명은 메시지인증과 무결성을 보증함.&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;기밀성을 위해 메시지와 서명에 비밀키를 이용하거나 공개키를 이용해서 암호화를 해야만 한다.
                &lt;ul&gt;
                  &lt;li&gt;Alice : 메시지를 Alice 의 Private Key를 이용, 서명알고리즘을 통해 서명함.&lt;/li&gt;
                  &lt;li&gt;Alice : 서명을 Bob의 Public Key를 이용, 암호화함.&lt;/li&gt;
                  &lt;li&gt;Bob : 암호화 메시지를 Bob 의 Private Key 를 이용, 복호화함.&lt;/li&gt;
                  &lt;li&gt;Bob : Alice 의 서명을 Alice 의 Pubilc Key 를 이용, 검증알고리즘을 통해 검증함. (Msg)&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;전자서명의 주요 기능
        &lt;ul&gt;
          &lt;li&gt;위조 불가 (Unforgeable) : 합법적인 서명자만이 전자서명을 생성하는 것이 가능해야 한다.&lt;/li&gt;
          &lt;li&gt;서명자 인증 (User authentication) : 전자서명의 서명자를 불특정 다수가 검증할 수 있어야 한다.&lt;/li&gt;
          &lt;li&gt;부인방지 (Non-repudiation) : 서명자는 서명행위 이후에 서명한 사실을 부인할 수 없어야 한다. (신뢰할 수 있는 제3기관 이용)&lt;/li&gt;
          &lt;li&gt;변경 불가 (Unalterable) : 서명한 문서의 내용을 변경할 수 없어야 한다.&lt;/li&gt;
          &lt;li&gt;재사용 불가 (Not reusable) : 전자문서의 서명을 다른 전자문서의 서명으로 사용할 수 없어야 한다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;전자서명의 구조
    &lt;ul&gt;
      &lt;li&gt;RSA 디지털 서명 구조
        &lt;ul&gt;
          &lt;li&gt;RSA 아이디어를 이용하면 메시지에 서명을 하고 검증을 할 수 있다.
            &lt;ul&gt;
              &lt;li&gt;암호화, 키교환에도 사용되는 공개키 기술&lt;/li&gt;
              &lt;li&gt;RSA 암호화 방식과 전자서명 방식이 동일&lt;/li&gt;
              &lt;li&gt;RSA : 소수를 이용, 소인수분해의 어려움을 기반으로 함.
                &lt;ul&gt;
                  &lt;li&gt;p, q : 두 소수&lt;/li&gt;
                  &lt;li&gt;d : 개인키&lt;/li&gt;
                  &lt;li&gt;e : 공개키 (공개)&lt;/li&gt;
                  &lt;li&gt;n : p * q (공개)&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;Alice : Alice 의 Private key (d,n) 을 이용, M^d mod n 을 통해 서명 S 를 생성&lt;/li&gt;
              &lt;li&gt;Alice : 서명 S 를 전달&lt;/li&gt;
              &lt;li&gt;Alice : 메시지 M 을 전달&lt;/li&gt;
              &lt;li&gt;Bob : Alice 의 Public key (e,n) 을 이용, S^e mod n 을 통해 M’ 을 생성&lt;/li&gt;
              &lt;li&gt;Bob : M 과 M’ 을 비교, 같으면 M을 받아들임.&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;ElGamal 디지털서명 구조
        &lt;ul&gt;
          &lt;li&gt;개요
            &lt;ul&gt;
              &lt;li&gt;ElGamal 암호시스템과 동일한 키를 사용하지만 알고리즘은 다름.
                &lt;ul&gt;
                  &lt;li&gt;ElGamal 과 동일하게 이산대수 문제 기반&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;서명 과정에서 두 개의 함수는 두 개의 서명을 생성&lt;/li&gt;
              &lt;li&gt;검증 과정에서 두 함수에서 출력되는 값을 비교하여 확인&lt;/li&gt;
              &lt;li&gt;한 개의 함수는 서명과 검증 과정에서 동시에 사용되지만 입력되는 것이 다를 뿐&lt;/li&gt;
              &lt;li&gt;키 생성 : ElGamal 디지털서명 구조에서 (e1, e2, p) 가 Alice 의 공개키이고 d는 개인키이다.&lt;/li&gt;
              &lt;li&gt;실제로 거의 사용되지 않음. DSA(Digital Signature Algorithm) 를 많이 사용 - ElGamal의 개량형&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;DSA  (Digital Signature Algorithm)
        &lt;ul&gt;
          &lt;li&gt;개요
            &lt;ul&gt;
              &lt;li&gt;DSS (Digital Signature Standard) : 미국의 전자서명 표준 = DSA 와 거의동일. ElGamal 전자서명을 개량한 것
                &lt;ul&gt;
                  &lt;li&gt;ElGamal : 이산대수 문제 기반 알고리즘&lt;/li&gt;
                  &lt;li&gt;암호화에 사용되지 않음&lt;/li&gt;
                  &lt;li&gt;키교환에 사용되지 않음&lt;/li&gt;
                  &lt;li&gt;공개키 기술&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;DSA : NIST 에서 제안&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;ECDSA (Elliptic Curve DSA) = ECC 전자서명 (ECCDSA - 타원곡선 전자서명 구조)
        &lt;ul&gt;
          &lt;li&gt;ECC (타원곡선) : RSA, ElGamal 보다 길이가 짧아 속도가 빠른 알고리즘&lt;/li&gt;
          &lt;li&gt;짧은 시간에 짧은 서명 생성 가능&lt;/li&gt;
          &lt;li&gt;ECDSA : 1998년 ANSI 에서 미국표준화&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;KCDSA (Korea Certification-based DSA)
        &lt;ul&gt;
          &lt;li&gt;1994년 국내에서 개발 (국가 표준 전자서명 알고리즘)&lt;/li&gt;
          &lt;li&gt;1997년 국가 표준으로 채택&lt;/li&gt;
          &lt;li&gt;1998년 TTA 에서 표준으로 채택&lt;/li&gt;
          &lt;li&gt;ElGamal 전자서명을 개선 (이산대수 문제의 어려움 기반) / DSS 를 변형&lt;/li&gt;
          &lt;li&gt;스마트카드에서도 편리하게 사용&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Schnorr 전자서명 구조
        &lt;ul&gt;
          &lt;li&gt;ElGamal 전자서명에 기반, 서명의 크기는 작은 형태의 새로운 구조
            &lt;ul&gt;
              &lt;li&gt;ElGamal은 매우 큰 소수를 사용해야 함 (1024bit 이상)&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;IC 카드에 적합&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>HY03</name><email>hyunik03@gmail.com</email></author><category term="IS_Certification" /><category term="정보보안기사" /><category term="전자서명" /><summary type="html">전자서명 전자서명의 개요 암호화 방식에 따라 두 종류로 나뉨 공개키 서명 방식 (공개키 암호화 방식) 서명자의 검증 정보를 공개하여 누구나 검증할 수 있는 방식 (간편) 중재 서명 방식 (관용 암호방식) 서명 생성과 검증을 제 3자가 중재 (불편) 전자서명 과정 기본 개념 송신자는 서명 알고리즘(signing algorithm)을 이용해서 메시지에 서명을 함 메시지와 서명은 수신자에게 전송됨 수신자는 메시지와 서명을 받고 이들에 검증 알고리즘(verifying algorithm)을 적용 참이면 메시지가 받아들여짐 디지털서명 (digital signature) - 전자서명의 한 종류, 공개키 암호화 방식을 사용 Alice 가 Bob 에게 메시지를 보낼 때 Bob 은 송신자에 대한 확실성을 점검할 필요가 있음. Bob 은 이 메시지가 Alice 에게서 온 것인지 Eve 에게서 온 것인지 확인하고 싶음. Bob 은 Alice 에게 메시지에 전자서명을 해달라고 요청할 수 있고, Alice 는 이에 전자서명을 해줌. 디지털서명에서는 공개키 시스템이 필요. 서명자는 자신의 개인키로 서명, 검증자는 서명자의 공개키로 서명을 검증 암호화 시스템에서는 수신자의 개인키와 공개키가 활용됨. 디지털서명에서는 송신자의 개인키와 공개키가 사용됨. 전자서명 서비스 메시지 인증 안전한 디지털서명 구조는 메시지 인증 (데이터 근원 인증) 을 보장 Alice 에게서 받은 서명이 정말 Alice 의 서명인지를 보장 메시지 무결성 전체 메시지에 서명을 할 경우에 보장, 메시지 변경 시 서명도 달라지기 때문 해시함수를 사용하여 검증 알고리즘을 만듦. 무결성 보장 부인방지 (신뢰받는 센터 활용) Alice 가 메시지를 보낸 사실을 부인하면 센터는 저장하고 있는 메시지를 제시할 수 있다. Bob의 메시지가 센터가 보관하고 있는 메시지의 복사본과 같다면 Alice 는 법정에서 패하게 될 것이다. Alice : 전송할 Msg 를 정해진 서명 알고리즘을 이용해 Alice 의 Private Key 를 이용해 서명한다. Alice : 서명된 메시지를 Trusted Center 에 보낸다. Trusted Center : Alice 의 Public Key 로 서명된 메시지를 검증 (검증알고리즘) 한다. (Msg) Trusted Center : Alice 가 보낸 서명된 알고리즘을 Bob에게 전달한다. Bob : Alice 의 Public Key로 검증 알고리즘을 이용해서 메시지를 얻어낸다. (Msg) Trusted Center 의 Msg 와 Bob 의 Msg 가 같다면 Alice 는 부인할 수 없게 된다. 기밀성 디지털서명을 하더라도 기밀성이 보장되는 통신을 할 수는 없다. (전자서명이 기밀성을 보장하진 않음.) 전자서명은 메시지인증과 무결성을 보증함. 기밀성을 위해 메시지와 서명에 비밀키를 이용하거나 공개키를 이용해서 암호화를 해야만 한다. Alice : 메시지를 Alice 의 Private Key를 이용, 서명알고리즘을 통해 서명함. Alice : 서명을 Bob의 Public Key를 이용, 암호화함. Bob : 암호화 메시지를 Bob 의 Private Key 를 이용, 복호화함. Bob : Alice 의 서명을 Alice 의 Pubilc Key 를 이용, 검증알고리즘을 통해 검증함. (Msg) 전자서명의 주요 기능 위조 불가 (Unforgeable) : 합법적인 서명자만이 전자서명을 생성하는 것이 가능해야 한다. 서명자 인증 (User authentication) : 전자서명의 서명자를 불특정 다수가 검증할 수 있어야 한다. 부인방지 (Non-repudiation) : 서명자는 서명행위 이후에 서명한 사실을 부인할 수 없어야 한다. (신뢰할 수 있는 제3기관 이용) 변경 불가 (Unalterable) : 서명한 문서의 내용을 변경할 수 없어야 한다. 재사용 불가 (Not reusable) : 전자문서의 서명을 다른 전자문서의 서명으로 사용할 수 없어야 한다. 전자서명의 구조 RSA 디지털 서명 구조 RSA 아이디어를 이용하면 메시지에 서명을 하고 검증을 할 수 있다. 암호화, 키교환에도 사용되는 공개키 기술 RSA 암호화 방식과 전자서명 방식이 동일 RSA : 소수를 이용, 소인수분해의 어려움을 기반으로 함. p, q : 두 소수 d : 개인키 e : 공개키 (공개) n : p * q (공개) Alice : Alice 의 Private key (d,n) 을 이용, M^d mod n 을 통해 서명 S 를 생성 Alice : 서명 S 를 전달 Alice : 메시지 M 을 전달 Bob : Alice 의 Public key (e,n) 을 이용, S^e mod n 을 통해 M’ 을 생성 Bob : M 과 M’ 을 비교, 같으면 M을 받아들임. ElGamal 디지털서명 구조 개요 ElGamal 암호시스템과 동일한 키를 사용하지만 알고리즘은 다름. ElGamal 과 동일하게 이산대수 문제 기반 서명 과정에서 두 개의 함수는 두 개의 서명을 생성 검증 과정에서 두 함수에서 출력되는 값을 비교하여 확인 한 개의 함수는 서명과 검증 과정에서 동시에 사용되지만 입력되는 것이 다를 뿐 키 생성 : ElGamal 디지털서명 구조에서 (e1, e2, p) 가 Alice 의 공개키이고 d는 개인키이다. 실제로 거의 사용되지 않음. DSA(Digital Signature Algorithm) 를 많이 사용 - ElGamal의 개량형 DSA (Digital Signature Algorithm) 개요 DSS (Digital Signature Standard) : 미국의 전자서명 표준 = DSA 와 거의동일. ElGamal 전자서명을 개량한 것 ElGamal : 이산대수 문제 기반 알고리즘 암호화에 사용되지 않음 키교환에 사용되지 않음 공개키 기술 DSA : NIST 에서 제안 ECDSA (Elliptic Curve DSA) = ECC 전자서명 (ECCDSA - 타원곡선 전자서명 구조) ECC (타원곡선) : RSA, ElGamal 보다 길이가 짧아 속도가 빠른 알고리즘 짧은 시간에 짧은 서명 생성 가능 ECDSA : 1998년 ANSI 에서 미국표준화 KCDSA (Korea Certification-based DSA) 1994년 국내에서 개발 (국가 표준 전자서명 알고리즘) 1997년 국가 표준으로 채택 1998년 TTA 에서 표준으로 채택 ElGamal 전자서명을 개선 (이산대수 문제의 어려움 기반) / DSS 를 변형 스마트카드에서도 편리하게 사용 Schnorr 전자서명 구조 ElGamal 전자서명에 기반, 서명의 크기는 작은 형태의 새로운 구조 ElGamal은 매우 큰 소수를 사용해야 함 (1024bit 이상) IC 카드에 적합</summary></entry><entry><title type="html">정보보안 - 해시함수</title><link href="https://bluesplatter.com/is_certification/IS-Management-HashAlgorithm/" rel="alternate" type="text/html" title="정보보안 - 해시함수" /><published>2021-11-23T09:00:00+09:00</published><updated>2021-11-23T09:00:00+09:00</updated><id>https://bluesplatter.com/is_certification/IS-Management-HashAlgorithm</id><content type="html" xml:base="https://bluesplatter.com/is_certification/IS-Management-HashAlgorithm/">&lt;h1 id=&quot;해시함수&quot;&gt;해시함수&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;해시함수
    &lt;ul&gt;
      &lt;li&gt;일방향 해시함수
        &lt;ul&gt;
          &lt;li&gt;일방향 해시함수의 개요
            &lt;ul&gt;
              &lt;li&gt;기본개념
                &lt;ul&gt;
                  &lt;li&gt;일방향 해시함수(one-way hash function) 에는 입력과 출력이 각각 1개씩 있음&lt;/li&gt;
                  &lt;li&gt;입력은 메시지(message) - 임의의 길이, 출력은 해시값(hash value) - 고정된 길이&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;일방향 해시함수의 성질
            &lt;ul&gt;
              &lt;li&gt;임의 길이의 메시지로부터 고정 길이의 해시값을 계산&lt;/li&gt;
              &lt;li&gt;해시값을 고속으로 계산&lt;/li&gt;
              &lt;li&gt;일방향성을 가짐. (해시값으로부터 메시지를 역산할 수 없음)&lt;/li&gt;
              &lt;li&gt;메시지가 다르면 해시값도 다름. (무결성 확인용)
                &lt;ul&gt;
                  &lt;li&gt;메시지가 1비트라도 변하면 해시값은 매우 높은 확률로 다른 값이 되야 함.&lt;/li&gt;
                  &lt;li&gt;2개의 다른 메시지가 같은 해시값을 갖는 것을 충돌(collision) 이라고 함.&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;충돌이 발생하는 것이 어려운 성질 =&amp;gt; 충돌 내성 (collision resistance)&lt;/li&gt;
              &lt;li&gt;해시 함수 = 메시지 다이제스트 함수 = 메시지 요약함수&lt;/li&gt;
              &lt;li&gt;무결성 = 완전성 = 보전성&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;메시지 무결성
        &lt;ul&gt;
          &lt;li&gt;무결성 점검
            &lt;ul&gt;
              &lt;li&gt;무결성 점검을 위해 암호학적 해시함수 사용&lt;/li&gt;
              &lt;li&gt;생성된 메시지 다이제스트와 이전 메시지 다이제스트를 비교&lt;/li&gt;
              &lt;li&gt;두 개가 동일하면 원래 메시지가 변경되지 않음&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;암호학적 해시함수 기준
            &lt;ul&gt;
              &lt;li&gt;개요 (암호학적 해시함수는 다음을 충족해야 함)
                &lt;ul&gt;
                  &lt;li&gt;프리이미지 저항성 (preimage resistance) : &lt;strong&gt;역상 저항성&lt;/strong&gt;
                    &lt;ul&gt;
                      &lt;li&gt;해시함수 h 와 y=h(M) 에 대하여 Eve 가 이를 만족하는 M 값을 찾아내는게 힘들어야 함&lt;/li&gt;
                      &lt;li&gt;&lt;strong&gt;y = h(x) 를 만족하는 x 를 찾는 것이 불가능해야 함.&lt;/strong&gt;&lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                  &lt;li&gt;제2프리이미지 저항성 (second preimage resistance) : 두 번째 역상 저항성, &lt;strong&gt;약한 충돌 내성&lt;/strong&gt;
                    &lt;ul&gt;
                      &lt;li&gt;메시지를 쉽게 위조할 수 없도록 하는 성질&lt;/li&gt;
                      &lt;li&gt;Eve가 메시지와 다이제스트를 가로채고 또 다른 다이제스트를 생성&lt;/li&gt;
                      &lt;li&gt;&lt;strong&gt;입력값 x에 대해서 h(x) = h(x’), x != x’ 을 만족하는 x’ 을 찾는 것이 불가능해야 함.&lt;/strong&gt;&lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                  &lt;li&gt;충돌 저항성 (collision resistance) : &lt;strong&gt;강한 충돌 내성&lt;/strong&gt;
                    &lt;ul&gt;
                      &lt;li&gt;약한 충돌 내성보다 확률이 높음&lt;/li&gt;
                      &lt;li&gt;Eve 로 하여금 동일한 다이제스트를 가지는 2개의 메시지를 구하지 못하도록 하는 것&lt;/li&gt;
                      &lt;li&gt;&lt;strong&gt;h(x) = h(x’) 을 만족하는 입력값 x, x’ 을 찾는다는 것은 계산적으로 불가능해야 함.&lt;/strong&gt;&lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;일방향 해시함수의 응용
        &lt;ul&gt;
          &lt;li&gt;소프트웨어 변경 검출&lt;/li&gt;
          &lt;li&gt;무결성 검증&lt;/li&gt;
          &lt;li&gt;패스워드를 기초로 한 암호화
            &lt;ul&gt;
              &lt;li&gt;패스워드와 솔트(의사난수 랜덤 값)를 섞은 결과의 해시값을 구해 그것을 암호화키로 사용 =&amp;gt; 사전 공격 차단&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;메시지 인증코드
            &lt;ul&gt;
              &lt;li&gt;송신자와 수신자만의 키와 메시지를 혼합하여 해시값을 계산 한 것&lt;/li&gt;
              &lt;li&gt;SSL/TLS 에서도 사용&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;전자서명&lt;/li&gt;
          &lt;li&gt;전자입찰 시스템&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;랜덤 오라클 모델과 해시함수에 대한 공격
        &lt;ul&gt;
          &lt;li&gt;랜덤 오라클 모델
            &lt;ul&gt;
              &lt;li&gt;개요
                &lt;ul&gt;
                  &lt;li&gt;해시함수에 대한 이상적인 수학적 모델&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;비둘기집 원리
                &lt;ul&gt;
                  &lt;li&gt;n+1 비들기가 n개의 집에 들어가 있을 때 한 비둘기 집에는 두마리가 있다는 원리 (충돌을 의미)&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;생일 문제 (생일 공격)
                &lt;ul&gt;
                  &lt;li&gt;같은 해시값을 생성하는 2개의 메시지를 구하는 것&lt;/li&gt;
                  &lt;li&gt;강한 충돌 내성을 깨고자 하는 공격&lt;/li&gt;
                  &lt;li&gt;생일 패러독스 (birthday paradox) -&amp;gt; 일치할 확률이 상상 이상으로 높아지는 것&lt;/li&gt;
                  &lt;li&gt;랜덤으로 선택한 N명의 그룹, N 명 중 적어도 2명의 생일이 일치할 확률이 1/2 이상이 되도록 하기 위한 N은 최저 몇 명? -&amp;gt; 23명
                    &lt;ul&gt;
                      &lt;li&gt;N명 전원 생일이 일치하지 않을 확률을 1에서 빼면 됨.&lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;일방향 해시함수에 대한 공격
        &lt;ul&gt;
          &lt;li&gt;무차별 공격
            &lt;ul&gt;
              &lt;li&gt;약한 충돌 내성을 깨고자 하는 공격&lt;/li&gt;
              &lt;li&gt;SHA-1 은 160 비트라서 2의 160승 회를 시행하면 됨&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;기타 해시함수 공격의 종류 및 특성
            &lt;ul&gt;
              &lt;li&gt;일치블록 연쇄공격 : 새로운 메시지 M’ 을 사전에 다양하게 만들어 놓았다가 공격하고자 하는 메시지의 해시함수값 h(M) 과 같은 해시함수값을 갖는 것을 골라 사용하는 공격&lt;/li&gt;
              &lt;li&gt;중간자 연쇄공격 : 전체 해시 값이 아니라 해시 중간의 결과에 대한 충돌쌍을 찾는다.&lt;/li&gt;
              &lt;li&gt;고정점 연쇄공격 : 메시지 블록과 연쇄변수 쌍을 얻게 되면 임의의 수의 동등한 블록들 xi 를 메시지의 중간에 삽입해도 전체 해시값이 변하지 않는다.&lt;/li&gt;
              &lt;li&gt;차분 연쇄공격
                &lt;ul&gt;
                  &lt;li&gt;다중 라운드 블록암호의 공격 = 다중 라운드 블록암호를 사용하는 해시 함수에서 입력값과 그에 대응하는 출력값 차이의 통계적 특성을 조사하는 기법&lt;/li&gt;
                  &lt;li&gt;해시함수의 공격 : 압축함수의 입출력 차이를 조사하여 0의 충돌쌍을 주로 찾아내는 방법을 사용&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;일방향 해시함수로 해결할 수 없는 문제
        &lt;ul&gt;
          &lt;li&gt;조작과 변경을 검출할 수 있지만 거짓행세를 검출하지는 못함&lt;/li&gt;
          &lt;li&gt;무결성 외에 인증이라는 절차도 필요 (파일의 무결성 뿐만 아니라 파일의 송신처 검증도 필요)
            &lt;ul&gt;
              &lt;li&gt;인증을 하기 위한 기술 : 메시지 인증코드와 전자서명과 같은 기술&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;암호학적 해시함수의 예
    &lt;ul&gt;
      &lt;li&gt;개요
        &lt;ul&gt;
          &lt;li&gt;압축함수의 두 가지 유형
            &lt;ul&gt;
              &lt;li&gt;기본 개념
                &lt;ul&gt;
                  &lt;li&gt;해시 함수를 설계하는 데에는 크게 서로 다른 2가지 경향이 있음.&lt;/li&gt;
                  &lt;li&gt;압축함수를 아무런 기초 없이 처음부터 새로 만드는 것, 목적에 맞추어 특별하게 설계.&lt;/li&gt;
                  &lt;li&gt;압축함수 자리에 대칭키 블록 암호를 사용하는 것.&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;새로 만드는 해시함수
            &lt;ul&gt;
              &lt;li&gt;메시지 다이제스트 (Message Digest) (MD2 -&amp;gt; MD4 -&amp;gt; MD5)
                &lt;ul&gt;
                  &lt;li&gt;MD 알고리즘에는 MD2, MD4, MD5 세 가지가 있음. RSA를 개발한 MIT의 Rivest 교수가 공개키 기반 구조를 만들기 위해 RSA 와 함께 개발&lt;/li&gt;
                  &lt;li&gt;1989년에 만들어진 MD2는 8비트 컴퓨터에 최적화, MD4(90년 개발), MD5(91년 개발) 은 32비트 컴퓨터에 최적화&lt;/li&gt;
                  &lt;li&gt;MD5 는 MD4의 확장판으로, MD4 보다 속도는 빠르지 않지만 데이터 보안성이 더 좋음.&lt;/li&gt;
                  &lt;li&gt;최종 버전인 MD5 : 메시지를 512비트로 된 블록들로 나누고, 128비트 다이제스트를 출력. 충돌 공격 내성을 갖기에는 길이가 짧음.&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;SHA (Secure Hash Algorithm)
                &lt;ul&gt;
                  &lt;li&gt;안전 해시 알고리즘(SHA), 최근에 널리 사용&lt;/li&gt;
                  &lt;li&gt;NIST가 개발, 1993년에 FIPS PUB 180 으로 출판. SHA의 약점이 발견되었을 때 1995년 FIPS PUB 180-1로 나옴, 이를 SHA-1 이라고 함.&lt;/li&gt;
                  &lt;li&gt;SHA 는 MD4 해시함수에 기초, 설계도 MD4 를 모델로 함. MD5 보다 느리지만 안전함. SHA-1 해시값으로 160비트를 출력.&lt;/li&gt;
                  &lt;li&gt;2002년 NIST는 새 표준인 FIPS-180-2를 내놓음. 해시 값이 각각 256, 384와 512비트인 3개의 새로운 SHA 버전을 정의함. SHA-256, SHA-384, SHA-512. 이들 알고리즘을 SHA-2 라고 함.&lt;/li&gt;
                  &lt;li&gt;새로운 버전은 SHA-1과 하부구조가 동일. 동일한 유형의 모듈러 연산과 논리적 2진 연산을 이용. 2008년 FIP PUB 180-3 에는 224-비트 버전이 추가.&lt;/li&gt;
                  &lt;li&gt;2005년에 SHA-1의 강한 충돌 내성이 깨졌다는 것을 접수하고 SHA-3을 제정하기로 함. SHA-3 은 AES와 같은 방식으로 표준화&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;SHA-512
        &lt;ul&gt;
          &lt;li&gt;개요
            &lt;ul&gt;
              &lt;li&gt;기본개념
                &lt;ul&gt;
                  &lt;li&gt;SHA-2에 포함 (SHA-224, SHA-256, SHA-384, SHA-512)&lt;/li&gt;
                  &lt;li&gt;SHA-512는 다중-블록 메시지로부터 512비트 다이제스트를 생성함. 각 블록은 1024비트 길이를 가짐.&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;길이 필드와 패딩
                &lt;ul&gt;
                  &lt;li&gt;메시지 다이제스트를 생성하기 전에 메시지에 추가적으로 덧붙이는 128비트의 부호 없는 정수 길이 필드가 필요. (512의 경우)
                    &lt;ul&gt;
                      &lt;li&gt;
                        &lt;table&gt;
                          &lt;tbody&gt;
                            &lt;tr&gt;
                              &lt;td&gt;Original MSG Field (&amp;lt;2^128)&lt;/td&gt;
                              &lt;td&gt;Padding Field (가변길이)&lt;/td&gt;
                              &lt;td&gt;Length Field (Original MSG 길이필드 - Hash 값 수정에 대한 방어체계)&lt;/td&gt;
                            &lt;/tr&gt;
                          &lt;/tbody&gt;
                        &lt;/table&gt;
                      &lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                  &lt;li&gt;메시지의 길이가 비트수로 표현된 값이 저장됨. 이 길이는 패딩을 하기 전의 원래 메시지 길이를 나타냄.&lt;/li&gt;
                  &lt;li&gt;부호 없는 128비트 정수 필드로 정의할 수 있는 수는 0부터 2^128-1 이다. 이 길이가 바로 SHA-512에서 감당할 수 있는 최대 메시지 길이.
                    &lt;ul&gt;
                      &lt;li&gt;2^128 비트 이하의 길이를 갖는 메시지를 1024비트의 블록으로 쪼갬.&lt;/li&gt;
                      &lt;li&gt;IV 512 bit 와 블록을 Compression 함수를 이용해 512 bit 생성&lt;/li&gt;
                      &lt;li&gt;위의 512bit 데이터를 다음 블록과 Compression 함수를 이용해 512 bit 생성…&lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;메시지 인증코드(MAC)
        &lt;ul&gt;
          &lt;li&gt;MAC의 개요
            &lt;ul&gt;
              &lt;li&gt;기본개념
                &lt;ul&gt;
                  &lt;li&gt;메시지 인증을 위해 필요 (MAC, Message Authentication Code)&lt;/li&gt;
                  &lt;li&gt;해시함수 기반, 블록암호 = 전자서명보다 속도가 빠름&lt;/li&gt;
                  &lt;li&gt;무결성을 확인하고, 메시지에 대한 인증을 하는 기술 (변경과 거짓행세 검출 가능)&lt;/li&gt;
                  &lt;li&gt;임의 길이의 메시지와 송신자 및 수신자가 공유하는 키라는 2개의 입력값을 기초로 해서 고정 비트길이의 출력을 계산하는 함수, 이 출력을 MAC 값이라고 부름.
                    &lt;ul&gt;
                      &lt;li&gt;Msg 와 키(송신자,수신자 공유)를 MAC 함수에 입력하여 MAC 값(고정길이 비트)을 추출&lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;메시지 인증
                &lt;ul&gt;
                  &lt;li&gt;암호를 사용하면 소극적 공격(도청)을, 인증을 사용하면 적극적 공격(데이터나 거래의 위조)를 방어할 수 있음.&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;변경 감지 코드 (MDC, Modification Detection Code)
            &lt;ul&gt;
              &lt;li&gt;메시지의 무결성을 보장하는 메시지 다이제스트&lt;/li&gt;
              &lt;li&gt;Bob은 수신한 메시지로부터 새로운 MDC 를 생성하여 Alice 에게 받은 MDC 와 비교, 값이 동일하다면 해당 메시지는 변경되지 않음.&lt;/li&gt;
              &lt;li&gt;키가 없는 해시함수를 사용&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;메시지 인증 코드 (MAC)
            &lt;ul&gt;
              &lt;li&gt;메시지의 무결성은 물론 Alice 가 메시지의 원 전송자이며 다른 사람이 Alice 인 척 하는 것이 아니라는 것을 말해주는 데이터 출원지 인증을 보장하기 위해, 변경 감지 코드를 메시지 인증코드(MAC) 로 바꿀 필요가 있음.&lt;/li&gt;
              &lt;li&gt;MDC와 MAC의 차이는 MAC 에는 Alice 와 Bob 사이의 비밀값이 포함. Eve 는 가지고 있지 않은 비밀키가 두 사람 사이의 비밀 값이 될 수 있다.
                &lt;ul&gt;
                  &lt;li&gt;Eve 가 변조를 하더라도, 메시지와 키 값의 Hash 값인 MAC 값을 생성할 수 없음.&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;MAC 의 키 배송 문제
            &lt;ul&gt;
              &lt;li&gt;MAC에서는 송신자와 수신자가 키를 공유할 필요가 있다.&lt;/li&gt;
              &lt;li&gt;대칭키 암호 때의 키 배송 문제와 같은 문제가 메시지 인증코드에서도 일어남.&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;MAC의 구현 사례
            &lt;ul&gt;
              &lt;li&gt;축소 MAC
                &lt;ul&gt;
                  &lt;li&gt;MAC의 안정성을 높이기 위해 축소 MAC(nested MAC) 이 설계됨. 두 단계의 해싱이 있음&lt;/li&gt;
                  &lt;li&gt;첫 번째 단계 : 키는 메시지와 이어 붙이고 해시하여 중간 단계의 다이제스트를 생성함.&lt;/li&gt;
                  &lt;li&gt;두 번째 단계 : 키는 중간단계 다이제스트에 이어 붙이고 최종적인 다이제스트를 생성&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;HMAC
                &lt;ul&gt;
                  &lt;li&gt;축소 MAC 보다 더 복잡. 패딩 같은 추가적인 조치가 더 들어 있음.&lt;/li&gt;
                  &lt;li&gt;HMAC 은 일방향 해시함수를 이용하여 메시지 인증코드를 구성하는 방법.&lt;/li&gt;
                  &lt;li&gt;HMAC 의 H 는 Hash
                    &lt;ul&gt;
                      &lt;li&gt;블록길이
                        &lt;ul&gt;
                          &lt;li&gt;SHA-1 : 512&lt;/li&gt;
                          &lt;li&gt;SHA-2 (SHA-224 : 512, SHA-256 : 512, SHA-384 : 1024, SHA-512 : 1024)&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/li&gt;
                      &lt;li&gt;MD 길이
                        &lt;ul&gt;
                          &lt;li&gt;SHA-1 : 160&lt;/li&gt;
                          &lt;li&gt;SHA-2 (SHA-224 : 224, SHA-256 : 256, SHA-384 : 384, SHA-512 : 512)&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/li&gt;
                      &lt;li&gt;HMAC 과정
                        &lt;ul&gt;
                          &lt;li&gt;
                            &lt;table&gt;
                              &lt;tbody&gt;
                                &lt;tr&gt;
                                  &lt;td&gt;키값 : 키&lt;/td&gt;
                                  &lt;td&gt;Key Padding (000..) 으로 블록길이만큼 늘임&lt;/td&gt;
                                &lt;/tr&gt;
                              &lt;/tbody&gt;
                            &lt;/table&gt;
                          &lt;/li&gt;
                          &lt;li&gt;XOR 연산&lt;/li&gt;
                          &lt;li&gt;I Pad : 00110110 00110110 00110110 … 으로 블록길이만큼 늘임&lt;/li&gt;
                          &lt;li&gt;결과값 Si 와 메시지블록 M1, M2, … , Mn 을 결합하여 해시함수(H) 적용 (결과값 h)&lt;/li&gt;
                          &lt;li&gt;위 키값과 O Pad : 01011100 01011100 01011100 … 으로 블록길이만큼 늘린 값을 XOR 연산&lt;/li&gt;
                          &lt;li&gt;
                            &lt;table&gt;
                              &lt;tbody&gt;
                                &lt;tr&gt;
                                  &lt;td&gt;결과값 So 와 h 를 결합 (So&lt;/td&gt;
                                  &lt;td&gt;h) 하여 해시함수(H) 적용, 최종 MAC 값 추출&lt;/td&gt;
                                &lt;/tr&gt;
                              &lt;/tbody&gt;
                            &lt;/table&gt;
                          &lt;/li&gt;
                          &lt;li&gt;H : SHA-1, MD5 등등…&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;CMAC (Cipher-based Message Authentication Code)
                &lt;ul&gt;
                  &lt;li&gt;NIST 는 데이터 인증 알고리즘 혹은 CMAC 또는 CBCMAC 이라 부르는 표준 FIPS 113을 정의&lt;/li&gt;
                  &lt;li&gt;대칭키 암호시스템에 대한 암호 블록체인 (CBC) 모드와 유사한 방법
                    &lt;ul&gt;
                      &lt;li&gt;그러나 N개의 평문 블록으로부터 N개의 암호문 블록을 만드는 것은 아님. (1개의 암호문 블록 생성)&lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                  &lt;li&gt;CMAC 이 CBCMAC 보다 안전 (수학적 보완)&lt;/li&gt;
                  &lt;li&gt;과정
                    &lt;ul&gt;
                      &lt;li&gt;메시지 블록 M1, M2, …, Mn&lt;/li&gt;
                      &lt;li&gt;M1 과 k (키값) 을 E (Encrypt) 한 결과 R1&lt;/li&gt;
                      &lt;li&gt;M2 와 R1 을 Xor 연산 하여 k (키값) 을 E (Encrypt) …&lt;/li&gt;
                      &lt;li&gt;Mn 와 Rn-1 와 새로 생성한 k (키값) 을 E (Encrypt) =&amp;gt; CMAC&lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;MAC 의 이용 예
            &lt;ul&gt;
              &lt;li&gt;IPSec (HMAC)
                &lt;ul&gt;
                  &lt;li&gt;인터넷 기반 통신프로토콜 IP(Internet Protocol) 에 보안기능을 추가한 것&lt;/li&gt;
                  &lt;li&gt;통신 내용의 인증과 무결성을 확인하기 위해 MAC 을 이용&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;SSL/TLS (HMAC)
                &lt;ul&gt;
                  &lt;li&gt;웹에서 온라인 쇼핑을 할 때 사용되는 통신 프로토콜&lt;/li&gt;
                  &lt;li&gt;통신 내용의 인증과 무결성 확인을 위해 메시지 인증코드를 이용&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;SET 프로토콜 (HMAC)&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;MAC 에 대한 공격
            &lt;ul&gt;
              &lt;li&gt;재전송 공격
                &lt;ul&gt;
                  &lt;li&gt;개요
                    &lt;ul&gt;
                      &lt;li&gt;적극적 공격자 멜로리는 자신이 보존해 둔 MAC 값을 반복해서 송신하는 공격을 감행.&lt;/li&gt;
                      &lt;li&gt;이를 재전송 공격(replay attack) 이라고 부름
                        &lt;ul&gt;
                          &lt;li&gt;A 에서 B로 전송되는 Msg + MAC 을 Mellory 가 확보&lt;/li&gt;
                          &lt;li&gt;Msg + MAC 을 재전송&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/li&gt;
                      &lt;li&gt;재전송 공격을 막을 수 있는 방법에는 아래 4가지가 있음.&lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                  &lt;li&gt;순서 번호 (sequence number)
                    &lt;ul&gt;
                      &lt;li&gt;송신 메시지에 매회 1회씩 증가하는 번호를 붙이기로 약속.&lt;/li&gt;
                      &lt;li&gt;MAC 값의 계산에 순서번호도 메시지에 포함시키도록 함.&lt;/li&gt;
                      &lt;li&gt;마지막 순서 번호를 기록해야 함.&lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                  &lt;li&gt;타임스탬프 (timestamp)
                    &lt;ul&gt;
                      &lt;li&gt;송신 메시지에 현재 시각을 넣기로 약속해두고 그 이전의 메시지가 왔을 경우에는 MAC 값이 바르더라도 오류라고 판단.&lt;/li&gt;
                      &lt;li&gt;시계 동기화 필요&lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                  &lt;li&gt;비표 (nonce)
                    &lt;ul&gt;
                      &lt;li&gt;메시지를 수신하기에 앞서 수신자는 송신자에게 일회용의 랜덤한 값 (비표) 를 줌.&lt;/li&gt;
                      &lt;li&gt;송신자는 비표를 포함해서 MAC 값을 계산, 비표의 값은 통신 때마다 바뀜.&lt;/li&gt;
                      &lt;li&gt;통신 데이터 양이 약간 증가&lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                  &lt;li&gt;시도/응답 (challenge/response)
                    &lt;ul&gt;
                      &lt;li&gt;비표와 유사 개념&lt;/li&gt;
                      &lt;li&gt;상대방에게 난수값을 보내면 상대방은 난수값을 포함한 응답값을 보내야 함.&lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;MAC으로 해결할 수 없는 문제
            &lt;ul&gt;
              &lt;li&gt;제 3자에 대한 증명
                &lt;ul&gt;
                  &lt;li&gt;MAC 은 공유키를 사용하기에 MAC 값을 계산할 수 있는 것은 Alice 와 Bob 이다.&lt;/li&gt;
                  &lt;li&gt;두 사람이 서로 통신하고 있는 동안 그 MAC 값을 계산한 것은 상대방이라고 말할 수 있다.&lt;/li&gt;
                  &lt;li&gt;하지만 제3자 Victor 에게 이 MAC 값을 계산한 것은 자신이 아닌 상대방이라고 증명할 방법은 없다.
                    &lt;ul&gt;
                      &lt;li&gt;전자서명을 사용하면 제3자에 대한 증명이 가능해짐&lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;부인 방지
                &lt;ul&gt;
                  &lt;li&gt;송신자 Alice 는 Bob 에게 그러한 메시지를 보내지 않았다고 Victor 에게 주장할 수 있고 이를 부인이라고 한다.&lt;/li&gt;
                  &lt;li&gt;MAC 에서는 Alice 와 Bob 중 어느 쪽 주장이 맞는지를 판단할 수 없다.
                    &lt;ul&gt;
                      &lt;li&gt;전자서명을 사용하면 부인방지가 가능함&lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;메시지 인증
        &lt;ul&gt;
          &lt;li&gt;개요
            &lt;ul&gt;
              &lt;li&gt;기본 개념
                &lt;ul&gt;
                  &lt;li&gt;수신자가 받은 메시지가 송신자가 보낸 메시지와 동일한 것인지 확인하는 것&lt;/li&gt;
                  &lt;li&gt;메시지 내용 변경, 순서 변경, 삭제 및 훼손 등 불법 행위에 대하여 확인하는 기술&lt;/li&gt;
                  &lt;li&gt;관용 암호화 방식, 공개키 암호화 방식, 해시 함수, MAC 을 이용하는 방식 등&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;메시지 인증 방법
                &lt;ul&gt;
                  &lt;li&gt;관용(대칭키) 암호방식을 이용한 메시지 인증 방식
                    &lt;ul&gt;
                      &lt;li&gt;평문을 사전에 분배해서 갖고 있던 비밀키로 암호화하여 암호문을 수신자에게 전송하면 수신자는 암호문을 비밀키로 복호화하여 확인&lt;/li&gt;
                      &lt;li&gt;이 때, 평문이 문장으로 되어 있으면 복호화 후 전송 중의 메시지 변경 여부를 확인할 수 있음&lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                  &lt;li&gt;공개키 암호화 방식을 이용한 메시지 인증 방식
                    &lt;ul&gt;
                      &lt;li&gt;송신자는 자신의 개인키로 평문을 암호화하여 암호문을 수신자에게 전송, 수신자는 송신자의 공개키로 암호문을 복호화하여 인증을 확인&lt;/li&gt;
                      &lt;li&gt;누구나 메시지 인증을 검증할 수 있음. 개인키를 알고 있는 송신자만 인증을 생성할 수 있기 때문에 제 3자가 송신자를 가장하여 메시지를 전송할 수 없음.&lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                  &lt;li&gt;해시 함수를 이용한 메시지 인증 방식
                    &lt;ul&gt;
                      &lt;li&gt;메시지로부터 해시 함수 결과 값을 계산한 후 수신한 해시 값과 비교하여 메시지의 무결성을 검증하는 방식&lt;/li&gt;
                      &lt;li&gt;해시 함수가 공개되어 있기 때문에 제 3자가 인증자인 것처럼 가장하여 임의의 메시지를 정당한 메시지인 것처럼 인증하면 수신자는 제 3자의 위조 인증임을 알 수 없음&lt;/li&gt;
                      &lt;li&gt;비밀정보를 해시 함수에 추가하여 계산하여 단점을 해결. 송수신자는 사전에 비밀정보를 가지고 있다가 인증하려는 메시지와 비밀정보를 연계하여 해시 함수에 인증하고 계산한 값을 메시지에 덧붙여 전송함.&lt;/li&gt;
                      &lt;li&gt;수신자는 사용자로부터 수신한 메시지와 자신이 보관하고 있는 비밀 정보로 해시함수를 계산한 후 수신한 해시 함수 결과 값과 비교하여 메시지 인증을 수행. 제3자는 비밀정보를 모름.&lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                  &lt;li&gt;MAC 을 이용한 메시지 인증 방식
                    &lt;ul&gt;
                      &lt;li&gt;MAC (Message Authentication Code) 은 관용 암호방식을 이용하여 간단한 무결성 검증 코드를 만들어 메시지에 부가시키는 방법&lt;/li&gt;
                      &lt;li&gt;MAC 을 이용해 메시지 인증 및 무결성 검사를 수행하는 절차로는 우선 송신자가 인증할 메시지를 비밀키로 암호화시킨 MAC 값을 계산한 후 메시지와 함께 수신자에게 전송.&lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>HY03</name><email>hyunik03@gmail.com</email></author><category term="IS_Certification" /><category term="정보보안기사" /><category term="해시함수" /><summary type="html">해시함수 해시함수 일방향 해시함수 일방향 해시함수의 개요 기본개념 일방향 해시함수(one-way hash function) 에는 입력과 출력이 각각 1개씩 있음 입력은 메시지(message) - 임의의 길이, 출력은 해시값(hash value) - 고정된 길이 일방향 해시함수의 성질 임의 길이의 메시지로부터 고정 길이의 해시값을 계산 해시값을 고속으로 계산 일방향성을 가짐. (해시값으로부터 메시지를 역산할 수 없음) 메시지가 다르면 해시값도 다름. (무결성 확인용) 메시지가 1비트라도 변하면 해시값은 매우 높은 확률로 다른 값이 되야 함. 2개의 다른 메시지가 같은 해시값을 갖는 것을 충돌(collision) 이라고 함. 충돌이 발생하는 것이 어려운 성질 =&amp;gt; 충돌 내성 (collision resistance) 해시 함수 = 메시지 다이제스트 함수 = 메시지 요약함수 무결성 = 완전성 = 보전성 메시지 무결성 무결성 점검 무결성 점검을 위해 암호학적 해시함수 사용 생성된 메시지 다이제스트와 이전 메시지 다이제스트를 비교 두 개가 동일하면 원래 메시지가 변경되지 않음 암호학적 해시함수 기준 개요 (암호학적 해시함수는 다음을 충족해야 함) 프리이미지 저항성 (preimage resistance) : 역상 저항성 해시함수 h 와 y=h(M) 에 대하여 Eve 가 이를 만족하는 M 값을 찾아내는게 힘들어야 함 y = h(x) 를 만족하는 x 를 찾는 것이 불가능해야 함. 제2프리이미지 저항성 (second preimage resistance) : 두 번째 역상 저항성, 약한 충돌 내성 메시지를 쉽게 위조할 수 없도록 하는 성질 Eve가 메시지와 다이제스트를 가로채고 또 다른 다이제스트를 생성 입력값 x에 대해서 h(x) = h(x’), x != x’ 을 만족하는 x’ 을 찾는 것이 불가능해야 함. 충돌 저항성 (collision resistance) : 강한 충돌 내성 약한 충돌 내성보다 확률이 높음 Eve 로 하여금 동일한 다이제스트를 가지는 2개의 메시지를 구하지 못하도록 하는 것 h(x) = h(x’) 을 만족하는 입력값 x, x’ 을 찾는다는 것은 계산적으로 불가능해야 함. 일방향 해시함수의 응용 소프트웨어 변경 검출 무결성 검증 패스워드를 기초로 한 암호화 패스워드와 솔트(의사난수 랜덤 값)를 섞은 결과의 해시값을 구해 그것을 암호화키로 사용 =&amp;gt; 사전 공격 차단 메시지 인증코드 송신자와 수신자만의 키와 메시지를 혼합하여 해시값을 계산 한 것 SSL/TLS 에서도 사용 전자서명 전자입찰 시스템 랜덤 오라클 모델과 해시함수에 대한 공격 랜덤 오라클 모델 개요 해시함수에 대한 이상적인 수학적 모델 비둘기집 원리 n+1 비들기가 n개의 집에 들어가 있을 때 한 비둘기 집에는 두마리가 있다는 원리 (충돌을 의미) 생일 문제 (생일 공격) 같은 해시값을 생성하는 2개의 메시지를 구하는 것 강한 충돌 내성을 깨고자 하는 공격 생일 패러독스 (birthday paradox) -&amp;gt; 일치할 확률이 상상 이상으로 높아지는 것 랜덤으로 선택한 N명의 그룹, N 명 중 적어도 2명의 생일이 일치할 확률이 1/2 이상이 되도록 하기 위한 N은 최저 몇 명? -&amp;gt; 23명 N명 전원 생일이 일치하지 않을 확률을 1에서 빼면 됨. 일방향 해시함수에 대한 공격 무차별 공격 약한 충돌 내성을 깨고자 하는 공격 SHA-1 은 160 비트라서 2의 160승 회를 시행하면 됨 기타 해시함수 공격의 종류 및 특성 일치블록 연쇄공격 : 새로운 메시지 M’ 을 사전에 다양하게 만들어 놓았다가 공격하고자 하는 메시지의 해시함수값 h(M) 과 같은 해시함수값을 갖는 것을 골라 사용하는 공격 중간자 연쇄공격 : 전체 해시 값이 아니라 해시 중간의 결과에 대한 충돌쌍을 찾는다. 고정점 연쇄공격 : 메시지 블록과 연쇄변수 쌍을 얻게 되면 임의의 수의 동등한 블록들 xi 를 메시지의 중간에 삽입해도 전체 해시값이 변하지 않는다. 차분 연쇄공격 다중 라운드 블록암호의 공격 = 다중 라운드 블록암호를 사용하는 해시 함수에서 입력값과 그에 대응하는 출력값 차이의 통계적 특성을 조사하는 기법 해시함수의 공격 : 압축함수의 입출력 차이를 조사하여 0의 충돌쌍을 주로 찾아내는 방법을 사용 일방향 해시함수로 해결할 수 없는 문제 조작과 변경을 검출할 수 있지만 거짓행세를 검출하지는 못함 무결성 외에 인증이라는 절차도 필요 (파일의 무결성 뿐만 아니라 파일의 송신처 검증도 필요) 인증을 하기 위한 기술 : 메시지 인증코드와 전자서명과 같은 기술 암호학적 해시함수의 예 개요 압축함수의 두 가지 유형 기본 개념 해시 함수를 설계하는 데에는 크게 서로 다른 2가지 경향이 있음. 압축함수를 아무런 기초 없이 처음부터 새로 만드는 것, 목적에 맞추어 특별하게 설계. 압축함수 자리에 대칭키 블록 암호를 사용하는 것. 새로 만드는 해시함수 메시지 다이제스트 (Message Digest) (MD2 -&amp;gt; MD4 -&amp;gt; MD5) MD 알고리즘에는 MD2, MD4, MD5 세 가지가 있음. RSA를 개발한 MIT의 Rivest 교수가 공개키 기반 구조를 만들기 위해 RSA 와 함께 개발 1989년에 만들어진 MD2는 8비트 컴퓨터에 최적화, MD4(90년 개발), MD5(91년 개발) 은 32비트 컴퓨터에 최적화 MD5 는 MD4의 확장판으로, MD4 보다 속도는 빠르지 않지만 데이터 보안성이 더 좋음. 최종 버전인 MD5 : 메시지를 512비트로 된 블록들로 나누고, 128비트 다이제스트를 출력. 충돌 공격 내성을 갖기에는 길이가 짧음. SHA (Secure Hash Algorithm) 안전 해시 알고리즘(SHA), 최근에 널리 사용 NIST가 개발, 1993년에 FIPS PUB 180 으로 출판. SHA의 약점이 발견되었을 때 1995년 FIPS PUB 180-1로 나옴, 이를 SHA-1 이라고 함. SHA 는 MD4 해시함수에 기초, 설계도 MD4 를 모델로 함. MD5 보다 느리지만 안전함. SHA-1 해시값으로 160비트를 출력. 2002년 NIST는 새 표준인 FIPS-180-2를 내놓음. 해시 값이 각각 256, 384와 512비트인 3개의 새로운 SHA 버전을 정의함. SHA-256, SHA-384, SHA-512. 이들 알고리즘을 SHA-2 라고 함. 새로운 버전은 SHA-1과 하부구조가 동일. 동일한 유형의 모듈러 연산과 논리적 2진 연산을 이용. 2008년 FIP PUB 180-3 에는 224-비트 버전이 추가. 2005년에 SHA-1의 강한 충돌 내성이 깨졌다는 것을 접수하고 SHA-3을 제정하기로 함. SHA-3 은 AES와 같은 방식으로 표준화 SHA-512 개요 기본개념 SHA-2에 포함 (SHA-224, SHA-256, SHA-384, SHA-512) SHA-512는 다중-블록 메시지로부터 512비트 다이제스트를 생성함. 각 블록은 1024비트 길이를 가짐. 길이 필드와 패딩 메시지 다이제스트를 생성하기 전에 메시지에 추가적으로 덧붙이는 128비트의 부호 없는 정수 길이 필드가 필요. (512의 경우) Original MSG Field (&amp;lt;2^128) Padding Field (가변길이) Length Field (Original MSG 길이필드 - Hash 값 수정에 대한 방어체계) 메시지의 길이가 비트수로 표현된 값이 저장됨. 이 길이는 패딩을 하기 전의 원래 메시지 길이를 나타냄. 부호 없는 128비트 정수 필드로 정의할 수 있는 수는 0부터 2^128-1 이다. 이 길이가 바로 SHA-512에서 감당할 수 있는 최대 메시지 길이. 2^128 비트 이하의 길이를 갖는 메시지를 1024비트의 블록으로 쪼갬. IV 512 bit 와 블록을 Compression 함수를 이용해 512 bit 생성 위의 512bit 데이터를 다음 블록과 Compression 함수를 이용해 512 bit 생성… 메시지 인증코드(MAC) MAC의 개요 기본개념 메시지 인증을 위해 필요 (MAC, Message Authentication Code) 해시함수 기반, 블록암호 = 전자서명보다 속도가 빠름 무결성을 확인하고, 메시지에 대한 인증을 하는 기술 (변경과 거짓행세 검출 가능) 임의 길이의 메시지와 송신자 및 수신자가 공유하는 키라는 2개의 입력값을 기초로 해서 고정 비트길이의 출력을 계산하는 함수, 이 출력을 MAC 값이라고 부름. Msg 와 키(송신자,수신자 공유)를 MAC 함수에 입력하여 MAC 값(고정길이 비트)을 추출 메시지 인증 암호를 사용하면 소극적 공격(도청)을, 인증을 사용하면 적극적 공격(데이터나 거래의 위조)를 방어할 수 있음. 변경 감지 코드 (MDC, Modification Detection Code) 메시지의 무결성을 보장하는 메시지 다이제스트 Bob은 수신한 메시지로부터 새로운 MDC 를 생성하여 Alice 에게 받은 MDC 와 비교, 값이 동일하다면 해당 메시지는 변경되지 않음. 키가 없는 해시함수를 사용 메시지 인증 코드 (MAC) 메시지의 무결성은 물론 Alice 가 메시지의 원 전송자이며 다른 사람이 Alice 인 척 하는 것이 아니라는 것을 말해주는 데이터 출원지 인증을 보장하기 위해, 변경 감지 코드를 메시지 인증코드(MAC) 로 바꿀 필요가 있음. MDC와 MAC의 차이는 MAC 에는 Alice 와 Bob 사이의 비밀값이 포함. Eve 는 가지고 있지 않은 비밀키가 두 사람 사이의 비밀 값이 될 수 있다. Eve 가 변조를 하더라도, 메시지와 키 값의 Hash 값인 MAC 값을 생성할 수 없음. MAC 의 키 배송 문제 MAC에서는 송신자와 수신자가 키를 공유할 필요가 있다. 대칭키 암호 때의 키 배송 문제와 같은 문제가 메시지 인증코드에서도 일어남. MAC의 구현 사례 축소 MAC MAC의 안정성을 높이기 위해 축소 MAC(nested MAC) 이 설계됨. 두 단계의 해싱이 있음 첫 번째 단계 : 키는 메시지와 이어 붙이고 해시하여 중간 단계의 다이제스트를 생성함. 두 번째 단계 : 키는 중간단계 다이제스트에 이어 붙이고 최종적인 다이제스트를 생성 HMAC 축소 MAC 보다 더 복잡. 패딩 같은 추가적인 조치가 더 들어 있음. HMAC 은 일방향 해시함수를 이용하여 메시지 인증코드를 구성하는 방법. HMAC 의 H 는 Hash 블록길이 SHA-1 : 512 SHA-2 (SHA-224 : 512, SHA-256 : 512, SHA-384 : 1024, SHA-512 : 1024) MD 길이 SHA-1 : 160 SHA-2 (SHA-224 : 224, SHA-256 : 256, SHA-384 : 384, SHA-512 : 512) HMAC 과정 키값 : 키 Key Padding (000..) 으로 블록길이만큼 늘임 XOR 연산 I Pad : 00110110 00110110 00110110 … 으로 블록길이만큼 늘임 결과값 Si 와 메시지블록 M1, M2, … , Mn 을 결합하여 해시함수(H) 적용 (결과값 h) 위 키값과 O Pad : 01011100 01011100 01011100 … 으로 블록길이만큼 늘린 값을 XOR 연산 결과값 So 와 h 를 결합 (So h) 하여 해시함수(H) 적용, 최종 MAC 값 추출 H : SHA-1, MD5 등등… CMAC (Cipher-based Message Authentication Code) NIST 는 데이터 인증 알고리즘 혹은 CMAC 또는 CBCMAC 이라 부르는 표준 FIPS 113을 정의 대칭키 암호시스템에 대한 암호 블록체인 (CBC) 모드와 유사한 방법 그러나 N개의 평문 블록으로부터 N개의 암호문 블록을 만드는 것은 아님. (1개의 암호문 블록 생성) CMAC 이 CBCMAC 보다 안전 (수학적 보완) 과정 메시지 블록 M1, M2, …, Mn M1 과 k (키값) 을 E (Encrypt) 한 결과 R1 M2 와 R1 을 Xor 연산 하여 k (키값) 을 E (Encrypt) … Mn 와 Rn-1 와 새로 생성한 k (키값) 을 E (Encrypt) =&amp;gt; CMAC MAC 의 이용 예 IPSec (HMAC) 인터넷 기반 통신프로토콜 IP(Internet Protocol) 에 보안기능을 추가한 것 통신 내용의 인증과 무결성을 확인하기 위해 MAC 을 이용 SSL/TLS (HMAC) 웹에서 온라인 쇼핑을 할 때 사용되는 통신 프로토콜 통신 내용의 인증과 무결성 확인을 위해 메시지 인증코드를 이용 SET 프로토콜 (HMAC) MAC 에 대한 공격 재전송 공격 개요 적극적 공격자 멜로리는 자신이 보존해 둔 MAC 값을 반복해서 송신하는 공격을 감행. 이를 재전송 공격(replay attack) 이라고 부름 A 에서 B로 전송되는 Msg + MAC 을 Mellory 가 확보 Msg + MAC 을 재전송 재전송 공격을 막을 수 있는 방법에는 아래 4가지가 있음. 순서 번호 (sequence number) 송신 메시지에 매회 1회씩 증가하는 번호를 붙이기로 약속. MAC 값의 계산에 순서번호도 메시지에 포함시키도록 함. 마지막 순서 번호를 기록해야 함. 타임스탬프 (timestamp) 송신 메시지에 현재 시각을 넣기로 약속해두고 그 이전의 메시지가 왔을 경우에는 MAC 값이 바르더라도 오류라고 판단. 시계 동기화 필요 비표 (nonce) 메시지를 수신하기에 앞서 수신자는 송신자에게 일회용의 랜덤한 값 (비표) 를 줌. 송신자는 비표를 포함해서 MAC 값을 계산, 비표의 값은 통신 때마다 바뀜. 통신 데이터 양이 약간 증가 시도/응답 (challenge/response) 비표와 유사 개념 상대방에게 난수값을 보내면 상대방은 난수값을 포함한 응답값을 보내야 함. MAC으로 해결할 수 없는 문제 제 3자에 대한 증명 MAC 은 공유키를 사용하기에 MAC 값을 계산할 수 있는 것은 Alice 와 Bob 이다. 두 사람이 서로 통신하고 있는 동안 그 MAC 값을 계산한 것은 상대방이라고 말할 수 있다. 하지만 제3자 Victor 에게 이 MAC 값을 계산한 것은 자신이 아닌 상대방이라고 증명할 방법은 없다. 전자서명을 사용하면 제3자에 대한 증명이 가능해짐 부인 방지 송신자 Alice 는 Bob 에게 그러한 메시지를 보내지 않았다고 Victor 에게 주장할 수 있고 이를 부인이라고 한다. MAC 에서는 Alice 와 Bob 중 어느 쪽 주장이 맞는지를 판단할 수 없다. 전자서명을 사용하면 부인방지가 가능함 메시지 인증 개요 기본 개념 수신자가 받은 메시지가 송신자가 보낸 메시지와 동일한 것인지 확인하는 것 메시지 내용 변경, 순서 변경, 삭제 및 훼손 등 불법 행위에 대하여 확인하는 기술 관용 암호화 방식, 공개키 암호화 방식, 해시 함수, MAC 을 이용하는 방식 등 메시지 인증 방법 관용(대칭키) 암호방식을 이용한 메시지 인증 방식 평문을 사전에 분배해서 갖고 있던 비밀키로 암호화하여 암호문을 수신자에게 전송하면 수신자는 암호문을 비밀키로 복호화하여 확인 이 때, 평문이 문장으로 되어 있으면 복호화 후 전송 중의 메시지 변경 여부를 확인할 수 있음 공개키 암호화 방식을 이용한 메시지 인증 방식 송신자는 자신의 개인키로 평문을 암호화하여 암호문을 수신자에게 전송, 수신자는 송신자의 공개키로 암호문을 복호화하여 인증을 확인 누구나 메시지 인증을 검증할 수 있음. 개인키를 알고 있는 송신자만 인증을 생성할 수 있기 때문에 제 3자가 송신자를 가장하여 메시지를 전송할 수 없음. 해시 함수를 이용한 메시지 인증 방식 메시지로부터 해시 함수 결과 값을 계산한 후 수신한 해시 값과 비교하여 메시지의 무결성을 검증하는 방식 해시 함수가 공개되어 있기 때문에 제 3자가 인증자인 것처럼 가장하여 임의의 메시지를 정당한 메시지인 것처럼 인증하면 수신자는 제 3자의 위조 인증임을 알 수 없음 비밀정보를 해시 함수에 추가하여 계산하여 단점을 해결. 송수신자는 사전에 비밀정보를 가지고 있다가 인증하려는 메시지와 비밀정보를 연계하여 해시 함수에 인증하고 계산한 값을 메시지에 덧붙여 전송함. 수신자는 사용자로부터 수신한 메시지와 자신이 보관하고 있는 비밀 정보로 해시함수를 계산한 후 수신한 해시 함수 결과 값과 비교하여 메시지 인증을 수행. 제3자는 비밀정보를 모름. MAC 을 이용한 메시지 인증 방식 MAC (Message Authentication Code) 은 관용 암호방식을 이용하여 간단한 무결성 검증 코드를 만들어 메시지에 부가시키는 방법 MAC 을 이용해 메시지 인증 및 무결성 검사를 수행하는 절차로는 우선 송신자가 인증할 메시지를 비밀키로 암호화시킨 MAC 값을 계산한 후 메시지와 함께 수신자에게 전송.</summary></entry><entry><title type="html">정보보안 - 비대칭키 암호</title><link href="https://bluesplatter.com/is_certification/IS-Management-AsymmetricKeyAlgorithm/" rel="alternate" type="text/html" title="정보보안 - 비대칭키 암호" /><published>2021-08-25T09:00:00+09:00</published><updated>2021-08-25T09:00:00+09:00</updated><id>https://bluesplatter.com/is_certification/IS-Management-AsymmetricKeyAlgorithm</id><content type="html" xml:base="https://bluesplatter.com/is_certification/IS-Management-AsymmetricKeyAlgorithm/">&lt;h1 id=&quot;비대칭키-암호&quot;&gt;비대칭키 암호&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;키 배송 문제
    &lt;ul&gt;
      &lt;li&gt;개요
        &lt;ul&gt;
          &lt;li&gt;대칭키 암호를 사용하려면 키 배송 문제(key distribution problem) 발생
            &lt;ul&gt;
              &lt;li&gt;암호화 키와 복호화 키가 동일&lt;/li&gt;
              &lt;li&gt;키 배송 중 도청 가능성&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;해결방안
            &lt;ul&gt;
              &lt;li&gt;키의 사전 공유에 의한 해결&lt;/li&gt;
              &lt;li&gt;키배포 센터에 의한 해결&lt;/li&gt;
              &lt;li&gt;Diffie-Hellman 키 교환에 의한 해결&lt;/li&gt;
              &lt;li&gt;공개키 암호에 의한 해결&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;키의 사전 공유에 의한 해결
        &lt;ul&gt;
          &lt;li&gt;안전한 키를 사전에 공유함
            &lt;ul&gt;
              &lt;li&gt;안전한 통로를 이용함
                &lt;ul&gt;
                  &lt;li&gt;Trusted Authority (TA : 키관리기관)&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;인원이 많아지면 키가 많아져서 문제&lt;/li&gt;
          &lt;li&gt;n명의 사원이 자신 외의 사람과 통신시 키는 n(n-1)/2 이다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;키배포 센터에 의한 해결
        &lt;ul&gt;
          &lt;li&gt;KDC (Key Distribution Center : 온라인 키 분배 - 일종의 TA)&lt;/li&gt;
          &lt;li&gt;암호 통신이 필요해질 때마다 통신용 키를 키배포 센터라는 신뢰받은 3자에 의해 공유&lt;/li&gt;
          &lt;li&gt;과정
            &lt;ul&gt;
              &lt;li&gt;1 : A 가 KDC에 B와 통신을 하겠다고 요청&lt;/li&gt;
              &lt;li&gt;2 : KDC는 DB에서 A의 키와 B의 키를 추출(비밀키)&lt;/li&gt;
              &lt;li&gt;3 : KDC는 A의 키, B의 키를 이용해 세션키를 생성, 각각 비밀키로 암호화함&lt;/li&gt;
              &lt;li&gt;4 : A 에게 A의 키를 이용해 암호화한 세션키를 전달&lt;/li&gt;
              &lt;li&gt;5 : B 에게 B의 키를 이용해 암호화한 세션키를 전달&lt;/li&gt;
              &lt;li&gt;6 : A 는 자신의 개인키를 이용해 세션키를 복호화&lt;/li&gt;
              &lt;li&gt;7 : A 는 세션키를 이용해 전송할 메시지를 암호화하여 B에게 전송&lt;/li&gt;
              &lt;li&gt;8 : B 는 자신의 개인키를 이용해 세션키를 복호화&lt;/li&gt;
              &lt;li&gt;9 : B 는 세션키를 이용해 A에게 전송받은 메시지를 복호화&lt;/li&gt;
              &lt;li&gt;10 : 통신 종료 후 세션키는 폐기&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Diffie-Hellman 키 교환에 의한 해결
        &lt;ul&gt;
          &lt;li&gt;개요
            &lt;ul&gt;
              &lt;li&gt;1976년 공개키 암호방식을 최초로 제안한 휘트필드 디피와 마틴 헬먼이 발명한 알고리즘&lt;/li&gt;
              &lt;li&gt;공개키 암호방식의 개념을 이용하여 두 사용자 간에 공통의 암호화키를 안전하게 공유할 수 있는 방법 제시 (최초의 비밀키 교환 프로토콜)&lt;/li&gt;
              &lt;li&gt;Diffie-Hellman 프로토콜 방법에서는 양쪽 통신 주체가 KDC 없이 대칭 세션키를 생성, 대칭키를 만들기 전에 두 개의 수 p와 g를 선택해야 함. p는 매우 큰 소수로서 300자리가 넘는 십진수&lt;/li&gt;
              &lt;li&gt;키 교환이라는 이름이 붙어있지만 키 교환이 아니라 공유할 키를 계산하여 만들어 내는 것, 때문에 키 합의(Diffie-Hellman key agreement)로 불리기도 함&lt;/li&gt;
              &lt;li&gt;유한체상의 이산대수문제를 풀기 어렵다는 사실이 이를 뒷받침함&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;Diffie-Hellman의 안정성
            &lt;ul&gt;
              &lt;li&gt;두 가지 공격에 약점을 보임, 이산대수공격, 중간자 공격&lt;/li&gt;
              &lt;li&gt;이산대수공격
                &lt;ul&gt;
                  &lt;li&gt;키 교환의 안정성을 이산대수문제를 풀기 어렵다는데 기반을 둔다.&lt;/li&gt;
                  &lt;li&gt;Eve가 R1과 R2를 가로챌 수 있으므로 대칭키 K를 계산할 수 있다.
                    &lt;ul&gt;
                      &lt;li&gt;A : R1 (공개값) = g^x mod p&lt;/li&gt;
                      &lt;li&gt;B : R2 (공개값) = g^y mod p&lt;/li&gt;
                      &lt;li&gt;A 는 R1을 B에 전송&lt;/li&gt;
                      &lt;li&gt;B 는 R2을 A에 전송&lt;/li&gt;
                      &lt;li&gt;A : K = R2^x mod p&lt;/li&gt;
                      &lt;li&gt;B : K = R1^y mod p
                        &lt;ul&gt;
                          &lt;li&gt;K = g^xy mod p&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/li&gt;
                      &lt;li&gt;Eve 가 R1, R2 를 가로채 x,y 를 추출하여 K를 생성할 수 있음&lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                  &lt;li&gt;x, y값을 추출해내서 더 이상 비밀키가 비밀이 되지 않는다.&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;중간자 공격(man in the middle attack)
                &lt;ul&gt;
                  &lt;li&gt;키 교환 프로토콜은 인증 단계가 없어서 이런 공격에 취약&lt;/li&gt;
                  &lt;li&gt;공격을 막기 위해 디지털서명과 공개키 인증서 등을 이용하면 됨&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;DoS 공격
                &lt;ul&gt;
                  &lt;li&gt;Diffie-Hellman 은 지수함수에 기초하고 있어 계산이 복잡함&lt;/li&gt;
                  &lt;li&gt;동시에 통신 시 비밀키 생성 시 많은 부하가 걸림&lt;/li&gt;
                  &lt;li&gt;키 생성을 다수 요청하면 서버가 마비됨&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;공개키 암호에 의한 해결
        &lt;ul&gt;
          &lt;li&gt;개요
            &lt;ul&gt;
              &lt;li&gt;대칭키 암호에서 암호화키와 복호화키는 같다. 공개키 암호에서는 이 두개가 다르다.&lt;/li&gt;
              &lt;li&gt;수신자는 미리 암호화키 (공개키) 를 송신자에게 알려준다. Eve 에게 알려져도 괜찮다. 송신자는 암호화키 (공개키) 로 암호화하여 수신자에게 보낸다.&lt;/li&gt;
              &lt;li&gt;복호화는 복호화키 (개인키) 를 가지고 있는 사람(수신자)만 가능하다. 이러면 복호화키를 전달할 필요가 없다.&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;공개키 암호 (public-key cryptography)
    &lt;ul&gt;
      &lt;li&gt;개요
        &lt;ul&gt;
          &lt;li&gt;대칭키 암호는 평문을 복잡한 형태로 변환해서 기밀성을 유지&lt;/li&gt;
          &lt;li&gt;공개키 암호는 수학적으로 해결하기 곤란한 문제 (소인수분해, 이산대수…) 를 토대로 해서 기밀성을 유지&lt;/li&gt;
          &lt;li&gt;전자문서의 무결성, 전자서명(부인방지) 구현에 활용&lt;/li&gt;
          &lt;li&gt;다양한 암호 프로토콜에 사용&lt;/li&gt;
          &lt;li&gt;공개키 암호에서는 암호화키와 복호화키가 분리되어 있음.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;수학적으로 해결하기 곤란한 문제
        &lt;ul&gt;
          &lt;li&gt;소인수분해 문제
            &lt;ul&gt;
              &lt;li&gt;RSA&lt;/li&gt;
              &lt;li&gt;Rabin&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;이산대수 문제
            &lt;ul&gt;
              &lt;li&gt;ElGamal&lt;/li&gt;
              &lt;li&gt;DSA (DSS)&lt;/li&gt;
              &lt;li&gt;ECC (타원곡선)
                &lt;ul&gt;
                  &lt;li&gt;ECDSA&lt;/li&gt;
                  &lt;li&gt;KCDSA&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;과정
        &lt;ul&gt;
          &lt;li&gt;1 : A가 세션키를 B의 공개키로 암호화&lt;/li&gt;
          &lt;li&gt;2 : A가 암호화된 세션키를 B에 전송&lt;/li&gt;
          &lt;li&gt;3 : B가 B의 개인키로 암호화된 세션키를 복호화
            &lt;ul&gt;
              &lt;li&gt;B의 공개키 / 개인키는 수학적으로 밀접한 관계가 있음&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;4 : A 와 B의 키 교환 완료&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;RSA 암호시스템
    &lt;ul&gt;
      &lt;li&gt;개요
        &lt;ul&gt;
          &lt;li&gt;기본 개념
            &lt;ul&gt;
              &lt;li&gt;RSA 는 공개키 암호 알고리즘 중 하나&lt;/li&gt;
              &lt;li&gt;세계적으로 사실상 표준&lt;/li&gt;
              &lt;li&gt;Rivest-Shamir-Adelman 의 첫 글자를 따서 붙여짐&lt;/li&gt;
              &lt;li&gt;인수분해 문제해결의 높은 난이도를 이용한 가장 대표적인 공개키 암호 알고리즘&lt;/li&gt;
              &lt;li&gt;디지털 서명의 용도로도 사용됨&lt;/li&gt;
              &lt;li&gt;SSL 프로토콜을 가진 웹 브라우저, PGP, 공개키 암호시스템을 사용하는 정부 시스템 등에서 사용&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;암호화와 복호화
            &lt;ul&gt;
              &lt;li&gt;RSA는 e와 d 두 지수를 사용
                &lt;ul&gt;
                  &lt;li&gt;A (송신자) : C = P^e mod n&lt;/li&gt;
                  &lt;li&gt;B (수신자) : P = C^d mod n
                    &lt;ul&gt;
                      &lt;li&gt;e : 공개하는 값&lt;/li&gt;
                      &lt;li&gt;d : 비밀로 유지하는 값&lt;/li&gt;
                      &lt;li&gt;P : 평문&lt;/li&gt;
                      &lt;li&gt;C : 암호문&lt;/li&gt;
                      &lt;li&gt;n : 매우 큰 수&lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;RSA 에 대한 공격
            &lt;ul&gt;
              &lt;li&gt;소인수분해 공격
                &lt;ul&gt;
                  &lt;li&gt;RSA 는 모듈러 값이 매우 커서 이 값을 적절한 시간 내에 소인수분해 하는 것이 불가능&lt;/li&gt;
                  &lt;li&gt;B (수신자) 은 p와 q 를 선택하고 n = p * q 를 계산
                    &lt;ul&gt;
                      &lt;li&gt;n은 공개되지만 p와 q 는 비밀임&lt;/li&gt;
                      &lt;li&gt;Eve가 n을 소인수분해하여 p와 q를 구할 수 있다면 Pi(N) 을 구할 수 있음&lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                  &lt;li&gt;소인수분해 알고리즘 (Factoring Attack) 이 개발되지 않는다면 RSA는 안전하다고 할 수 있음&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;중간자 공격
                &lt;ul&gt;
                  &lt;li&gt;중간자 공격은 기밀성에 매우 유효한 공격 방법&lt;/li&gt;
                  &lt;li&gt;적극적 공격자 멜로리가 송신자와 수신자 사이에 들어가서 송신자에 대해서는 수신자처럼, 수신자에 대해서는 송신자처럼 행세하는 공격&lt;/li&gt;
                  &lt;li&gt;중간자 공격을 막기 위해서는 입수한 공개키가 밥의 것이라는 것을 확인할 수단인 인증이 필요하다.&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Rabin 암호시스템
    &lt;ul&gt;
      &lt;li&gt;개요
        &lt;ul&gt;
          &lt;li&gt;M.Rabin 이 고안, RSA 암호시스템의 변형&lt;/li&gt;
          &lt;li&gt;RSA는 지수 합동, Rabin은 2차 합동에 근거&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;암호화와 복호화
        &lt;ul&gt;
          &lt;li&gt;Rabin 암호시스템에서 암호화는 매우 간단, 한 번의 곱셈으로 이루어짐&lt;/li&gt;
          &lt;li&gt;성능이 낮은 플랫폼에서 잘 활용됨 (스마트 카드 등)&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Rabin 시스템의 보안
        &lt;ul&gt;
          &lt;li&gt;p와 q 가 충분히 크기만 하면 안전 (mod N을 구하는 것이 어려움)&lt;/li&gt;
          &lt;li&gt;RSA 만큼 안전&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;ElGamal 방식
    &lt;ul&gt;
      &lt;li&gt;개요
        &lt;ul&gt;
          &lt;li&gt;Taher ElGamal 이 발명&lt;/li&gt;
          &lt;li&gt;이산대수 문제에 근거해서 만든 시스템 (오픈 소스를 기초, 키 분배 방식 및 공개키 암호 방식 실현)&lt;/li&gt;
          &lt;li&gt;디지털 서명, 암호화, 키교환&lt;/li&gt;
          &lt;li&gt;Diffie-Hellman 암호화 기능의 확장, 속도가 느림&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;암호화와 복호화
        &lt;ul&gt;
          &lt;li&gt;Bob의 공개키를 이용해 누구든 Bob에게 메시지를 보낼 수 있음&lt;/li&gt;
          &lt;li&gt;고속 지수 알고리즘을 사용하면 다항식 정도의 복잡도를 가지는 시간 내에 수행 가능&lt;/li&gt;
          &lt;li&gt;암호화에서는 암호문의 길이가 평문의 2배가 되어 버린다는 결점&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;응용
        &lt;ul&gt;
          &lt;li&gt;RSA 를 활용할 수 있는 곳에는 어디에서나 사용 가능&lt;/li&gt;
          &lt;li&gt;키 교환, 인증, 짧은 메시지의 암호화와 복호화에 사용&lt;/li&gt;
          &lt;li&gt;암호 소프트웨어 GnuPG에 구현되어 있음&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;타원곡선 암호 (ECC, elliptic curve cryptosystem)
    &lt;ul&gt;
      &lt;li&gt;등장배경
        &lt;ul&gt;
          &lt;li&gt;RSA 와 ElGamal 이 안전한 비대칭키 암호시스템이기는 하지만 보안을 위해서 키의 길이가 매우 커야한다는 단점이 있음&lt;/li&gt;
          &lt;li&gt;따라서 키의 길이가 짧아도 되는 암호시스템을 연구 -&amp;gt; ECC&lt;/li&gt;
          &lt;li&gt;타원곡선 이론에 근거&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;특징
        &lt;ul&gt;
          &lt;li&gt;유한체 위에서 정의된 타원곡선 군에서의 이산대수 문제에 기초한 공개키 알고리즘&lt;/li&gt;
          &lt;li&gt;RSA 암호방식에 이어 전자상거래의 핵심 기술로 주목&lt;/li&gt;
          &lt;li&gt;1985년 코블리치(N.Koblitz) 와 밀러(V.S.Miller)가 RSA 암호방식의 대안으로 처음 제안&lt;/li&gt;
          &lt;li&gt;RSA보다 키의 비트 수를 적게 하면서도 동일한 성능을 제공하는 것이 특징
            &lt;ul&gt;
              &lt;li&gt;160비트 ECC는 1024비트 RSA 키와 동일한 보안수준&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;다양한 암호방식 설계가 용이
            &lt;ul&gt;
              &lt;li&gt;H/W 와 S/W 로 구현하기 용이&lt;/li&gt;
              &lt;li&gt;스마트카드나 무선통신단말기 등과 같이 메모리 처리능력이 제한된 응용 분야에 특히 효율적&lt;/li&gt;
              &lt;li&gt;전자상거래의 핵심&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;ECC 는 RSA 보다 상대적으로 지명도가 부족, 배경이론이 복잡하며 해당 분야의 전문가가 적다는 단점이 있음&lt;/li&gt;
          &lt;li&gt;빠른 속도로 구현이 가능&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;ECC 와 RSA 방식 비교&lt;/p&gt;

        &lt;table&gt;
          &lt;thead&gt;
            &lt;tr&gt;
              &lt;th style=&quot;text-align: left&quot;&gt;항목&lt;/th&gt;
              &lt;th style=&quot;text-align: left&quot;&gt;ECC 방식&lt;/th&gt;
              &lt;th style=&quot;text-align: left&quot;&gt;RSA 방식&lt;/th&gt;
            &lt;/tr&gt;
          &lt;/thead&gt;
          &lt;tbody&gt;
            &lt;tr&gt;
              &lt;td style=&quot;text-align: left&quot;&gt;기반구조&lt;/td&gt;
              &lt;td style=&quot;text-align: left&quot;&gt;WPKI(무선)&lt;/td&gt;
              &lt;td style=&quot;text-align: left&quot;&gt;PKI(유선)&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
              &lt;td style=&quot;text-align: left&quot;&gt;속도&lt;/td&gt;
              &lt;td style=&quot;text-align: left&quot;&gt;우수&lt;/td&gt;
              &lt;td style=&quot;text-align: left&quot;&gt;느림&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
              &lt;td style=&quot;text-align: left&quot;&gt;키 크기&lt;/td&gt;
              &lt;td style=&quot;text-align: left&quot;&gt;상대적으로 작은 키&lt;/td&gt;
              &lt;td style=&quot;text-align: left&quot;&gt;ECC에 비해 큰 키&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
              &lt;td style=&quot;text-align: left&quot;&gt;적용&lt;/td&gt;
              &lt;td style=&quot;text-align: left&quot;&gt;소형 Mobile환경&lt;/td&gt;
              &lt;td style=&quot;text-align: left&quot;&gt;인프라가 다소 구현된 환경&lt;/td&gt;
            &lt;/tr&gt;
          &lt;/tbody&gt;
        &lt;/table&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;하이브리드 암호시스템
    &lt;ul&gt;
      &lt;li&gt;대칭키 암호와 공개키 암호
        &lt;ul&gt;
          &lt;li&gt;대칭키 암호 특징
            &lt;ul&gt;
              &lt;li&gt;장점 : 대칭키 암호를 사용하면 기밀성을 유지한 통신이 가능&lt;/li&gt;
              &lt;li&gt;단점(a) : 키 배송 문제가 발생&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;공개키 암호 특징
            &lt;ul&gt;
              &lt;li&gt;장점 : 키를 배송할 필요가 없음&lt;/li&gt;
              &lt;li&gt;단점(a) : 대칭키 암호에 비해 처리속도가 느림&lt;/li&gt;
              &lt;li&gt;단점(b) : 중간자 공격에 약함&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;하이브리드 암호 시스템은 이 중 (a)의 문제를 해결하기 위한 방법&lt;/li&gt;
          &lt;li&gt;(b)를 해결하려면 인증이 필요&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;개요
        &lt;ul&gt;
          &lt;li&gt;대칭키 암호와 공개키 암호의 장점을 살릴 수 있도록 조합한 방법&lt;/li&gt;
          &lt;li&gt;메시지를 고속의 대칭키 암호로 암호화함&lt;/li&gt;
          &lt;li&gt;대칭키 암호의 키 기밀성을 위해 공개키 암호를 사용
            &lt;ul&gt;
              &lt;li&gt;메시지 암호화에 사용한 대칭키 암호키를 공개키 암호로 암호화&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;과정
        &lt;ul&gt;
          &lt;li&gt;암호화
            &lt;ul&gt;
              &lt;li&gt;PRNG(의사난수 생성기)를 이용해 K(세션키) 생성&lt;/li&gt;
              &lt;li&gt;K 를 수신자의 Kpub(공개키)를 이용해 C1(암호문) 생성&lt;/li&gt;
              &lt;li&gt;P(평문) 는 K(세션키) 를 이용해 암호화(C2)&lt;/li&gt;
              &lt;li&gt;C1 과 C2를 결합 =&amp;gt; 하이브리드 시스템 암호문&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;복호화
            &lt;ul&gt;
              &lt;li&gt;하이브리드 시스템 암호문 =&amp;gt; C1 과 C2 를 분리
                &lt;ul&gt;
                  &lt;li&gt;C1 : 세션키 암호&lt;/li&gt;
                  &lt;li&gt;C2 : 메시지 암호&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;C1 은 수신자의 Kpri(개인키)를 이용해 평문 K(세션키) 를 추출&lt;/li&gt;
              &lt;li&gt;C2 은 K(세션키) 를 이용해 평문 P(메시지) 를 추출&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;하이브리드 암호 시스템의 예
        &lt;ul&gt;
          &lt;li&gt;공개키 암호의 처리 속도가 느린 것을 대칭키 암호로 해결, 대칭키 암호의 키 배송 문제를 공개키 암호로 해결&lt;/li&gt;
          &lt;li&gt;유명한 암호 소프트웨어인 PGP 와 Web의 암호통신에 사용되고 있는 SSL/TLS 에서도 하이브리드 암호시스템 사용&lt;/li&gt;
          &lt;li&gt;PGP의 처리에서는 하이브리드 암호시스템에 디지털서명, 디지털서명의 검증, 개인키의 관리도 추가하여 사용됨.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>HY03</name><email>hyunik03@gmail.com</email></author><category term="IS_Certification" /><category term="정보보안기사" /><category term="비칭키 암호" /><summary type="html">비대칭키 암호 키 배송 문제 개요 대칭키 암호를 사용하려면 키 배송 문제(key distribution problem) 발생 암호화 키와 복호화 키가 동일 키 배송 중 도청 가능성 해결방안 키의 사전 공유에 의한 해결 키배포 센터에 의한 해결 Diffie-Hellman 키 교환에 의한 해결 공개키 암호에 의한 해결 키의 사전 공유에 의한 해결 안전한 키를 사전에 공유함 안전한 통로를 이용함 Trusted Authority (TA : 키관리기관) 인원이 많아지면 키가 많아져서 문제 n명의 사원이 자신 외의 사람과 통신시 키는 n(n-1)/2 이다. 키배포 센터에 의한 해결 KDC (Key Distribution Center : 온라인 키 분배 - 일종의 TA) 암호 통신이 필요해질 때마다 통신용 키를 키배포 센터라는 신뢰받은 3자에 의해 공유 과정 1 : A 가 KDC에 B와 통신을 하겠다고 요청 2 : KDC는 DB에서 A의 키와 B의 키를 추출(비밀키) 3 : KDC는 A의 키, B의 키를 이용해 세션키를 생성, 각각 비밀키로 암호화함 4 : A 에게 A의 키를 이용해 암호화한 세션키를 전달 5 : B 에게 B의 키를 이용해 암호화한 세션키를 전달 6 : A 는 자신의 개인키를 이용해 세션키를 복호화 7 : A 는 세션키를 이용해 전송할 메시지를 암호화하여 B에게 전송 8 : B 는 자신의 개인키를 이용해 세션키를 복호화 9 : B 는 세션키를 이용해 A에게 전송받은 메시지를 복호화 10 : 통신 종료 후 세션키는 폐기 Diffie-Hellman 키 교환에 의한 해결 개요 1976년 공개키 암호방식을 최초로 제안한 휘트필드 디피와 마틴 헬먼이 발명한 알고리즘 공개키 암호방식의 개념을 이용하여 두 사용자 간에 공통의 암호화키를 안전하게 공유할 수 있는 방법 제시 (최초의 비밀키 교환 프로토콜) Diffie-Hellman 프로토콜 방법에서는 양쪽 통신 주체가 KDC 없이 대칭 세션키를 생성, 대칭키를 만들기 전에 두 개의 수 p와 g를 선택해야 함. p는 매우 큰 소수로서 300자리가 넘는 십진수 키 교환이라는 이름이 붙어있지만 키 교환이 아니라 공유할 키를 계산하여 만들어 내는 것, 때문에 키 합의(Diffie-Hellman key agreement)로 불리기도 함 유한체상의 이산대수문제를 풀기 어렵다는 사실이 이를 뒷받침함 Diffie-Hellman의 안정성 두 가지 공격에 약점을 보임, 이산대수공격, 중간자 공격 이산대수공격 키 교환의 안정성을 이산대수문제를 풀기 어렵다는데 기반을 둔다. Eve가 R1과 R2를 가로챌 수 있으므로 대칭키 K를 계산할 수 있다. A : R1 (공개값) = g^x mod p B : R2 (공개값) = g^y mod p A 는 R1을 B에 전송 B 는 R2을 A에 전송 A : K = R2^x mod p B : K = R1^y mod p K = g^xy mod p Eve 가 R1, R2 를 가로채 x,y 를 추출하여 K를 생성할 수 있음 x, y값을 추출해내서 더 이상 비밀키가 비밀이 되지 않는다. 중간자 공격(man in the middle attack) 키 교환 프로토콜은 인증 단계가 없어서 이런 공격에 취약 공격을 막기 위해 디지털서명과 공개키 인증서 등을 이용하면 됨 DoS 공격 Diffie-Hellman 은 지수함수에 기초하고 있어 계산이 복잡함 동시에 통신 시 비밀키 생성 시 많은 부하가 걸림 키 생성을 다수 요청하면 서버가 마비됨 공개키 암호에 의한 해결 개요 대칭키 암호에서 암호화키와 복호화키는 같다. 공개키 암호에서는 이 두개가 다르다. 수신자는 미리 암호화키 (공개키) 를 송신자에게 알려준다. Eve 에게 알려져도 괜찮다. 송신자는 암호화키 (공개키) 로 암호화하여 수신자에게 보낸다. 복호화는 복호화키 (개인키) 를 가지고 있는 사람(수신자)만 가능하다. 이러면 복호화키를 전달할 필요가 없다. 공개키 암호 (public-key cryptography) 개요 대칭키 암호는 평문을 복잡한 형태로 변환해서 기밀성을 유지 공개키 암호는 수학적으로 해결하기 곤란한 문제 (소인수분해, 이산대수…) 를 토대로 해서 기밀성을 유지 전자문서의 무결성, 전자서명(부인방지) 구현에 활용 다양한 암호 프로토콜에 사용 공개키 암호에서는 암호화키와 복호화키가 분리되어 있음. 수학적으로 해결하기 곤란한 문제 소인수분해 문제 RSA Rabin 이산대수 문제 ElGamal DSA (DSS) ECC (타원곡선) ECDSA KCDSA 과정 1 : A가 세션키를 B의 공개키로 암호화 2 : A가 암호화된 세션키를 B에 전송 3 : B가 B의 개인키로 암호화된 세션키를 복호화 B의 공개키 / 개인키는 수학적으로 밀접한 관계가 있음 4 : A 와 B의 키 교환 완료 RSA 암호시스템 개요 기본 개념 RSA 는 공개키 암호 알고리즘 중 하나 세계적으로 사실상 표준 Rivest-Shamir-Adelman 의 첫 글자를 따서 붙여짐 인수분해 문제해결의 높은 난이도를 이용한 가장 대표적인 공개키 암호 알고리즘 디지털 서명의 용도로도 사용됨 SSL 프로토콜을 가진 웹 브라우저, PGP, 공개키 암호시스템을 사용하는 정부 시스템 등에서 사용 암호화와 복호화 RSA는 e와 d 두 지수를 사용 A (송신자) : C = P^e mod n B (수신자) : P = C^d mod n e : 공개하는 값 d : 비밀로 유지하는 값 P : 평문 C : 암호문 n : 매우 큰 수 RSA 에 대한 공격 소인수분해 공격 RSA 는 모듈러 값이 매우 커서 이 값을 적절한 시간 내에 소인수분해 하는 것이 불가능 B (수신자) 은 p와 q 를 선택하고 n = p * q 를 계산 n은 공개되지만 p와 q 는 비밀임 Eve가 n을 소인수분해하여 p와 q를 구할 수 있다면 Pi(N) 을 구할 수 있음 소인수분해 알고리즘 (Factoring Attack) 이 개발되지 않는다면 RSA는 안전하다고 할 수 있음 중간자 공격 중간자 공격은 기밀성에 매우 유효한 공격 방법 적극적 공격자 멜로리가 송신자와 수신자 사이에 들어가서 송신자에 대해서는 수신자처럼, 수신자에 대해서는 송신자처럼 행세하는 공격 중간자 공격을 막기 위해서는 입수한 공개키가 밥의 것이라는 것을 확인할 수단인 인증이 필요하다. Rabin 암호시스템 개요 M.Rabin 이 고안, RSA 암호시스템의 변형 RSA는 지수 합동, Rabin은 2차 합동에 근거 암호화와 복호화 Rabin 암호시스템에서 암호화는 매우 간단, 한 번의 곱셈으로 이루어짐 성능이 낮은 플랫폼에서 잘 활용됨 (스마트 카드 등) Rabin 시스템의 보안 p와 q 가 충분히 크기만 하면 안전 (mod N을 구하는 것이 어려움) RSA 만큼 안전 ElGamal 방식 개요 Taher ElGamal 이 발명 이산대수 문제에 근거해서 만든 시스템 (오픈 소스를 기초, 키 분배 방식 및 공개키 암호 방식 실현) 디지털 서명, 암호화, 키교환 Diffie-Hellman 암호화 기능의 확장, 속도가 느림 암호화와 복호화 Bob의 공개키를 이용해 누구든 Bob에게 메시지를 보낼 수 있음 고속 지수 알고리즘을 사용하면 다항식 정도의 복잡도를 가지는 시간 내에 수행 가능 암호화에서는 암호문의 길이가 평문의 2배가 되어 버린다는 결점 응용 RSA 를 활용할 수 있는 곳에는 어디에서나 사용 가능 키 교환, 인증, 짧은 메시지의 암호화와 복호화에 사용 암호 소프트웨어 GnuPG에 구현되어 있음 타원곡선 암호 (ECC, elliptic curve cryptosystem) 등장배경 RSA 와 ElGamal 이 안전한 비대칭키 암호시스템이기는 하지만 보안을 위해서 키의 길이가 매우 커야한다는 단점이 있음 따라서 키의 길이가 짧아도 되는 암호시스템을 연구 -&amp;gt; ECC 타원곡선 이론에 근거 특징 유한체 위에서 정의된 타원곡선 군에서의 이산대수 문제에 기초한 공개키 알고리즘 RSA 암호방식에 이어 전자상거래의 핵심 기술로 주목 1985년 코블리치(N.Koblitz) 와 밀러(V.S.Miller)가 RSA 암호방식의 대안으로 처음 제안 RSA보다 키의 비트 수를 적게 하면서도 동일한 성능을 제공하는 것이 특징 160비트 ECC는 1024비트 RSA 키와 동일한 보안수준 다양한 암호방식 설계가 용이 H/W 와 S/W 로 구현하기 용이 스마트카드나 무선통신단말기 등과 같이 메모리 처리능력이 제한된 응용 분야에 특히 효율적 전자상거래의 핵심 ECC 는 RSA 보다 상대적으로 지명도가 부족, 배경이론이 복잡하며 해당 분야의 전문가가 적다는 단점이 있음 빠른 속도로 구현이 가능 ECC 와 RSA 방식 비교 항목 ECC 방식 RSA 방식 기반구조 WPKI(무선) PKI(유선) 속도 우수 느림 키 크기 상대적으로 작은 키 ECC에 비해 큰 키 적용 소형 Mobile환경 인프라가 다소 구현된 환경</summary></entry></feed>