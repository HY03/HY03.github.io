I"ʆ<h1 id="전자화폐">전자화폐</h1>
<h2 id="1-전자화폐">1. 전자화폐</h2>
<ul>
  <li>디지털 서명이 있는 금액 가치 정보</li>
  <li>IC칩 내장 카드나 공중정보통신망과 연결된 PC 등의 전자기기에 전자기호 형태로 화폐적 가치를 저장하였다가 상품 등의 구매에 사용할 수 있는 전자적 지급수단</li>
</ul>

<h2 id="2-전자화폐-요구조건">2. 전자화폐 요구조건</h2>
<ul>
  <li>불추적성(사생활 보호, 익명성)</li>
  <li>오프라인성 : 은행에 접속하지 않아도 여러 가지 암호 프로토콜을 통해 검사가능</li>
  <li>가치이전성(양도성) : 다른 사람에게 즉시 이전 가능</li>
  <li>분할성 : 그 가치만큼 자유롭게 분할 사용</li>
  <li>독립성(완전 정보화) : 다른 물리적 매체에 의존해서는 안 되며, 디지털 데이터 자체로서 완벽한 화폐가치를 가져야 함</li>
  <li>이중사용 방지(복사 및 위조 방지)</li>
  <li>익명성 취소 : 돈 세탁, 돈 약탈, 불법 구매자금 등 부정한 방법으로 그 기능이 전용될 수 있으므로 법원과 같은 공정한 기관의 명령에 의해 사용자의 식별 값이 노출될 수 있어야 함</li>
</ul>

<h2 id="3-ic-카드형-전자화폐-종류">3. IC 카드형 전자화폐 종류</h2>

<table>
  <thead>
    <tr>
      <th style="text-align: left">전자화폐 종류</th>
      <th style="text-align: left">주요 내용</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left">몬덱스</td>
      <td style="text-align: left"><ul><li>가장 대표적인 전자화폐 시스템</li><li>현금 지불의 장점과 카드 지불의 편리함을 결합</li><li>5개국 통화로 가치를 저장할 수 있음</li><li>해외 사용 및 송금과 외환거래 가능</li></ul></td>
    </tr>
    <tr>
      <td style="text-align: left">비자캐시</td>
      <td style="text-align: left"><ul><li>소액 지불을 위한 지불수단</li><li>11개국에서 사용</li></ul></td>
    </tr>
    <tr>
      <td style="text-align: left">PC Pay</td>
      <td style="text-align: left">스마트카드와 카드 리더기로 구성된 PC Pay Device와 Interface Software로 구성</td>
    </tr>
    <tr>
      <td style="text-align: left">Ecash</td>
      <td style="text-align: left">Dig Cash사에서 개발된 전자화폐 시스템으로 은닉서명 기술을 사용하여 온라인상에서 완전한 익명성을 제공</td>
    </tr>
    <tr>
      <td style="text-align: left">Net Cash</td>
      <td style="text-align: left">전자수표 등의 금융도구와 교환이 가능한 분산 Currency Server를 기반으로 하며, 전자화폐로 바꾸어 사용 가능</td>
    </tr>
  </tbody>
</table>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>+ FDS(Fraud Detection System)
    * 전자금융거래에서 사용되는 단말정보, 접속로그, 거래정보 등을 분석
    * 각종 부정 거래행위를 탐지, 예방 (탐지통제, 예방통제)
+ 가상화폐 비트코인(Bitcoin)
    * 2009년 나카모토 사토시가 만든 디지털 통화
    * 중앙관리 장치가 없으며 P2P(Peer to Peer) 기반의 분산 데이터로 이루어져 있음
    * 공개 키 암호방식을 사용해서 거래
    * 지갑파일의 형태로 저장 관리되고 지갑에는 고유의 ID가 부여됨
</code></pre></div></div>

<h1 id="set">SET</h1>
<h2 id="1-setsecure-electronic-transaction">1. SET(Secure Electronic Transaction)</h2>
<ul>
  <li>인터넷에서 신용카드 사용 촉진을 위해 VISA와 MASTER CARD 사에서 공동 개발한 프로토콜</li>
  <li>전자 상거래 인증의 상호 작용을 보장, SSL에 비해 상대적으로 느림</li>
  <li>전자 서명과 인증서를 통한 안전한 거래가 가능</li>
  <li>신용카드의 지급 결제 처리 절차에 한해서 정의, 시스템 구축 및 인증 절차가 복잡함</li>
  <li>기밀성, 무결성, 인증, 부인봉쇄를 지원</li>
</ul>

<h2 id="2-set-거래-절차">2. SET 거래 절차</h2>
<ul>
  <li><em>그림 삽입</em></li>
</ul>

<h2 id="3-세부-절차">3. 세부 절차</h2>
<ul>
  <li><em>그림 삽입</em></li>
  <li>구매자가 웹 사이트에서 물건을 구매하며 검증 정보를 준비
    <ul>
      <li>구매자(Card Holder)가 상점(Merchant)의 웹 사이트서 상품을 선택</li>
      <li>구매자가 상점의 인증서를 수신, 상점 검증</li>
      <li>구매자가 아래의 정보를 상점에게 전송
        <ul>
          <li>자신의 인증서</li>
          <li>암호화된 구매정보 = 상점의 공개키로 암호화된 구매정보</li>
          <li>암호화된 결제정보 = 대칭키로 암호화된 결제정보</li>
          <li>검증해시값 = hash(구매정보), hash(결제정보)</li>
          <li>전자 서명 = 검증해시값 을 고객의 개인키로 암호화한 정보</li>
          <li>대칭키를 담은 전자봉투 = 결제정보를 암호화한 대칭키를 PG사의 공개키로 암호화한 정보</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>상점의 검증
    <ul>
      <li>상점은 구매자의 인증서를 수신, 구매자 검증</li>
      <li>상점은 구매 정보 복호화</li>
      <li>구매 정보에 해시를 생성</li>
      <li>새로 생성한 해시와 전달받은 hash(구매 정보)의 일치 확인</li>
      <li>고객의 공개키로 전자서명을 풀어봄</li>
      <li>전자서명을 풀어 나온 값이 검증 해시값과 같은지 확인</li>
    </ul>
  </li>
  <li>PG사의 검증
    <ul>
      <li>상점으로부터 검증 정보 중 구매정보를 제외한 나머지 정보를 받음</li>
      <li>PG사는 전자봉투를 자신의 개인키로 복호화</li>
      <li>대칭키를 받아서 암호화된 결제 정보를 복호화</li>
      <li>결제정보에 hash를 적용</li>
      <li>새로 생성한 해시와 전달받은 hash(결제 정보)의 일치를 확인</li>
      <li>고객의 공개키로 전자서명을 풀어봄</li>
      <li>전자서명을 풀어서 나온 값이 검증 해시값과 같은지 확인</li>
      <li>은행에 대금지급을 요청</li>
    </ul>
  </li>
</ul>

<h2 id="4-set-구성요소">4. SET 구성요소</h2>

<table>
  <thead>
    <tr>
      <th style="text-align: left">구성요소</th>
      <th style="text-align: left">세부 내용</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left">구매자(카드 소지자)</td>
      <td style="text-align: left">전자상거래를 수행하는 전자지갑(사용자 신분을 확인하는 SET 인증서 포함)을 얻음</td>
    </tr>
    <tr>
      <td style="text-align: left">판매자(상점 소유자)</td>
      <td style="text-align: left">웹상의 상품 운영자, SET를 이용하여 상품 판매를 제공</td>
    </tr>
    <tr>
      <td style="text-align: left">PG(Payment Gateway)</td>
      <td style="text-align: left">기존의 카드 지불 네트워크의 통로</td>
    </tr>
    <tr>
      <td style="text-align: left">발급기관(Issuer)</td>
      <td style="text-align: left"><ul><li>사용자 계좌가 있는 재정 기관으로 신용카드를 발행</li><li>CA 운영하여 사용자에게 인증서를 발행</li></ul></td>
    </tr>
    <tr>
      <td style="text-align: left">지불처리은행(Acquirer)</td>
      <td style="text-align: left"><ul><li>상점의 계좌가 있는 재정 기관으로 신용카드 인가 여부와 지불을 처리</li><li>지불 Gateway를 운영하고 CA를 운영하여 상인에게 인증서를 발행</li></ul></td>
    </tr>
    <tr>
      <td style="text-align: left">인증기관(Certification Authority)</td>
      <td style="text-align: left">SET에 참여하는 사용자, 상점, PG의 정당성을 보증하는 기관</td>
    </tr>
  </tbody>
</table>

<ul>
  <li>SET 사용 기술
    <ul>
      <li>대칭키, 공개키, 전자서명, 해시함수, 전자봉투, 공개키 인증(X.509), 이중서명</li>
      <li>알고리즘 : DES, RSA, SHA-1</li>
    </ul>
  </li>
</ul>

<h2 id="5-set-이중서명-dual-signature">5. <strong>SET 이중서명 (Dual Signature)</strong></h2>
<ul>
  <li>SET 이중서명 사용 이유
    <ul>
      <li>사용자는 판매자에게 지불정보(계좌 정보)를 숨기고 싶다.</li>
      <li>사용자는 PG로부터 주문정보(물품명세서 등)를 숨기고 싶다.</li>
      <li>PG(Payment Gateway)는 판매자가 전송한 결제요청이 실제 고객이 의뢰한 정보인지 확인하고 싶다.</li>
      <li><em>그림 삽입</em></li>
      <li>주문정보와 지불정보를 각각 해시하고 생성된 두 개의 해시 다이제스트를 하나로 합치는 연접 과정 후에 또 다시 해시를 진행하고, 해시 다이제스트를 송신자의 개인키로 암호화한다.</li>
    </ul>
  </li>
  <li>SET 장점과 단점
    <ul>
      <li>장점
        <ul>
          <li>전자상거래의 사기 방지, 기존의 신용카드 기반을 그대로 활용</li>
        </ul>
      </li>
      <li>단점
        <ul>
          <li>암호 프로토콜이 너무 복잡함</li>
          <li>RSA 속도 저하, 카드 소지자에게 전자지갑 소프트웨어를 요구</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<h1 id="ssl">SSL</h1>
<h2 id="1-sslsecure-socket-layer-개요">1. SSL(Secure Socket Layer) 개요</h2>
<h3 id="1-개요">1. 개요</h3>
<ul>
  <li>개인정보를 전송하는 네트워크 구간은 보안서버를 사용해서 송신 및 수신되는 데이터를 암호화해야함 - 스니퍼(Sniffer) 와 같은 네트워크 패킷 모니터링 도구를 통한 스니핑 방지</li>
  <li>보안서버의 구축은 SSL 및 SSO 등으로 구축할 수 있으며 공개용 인터넷에서 사용하는 방식은 SSL임</li>
</ul>

<h3 id="2-sslsecure-socket-layer">2. SSL(Secure Socket Layer)</h3>
<ul>
  <li>인터넷과 같은 개방환경에서 Client와 Server의 안전한 통신을 목적으로 Netscape 사에서 개발</li>
  <li>암호문 전송을 위해 RSA 공개키 알고리즘을 사용</li>
  <li>X.509 인증서 지원</li>
  <li>443 포트 사용</li>
  <li>Transport ~ Application 계층에서 동작 (http, ftp, telnet, mail)</li>
  <li>기밀성, 무결성, 인증의 세 가지 보안 서비스를 제공</li>
</ul>

<h3 id="3-ssl-보안-서비스">3. SSL 보안 서비스</h3>

<table>
  <thead>
    <tr>
      <th style="text-align: left">보안 서비스</th>
      <th style="text-align: left">세부 내용</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left">인증(Authentication)</td>
      <td style="text-align: left">거래하고자 하는 사이트가 신뢰할 수 있으며 검증된 사이트인지 개인정보를 송신하기 전에 먼저 상대 사이트를 인증하는 기능</td>
    </tr>
    <tr>
      <td style="text-align: left">무결성(Integrity)</td>
      <td style="text-align: left">송신자 측의 웹브라우저에서 상대편 웹 서버까지 송신 중 공격자나 제 3자에 의해 무단으로 데이터가 위변조 되는 것을 방지하는 기능</td>
    </tr>
    <tr>
      <td style="text-align: left">기밀성(Confidentiality)</td>
      <td style="text-align: left">앞서 나온 DES, 3DES, IDEA 등 여러 가지 암호화 방식을 사용하여 데이터의 송 수신 중에 인가되지 않은 사용자의 데이터에 대한 불법적인 접근을 통제하고 만일의 경우 데이터가 공격에 의하여 유출되었다 하여도 쉽게 읽힐 수 없는 형태로 변환시키는 기능</td>
    </tr>
  </tbody>
</table>

<h3 id="4-ssl-handshaking-과정">4. SSL Handshaking 과정</h3>
<ul>
  <li>웹 브라우저는 SSL 요청 전에 웹 서버 포트인 443 포트를 호출하여 TCP 3-Way Handshaking을 수행</li>
  <li>웹 브라우저는 TCP 연결이 완료되면 웹 서버에게 “Client Hello” 를 전송
    <ul>
      <li>웹브라우저에서 지원하는 SSL 버전 (예:TLS 1.0)</li>
      <li>지원하는 암호화 알고리즘(예:AES 대칭키 및 CBC블록 암호화 등)</li>
      <li>Random : 재생공격(Replay Attack) 방지를 의한 임의적 숫자</li>
    </ul>
  </li>
  <li>서버는 웹 브라우저에게 “Server Hello” 를 전송
    <ul>
      <li>웹 서버가 암호화 알고리즘을 결정해서 웹 브라우저에게 전송</li>
    </ul>
  </li>
  <li>웹브라우저는 최종적으로 “Change Cipher Spec” 을 서버에 전송
    <ul>
      <li>웹브라우저가 협의된 암호화 알고리즘을 사용한다는 것을 알림</li>
    </ul>
  </li>
</ul>

<h3 id="5-ssl-구성요소">5. <strong>SSL 구성요소</strong></h3>

<table>
    <tr>
        <th colspan="4" align="center">SSL 아키텍처 구조</th>
    </tr>
    <tr>
        <td align="center">SSL Handshake Protocol</td>
        <td align="center">SSL change Cipher Spec Protocol</td>
        <td align="center">SSL Alert Protocol</td>
        <td align="center">Application Protocol(ex.HTTP)</td>
    </tr>
    <tr>
        <td colspan="4" align="center">SSL Record Protocol</td>
    </tr>
    <tr>
        <td colspan="4" align="center">TCP</td>
    </tr>
    <tr>
        <td colspan="4" align="center">IP</td>
    </tr>
</table>

<table>
  <thead>
    <tr>
      <th style="text-align: center">구성요소</th>
      <th style="text-align: left">세부 내용</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">Change Cipher Spec Protocol</td>
      <td style="text-align: left">Handshake Protocol 에서 협의된 암호 알고리즘, 키 교환 알고리즘, MAC 암호화, HASH 알고리즘이 사용될 것을 클라이언트와 웹 서버에게 공지</td>
    </tr>
    <tr>
      <td style="text-align: center">Alert Protocol</td>
      <td style="text-align: left"><ul><li>SSL 통신을 하는 도중 클라이언트와 웹 서버 중 누군가의 에러나 세션의 종료, 비정상적인 동작이 발생할 때 사용되는 프로토콜</li><li>첫 번째 바이트에 위험도 수준을 결정하는 Level 필드가 있음. 1인 경우 Warning의 의미로 통신의 중단은 없고 2인 경우 Fatal로 Alert 즉시 클라이언트와 서버의 통신을 중단하게 됨</li><li>두 번째 바이트에는 어떠한 이유로 Alert Protocol이 발생하였는지 나타내는 Description 필드가 있음</li></ul></td>
    </tr>
    <tr>
      <td style="text-align: center">Record Protocol</td>
      <td style="text-align: left"><ul><li>상위 계층에서 전달받은 데이터를 Handshake Protocol에서 협의가 이루어진 암호 알고리즘, MAC 알고리즘, HASH 알고리즘을 사용해 데이터를 암호화</li><li>산출된 데이터를 SSL에서 처리가 가능한 크기의 블록으로 나누고 압축</li><li>선택적으로 MAC(Message Authentication Code)를 덧붙여 전송</li><li>수신한 데이터는 복호화, MAC 유효성 검사, 압축 해제, 재결합의 과정을 거쳐 상위 계층에 전달</li></ul></td>
    </tr>
  </tbody>
</table>

<h2 id="2-ssl-handshaking-protocol-과정">2. SSL Handshaking Protocol 과정</h2>
<h3 id="1-ssl-handshaking-protocol-세부-과정">1. <strong>SSL Handshaking Protocol 세부 과정</strong></h3>

<table>
  <thead>
    <tr>
      <th style="text-align: left">진행 과정</th>
      <th style="text-align: left">세부 내용</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left">Client Hello</td>
      <td style="text-align: left">Handshake Protocl 의 첫 단계로 클라이언트의 브라우저에서 지원하는 암호 알고리즘, 키 교환 알고리즘, MAC 암호화, HASH 알고리즘을 서버에 전송</td>
    </tr>
    <tr>
      <td style="text-align: left">Server Hello</td>
      <td style="text-align: left">Client Hello 메시지 내용 중 서버가 지원할 수 있는 알고리즘들을 클라이언트에게 전송</td>
    </tr>
    <tr>
      <td style="text-align: left">Server Hello Done</td>
      <td style="text-align: left">클라이언트에게 서버의 요청이 완료되었음을 공지</td>
    </tr>
    <tr>
      <td style="text-align: left">Client 인증서</td>
      <td style="text-align: left">서버에서 클라이언트의 인증 요청 발생 시 클라이언트의 인증서를 전달</td>
    </tr>
    <tr>
      <td style="text-align: left">Premaster Key 전송</td>
      <td style="text-align: left">전달받은 서버의 인증서를 통해 신뢰할 수 있는 서버인지 확인 후 암호 통신에 사용할 Session Key를 생성하고 이것을 서버의 공개키로 암호화해 Premaster Key를 만들어 서버로 전송</td>
    </tr>
    <tr>
      <td style="text-align: left">Change Cipher Spec</td>
      <td style="text-align: left">앞의 단계에서 협의된 암호 알고리즘들을 이후부터 사용한다는 것을 서버에게 알림</td>
    </tr>
    <tr>
      <td style="text-align: left">Finished</td>
      <td style="text-align: left">서버에게 협의 종료를 전달</td>
    </tr>
    <tr>
      <td style="text-align: left">Change Cipher Spec</td>
      <td style="text-align: left">서버 또한 클라이언트의 응답에 동의하고 협의된 알고리즘의 적용을 공지</td>
    </tr>
    <tr>
      <td style="text-align: left">Finished</td>
      <td style="text-align: left">클라이언트에게 협의에 대한 종료를 선언</td>
    </tr>
  </tbody>
</table>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>* SSL 버전은 SSL 3.0 이상, TLS 1.1 이상을 사용해야 보안 취약점에 문제가 없음 
</code></pre></div></div>

<h3 id="2-openssl-사용">2. OpenSSL 사용</h3>
<ul>
  <li>웹서버에 OpenSSL 패키지를 설치하고 개인키와 인증서를 생성한다.
    <ul>
      <li>웹브라우저는 변경 없이 SSL 사용 가능</li>
    </ul>
  </li>
  <li>웹서버는 개인키를 최소 길이 2048 이상으로 생성한다.</li>
</ul>

<h3 id="3-openssl-보안-취약점">3. OpenSSL 보안 취약점</h3>
<ul>
  <li>하트블리드(HeartBleed) 취약점
    <ul>
      <li>OpenSSL 암호화 라이브러리(Library)의 하트비트(Heartbeat) 라는 확장모듈에서 발생한 문제</li>
      <li>웹 브라우저가 요청(Request)했을 때 데이터 길이를 검증하지 않아 메모리에 저장되어 있는 평문의 64KB 가 노출되는 현상</li>
    </ul>
  </li>
</ul>

<h1 id="shttp">sHTTP</h1>
<h2 id="1-shttp-개요">1. sHTTP 개요</h2>
<ul>
  <li>메시지를 안전하게 전송하기 위해 사용</li>
  <li>웹 상의 파일들이 안전하게 교환될 수 있도록 해주는 HTTP의 확장판 (HTTP만 지원)</li>
  <li>HTTP를 캡슐화, HTTP와 같은 message base 프로토콜</li>
  <li>HTTP와 동일한 요청과 응답 구조를 이용</li>
  <li>SSL이 전송 계층에 작동하는 것에 비해 S-HTTP는 응용 계층에서 보안 기능을 제공하므로 더 효율적임</li>
</ul>

<h2 id="2-shttp-기능">2. sHTTP 기능</h2>
<ul>
  <li>전용 웹브라우저와 웹서버를 사용</li>
  <li>기밀성, 무결성, 전자서명 기능 지원</li>
  <li>sHTTP는 웹브라우저와 웹서버 사이 암호화 방식, CA 선택 등의 기능을 제공</li>
</ul>

<h1 id="ipsec">IPSEC</h1>
<h2 id="1-ipsecip-security-개요">1. IPSEC(IP Security) 개요</h2>
<ul>
  <li>IPSEC(IP Security)
    <ul>
      <li>인터넷상에 전용 회선처럼 이용 가능한 가상 전용 회선을 구축, 안전한 통신을 실현하는 통신 규약</li>
    </ul>
  </li>
  <li><strong>IPSEC 전송 방법</strong></li>
</ul>

<table>
  <thead>
    <tr>
      <th style="text-align: left">종류</th>
      <th style="text-align: left">설명</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left">터널 모드</td>
      <td style="text-align: left">VPN과 같은 구성으로 패킷의 출발지에서 일반 패킷이 보내지면 중간에서 IPSec을 탑재한 중계 장비가 패킷 전체를 암호화(인증)하고 중계 장비의 IP 주소를 붙여 전송, IP 헤더까지 암호화</td>
    </tr>
    <tr>
      <td style="text-align: left">전송 모드</td>
      <td style="text-align: left">패킷의 출발지에서 암호화(인증)를 하고 목적지에서 복호화가 이루어지므로 End-to-End 보안을 제공, 메시지만 암호화</td>
    </tr>
  </tbody>
</table>

<h2 id="2-ipsec-header-구조">2. IPSEC Header 구조</h2>
<ul>
  <li>IPSEC 인증 및 암호화를 위한 헤더</li>
</ul>

<table>
  <thead>
    <tr>
      <th style="text-align: left">종류</th>
      <th style="text-align: left">설명</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left">AH(Authentication Header)</td>
      <td style="text-align: left"><ul><li>데이터 무결성과 IP 패킷의 인증을 제공, MAC 기반</li><li>Replay Attack으로부터 보호 기능(순서번호 사용)을 제공</li><li>인증 시 MD5, SHA-1 인증 알고리즘을 이용하여 Key 값과 IP 패킷의 데이터를 입력한 인증 값을 계산하여 인증 필드에 기록</li><li>수신자는 같은 키를 이용하여 인증 값을 검증</li></ul></td>
    </tr>
    <tr>
      <td style="text-align: left">ESP(Encapsulating Security Payload)</td>
      <td style="text-align: left"><ul><li>전송 자료를 암호화하여 전송하고 수신자가 받으 자료를 복호화하여 수신</li><li>IP 데이터그램에서 제공하는 기능이며 데이터의 선택적 인증, 무결성, 기밀성, Replay Attack 방지를 위해 사용</li><li>AH와 달리 암호화를 제공(대칭키, DES, 3-DES 알고리즘)</li><li>TCP/UDP 등의 Transport 계층까지 암호화할 경우 Transport 모드</li><li>전체 IP 패킷에 대해 암호화할 경우 터널 모드를 사용</li></ul></td>
    </tr>
  </tbody>
</table>

<ul>
  <li>IPSEC 키 관리</li>
</ul>

<table>
  <thead>
    <tr>
      <th style="text-align: left">종류</th>
      <th style="text-align: left">설명</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left">ISAKMP</td>
      <td style="text-align: left"><ul><li>Internet Security Assiociation and Key Management Protocol</li><li>Security Association 설정, 협상, 변경, 삭제 등 SA 관리와 키 교환을 정의했으나 키 교환 메커니즘에 대한 언급은 없음</li></ul></td>
    </tr>
    <tr>
      <td style="text-align: left">IKE</td>
      <td style="text-align: left"><ul><li>IKE(Internet Key Exchange) 메시지는 UDP 프로토콜을 사용해서 전달되면 출발지 및 도착지 주소는 500port를 사용하게 됨</li><li>키 교환 담당</li></ul></td>
    </tr>
  </tbody>
</table>

<h1 id="otp">OTP</h1>
<h2 id="1-otpone-time-password-개요">1. OTP(One Time Password) 개요</h2>
<ul>
  <li>OTP(One Time Password)
    <ul>
      <li>OTP 생성 매체에 의해 필요한 시점에 발생하고 매번 다른 번호로 생성되는 높은 보안수준을 가진 사용자 동적 비밀번호</li>
      <li>사용된 비밀번호는 일회성으로서 다시 생성되지 않음</li>
    </ul>
  </li>
  <li>
    <p>OTP의 동기 및 비동기식 방식</p>

    <table>
      <thead>
        <tr>
          <th style="text-align: left">구분</th>
          <th style="text-align: left">방식</th>
          <th style="text-align: left">단계</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td style="text-align: left">동기식</td>
          <td style="text-align: left">시간, 이벤트</td>
          <td style="text-align: left"><ul><li>Time 동기화 Token은 정해진 고정된 시간 간격 주기로 난수 값 생성</li><li>난수 값 생성을 위한 특별한 암호화 알고리즘과 비밀키가 필요</li><li>토큰 장치로부터 새로 생성된 난수와 개인의 PIN 번호를 입력하면 인증시스템 내의 사용자 개인정보와 생성된 패스워드를 검증하여 인증</li></ul></td>
        </tr>
        <tr>
          <td style="text-align: left">비동기식</td>
          <td style="text-align: left">질의응답</td>
          <td style="text-align: left"><ul><li>사용자가 인증 요구와 함께 PIN을 전송하면 인증서버는 난수를 발생하여 Challenge로 사용자에게 전달</li><li>사용자는 다시 Challenge 값을 암호화하여 Response를 반환하면 인증 서버는 자신의 결과값과 비교하여 인증</li><li>단점 : 느림, 복잡</li><li>장점 : 안정성이 매우 우수</li></ul></td>
        </tr>
      </tbody>
    </table>
  </li>
</ul>

<h2 id="2-동기-방식과-비동기-방식-인증-방법">2. <strong>동기 방식과 비동기 방식 인증 방법</strong></h2>
<ul>
  <li>동기화 방식
    <ul>
      <li><em>그림 삽입</em></li>
      <li>사용자의 OTP 생성 매체와 은행의 OTP 인증서버 사이에 동기화된 기준값에 따라 OTP가 생성되는 방식</li>
      <li>동기화된 기준값에 따라 시간 동기화방식과 이벤트 동기화방식으로 분류됨</li>
      <li>시간 동기화 방식은 OTP 생성 매체가 매시간 비밀번호를 자동으로 생성하는 형태로 시간을 기준값으로 하여 OTP 생성 매체와 OTP 인증서버가 동기화됨</li>
      <li>시간을 입력값으로 동기화하기 때문에 간편한장점을 가지지만, 일정 시간 동안 은행에 OTP를 전송하지 못하면 다시 새로운 OTP가 생성도리 때까지 기다려야 함</li>
      <li>이벤트 동기화 방식은 OTP 생성 매체와 인증서버의 동기화된 인증횟수를 기준값으로 생성, OTP 생성 매체에서 생성된 비밀번호 횟수와 인증서버가 생성한 비밀번호 횟수가 자동으로 동기화되기 때문에 시간 동기화의 불편성을 완화</li>
    </ul>
  </li>
  <li>비동기 방식 : 질의응답(Challenge-Response)
    <ul>
      <li><em>그림 삽입</em></li>
      <li>사용자의 OTP 생성 매체와 은행의 OTP 인증 서버 사이에 동기화되는 기준값이 없으며 사용자가 직접 임의의 난수(질의 값)를 OTP 생성 매체에 입력하여 OTP를 생성하는 방식</li>
      <li>사용자가 은행의 OTP 인증서버로부터 받은 질의 값(Challenge)을 OTP 생성 매체에 직접 입력하면 응답 값(Response)이 생성됨</li>
      <li>사용자가 직접 OTP 생성 매체에 질의 값을 입력해야 하며, 응답 값인 OTP가 생성되기 때문에 전자금융 사고 발생 시 명백한 책임소재를 가릴 수 있고 보안성도 높은 방식</li>
      <li>직접 질의 값을 확인하여 OTP 생성 매체에 입력해야 하므로 은행이 별도의 질의 값을 관리해야 함</li>
    </ul>
  </li>
</ul>

<h1 id="전자문서와-ebxml">전자문서와 ebXML</h1>
<h2 id="1-전자문서electronic-documents-개요">1. 전자문서(Electronic Documents) 개요</h2>
<ul>
  <li>전자문서(Electronic Documents)
    <ul>
      <li>전자상거래 시 비즈니스 거래를 위해 활용되는 문서로 비즈니스 정보 개체의 집합</li>
    </ul>
  </li>
  <li>
    <p>전자문서 유형</p>

    <table>
      <thead>
        <tr>
          <th style="text-align: left">유형</th>
          <th style="text-align: left">세부 내용</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td style="text-align: left">EDI(Electronic Document Interchange)</td>
          <td style="text-align: left"><ul><li>기업 간의 전자상거래 시 전자문서를 교환하기 위한 문서화 표준</li><li>UN/EDIFACT 표준을 준수</li></ul></td>
        </tr>
        <tr>
          <td style="text-align: left">XML/EDI</td>
          <td style="text-align: left">XML 문서를 인터넷을 활용해서 전자문서를 교환하는 개방형 표준</td>
        </tr>
        <tr>
          <td style="text-align: left">XMI(eXtensible Markup Interchange)</td>
          <td style="text-align: left">W3C에서 제안한 것으로 웹에서 구조화된 문서를 교환하기 위한 웹 표준</td>
        </tr>
        <tr>
          <td style="text-align: left">ebXML(e-business Extensible Markup Language)</td>
          <td style="text-align: left">UN/CEFACT와 OASIS에서 표준화한 기업 간의 전자상거래 프레임워크</td>
        </tr>
      </tbody>
    </table>
  </li>
</ul>

<h2 id="2-ebxmle-business-extensible-markup-language-개요">2. ebXML(e-business Extensible Markup Language) 개요</h2>
<ul>
  <li>ebXML 전자상거래 방법
    <ul>
      <li><em>그림 삽입</em></li>
      <li>기업 A가 기업 B와 전자상거래를 위해 ebXML 저장소에 비즈니스 상세항목을 요청</li>
      <li>비즈니스 상세항목은 기술적 요소와 비즈니스적 요소로 이루어짐</li>
      <li>기업 A는 ebXML로부터 상세항목을 받고 기업 A의 정보시스템을 개발</li>
      <li>구현된 상세항목과 기업 A의 기업정보를 다시 ebXML 저장소에 저장</li>
      <li>기업 B와 전자상거래를 위한 계약을 체결</li>
      <li>기업 B는 기업 A의 정보를 얻어 전자상거래가 이루어짐</li>
      <li>비슷한 예 : Biztalk</li>
    </ul>
  </li>
  <li>
    <p>ebXML 구성요소</p>

    <table>
      <thead>
        <tr>
          <th style="text-align: left">구성요소</th>
          <th style="text-align: left">세부 내용</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td style="text-align: left">비즈니스 프로세스(Business Process)</td>
          <td style="text-align: left"><ul><li>비즈니스 거래 절차에 대한 표준화된 방법</li><li>모델링을 통해서 비즈니스 프로세스를 표현하는 방법을 정의</li></ul></td>
        </tr>
        <tr>
          <td style="text-align: left">핵심 컴포넌트(Core Components)</td>
          <td style="text-align: left">비즈니스에서 교환되는 전자문서를 재사용할 수 있도록 표준화 작업을 수행</td>
        </tr>
        <tr>
          <td style="text-align: left">등록저장소(Registry Repository)</td>
          <td style="text-align: left"><ul><li>거래 당사자들에 의해 제출된 정보를 저장</li><li>메타 데이터 저장소</li></ul></td>
        </tr>
        <tr>
          <td style="text-align: left">거래 당사자(Trading Partners)</td>
          <td style="text-align: left"><ul><li>비즈니스 거래 당사자에 대한 정보 및 협업을 위한 프로파일</li><li>협업 규약 프로파일, 협업 규약 약정서</li></ul></td>
        </tr>
        <tr>
          <td style="text-align: left">전송,교환 및 패키징(Transport,Routing and Packaging)</td>
          <td style="text-align: left">ebXML 메시지를 상호운영, 보안, 전달을 위한 표준</td>
        </tr>
      </tbody>
    </table>
  </li>
</ul>

<h1 id="web-service와-xmlextensible-markup-language-보안">Web Service와 XML(eXtensible Markup Language) 보안</h1>
<h2 id="1-웹-서비스web-service-개요">1. 웹 서비스(Web Service) 개요</h2>
<ul>
  <li>웹 서비스(Web Service)
    <ul>
      <li>인터넷 표준 기술(WSDL, SOAP, UDDI, XML)을 활용하여 기업 내부 및 기업 외부의 정보시스템을 상호연계하기 위한 기술</li>
    </ul>
  </li>
  <li>Web Service 처리 방법
    <ul>
      <li><em>그림 삽입</em></li>
    </ul>
  </li>
  <li>
    <p>Web Service 표준기술</p>

    <table>
      <thead>
        <tr>
          <th style="text-align: left">표준기술</th>
          <th style="text-align: left">세부내용</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td style="text-align: left">WSDL(Web Service Description Language)</td>
          <td style="text-align: left">서비스 제공자와 서비스 사용자 간의 웹 서비스 파라미터의 이름, 서비스가 위치한 URL 및 웹 서비스 호출에 관한 정보를 기술하는 표준</td>
        </tr>
        <tr>
          <td style="text-align: left">UDDI(Universal Description, Descovery and Integration)</td>
          <td style="text-align: left">서비스 제공자가 웹 서비스를 등록하고 서비스 사용자가 웹 서비스를 검색하기 위한 레지스트리</td>
        </tr>
        <tr>
          <td style="text-align: left">SOAP(Simple Object Access Protocol)</td>
          <td style="text-align: left">XML을 기반으로 하는 메시지 표준으로 서비스 사용자가 서비스 제공자에 의해서 노출된 웹 서비스를 호출하고 결과를 받기 위한 표준 프로토콜</td>
        </tr>
      </tbody>
    </table>
  </li>
</ul>

<h2 id="2-xmlextensible-markup-language-보안-기술">2. XML(eXtensible Markup Language) 보안 기술</h2>
<ul>
  <li>
    <p>Web Service 및 XML 보안 기술</p>

    <table>
      <thead>
        <tr>
          <th style="text-align: left">보안 기술</th>
          <th style="text-align: left">세부 내용</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td style="text-align: left">XML 전자서명(Digital Signature)</td>
          <td style="text-align: left">XML 문서에 대해서 Element 단위 혹은 문서단위 전자서명</td>
        </tr>
        <tr>
          <td style="text-align: left">XML 암호화(Encryption)</td>
          <td style="text-align: left">XML 문서에 대한 대칭키 및 공개키 기반 암호화 수행</td>
        </tr>
        <tr>
          <td style="text-align: left">XACML(eXtensible Access Control Markup Language)</td>
          <td style="text-align: left"><ul><li>정보자원에 대한 접근정책을 정의한 표준 XML 문서</li><li>접근 통제 정책 정의함</li></ul></td>
        </tr>
        <tr>
          <td style="text-align: left">XKMS(XML Key Management Specification)</td>
          <td style="text-align: left">공개키 관리를 위한 공개키 획득, 검증, 키 등록, 폐기와 같은 메커니즘 제공</td>
        </tr>
        <tr>
          <td style="text-align: left">SAML(Security Assertion Markup Language)</td>
          <td style="text-align: left">Security Token 형태로 인증에 필요한 권한정보</td>
        </tr>
      </tbody>
    </table>
  </li>
</ul>
:ET