I"_4<h1 id="tcp-프로토콜">TCP 프로토콜</h1>
<ul>
  <li>개요
    <ul>
      <li>연결지향적 프로토콜 (Connection Oriented Protocol)
        <ul>
          <li>논리적 연결 통로를 먼저 생성 후 통신</li>
          <li>순서 제어 : 데이터 전송순서 보장</li>
        </ul>
      </li>
      <li>Stream 기반 전송방식
        <ul>
          <li>정해진 크기로 전송하지 않고 임의의 크기로 나눔</li>
          <li>연속적으로 데이터 전송</li>
        </ul>
      </li>
      <li>신뢰할 수 있는 프로토콜 (Reliable Protocol)
        <ul>
          <li>흐름 제어 (Flow Control)
            <ul>
              <li>송신측 버퍼가 500 Byte, 수신측 버퍼가 100 Byte 일 때 수신측 버퍼가 받을 수 있는 데이터만큼 전송</li>
              <li>슬라이딩 윈도우 (Sliding Window)
                <ul>
                  <li>기본
                    <ul>
                      <li>송신 측에서 수신 측에 Segment 를 전송</li>
                      <li>수신 측은 송신 측에 Ack (데이터 받았음) 을 전송</li>
                      <li>반복 -&gt; RTT (Round Trip Time : 왕복시간) 가 증가함</li>
                    </ul>
                  </li>
                  <li>수신측 Window Size 에 기반한 전송
                    <ul>
                      <li>수신 측 Window Size 에 기반해 Ack 확인 없이 연속적으로 데이터를 전송</li>
                      <li>Throughtput 증가</li>
                    </ul>
                  </li>
                </ul>
              </li>
            </ul>
          </li>
          <li>오류 제어 (Error Control)
            <ul>
              <li>오류, 누락(손실) 이 발생할 경우 재전송 (Retransmission) 수행</li>
            </ul>
          </li>
          <li>혼잡 제어 (Congestion Control)
            <ul>
              <li>네트워크가 혼잡하여 효율이 떨어질 경우</li>
              <li>네트워크 혼잡도에 따라 Data 의 양을 조절</li>
              <li>네트워크 혼잡도 판단 기준
                <ul>
                  <li>Data 의 손실 유무로 판단</li>
                </ul>
              </li>
            </ul>
          </li>
        </ul>
      </li>
    </ul>
  </li>
  <li>TCP 헤더 (20~60Bytes)
    <ul>
      <li>Source Port (16Bit) : 출발지 포트</li>
      <li>Destination Port (16Bit) : 목적지 포트</li>
      <li>Sequence Number (32Bit) : 시작 바이트 순번
        <ul>
          <li>ISN (Initial Sequence Number) : 초기순서번호, 송/수신 측에서 연결할 때 미리 주고받음</li>
          <li>ISN + 전송한 데이터의 바이트</li>
          <li>전송한 데이터가 없을 경우 1씩 증가</li>
        </ul>
      </li>
      <li>Acknowledgement Number (32Bit) : 상대방이 다음에 전달할 순서번호, ACK 와 함께 보냄</li>
      <li>Data Offset(HLEN) : 20~60Byte 에 해당하는 값</li>
      <li>Reserved : 예약, 사용안함</li>
      <li>Control Flags (6Bit)
        <ul>
          <li>UAPRSF
            <ul>
              <li>SYN + ACK : 010010</li>
            </ul>
          </li>
          <li>URG : 긴급데이터</li>
          <li>ACK : 수신확인응답</li>
          <li>PSH : 송수신 버퍼에 있는 Data 를 즉시 처리</li>
          <li>RST : Reset the connection - 연결 강제종료</li>
          <li>SYN : Synchronize Sequence Number - 시퀀스 넘버 동기화 / 연결설정</li>
          <li>FIN : 연결 정상종료</li>
        </ul>
      </li>
      <li>Window : Window Size - 수신받을 수 있는 버퍼 공간
        <ul>
          <li>수신측에서 송신측이 알 수 있도록 보내는 리시버 윈도우 사이즈</li>
          <li>Window Sliding 제어방식에 쓰임</li>
        </ul>
      </li>
      <li>Checksum : 헤더를 포함한 전체 Segment 에 대한 오류검사에 활용</li>
      <li>Urgent Pointer : Segment 가 긴급 데이터를 포함하는 경우 긴급 데이터의 위치값
        <ul>
          <li>사용하기 위해서 URG Flag 가 설정되어야 함.</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>TCP 의 MSS
    <ul>
      <li>IP 의 경우 Fragment 의 단편화 기준 MTU (Maximum Transmission Unit)
        <ul>
          <li>IP Header + IP Payload</li>
        </ul>
      </li>
      <li>TCP 의 경우 Segment 의 분할 (Segmentation) -&gt; 재조합 (Reassembly)
        <ul>
          <li>MSS : Maximum Segment Size</li>
          <li>TCP 헤더를 제외한 TCP Payload 부</li>
          <li>크기값은 MTU 환경에 영향을 받게 됨</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>TCP 연결
    <ul>
      <li>논리적 연결 설정 -&gt; 데이터 전송 (송수신) (재전송 포함) -&gt; 연결 종료</li>
      <li>ACK 의 의미 : 다음에 받을 SYN No</li>
      <li>연결 설정 : 3-Way Handshake (논리적 연결설정 과정)
        <ul>
          <li>Client : Active Open 상태</li>
          <li>Server : Passive Open 상태</li>
          <li>Client : SYN 패킷 전송
            <ul>
              <li>ISN 포함 = Seq No:100</li>
              <li>Window = Receiver Window Size (RWND) : 65535</li>
            </ul>
          </li>
          <li>Client : SYN_SENT</li>
          <li>Server : SYN_RCVD (SYN_RECEIVED, SYN_RECV)</li>
          <li>Server : SYN + ACK 패킷 전송 (010010)
            <ul>
              <li>ISN 포함 = Seq No:200</li>
              <li>ACK : 101</li>
              <li>Window = Receiver Window Size (RWND) : 65535</li>
            </ul>
          </li>
          <li>Client : ESTABLISHED (연결설정완료)</li>
          <li>Client : ACK 패킷 전송
            <ul>
              <li>Seq : 101</li>
              <li>ACK : 201</li>
              <li>RWND : 65535</li>
            </ul>
          </li>
          <li>SERVER : ESTABLISHED (연결설정완료)</li>
        </ul>
      </li>
      <li>TCP 데이터 송수신
        <ul>
          <li>Client : ESTABLISHED 상태</li>
          <li>Server : ESTABLISHED 상태</li>
          <li>Client : ACK + PSH (011000)
            <ul>
              <li>Seq : 102 (3-Way Handshake 에 이어서)</li>
              <li>ACK : 201</li>
              <li>Data : 102~300 (Byte 순번) 에 해당하는 내용</li>
            </ul>
          </li>
          <li>Client : ACK + PSH (011000)
            <ul>
              <li>Seq : 301 (3-Way Handshake 에 이어서)</li>
              <li>ACK : 201</li>
              <li>Data : 301~400 (Byte 순번) 에 해당하는 내용</li>
            </ul>
          </li>
          <li>Server : ACK
            <ul>
              <li>Seq : 201</li>
              <li>ACK : 401</li>
              <li>Data : 201~300</li>
            </ul>
          </li>
          <li>Client : ACK
            <ul>
              <li>Seq : 401</li>
              <li>ACK : 301</li>
              <li>RWND : 2000</li>
            </ul>
          </li>
        </ul>
      </li>
      <li>TCP 재전송 (Retransmission) 과정
        <ul>
          <li>Client : A Data 전송
            <ul>
              <li>RTO : Retransmission Time Out - A Data 재전송 Timer 동작</li>
            </ul>
          </li>
          <li>Client : B Data 전송 (Window Sliding)
            <ul>
              <li>RTO : Retransmission Time Out - B Data 재전송 Timer 동작</li>
            </ul>
          </li>
          <li>(B Data 전송 실패)</li>
          <li>Server : A Data ACK 전송</li>
          <li>(Client : B Data RTO 초과)</li>
          <li>Client : B Data 재전송
            <ul>
              <li>RTO 가 지나 재전송하는 경우 네트워크가 매우 혼잡한 상태로 판단</li>
              <li>혼잡 제어 (Congestion Control) 와 연관</li>
            </ul>
          </li>
          <li>Server : B Data ACK 전송</li>
        </ul>
      </li>
      <li>빠른 재전송 (Fast Retransmission) 과정
        <ul>
          <li>Client : A Data 전송</li>
          <li>Client : B Data 전송 (Window Sliding)</li>
          <li>(B Data 전송 실패)</li>
          <li>Server : A Data ACK 전송</li>
          <li>Client : C Data 전송 (Window Sliding)</li>
          <li>Server : B Data 요청 ACK 전송
            <ul>
              <li>C Data 는 Seq no 가 맞지 않음.</li>
            </ul>
          </li>
          <li>Client : D Data 전송 (Window Sliding)</li>
          <li>Server : B Data 요청 ACK 전송</li>
          <li>Client : E Data 전송 (Window Sliding)</li>
          <li>Server : B Data 요청 ACK 전송</li>
          <li>(B Data 요청 ACK 3번 중복)</li>
          <li>Client : B Data 재전송
            <ul>
              <li>재전송보다 덜 혼잡한 상태로 판단\</li>
            </ul>
          </li>
        </ul>
      </li>
      <li>연결종료
        <ul>
          <li>3 Way Handshake
            <ul>
              <li>대게는 클라이언트 요청에 의해서 연결 종료</li>
              <li>Client : Active Close 상태</li>
              <li>Server : Passive Close 상태</li>
              <li>Client : FIN 패킷 전송 (000001)
                <ul>
                  <li>Seq : xx</li>
                  <li>ACK : yy</li>
                </ul>
              </li>
              <li>Server : FIN + ACK 패킷 전송 (010001)
                <ul>
                  <li>Seq : yy</li>
                  <li>ACK : xx+1</li>
                </ul>
              </li>
              <li>Client : CLOSE 상태</li>
              <li>Client : ACK 패킷 전송
                <ul>
                  <li>Seq : xx+1</li>
                  <li>ACK : yy+1</li>
                </ul>
              </li>
              <li>Server : CLOSE 상태</li>
            </ul>
          </li>
          <li>4 Way Handshake (절반폐쇄/절반종료 방식)
            <ul>
              <li>Client : Active Close 상태</li>
              <li>Server : Passive Close 상태</li>
              <li>Client : FIN + ACK 패킷 전송 (010001)
                <ul>
                  <li>Seq : xx</li>
                  <li>ACK : yy</li>
                </ul>
              </li>
              <li>Client : FIN_WAIT_1 상태</li>
              <li>Server : ACK 패킷 전송 (010001)</li>
              <li>Server : CLOSE_WAIT 상태</li>
              <li>Client : FIN_WAIT_2 상태</li>
              <li>Server : 서버 APP 이 TCP 연결 종료</li>
              <li>Server : FIN + ACK 패킷 전송 (010001)
                <ul>
                  <li>Seq : yy</li>
                  <li>ACK : xx+1</li>
                </ul>
              </li>
              <li>Server : LAST_ACT 상태</li>
              <li>Client : TIME_WAIT 상태</li>
              <li>Client : (일정시간 경과-2MSL 후) CLOSE 상태</li>
              <li>Client : ACK 패킷 전송
                <ul>
                  <li>Seq : xx+1</li>
                  <li>ACK : yy+1</li>
                </ul>
              </li>
              <li>Server : CLOSE 상태</li>
            </ul>
          </li>
        </ul>
      </li>
      <li>연결 요청 거부
        <ul>
          <li>Client : Active Open 상태</li>
          <li>Client : SYN 패킷 전송</li>
          <li>Client : SYN_SENT 상태</li>
          <li>Server 가 Listen (포트 대기상태) 상태가 아님</li>
          <li>Server : RST+ACK (010100) 패킷 전송</li>
          <li>Client : CLOSED 상태</li>
        </ul>
      </li>
      <li>연결중단 (Abort)
        <ul>
          <li>Client : ESTABLISHED 상태</li>
          <li>Server : ESTABLISHED 상태</li>
          <li>Client : RST+ACK (010100) 패킷 혹은 RST(000100) (상대방에게 받은 패킷에 Ack Number 필드가 설정됨) 전송</li>
          <li>Server : CLOSED 상태</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>Port
    <ul>
      <li>전송계층 (TCP, UDP)
        <ul>
          <li>Process to Process 통신</li>
          <li>프로세스를 식별하기 위해 포트 사용</li>
        </ul>
      </li>
      <li>분류방식
        <ul>
          <li>사용목적에 따른 포트범위
            <ul>
              <li>Well-Known Port : 예약된 포트 (0~1023)
                <ul>
                  <li>FTP (21,22)</li>
                  <li>Telnet (23)</li>
                  <li>HTTP (80)</li>
                </ul>
              </li>
              <li>Registered Port : 제조사에서 IANA(Internet Assigned Number Authority) 에 용도를 등록 (1024~49151)
                <ul>
                  <li>MySQL (3306)</li>
                  <li>Oracle (1521)</li>
                  <li>MSSQL (1433)</li>
                </ul>
              </li>
              <li>Dynamic Port : 동적으로 사용, Client (49152~65535)</li>
            </ul>
          </li>
          <li>사용권한에 따른 포트범위
            <ul>
              <li>관리자 포트 (Privileged Port) (0~1023)</li>
              <li>Unprivileged Port (2014~65535)</li>
            </ul>
          </li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<h1 id="tcp-session-hijacking">TCP Session Hijacking</h1>

<ul>
  <li>연결설정을 위해 주고 받는 정보를 스니핑</li>
  <li>중간에서 값을 스푸핑 하여 전송</li>
</ul>

:ET